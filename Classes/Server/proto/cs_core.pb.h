// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_core.proto

#ifndef PROTOBUF_cs_5fcore_2eproto__INCLUDED
#define PROTOBUF_cs_5fcore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cs_5fcore_2eproto();
void protobuf_AssignDesc_cs_5fcore_2eproto();
void protobuf_ShutdownFile_cs_5fcore_2eproto();

class BasicUserBattleInfo;
class UserSkillPart;
class UserSkillInfo;
class BasicUserInfo;
class CSEnterMapReq;
class CSEnterMapRsp;
class CSLeaveMapRsp;
class CSGetMapUsersReq;
class CSGetMapUsersRsp;
class CSGetUserSkillReq;
class CSGetUserSkillRsp;
class CSGetUserInfoReq;
class CSGetUserInfoRsp;
class CSAddUserSkillReq;
class CSAddUserSkillRsp;
class CSUserSkillDiffReq;
class CSUserSkillDiffRsp;
class CSSkillUpdateValidRsq;
class CSWalkReq;
class CSWalkRsp;
class CSItemAttr;
class CSEquipHole;
class EquipmentBase;
class EquipmentBase_Item_Attr;
class SpiritStoneBase;
class ManorBase;
class CSItemInfo;
class CSAllItemsReq;
class CSAllItemsRsp;
class CSItemAddRsp;
class CSItemRemoveReq;
class CSItemRemoveRsp;
class CSItemUseReq;
class CSItemUseRsp;
class CSItemUseRsp_Item;
class CSItemMoveReq;
class CSItemMoveRsp;
class CSItemUpdateRsp;
class CSItemOrderReq;
class CSItemMoveToRecycleBinReq;
class CSItemMoveToRecycleBinRsp;
class CSRepoRecycleBinItemReq;
class CSRepoRecycleBinItemRsp;
class CSInstanceInfo;
class CSInstanceReq;
class CSInstanceRsp;
class CSGetUGCityBoxRewardReq;
class CSGetUGCityBoxRewardRsp;
class CSReward;
class CSReward_RewardInfo;
class CSLevelUpRsp;
class CSBasicUserBattleInfoRsp;
class CSSearchSpiritStoneReq;
class CSSearchSpiritStoneRsp;
class CSSpiritStoneMoveBagReq;
class CSSpiritStoneMoveBagRsp;
class CSSpiritStoneLevelUpReq;
class CSSpiritStoneLevelUpRsp;
class CSSpiritStoneToSPReq;
class CSSpiritStoneToSPRsp;
class CSGetExchangeSSInfoReq;
class ExchangeSSInfo;
class CSGetExchangeSSInfoRsp;
class CSAddManorReq;
class CSAddManorRsp;
class CSWarmSportLvUpReq;
class CSWarmSportLvUpRsp;
class CSManorOptReq;
class CSManorOptRsp;
class CSMonListReq;
class MonInfo;
class CSMonListRsp;
class CSSetMonStatusReq;
class CSSetMonStatusRsp;
class CSPVPQueryRoomReq;
class PVPRoomBase;
class CSPVPQueryRoomRsp;
class CSPVPBaseInfoRsp;
class CSPVPCreateRoomReq;
class CSPVPJoinRoomReq;
class PVPSeatBase;
class CSPVPJoinRoomRsp;
class CSPVPExitRoomReq;
class CSPVPExitRoomRsp;
class CSPVPCloseRoomRsp;
class CSPVPChangeSeatReq;
class CSPVPReadyReq;
class CSPVPCancelReadyReq;
class CSPVPKickoffReq;
class CSPVPKickoffRsp;
class CSPVPStartReq;
class CSPVPStartRsp;
class CSPPVEBattleReq;
class CSPPVEBattleRsp;
class CSPVEQueryRoomReq;
class PVERoomBase;
class CSPVEQueryRoomRsp;
class CSPVEBaseInfoRsp;
class CSPVECreateRoomReq;
class CSPVEJoinRoomReq;
class CSPVEJoinRoomFailureRsp;
class PVESeatBase;
class CSPVEJoinRoomRsp;
class CSPVEExitRoomReq;
class CSPVEExitRoomRsp;
class CSPVECloseRoomRsp;
class CSPVEReadyReq;
class CSPVECancelReadyReq;
class CSPVEKickoffReq;
class CSPVEKickoffRsp;
class CSPVEStartReq;
class CSPVEStartRsp;
class CSPVAIReq;
class CSPVAIInfoReq;
class CSPVAIInfoRsq;
class CSPVAIInfoRsq_CSPVAIInfo;
class CSPVAIInfoRsq_CSPVAILog;
class CSGetInstanceInfoReq;
class CSGetInstanceInfoRsp;
class CSPVXRewardRsp;
class CSEquipInlayGemReq;
class CSEquipInlayGemRsp;
class CSResetGemAttrReq;
class CSResetGemAttrRsp;
class CSEquipmentStrengthReq;
class CSEquipmentStrengthRsp;
class CSEquipmentComposeReq;
class CSEquipmentComposeRsp;
class CSEquipmentComposeRsp_Item;
class CSEquipmentDecomposeQueryReq;
class CSEquipmentDecomposeQueryRsp;
class CSEquipmentDecomposeQueryRsp_Item;
class CSEquipmentDecomposeReq;
class CSEquipmentDecomposeRsp;
class CSEquipmentDecomposeRsp_Item;
class CSTaskInfoReq;
class TaskInfo;
class CSTaskInfoRsp;
class CSTaskDoStepReq;
class CSTaskDoStepRsp;
class CSTaskLogReq;
class CSTaskLogRsp;
class CSTaskStatusReq;
class CSTaskStatusRsp;
class DailyTaskInfo;
class CSDailyTaskInfoReq;
class CSDailyTaskInfoRsp;
class CSAcceptDailyTaskReq;
class CSAcceptDailyTaskRsp;
class CSGiveUpDailyTaskReq;
class CSGiveUpDailyTaskRsp;
class CSGetDailyTaskRewardReq;
class CSGetDailyTaskRewardRsp;
class CSNotifyUpdateDailyTaskInfoRsp;
class CSGetDailyGoalRewardReq;
class CSGetDailyGoalRewardRsp;
class CSGetDailyRewardReq;
class CSGetDailyRewardRsp;
class CSGetLoginRewardReq;
class CSGetLoginRewardRsp;
class CSSelectPVAIACCURewardReq;
class CSSelectPVAIACCURewardRsp;
class CSAttributesSetReq;
class CSAttributesReq;
class CSAttributesRsp;
class CSAttributesRsp_KeyValue;
class CSOnceSetReq;
class CSOnceReq;
class CSOnceRsp;
class CSOnceRsp_Once;
class CSTrainInfoReq;
class CSTrainInfoRsp;
class CSTrainReq;
class CSTrainRsp;
class CSTrainDetermineReq;
class CSTrainDetermineRsp;
class CSExploreReq;
class CSExploreRsp;
class CSExploreDetermineReq;
class CSExploreDetermineRsp;
class CSQueryDowerReq;
class CSQueryDowerRsp;
class CSQueryDowerRsp_Dower;
class CSDowerInfoReq;
class CSDowerInfoRsp;
class CSDowerReq;
class CSDowerRsp;
class CSABMonsterReq;
class CSABMonsterRsp;
class CSABMonsterRsp_MonInfo;
class CSAutoBattleReq;
class CSAutoBattleRsp;
class CSABRewardRsp;
class CSCancelAutoBattleReq;
class CSCancelAutoBattleRsp;
class CSExchangeParameterReq;
class CSExchangeParameterRsp;
class ShopItemInfo;
class ShopItemInfo_Item;
class CSGetShopItemsReq;
class CSGetShopItemsRsp;
class CSBuyShopItemReq;
class CSBuyShopItemRsp;
class CSGetUserItemReq;
class CSGetUserItemRsp;
class CSGetUserAttributesReq;
class CSGetUserAttributesRsp;
class CSNotifyMoneyConfInfoRsp;
class CSNotifyLevelConfInfoRsp;
class CSNotifyVipConfInfoRsp;
class CSNotifyCliSysFlagRsp;
class CSNotifyCliSysFlagRsp_SysFlag;
class PartnerInfo;
class CSNearByReq;
class CSNearByRsp;
class CSPartnerInfoReq;
class CSAddPartnerReq;
class CSDelPartnerReq;
class CSPartnerInfoRsp;
class CSAddPartnerRsp;
class CSDelPartnerRsp;
class DndInfo;
class CSAddDndReq;
class CSDndInfoReq;
class CSDelDndReq;
class CSDndInfoRsp;
class CSAddDndRsp;
class CSDelDndRsp;
class CSNoteReq;
class CSNoteRsp;
class CSNoteShow;
class CSMailReq;
class AttachItem;
class CSMailRsp;
class MailList;
class CSMailListReq;
class CSMailListRsp;
class CSDelMailReq;
class CSDelMailRsp;
class CSGetAttachReq;
class CSGetAttachRsp;
class CSNewMailRsp;
class CSActivityListReq;
class Activity_Step;
class Activity_Info;
class CSActivityListRsp;
class CSGetActivityRewardReq;
class CSGetActivityRewardRsp;
class CSUpdateActivityInfoRsp;
class CSDelActivityInfoRsp;
class CSCDEFQueryRoomReq;
class CDEFRoomBase;
class CSCDEFQueryRoomRsp;
class CSCDEFBaseInfoRsp;
class CSCDEFCreateRoomReq;
class CSCDEFJoinRoomReq;
class CSCDEFJoinRoomFailureRsp;
class CDEFSeatBase;
class CSCDEFJoinRoomRsp;
class CSCDEFExitRoomReq;
class CSCDEFCloseRoomRsp;
class CSCDEFReadyReq;
class CSCDEFCancelReadyReq;
class CSCDEFKickoffReq;
class CSCDEFKickoffRsp;
class CSCDEFStartReq;
class CSGetSpecActivityTimeReq;
class CSGetSpecActivityTimeRsp;
class CSGetSpecActivityTimeRsp_Time;
class CSGetSpecActivityTimeRsp_Inter;
class CSCDEFStartRsp;
class Announcement;
class CSLoginAnnouncementRsp;
class CSAnnouncementPreReq;
class CSAnnouncementPreRsp;
class CSAnnouncementReq;
class CSAnnouncementRsp;
class CSMaAdvertisingRsp;
class CSStyle;
class CSMaStyle;
class CSNotifyRewardToOtherRsp;
class LyleMsg1;
class LyleMsg2;
class LyleMsg3;
class LyleMsg4;
class CSGetChipComposeStatusReq;
class CSGetChipComposeStatusRsp;
class CSGetActivityRankReq;
class CSGetActivityRankRsp;
class CSGetActivityRankRsp_RanKInfo;
class CSAskOnlineGiftReq;
class CSAskOnlineGiftRsp;
class CSGetOnlineGiftReq;
class CSGetOnlineGiftRsp;
class CSCheckTopupAwardReq;
class CSCheckTopupAwardRsp;
class CSGetTopupAwardReq;
class CSGetTopupAwardRsp;
class CSPVP2JoinReq;
class CSPVP2JoinRsp;
class CSPVP2BtlCancelReq;
class CSPVP2BtlCancelRsp;
class CSPVP2RewardRsp;
class cs_fairy_info;
class CSQueryRankReq;
class CSQueryRankRsp;
class CSQueryRankRsp_RankInfo;
class CSQueryPlayerRankInfoReq;
class CSQueryPlayerRankInfoRsp;
class CSQueryPlayerRankInfoRsp_RankInfo;
class CSQueryRankCountReq;
class CSQueryRankCountRsp;
class LyleMsg7;
class LyleMsg8;
class CSMailBasicInfo;
class CSMailInfo;
class CSMailInfo_AMItem;
class CSGetMailListReq;
class CSGetMailListRsp;
class CSGetMailListRsp_MailBasic;
class CSGetMailInfoReq;
class CSGetMailInfoRsp;
class MailStatus;
class CSSetMailStatusReq;
class CSSetMailStatusRsp;
class CSNotifyMailNumInfoRsp;
class CSMarqueeRsp;
class CSMagicCardReq;
class CSMagicCardRsp;
class CSPVPSetOpeningReq;
class CSPVPSetOpeningRsp;
class CSPVESetOpeningReq;
class CSPVESetOpeningRsp;
class base_info;
class player_basic_info_t;
class CSInviteToBattleReq;
class CSInviteToBattleRsp;
class CSAnswerToBattleReq;
class CSAnswerToBattleRsp;
class CSLookupFriendListReq;
class CSLookupFriendListRsp;
class FairyBasic;
class FairyAttr;
class FairyTrainAttr;
class FairyInfo;
class CSGetFairyListReq;
class CSGetFairyListRsp;
class CSMoveFairyPosReq;
class CSMoveFairyPosRsp;
class CSFairyTrainReq;
class CSFairyTrainRsp;
class CSFairyTrainDetermineReq;
class CSFairyTrainDetermineRsp;
class CSFairyAddExpReq;
class CSFairyAddExpRsp;
class CSFairyUpGradeLevelReq;
class CSFairyUpGradeLevelRsp;
class CSFairyUpGradeLevelRsp_Item;
class CSFairyDecomposeReq;
class CSFairyDecomposeRsp;
class CSFairyDecomposeRsp_Item;
class CSFairyRebirthReq;
class CSFairyRebirthRsp;
class CSFairyRebirthRsp_Item;
class CSNotifyAddFairyRsp;
class CSNotifyUpdateFairyRsp;
class CSNotifyDelFairyRsp;
class LyleMsg9;
class LyleMsg10;
class LyleMsg11;
class LyleMsg12;
class kakao_cd;
class CSQueryKakaoCdReq;
class CSQueryKakaoCdRsp;
class CSSendPowerReq;
class CSSendPoweRsp;
class CSGetPowerRewardReq;
class CSGetPowerRewardRsp;
class CSPushMsgToKakaoReq;
class CSPushMsgToKakaoRsp;
class CSKakaolistFriendReq;
class CSKakaolistFriendRsp;
class CSKakaoAddFriendReq;
class CSKakaoAddFriendRsp;
class CSKakaoAnswerFriendReq;
class CSKakaoAnswerFriendRsp;
class CSKakaoDelFriendReq;
class CSKakaoDBAddRsp;
class CSPVPLearnPrepareReq;
class CSPVPLearnPrepareRsp;
class CSPVPLearnReq;
class CSPVPLearnRsp;
class CSPVPLearnMandatoryRsp;
class CSPVPAckLearnReq;
class CSPVPAckLearnRefuseRsp;
class CSAutoBattleCheckReq;
class CSAutoBattleCheckRsp;
class CSNearbyRednameReq;
class CSNearbyRednameRsp;
class CSInstanceStarRewardReq;
class CSInstanceStarRewardRsp;
class CSInstanceGetStarRewardReq;
class CSInstanceGetStarRewardRsp;
class CSChkInstanceStarRewardReq;
class CSChkInstanceStarRewardRsp;
class CSDelEnemyReq;
class CSDelEnemyRsp;
class CSEnemyInfoReq;
class CSEnemyInfoRsp;
class CSGetRednameTimeReq;
class CSGetRednameTimeRsp;
class CSSpiritDrawReq;
class CSSpiritDrawRsp;
class CSEquipAllBestReq;
class CSCALBattleFairyReq;
class CSCALBattleFairyRsp;
class CSBabelFactorReq;
class CSBabelFactorRsp;
class CSShoppingInfo;
class CSShoppingReq;
class CSShoppingRsp;
class CSEquipNotify;
class CSShowRebirthNotify;
class CSNewFairyNotify;
class CSGoogleGradingRsp;
class CSGoogleGradingCompleteReq;
class CSKakaoAttrReq;
class CSKakaoAttrRsp;
class CSKakaoAttrRsp_kakao_value;
class CSkakaoUrlReq;
class CSGetCdRewardReq;
class CSGetCdRewardRsp;
class CSEquipAllBestRsp;
class CSGoogleGradingReq;
class CSGetExploreTreasureReq;
class CSGetExploreTreasureRsp;
class CSGetExploreInfoReq;
class CSGetExploreInfoRsp;
class CSGetActivityDataReq;
class CSActivityCentreItemInfo;
class CSShowActivityItemInfo;
class CSGetActivityDataRsp;
class carmsg01;
class carmsg02;
class carmsg03;
class carmsg04;
class carmsg05;
class CSTargetListReq;
class Step_Rate;
class Target_Info;
class CSTargetListRsp;
class CSGetTargetRewardReq;
class CSGetTargetRewardRsp;
class CSUpdateTargetInfoRsp;
class CSDelTargetfoRsp;
class CSExchangeParameterListReq;
class CSExchangeParameterListRsp;
class CSExchangeParameterListRsp_ParameterList;
class CSTargetFinishedRsp;
class CSMcardInfoReq;
class McardInfo;
class CSMcardInfoRsp;
class CSMcardRewardReq;
class CSMcardRewardRsp;
class CSCreateGuildReq;
class CSCreateGuildRsp;
class CSJoinGuildReq;
class CSJoinGuildRsp;
class CSDropGuildReq;
class CSDropGuildRsp;
class CSQuitGuildReq;
class CSQuitGuildRsp;
class CSGuildInfo;
class CSListGuildReq;
class CSListGuildRsp;
class CSSearchGuildReq;
class CSSearchGuildRsp;
class CSListPlayerGuildReq;
class CSPlayerGuildInfo;
class CSPlayerGuildInfo_Item;
class CSListPlayerGuildRsp;
class PlayerGuild;
class CSChangeOtherPlayerGuildStatusReq;
class CSChangePlayerGuildStatusRsp;
class CSSetGuildNoticeReq;
class CSSetGuildNoticeRsp;
class CSGetRecruitMemberReq;
class CSGetRecruitMemberRsp;
class CSPVAI3Req;
class CSQueryNewDowerReq;
class CSQueryNewDowerRsp;
class CSNewDowerReq;
class CSNewDowerRsp;
class CSNewDowerOneKeyReq;
class CSNewDowerOneKeyRsp;
class CSTitleReq;
class TitleInfo;
class CSTitleRsp;
class CSTitleLearnReq;
class CSTitleLearnRsp;
class CSTitleWearReq;
class CSTitleWearRsp;
class CSTitleUnlockRsp;
class CSPGSetAcceptInviteReq;
class CSPGSetAcceptInviteRsp;
class CSPGContributeToGuildReq;
class CSPGContributeToGuildRsp;
class CSCancelWaitingRsp;
class CSQueryPlayerGuildInfoReq;
class CSQueryPlayerGuildInfoRsp;
class CSSetPlayerGuildApplyConditionReq;
class CSSetPlayerGuildApplyConditionRsp;
class GuildRecordInfo;
class CSGuildRecordListReq;
class CSGuildRecordListRsp;
class CSGoddessBlessReq;
class CSGoddessBlessRsp;
class CSGoddessBlessRsp_Item;
class ShoppingItemInfo;
class ShoppingItemInfo_Item;
class CSGetShoppingItemsReq;
class CSGetShoppingItemsRsp;
class CSExchangeItemInfoReq;
class CSExchangeItemInfoRsp;
class CSExchangeItemInfoRsp_Item;
class CSExchangeItemInfoRsp_ItemInfo;
class CSGuildNoteRsp;
class CSGuildRedPacketKey;
class CSGuildRedPacketInfo;
class CSGuildRedPacketQueryReq;
class CSGuildRedPacketQueryRsp;
class CSGuildRedPacketSendReq;
class CSGuildRedPacketSendRsp;
class CSGuildRedPacketGetAwardReq;
class CSGuildRedPacketAward;
class CSGuildRedPacketGetAwardRsp;
class CSGuildRedPacketRecordReq;
class CSRedPacketRecordInfo;
class CSGuildRedPacketRecordRsp;
class CSGuildRedPacketFirstCheckReq;
class CSGuildRedPacketFirstCheckRsp;
class CSGuildRedPacketConfigInfo;
class CSGuildRedPacketConfigReq;
class CSGuildRedPacketConfigRsp;
class UnionInfo;
class CSUnionInfoReq;
class CSUnionInfoRsp;
class CSChangeNameReq;
class CSChangeNameRsp;
class CSNotifyItemExploreRewardRsp;
class CSNotifyItemExploreRewardRsp_Item;
class CSExploreRestRsp;
class carmsg07;
class carmsg08;
class carmsg09;
class carmsg10;
class CSRankRewardListReq;
class CSRankRewardListRsp;
class CSRankRewardListRsp_Item;
class CSRankRewardListRsp_RankReward;
class CSRecruitCommitReq;
class CSRecruitCommitRsp;
class CSRecruitAwardReq;
class CSRecruitAwardRsp;
class RecruitInfo;
class CSRecruitListReq;
class CSRecruitListRsp;
class CSExchangeHighQualityReq;
class CSExchangeHighQualityRsp;
class carmsg30;
class carmsg31;
class CSExchangeVocationInfoReq;
class VocationInfo;
class VocationInfo_Item;
class CSExchangeVocationInfoRsp;
class CSExchangeVocationReq;
class CSExchangeVocationRsp;

enum CSNotifyCliSysFlagRsp_SysIndex {
  CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM = 2
};
bool CSNotifyCliSysFlagRsp_SysIndex_IsValid(int value);
const CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MIN = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
const CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
const int CSNotifyCliSysFlagRsp_SysIndex_SysIndex_ARRAYSIZE = CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSNotifyCliSysFlagRsp_SysIndex_descriptor();
inline const ::std::string& CSNotifyCliSysFlagRsp_SysIndex_Name(CSNotifyCliSysFlagRsp_SysIndex value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSNotifyCliSysFlagRsp_SysIndex_descriptor(), value);
}
inline bool CSNotifyCliSysFlagRsp_SysIndex_Parse(
    const ::std::string& name, CSNotifyCliSysFlagRsp_SysIndex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSNotifyCliSysFlagRsp_SysIndex>(
    CSNotifyCliSysFlagRsp_SysIndex_descriptor(), name, value);
}
enum CSAddPartnerRsp_AddPartnerType {
  CSAddPartnerRsp_AddPartnerType_succ = 1,
  CSAddPartnerRsp_AddPartnerType_existed = 2,
  CSAddPartnerRsp_AddPartnerType_nofound = 3,
  CSAddPartnerRsp_AddPartnerType_overflow = 4,
  CSAddPartnerRsp_AddPartnerType_self = 5
};
bool CSAddPartnerRsp_AddPartnerType_IsValid(int value);
const CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp_AddPartnerType_AddPartnerType_MIN = CSAddPartnerRsp_AddPartnerType_succ;
const CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX = CSAddPartnerRsp_AddPartnerType_self;
const int CSAddPartnerRsp_AddPartnerType_AddPartnerType_ARRAYSIZE = CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSAddPartnerRsp_AddPartnerType_descriptor();
inline const ::std::string& CSAddPartnerRsp_AddPartnerType_Name(CSAddPartnerRsp_AddPartnerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSAddPartnerRsp_AddPartnerType_descriptor(), value);
}
inline bool CSAddPartnerRsp_AddPartnerType_Parse(
    const ::std::string& name, CSAddPartnerRsp_AddPartnerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSAddPartnerRsp_AddPartnerType>(
    CSAddPartnerRsp_AddPartnerType_descriptor(), name, value);
}
enum PB_PLAYET_ATTR_T {
  PB_ATTR_SVC_TIME_ZONE = 1,
  PB_ATTR_PLAYER_SS_MOD_ID = 2,
  PB_ATTR_PLAYER_GEM_BACKPACK_CAPACITY = 6,
  PB_ATTR_PLAYER_RESET_GEM_TIMES = 11,
  PB_ATTR_EQUIP_LVUP_FLAG = 12,
  PB_ATTR_EFFECTIVENESS = 13,
  PB_ATTR_PLAYER_ENTER_MANOR_TIMES = 16,
  PB_ATTR_PLAYER_EXPLORE_TIMES = 21,
  PB_ATTR_RECYCLE_BIN_START_POS = 26,
  PB_ATTR_HOLD_ON_LINE_ACCU_TIME = 30,
  PB_ATTR_GET_DAILY_GOALS_REWARD_TIMES = 36,
  PB_ATTR_UGCITY_BOXES_STATUS = 40,
  PB_ATTR_UGCITY_BOXES_RESET_TIMES = 41,
  PB_ATTR_UGCITY_BOXES_OPEN_NUM = 42,
  PB_ATTR_PLAYER_PVAI_TIMES = 50,
  PB_ATTR_PLAYER_PVP_TIMES = 51,
  PB_ATTR_PLAYER_CDEF_TIMES = 52,
  PB_ATTR_PLAYER_WINNING_STREAK = 53,
  PB_ATTR_PLAYER_SPEC_INSTANCE_BTL_TIME = 54,
  PB_ATTR_PLAYER_PVP_RED = 55,
  PB_ATTR_PLAYER_PVP_RED_TIME = 56,
  PB_ATTR_PLAYER_VIP_LV = 60,
  PB_ATTR_BUY_DIAMOND_ACCU = 61,
  PB_ATTR_CONTINUE_LOGIN_TIMES = 65,
  PB_ATTR_DAILY_LOGIN_COUNT = 66,
  PB_ATTR_DIAMOND_EX_POWER_TIMES = 70,
  PB_ATTR_FAIRY_LOTTERY_ACCU_TIMES = 71,
  PB_ATTR_CONSTEL_MIN_DEF = 100,
  PB_ATTR_CONSTEL_1_CAPACIT = 101,
  PB_ATTR_CONSTEL_2_CAPACIT = 102,
  PB_ATTR_CONSTEL_3_CAPACIT = 103,
  PB_ATTR_CONSTEL_4_CAPACIT = 104,
  PB_ATTR_CONSTEL_5_CAPACIT = 105,
  PB_ATTR_CONSTEL_6_CAPACIT = 106,
  PB_ATTR_CONSTEL_7_CAPACIT = 107,
  PB_ATTR_CONSTEL_8_CAPACIT = 108,
  PB_ATTR_CONSTEL_9_CAPACIT = 109,
  PB_ATTR_CONSTEL_10_CAPACIT = 110,
  PB_ATTR_CONSTEL_11_CAPACIT = 111,
  PB_ATTR_CONSTEL_12_CAPACIT = 112,
  PB_ATTR_DAILY_TIMES_BEGIN = 5000,
  PB_ATTR_DAILY_TIMES_LGION = 5010,
  PB_ATTR_DAILY_TIMES_PAY = 5020,
  PB_ATTR_DAILY_TIMES_HERO_TREASURE = 5030,
  PB_ATTR_DAILY_TIMES_EXPLORE = 5040,
  PB_ATTR_DAILY_TIMES_EQUIP_LVUP = 5050,
  PB_ATTR_DAILY_TIMES_PVE_WIN = 5060,
  PB_ATTR_DAILY_TIMES_PVAI_BTL = 5070,
  PB_ATTR_DAILY_TIMES_CARD_COMPOSE = 5080,
  PB_ATTR_DAILY_TIMES_PVE2_WIN = 5090,
  PB_ATTR_DAILY_TIMES_PPVE_WIN = 5100,
  PB_ATTR_DAILY_TIMES_TRAINING = 5110,
  PB_ATTR_DAILY_TIMES_DAILY_TASK = 5120,
  PB_ATTR_DAILY_TIMES_CDEF = 5121,
  PB_ATTR_DAILY_TIMES_SEARCH_SS = 5130,
  PB_ATTR_DAILY_TIMES_WBOSS = 5131,
  PB_ATTR_DAILY_TIMES_ENTER_MANOR = 5140,
  PB_ATTR_DAILY_TIMES_GEM_RESET = 5150,
  PB_ATTR_DAILY_TIMES_PVE3 = 5160,
  PB_ATTR_KAKAO_DEL_NUM_EACH_DAY = 5170,
  PB_ATTR_DAILY_TIMES_CONSUME_DIAMOND = 5200,
  PB_ATTR_DAILY_TIMES_SKILL_LVUP = 5201,
  PB_ATTR_DAILY_TIMES_DOWER_LVUP = 5202,
  PB_ATTR_DAILY_BABEL_INSTANCE_ID = 5304,
  PB_ATTR_DAILY_TIMES_END = 5500,
  PB_ATTR_DAILY_REFRESH_SHOP_TIMES = 5501,
  PB_ATTR_DAILY_ACC_REFRESH_SHOP_TIMES = 5502,
  PB_ATTR_DAILY_ACC_USED_REFRESH_SHOP_TIMES = 5503,
  PB_ATTR_GET_DAILY_REWARD_BEGIN = 6000,
  PB_ATTR_GET_DAILY_PAY_REWARD_TIME = 6000,
  PB_ATTR_GET_DAILY_LOGIN_UI_FLAG = 6001,
  PB_ATTR_GET_HERO_TREASURE = 6002,
  PB_ATTR_GET_PVAI_REWARD_TIME = 6003,
  PB_ATTR_GET_HOLD_EXP_TIME = 6004,
  PB_ATTR_GET_REWARD_BY_VIP_LV = 6005,
  PB_ATTR_GET_FIRST_BUY_DIAMOND_REWARD_TIME = 6006,
  PB_ATTR_GET_THREE_DAY_REWARD_ENABLE_FLAG = 6007,
  PB_ATTR_GET_STAMINA_RESTORE_TIME = 6010,
  PB_ATTR_GET_DAILY_LOGIN_REWARD_TIME = 6099,
  PB_ATTR_GET_DAILY_VIP_REWARD_TIME = 6100,
  PB_ATTR_GET_DAILY_LOGIN_TIMES = 6101,
  PB_ATTR_GET_DAILY_LOGIN_REWARD_MARK = 6102,
  PB_ATTR_GET_DAILY_VIP_LOGIN_REWARD_MARK = 6103,
  PB_ATTR_GET_DAILY_FACEBOOK_SHARE_MARK = 6104,
  PB_ATTR_GET_DAILY_REP_EXCHANGE_FLAG = 6105,
  PB_ATTR_GET_DAILY_REWARD_END = 6105,
  PB_ATTR_GET_SPEC_FAIRY_BEIGN = 6200,
  PB_ATTR_GET_SPEC_P_FAIRY_LEFT_TIMES = 6200,
  PB_ATTR_FAIRY_COLLECTION_BEGIN = 7200,
  PB_ATTR_FAIRY_COLLECTION_END = 7300,
  PB_ATTR_SPECIAL_VIP_GIFT_BEGIN = 7500,
  PB_ATTR_91_VIP_DAILY_GIFT_GET_TIME = 7500,
  PB_ATTR_91_VIP_GIFT_GET_TIME = 7501,
  PB_ATTR_91_VIP_TOPUS_STATUS = 7502,
  PB_ATTR_91_VIP_STATUS = 7503,
  PB_ATTR_SPECIAL_VIP_GIFT_END = 7510,
  PB_ATTR_EXPLORE_DAILY_TIMES = 7550,
  PB_ATTR_EXPLORE_MAP_INDEX = 7551,
  PB_ATTR_EXPLORE_SUCCESS_RATE = 7552,
  PB_ATTR_EXPLORE_HAVE_GOT_MAP_INDEX = 7553,
  PB_ATTR_EXPLORE_REWARD_LEVELUP_FLAG = 7554,
  PB_ATTR_JUNIOR_EXPLORE_TIME = 8000,
  PB_ATTR_SENIOR_EXPLORE_TIME = 8001,
  PB_ATTR_DEF_MIN_CD = 300000,
  PB_ATTR_EQUIP_LVUP_CD = 300100,
  PB_ATTR_DOWER_LVUP_CD = 300200,
  PB_ATTR_SKILL_LVUP_CD = 300300,
  PB_ATTR_PVAI_CD = 300400,
  PB_ATTR_AB_NORMAL_MAP_CD = 300500,
  PB_ATTR_AB_SPECIAL_MAP_CD = 300501,
  PB_ATTR_AB_UGCITY_MAP_CD = 300502,
  PB_ATTR_WOELD_BOSS_CD = 300600,
  PB_ATTR_MANOR_CD = 300700,
  PB_ATTR_SHOP_CD = 300800,
  PB_ATTR_DEF_MAX_CD = 309999,
  PB_ATTR_DEF_MIN_OTHER = 310000,
  PB_ATTR_DEF_MAX_OTHER = 314999,
  PB_ATTR_RESET_GEM_BUY_TIMES = 315000,
  PB_ATTR_MANOR_BUY_TIMES = 315100,
  PB_ATTR_PVAI_BUY_TIMES = 315400,
  PB_ATTR_DEF_MAX_BUY_TIMES = 319999,
  PB_ATTR_DEF_MIN_CAPACITY = 320000,
  PB_ATTR_BUY_MANOR_CAPACITY = 320000,
  PB_ATTR_BUY_SKILL_CAPACITY = 320100,
  PB_ATTR_BUY_CONSTEL_CAPACITY = 320150,
  PB_ATTR_BUY_EQUIP_HOLE_CAPACITY = 320170,
  PB_ATTR_BUY_SS_BAG_CAPACITY = 320200,
  PB_ATTR_BUY_BAG_CAPACITY = 320300,
  PB_ATTR_BUY_STORE_CAPACITY = 320400,
  PB_ATTR_DEF_MAX_CAPACITY = 329999,
  PB_ATTR_PLAYER_STAMINA = 416000,
  PB_ATTR_PLAYER_COIN = 416001,
  PB_ATTR_PLAYER_DIAMOND = 416002,
  PB_ATTR_EXP = 416003,
  PB_ATTR_PLAYER_PRESTIGE = 416004,
  PB_ATTR_PLAYER_GEM_ANIMA = 416005,
  PB_ATTR_PLAYER_SS_CHIP = 416006,
  PB_ATTR_PLAYER_EXPLOIT = 416007,
  PB_ATTR_PLAYER_EXPLORE_EXP = 416008,
  PB_ATTR_PLAYER_HERALDRY = 416009,
  PB_ATTR_PLAYER_SP = 416010,
  PB_ATTR_PLAYER_PVP2_SCORE = 416011,
  PB_ATTR_PLAYER_REFINE_STONE = 416015,
  PB_ATTR_PLAYER_POTENTIAL_DRUG = 416016,
  PB_ATTR_PLAYER_SHOP_REF_TOKEN = 416017,
  PB_ATTR_PLAYER_SOUL_STONE = 416018,
  PB_ATTR_PLAYER_FAIRY_ELEM = 416019,
  PB_ATTR_PLAYER_EPLORE_TICKET = 416021,
  PB_ATTR_PLAYER_CONTRIBUTE = 416025,
  PB_ATTR_DOWER_LIGHT = 416920,
  PB_ATTR_TITLE_WEAR = 416921,
  PB_ATTR_STAR_NUM = 416922,
  PB_ATTR_STAR_CONSUME = 416923,
  PB_ATTR_PLAYER_HOLD_EXP = 416100,
  PB_ATTR_PLAYER_STORE_EXP = 416101,
  PB_ATTR_DAILY_GOALS_ACTIVITY = 475001,
  PB_ATTR_GROWUP_STATUS = 482001,
  PB_ATTR_PLAYER_LAST_RESTORE_POWER_TIME = 482002,
  PB_ATTR_EXCHANGE_TIMES_BEGIN = 500000,
  PB_ATTR_EXCHANGE_TIMES_END = 510000,
  PB_ATTR_PLAYER_GUILD_LAST_LEAVE_TIME = 610003,
  PB_ATTR_PLAYER_GUILD_DIALY_GOLD_BLESS = 610009,
  PB_ATTR_PLAYER_GUILD_CONTRIBUTE_TIMES = 610012,
  PB_ATTR_PLAYER_GUILD_INSTANCE_TIMES = 610013,
  PB_ATTR_SEGMENT_DEF = 999999,
  PB_ATTR_PLAYER_LAST_LOGIN_MAP = 1000001,
  PB_ATTR_LAST_EXPLORE_ID = 1000002,
  PB_ATTR_SET_ONCE_BEGIN = 1100000,
  PB_ATTR_SET_ONCE_END = 1200000,
  PB_ATTR_SET_BEGIN = 1200001,
  PB_ATTR_READY_SKILL_START = 1200001,
  PB_ATTR_READY_SKILL_END = 1200005,
  PB_ATTR_MXA_VIEW_PLAYER = 1200006,
  PB_ATTR_GAME_PIC_QUALITY = 1200007,
  PB_ATTR_WBOSS_VIEW_NUMBER = 1200008,
  PB_ATTR_AUTO_COST_DIAMOND = 1200009,
  PB_ATTR_AUTO_WAIT_TIMEOUT = 1200011,
  PB_ATTR_SET_END = 1201000,
  PB_ATTR_DOWER_START = 1210000,
  PB_ATTR_DOWER_END = 1220000,
  PB_ATTR_SHOP_ITEM_START = 1230000,
  PB_ATTR_SHOP_ITEM_END = 1230100,
  PB_ATTR_SHOP_ITEM_BUY_START = 1230200,
  PB_ATTR_SHOP_ITEM_BUY_END = 1230300,
  PB_ATTR_SPIRIT_SYS_NOT_FIRST_USED = 1240000,
  PB_ATTR_SPOP_SYS_NOT_FIRST_USED = 1240001,
  PB_ATTR_PLAYER_LAST_LOGIN_OUT_TIME = 1250000,
  PB_ATTR_SET_ONCE_DAILY_BEGIN = 1300000,
  PB_ATTR_SET_ONCE_DAILY_END = 1400000,
  PB_ATTR_PPVE_TIMES_DAILY_BEGIN = 1500000,
  PB_ATTR_PPVE_TIMES_DAILY_END = 1600000,
  PB_ATTR_PHYSICAL_ATTACK_ADD = 2010000,
  PB_ATTR_MAGIC_ATTACK_ADD = 2020000,
  PB_ATTR_SKILL_ATTACK_ADD = 2030000,
  PB_ATTR_PHYSICAL_DEFENCE_ADD = 2040000,
  PB_ATTR_MAGIC_DEFENCE_ADD = 2050000,
  PB_ATTR_SKILL_DEFENCE_ADD = 2060000,
  PB_ATTR_HP_ADD = 2070000,
  PB_ATTR_COURAGE_ADD = 2080000,
  PB_ATTR_CHARM_ADD = 2090000,
  PB_ATTR_TRICK_ADD = 2100000,
  PB_ATTR_AUTO_BTL_INSTANCE_ID = 3000001,
  PB_ATTR_AUTO_BTL_REMAIN_TURN = 3000002,
  PB_ATTR_PLAYER_PVP_DUEL_TIMES = 3000030,
  PB_ATTR_PLAYER_PVP_DUELED_TIMES = 3000031
};
bool PB_PLAYET_ATTR_T_IsValid(int value);
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MIN = PB_ATTR_SVC_TIME_ZONE;
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MAX = PB_ATTR_PLAYER_PVP_DUELED_TIMES;
const int PB_PLAYET_ATTR_T_ARRAYSIZE = PB_PLAYET_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_PLAYET_ATTR_T_descriptor();
inline const ::std::string& PB_PLAYET_ATTR_T_Name(PB_PLAYET_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_PLAYET_ATTR_T_descriptor(), value);
}
inline bool PB_PLAYET_ATTR_T_Parse(
    const ::std::string& name, PB_PLAYET_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_PLAYET_ATTR_T>(
    PB_PLAYET_ATTR_T_descriptor(), name, value);
}
enum PB_ITEM_ATTR_T {
  PB_ITEM_ATTR_PHYATK = 1,
  PB_ITEM_ATTR_MAGATK = 2,
  PB_ITEM_ATTR_SKIATK = 3,
  PB_ITEM_ATTR_PHYDEF = 4,
  PB_ITEM_ATTR_MAGDEF = 5,
  PB_ITEM_ATTR_SKIDEF = 6,
  PB_ITEM_ATTR_HP = 7,
  PB_ITEM_ATTR_ACCU = 8,
  PB_ITEM_ATTR_DODG = 9,
  PB_ITEM_ATTR_WRK = 10,
  PB_ITEM_ATTR_PARRY = 11,
  PB_ITEM_ATTR_CRIT = 12,
  PB_ITEM_ATTR_TENA = 13,
  PB_ITEM_ATTR_SLY = 14,
  PB_ITEM_ATTR_SPEED = 15
};
bool PB_ITEM_ATTR_T_IsValid(int value);
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MIN = PB_ITEM_ATTR_PHYATK;
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MAX = PB_ITEM_ATTR_SPEED;
const int PB_ITEM_ATTR_T_ARRAYSIZE = PB_ITEM_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ITEM_ATTR_T_descriptor();
inline const ::std::string& PB_ITEM_ATTR_T_Name(PB_ITEM_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ITEM_ATTR_T_descriptor(), value);
}
inline bool PB_ITEM_ATTR_T_Parse(
    const ::std::string& name, PB_ITEM_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ITEM_ATTR_T>(
    PB_ITEM_ATTR_T_descriptor(), name, value);
}
enum PB_TASK_STATUS_T {
  PB_TASK_CANT_TOUCH = 0,
  PB_TASK_TOUCH = 1,
  PB_TASK_FINISH = 2
};
bool PB_TASK_STATUS_T_IsValid(int value);
const PB_TASK_STATUS_T PB_TASK_STATUS_T_MIN = PB_TASK_CANT_TOUCH;
const PB_TASK_STATUS_T PB_TASK_STATUS_T_MAX = PB_TASK_FINISH;
const int PB_TASK_STATUS_T_ARRAYSIZE = PB_TASK_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_TASK_STATUS_T_descriptor();
inline const ::std::string& PB_TASK_STATUS_T_Name(PB_TASK_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_TASK_STATUS_T_descriptor(), value);
}
inline bool PB_TASK_STATUS_T_Parse(
    const ::std::string& name, PB_TASK_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_TASK_STATUS_T>(
    PB_TASK_STATUS_T_descriptor(), name, value);
}
enum PB_INSTANCE_TYPE_T {
  PB_INSTANCE_TYPE_PVE = 1,
  PB_INSTANCE_TYPE_PPVE = 2,
  PB_INSTANCE_TYPE_PVP = 3,
  PB_INSTANCE_TYPE_PVAI = 4,
  PB_INSTANCE_TYPE_PVE2 = 5,
  PB_INSTANCE_TYPE_PVE3 = 6,
  PB_INSTANCE_TYPE_PVAI2 = 8,
  PB_INSTANCE_TYPE_PVP2 = 9
};
bool PB_INSTANCE_TYPE_T_IsValid(int value);
const PB_INSTANCE_TYPE_T PB_INSTANCE_TYPE_T_MIN = PB_INSTANCE_TYPE_PVE;
const PB_INSTANCE_TYPE_T PB_INSTANCE_TYPE_T_MAX = PB_INSTANCE_TYPE_PVP2;
const int PB_INSTANCE_TYPE_T_ARRAYSIZE = PB_INSTANCE_TYPE_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_INSTANCE_TYPE_T_descriptor();
inline const ::std::string& PB_INSTANCE_TYPE_T_Name(PB_INSTANCE_TYPE_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_INSTANCE_TYPE_T_descriptor(), value);
}
inline bool PB_INSTANCE_TYPE_T_Parse(
    const ::std::string& name, PB_INSTANCE_TYPE_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_INSTANCE_TYPE_T>(
    PB_INSTANCE_TYPE_T_descriptor(), name, value);
}
enum PB_SPEC_ACTIVITY_ID_T {
  PB_SA_CDEF_ID = 6300,
  PB_SA_WBOSS_ID = 6240,
  PB_SA_PVP2_ID = 6250
};
bool PB_SPEC_ACTIVITY_ID_T_IsValid(int value);
const PB_SPEC_ACTIVITY_ID_T PB_SPEC_ACTIVITY_ID_T_MIN = PB_SA_WBOSS_ID;
const PB_SPEC_ACTIVITY_ID_T PB_SPEC_ACTIVITY_ID_T_MAX = PB_SA_CDEF_ID;
const int PB_SPEC_ACTIVITY_ID_T_ARRAYSIZE = PB_SPEC_ACTIVITY_ID_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_SPEC_ACTIVITY_ID_T_descriptor();
inline const ::std::string& PB_SPEC_ACTIVITY_ID_T_Name(PB_SPEC_ACTIVITY_ID_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_SPEC_ACTIVITY_ID_T_descriptor(), value);
}
inline bool PB_SPEC_ACTIVITY_ID_T_Parse(
    const ::std::string& name, PB_SPEC_ACTIVITY_ID_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_SPEC_ACTIVITY_ID_T>(
    PB_SPEC_ACTIVITY_ID_T_descriptor(), name, value);
}
enum ITEM_TARGET_T {
  ITEM_TARGET_BAG = 1,
  ITEM_TARGET_STORE = 2,
  ITEM_TARGET_CARD = 11,
  ITEM_TARGET_EQUIP_CHIP = 14,
  ITEM_TARGET_MONSTER_CHIP = 15
};
bool ITEM_TARGET_T_IsValid(int value);
const ITEM_TARGET_T ITEM_TARGET_T_MIN = ITEM_TARGET_BAG;
const ITEM_TARGET_T ITEM_TARGET_T_MAX = ITEM_TARGET_MONSTER_CHIP;
const int ITEM_TARGET_T_ARRAYSIZE = ITEM_TARGET_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* ITEM_TARGET_T_descriptor();
inline const ::std::string& ITEM_TARGET_T_Name(ITEM_TARGET_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    ITEM_TARGET_T_descriptor(), value);
}
inline bool ITEM_TARGET_T_Parse(
    const ::std::string& name, ITEM_TARGET_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ITEM_TARGET_T>(
    ITEM_TARGET_T_descriptor(), name, value);
}
enum AI_STATUS_T {
  PB_AI_STATUS_TOP10 = 1,
  PB_AI_STATUS_FRONT = 2,
  PB_AI_STATUS_SELF = 3,
  PB_AI_STATUS_BACK = 4
};
bool AI_STATUS_T_IsValid(int value);
const AI_STATUS_T AI_STATUS_T_MIN = PB_AI_STATUS_TOP10;
const AI_STATUS_T AI_STATUS_T_MAX = PB_AI_STATUS_BACK;
const int AI_STATUS_T_ARRAYSIZE = AI_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* AI_STATUS_T_descriptor();
inline const ::std::string& AI_STATUS_T_Name(AI_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    AI_STATUS_T_descriptor(), value);
}
inline bool AI_STATUS_T_Parse(
    const ::std::string& name, AI_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AI_STATUS_T>(
    AI_STATUS_T_descriptor(), name, value);
}
enum RefreshShopTye {
  USE_FREE_TIMES = 1,
  USE_TICKET = 2,
  USE_DIAMOND = 3
};
bool RefreshShopTye_IsValid(int value);
const RefreshShopTye RefreshShopTye_MIN = USE_FREE_TIMES;
const RefreshShopTye RefreshShopTye_MAX = USE_DIAMOND;
const int RefreshShopTye_ARRAYSIZE = RefreshShopTye_MAX + 1;

const ::google::protobuf::EnumDescriptor* RefreshShopTye_descriptor();
inline const ::std::string& RefreshShopTye_Name(RefreshShopTye value) {
  return ::google::protobuf::internal::NameOfEnum(
    RefreshShopTye_descriptor(), value);
}
inline bool RefreshShopTye_Parse(
    const ::std::string& name, RefreshShopTye* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RefreshShopTye>(
    RefreshShopTye_descriptor(), name, value);
}
enum NoteType {
  WORLD = 1,
  PARTY = 2,
  PM = 3
};
bool NoteType_IsValid(int value);
const NoteType NoteType_MIN = WORLD;
const NoteType NoteType_MAX = PM;
const int NoteType_ARRAYSIZE = NoteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NoteType_descriptor();
inline const ::std::string& NoteType_Name(NoteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NoteType_descriptor(), value);
}
inline bool NoteType_Parse(
    const ::std::string& name, NoteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NoteType>(
    NoteType_descriptor(), name, value);
}
enum NoteResult {
  SUCC = 1,
  FAIL = 2,
  NOTALLOW = 3
};
bool NoteResult_IsValid(int value);
const NoteResult NoteResult_MIN = SUCC;
const NoteResult NoteResult_MAX = NOTALLOW;
const int NoteResult_ARRAYSIZE = NoteResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* NoteResult_descriptor();
inline const ::std::string& NoteResult_Name(NoteResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    NoteResult_descriptor(), value);
}
inline bool NoteResult_Parse(
    const ::std::string& name, NoteResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NoteResult>(
    NoteResult_descriptor(), name, value);
}
enum PB_ACTIVITY_STATUS_T {
  PB_ACTIVITY_STATUS_NOT_START = 0,
  PB_ACTIVITY_STATUS_VALID = 1,
  PB_ACTIVITY_STATUS_UNFINISH = 2,
  PB_ACTIVITY_STATUS_FINISH = 3,
  PB_ACTIVITY_STATUS_REWARD_REVC = 4,
  PB_ACTIVITY_STATUS_END = 5,
  PB_ACTIVITY_STATUS_INVALID = 6
};
bool PB_ACTIVITY_STATUS_T_IsValid(int value);
const PB_ACTIVITY_STATUS_T PB_ACTIVITY_STATUS_T_MIN = PB_ACTIVITY_STATUS_NOT_START;
const PB_ACTIVITY_STATUS_T PB_ACTIVITY_STATUS_T_MAX = PB_ACTIVITY_STATUS_INVALID;
const int PB_ACTIVITY_STATUS_T_ARRAYSIZE = PB_ACTIVITY_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ACTIVITY_STATUS_T_descriptor();
inline const ::std::string& PB_ACTIVITY_STATUS_T_Name(PB_ACTIVITY_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ACTIVITY_STATUS_T_descriptor(), value);
}
inline bool PB_ACTIVITY_STATUS_T_Parse(
    const ::std::string& name, PB_ACTIVITY_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ACTIVITY_STATUS_T>(
    PB_ACTIVITY_STATUS_T_descriptor(), name, value);
}
enum ACTIVITY_RANK_QUERY_T {
  PB_ACTIVITY_RANK_QUERY_SELF = 1,
  PB_ACTIVITY_RANK_QUERY_TOTLE = 2
};
bool ACTIVITY_RANK_QUERY_T_IsValid(int value);
const ACTIVITY_RANK_QUERY_T ACTIVITY_RANK_QUERY_T_MIN = PB_ACTIVITY_RANK_QUERY_SELF;
const ACTIVITY_RANK_QUERY_T ACTIVITY_RANK_QUERY_T_MAX = PB_ACTIVITY_RANK_QUERY_TOTLE;
const int ACTIVITY_RANK_QUERY_T_ARRAYSIZE = ACTIVITY_RANK_QUERY_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* ACTIVITY_RANK_QUERY_T_descriptor();
inline const ::std::string& ACTIVITY_RANK_QUERY_T_Name(ACTIVITY_RANK_QUERY_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    ACTIVITY_RANK_QUERY_T_descriptor(), value);
}
inline bool ACTIVITY_RANK_QUERY_T_Parse(
    const ::std::string& name, ACTIVITY_RANK_QUERY_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ACTIVITY_RANK_QUERY_T>(
    ACTIVITY_RANK_QUERY_T_descriptor(), name, value);
}
enum GET_GIFT_RES_T {
  GET_ON_GIFT_SUCC = 1,
  ON_GIFT_TIME_NOT_CLEAR = 2
};
bool GET_GIFT_RES_T_IsValid(int value);
const GET_GIFT_RES_T GET_GIFT_RES_T_MIN = GET_ON_GIFT_SUCC;
const GET_GIFT_RES_T GET_GIFT_RES_T_MAX = ON_GIFT_TIME_NOT_CLEAR;
const int GET_GIFT_RES_T_ARRAYSIZE = GET_GIFT_RES_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* GET_GIFT_RES_T_descriptor();
inline const ::std::string& GET_GIFT_RES_T_Name(GET_GIFT_RES_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    GET_GIFT_RES_T_descriptor(), value);
}
inline bool GET_GIFT_RES_T_Parse(
    const ::std::string& name, GET_GIFT_RES_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GET_GIFT_RES_T>(
    GET_GIFT_RES_T_descriptor(), name, value);
}
enum TOPUP_AWARD_STATUS {
  NONE_TOPUP_AWARD = 0,
  DONE_TOPUP_NOT_GET_AWARD = 1,
  DONE_TOPUP_AND_GET_AWARD = 2,
  WAITTING_FOR_TOPUP = 3
};
bool TOPUP_AWARD_STATUS_IsValid(int value);
const TOPUP_AWARD_STATUS TOPUP_AWARD_STATUS_MIN = NONE_TOPUP_AWARD;
const TOPUP_AWARD_STATUS TOPUP_AWARD_STATUS_MAX = WAITTING_FOR_TOPUP;
const int TOPUP_AWARD_STATUS_ARRAYSIZE = TOPUP_AWARD_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* TOPUP_AWARD_STATUS_descriptor();
inline const ::std::string& TOPUP_AWARD_STATUS_Name(TOPUP_AWARD_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    TOPUP_AWARD_STATUS_descriptor(), value);
}
inline bool TOPUP_AWARD_STATUS_Parse(
    const ::std::string& name, TOPUP_AWARD_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TOPUP_AWARD_STATUS>(
    TOPUP_AWARD_STATUS_descriptor(), name, value);
}
enum GET_TOPUP_AWARD_RESULT {
  GET_TOPUP_AWARD_SUCCESS = 1
};
bool GET_TOPUP_AWARD_RESULT_IsValid(int value);
const GET_TOPUP_AWARD_RESULT GET_TOPUP_AWARD_RESULT_MIN = GET_TOPUP_AWARD_SUCCESS;
const GET_TOPUP_AWARD_RESULT GET_TOPUP_AWARD_RESULT_MAX = GET_TOPUP_AWARD_SUCCESS;
const int GET_TOPUP_AWARD_RESULT_ARRAYSIZE = GET_TOPUP_AWARD_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GET_TOPUP_AWARD_RESULT_descriptor();
inline const ::std::string& GET_TOPUP_AWARD_RESULT_Name(GET_TOPUP_AWARD_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GET_TOPUP_AWARD_RESULT_descriptor(), value);
}
inline bool GET_TOPUP_AWARD_RESULT_Parse(
    const ::std::string& name, GET_TOPUP_AWARD_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GET_TOPUP_AWARD_RESULT>(
    GET_TOPUP_AWARD_RESULT_descriptor(), name, value);
}
enum PB_PVP2_BTL_RET_T {
  PB_PVP2_BTL_RET_WIN = 1,
  PB_PVP2_BTL_RET_FAIL = 2,
  PB_PVP2_BTL_RET_UNMATCH = 3
};
bool PB_PVP2_BTL_RET_T_IsValid(int value);
const PB_PVP2_BTL_RET_T PB_PVP2_BTL_RET_T_MIN = PB_PVP2_BTL_RET_WIN;
const PB_PVP2_BTL_RET_T PB_PVP2_BTL_RET_T_MAX = PB_PVP2_BTL_RET_UNMATCH;
const int PB_PVP2_BTL_RET_T_ARRAYSIZE = PB_PVP2_BTL_RET_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_PVP2_BTL_RET_T_descriptor();
inline const ::std::string& PB_PVP2_BTL_RET_T_Name(PB_PVP2_BTL_RET_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_PVP2_BTL_RET_T_descriptor(), value);
}
inline bool PB_PVP2_BTL_RET_T_Parse(
    const ::std::string& name, PB_PVP2_BTL_RET_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_PVP2_BTL_RET_T>(
    PB_PVP2_BTL_RET_T_descriptor(), name, value);
}
enum RANK_NAME_T {
  RANK_NAME_PVP2_SCORE = 1,
  RANK_NAME_LV_SCORE = 2,
  RANK_NAME_POWER_SCORE = 3,
  RANK_NAME_REPUTATION_SCORE = 4,
  RANK_NAME_FAIRY_SCORE = 5,
  RANK_NAME_WB_HURT_SCORE = 6,
  RANK_NAME_ACTIVITY_MIN = 20000,
  RANK_NAME_ACTIVITY_MAX = 39999
};
bool RANK_NAME_T_IsValid(int value);
const RANK_NAME_T RANK_NAME_T_MIN = RANK_NAME_PVP2_SCORE;
const RANK_NAME_T RANK_NAME_T_MAX = RANK_NAME_ACTIVITY_MAX;
const int RANK_NAME_T_ARRAYSIZE = RANK_NAME_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* RANK_NAME_T_descriptor();
inline const ::std::string& RANK_NAME_T_Name(RANK_NAME_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    RANK_NAME_T_descriptor(), value);
}
inline bool RANK_NAME_T_Parse(
    const ::std::string& name, RANK_NAME_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RANK_NAME_T>(
    RANK_NAME_T_descriptor(), name, value);
}
enum RANK_TYPE_T {
  RANK_TYPE_TOTAL = 1,
  RANK_TYPE_DAILY = 2,
  RANK_TYPE_WEEK = 3,
  RANK_TYPE_MONTH = 4
};
bool RANK_TYPE_T_IsValid(int value);
const RANK_TYPE_T RANK_TYPE_T_MIN = RANK_TYPE_TOTAL;
const RANK_TYPE_T RANK_TYPE_T_MAX = RANK_TYPE_MONTH;
const int RANK_TYPE_T_ARRAYSIZE = RANK_TYPE_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* RANK_TYPE_T_descriptor();
inline const ::std::string& RANK_TYPE_T_Name(RANK_TYPE_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    RANK_TYPE_T_descriptor(), value);
}
inline bool RANK_TYPE_T_Parse(
    const ::std::string& name, RANK_TYPE_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RANK_TYPE_T>(
    RANK_TYPE_T_descriptor(), name, value);
}
enum PB_MAIL_STATUS_T {
  PB_MAIL_STATUS_NEW = 0,
  PB_MAIL_STATUS_UNREAD = 1,
  PB_MAIL_STATUS_READ = 2,
  PB_MAIL_STATUS_GOT = 3,
  PB_MAIL_STATUS_DEL = 4
};
bool PB_MAIL_STATUS_T_IsValid(int value);
const PB_MAIL_STATUS_T PB_MAIL_STATUS_T_MIN = PB_MAIL_STATUS_NEW;
const PB_MAIL_STATUS_T PB_MAIL_STATUS_T_MAX = PB_MAIL_STATUS_DEL;
const int PB_MAIL_STATUS_T_ARRAYSIZE = PB_MAIL_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_MAIL_STATUS_T_descriptor();
inline const ::std::string& PB_MAIL_STATUS_T_Name(PB_MAIL_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_MAIL_STATUS_T_descriptor(), value);
}
inline bool PB_MAIL_STATUS_T_Parse(
    const ::std::string& name, PB_MAIL_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_MAIL_STATUS_T>(
    PB_MAIL_STATUS_T_descriptor(), name, value);
}
enum CARDTYPE {
  EXCHANGE = 1,
  INVITE = 2
};
bool CARDTYPE_IsValid(int value);
const CARDTYPE CARDTYPE_MIN = EXCHANGE;
const CARDTYPE CARDTYPE_MAX = INVITE;
const int CARDTYPE_ARRAYSIZE = CARDTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CARDTYPE_descriptor();
inline const ::std::string& CARDTYPE_Name(CARDTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CARDTYPE_descriptor(), value);
}
inline bool CARDTYPE_Parse(
    const ::std::string& name, CARDTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CARDTYPE>(
    CARDTYPE_descriptor(), name, value);
}
enum FAIRY_POS_START_T {
  FAIRY_POS_START_BTL = 1,
  FAIRY_POS_START_AST = 20,
  FAIRY_POS_START_PRT = 50,
  FAIRY_POS_START_NOM = 100
};
bool FAIRY_POS_START_T_IsValid(int value);
const FAIRY_POS_START_T FAIRY_POS_START_T_MIN = FAIRY_POS_START_BTL;
const FAIRY_POS_START_T FAIRY_POS_START_T_MAX = FAIRY_POS_START_NOM;
const int FAIRY_POS_START_T_ARRAYSIZE = FAIRY_POS_START_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* FAIRY_POS_START_T_descriptor();
inline const ::std::string& FAIRY_POS_START_T_Name(FAIRY_POS_START_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    FAIRY_POS_START_T_descriptor(), value);
}
inline bool FAIRY_POS_START_T_Parse(
    const ::std::string& name, FAIRY_POS_START_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FAIRY_POS_START_T>(
    FAIRY_POS_START_T_descriptor(), name, value);
}
enum PB_TARGET_STATUS_T {
  PB_TARGET_STATUS_NOT_START = 0,
  PB_TARGET_STATUS_VALID = 1,
  PB_TARGET_STATUS_UNFINISH = 2,
  PB_TARGET_STATUS_FINISH = 3,
  PB_TARGET_STATUS_REWARD_REVC = 4,
  PB_TARGET_STATUS_END = 5,
  PB_TARGET_STATUS_INVALID = 6
};
bool PB_TARGET_STATUS_T_IsValid(int value);
const PB_TARGET_STATUS_T PB_TARGET_STATUS_T_MIN = PB_TARGET_STATUS_NOT_START;
const PB_TARGET_STATUS_T PB_TARGET_STATUS_T_MAX = PB_TARGET_STATUS_INVALID;
const int PB_TARGET_STATUS_T_ARRAYSIZE = PB_TARGET_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_TARGET_STATUS_T_descriptor();
inline const ::std::string& PB_TARGET_STATUS_T_Name(PB_TARGET_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_TARGET_STATUS_T_descriptor(), value);
}
inline bool PB_TARGET_STATUS_T_Parse(
    const ::std::string& name, PB_TARGET_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_TARGET_STATUS_T>(
    PB_TARGET_STATUS_T_descriptor(), name, value);
}
enum GUILD_STATUS {
  GUILD_TO_MEMBER = 1,
  GUILD_TO_ELITE = 2,
  GUILD_TO_VICE = 3,
  GUILD_TO_OWNER = 4,
  GUILD_TO_NOT_MEMBER = 5,
  GUILD_TO_REFUSE = 6
};
bool GUILD_STATUS_IsValid(int value);
const GUILD_STATUS GUILD_STATUS_MIN = GUILD_TO_MEMBER;
const GUILD_STATUS GUILD_STATUS_MAX = GUILD_TO_REFUSE;
const int GUILD_STATUS_ARRAYSIZE = GUILD_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* GUILD_STATUS_descriptor();
inline const ::std::string& GUILD_STATUS_Name(GUILD_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    GUILD_STATUS_descriptor(), value);
}
inline bool GUILD_STATUS_Parse(
    const ::std::string& name, GUILD_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GUILD_STATUS>(
    GUILD_STATUS_descriptor(), name, value);
}
enum APPLY_TYPE {
  NOCONDITION = 1,
  FIGHTCONDITION = 2,
  NOAPPLY = 3
};
bool APPLY_TYPE_IsValid(int value);
const APPLY_TYPE APPLY_TYPE_MIN = NOCONDITION;
const APPLY_TYPE APPLY_TYPE_MAX = NOAPPLY;
const int APPLY_TYPE_ARRAYSIZE = APPLY_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* APPLY_TYPE_descriptor();
inline const ::std::string& APPLY_TYPE_Name(APPLY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    APPLY_TYPE_descriptor(), value);
}
inline bool APPLY_TYPE_Parse(
    const ::std::string& name, APPLY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<APPLY_TYPE>(
    APPLY_TYPE_descriptor(), name, value);
}
enum RecruitCommitResult {
  RCR_OK = 0,
  RCR_CODE_INVALID = 1,
  RCR_REPEATED_COMMIT = 2,
  RCR_NO_OWNSELF = 3
};
bool RecruitCommitResult_IsValid(int value);
const RecruitCommitResult RecruitCommitResult_MIN = RCR_OK;
const RecruitCommitResult RecruitCommitResult_MAX = RCR_NO_OWNSELF;
const int RecruitCommitResult_ARRAYSIZE = RecruitCommitResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* RecruitCommitResult_descriptor();
inline const ::std::string& RecruitCommitResult_Name(RecruitCommitResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    RecruitCommitResult_descriptor(), value);
}
inline bool RecruitCommitResult_Parse(
    const ::std::string& name, RecruitCommitResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RecruitCommitResult>(
    RecruitCommitResult_descriptor(), name, value);
}
enum RecruitAwardResult {
  RAR_OK = 0,
  RAR_UNCONDITIONAL = 1,
  RAR_REPEATED_COMMIT = 2,
  RAR_OVER_LIMIT = 3
};
bool RecruitAwardResult_IsValid(int value);
const RecruitAwardResult RecruitAwardResult_MIN = RAR_OK;
const RecruitAwardResult RecruitAwardResult_MAX = RAR_OVER_LIMIT;
const int RecruitAwardResult_ARRAYSIZE = RecruitAwardResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* RecruitAwardResult_descriptor();
inline const ::std::string& RecruitAwardResult_Name(RecruitAwardResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    RecruitAwardResult_descriptor(), value);
}
inline bool RecruitAwardResult_Parse(
    const ::std::string& name, RecruitAwardResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RecruitAwardResult>(
    RecruitAwardResult_descriptor(), name, value);
}
// ===================================================================

class BasicUserBattleInfo : public ::google::protobuf::Message {
 public:
  BasicUserBattleInfo();
  virtual ~BasicUserBattleInfo();
  
  BasicUserBattleInfo(const BasicUserBattleInfo& from);
  
  inline BasicUserBattleInfo& operator=(const BasicUserBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserBattleInfo& default_instance();
  
  void Swap(BasicUserBattleInfo* other);
  
  // implements Message ----------------------------------------------
  
  BasicUserBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserBattleInfo& from);
  void MergeFrom(const BasicUserBattleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 physical_attack = 1;
  inline bool has_physical_attack() const;
  inline void clear_physical_attack();
  static const int kPhysicalAttackFieldNumber = 1;
  inline ::google::protobuf::uint32 physical_attack() const;
  inline void set_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 magic_attack = 2;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 2;
  inline ::google::protobuf::uint32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 skill_attack = 3;
  inline bool has_skill_attack() const;
  inline void clear_skill_attack();
  static const int kSkillAttackFieldNumber = 3;
  inline ::google::protobuf::uint32 skill_attack() const;
  inline void set_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 physical_defence = 4;
  inline bool has_physical_defence() const;
  inline void clear_physical_defence();
  static const int kPhysicalDefenceFieldNumber = 4;
  inline ::google::protobuf::uint32 physical_defence() const;
  inline void set_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 magic_defence = 5;
  inline bool has_magic_defence() const;
  inline void clear_magic_defence();
  static const int kMagicDefenceFieldNumber = 5;
  inline ::google::protobuf::uint32 magic_defence() const;
  inline void set_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 skill_defence = 6;
  inline bool has_skill_defence() const;
  inline void clear_skill_defence();
  static const int kSkillDefenceFieldNumber = 6;
  inline ::google::protobuf::uint32 skill_defence() const;
  inline void set_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 health_point = 7;
  inline bool has_health_point() const;
  inline void clear_health_point();
  static const int kHealthPointFieldNumber = 7;
  inline ::google::protobuf::uint32 health_point() const;
  inline void set_health_point(::google::protobuf::uint32 value);
  
  // required uint32 accurate = 8;
  inline bool has_accurate() const;
  inline void clear_accurate();
  static const int kAccurateFieldNumber = 8;
  inline ::google::protobuf::uint32 accurate() const;
  inline void set_accurate(::google::protobuf::uint32 value);
  
  // required uint32 dodge = 9;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 9;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // required uint32 wreck = 10;
  inline bool has_wreck() const;
  inline void clear_wreck();
  static const int kWreckFieldNumber = 10;
  inline ::google::protobuf::uint32 wreck() const;
  inline void set_wreck(::google::protobuf::uint32 value);
  
  // required uint32 parry = 11;
  inline bool has_parry() const;
  inline void clear_parry();
  static const int kParryFieldNumber = 11;
  inline ::google::protobuf::uint32 parry() const;
  inline void set_parry(::google::protobuf::uint32 value);
  
  // required uint32 critical_strike = 12;
  inline bool has_critical_strike() const;
  inline void clear_critical_strike();
  static const int kCriticalStrikeFieldNumber = 12;
  inline ::google::protobuf::uint32 critical_strike() const;
  inline void set_critical_strike(::google::protobuf::uint32 value);
  
  // required uint32 tenacity = 13;
  inline bool has_tenacity() const;
  inline void clear_tenacity();
  static const int kTenacityFieldNumber = 13;
  inline ::google::protobuf::uint32 tenacity() const;
  inline void set_tenacity(::google::protobuf::uint32 value);
  
  // required uint32 slay = 14;
  inline bool has_slay() const;
  inline void clear_slay();
  static const int kSlayFieldNumber = 14;
  inline ::google::protobuf::uint32 slay() const;
  inline void set_slay(::google::protobuf::uint32 value);
  
  // required uint32 courage = 15;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 15;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);
  
  // required uint32 charm = 16;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 16;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);
  
  // required uint32 trick = 17;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 17;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);
  
  // required uint32 speed = 18;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 18;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);
  
  // required uint32 proficiency = 19;
  inline bool has_proficiency() const;
  inline void clear_proficiency();
  static const int kProficiencyFieldNumber = 19;
  inline ::google::protobuf::uint32 proficiency() const;
  inline void set_proficiency(::google::protobuf::uint32 value);
  
  // optional uint32 current_hp = 20;
  inline bool has_current_hp() const;
  inline void clear_current_hp();
  static const int kCurrentHpFieldNumber = 20;
  inline ::google::protobuf::uint32 current_hp() const;
  inline void set_current_hp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BasicUserBattleInfo)
 private:
  inline void set_has_physical_attack();
  inline void clear_has_physical_attack();
  inline void set_has_magic_attack();
  inline void clear_has_magic_attack();
  inline void set_has_skill_attack();
  inline void clear_has_skill_attack();
  inline void set_has_physical_defence();
  inline void clear_has_physical_defence();
  inline void set_has_magic_defence();
  inline void clear_has_magic_defence();
  inline void set_has_skill_defence();
  inline void clear_has_skill_defence();
  inline void set_has_health_point();
  inline void clear_has_health_point();
  inline void set_has_accurate();
  inline void clear_has_accurate();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_wreck();
  inline void clear_has_wreck();
  inline void set_has_parry();
  inline void clear_has_parry();
  inline void set_has_critical_strike();
  inline void clear_has_critical_strike();
  inline void set_has_tenacity();
  inline void clear_has_tenacity();
  inline void set_has_slay();
  inline void clear_has_slay();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_proficiency();
  inline void clear_has_proficiency();
  inline void set_has_current_hp();
  inline void clear_has_current_hp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 physical_attack_;
  ::google::protobuf::uint32 magic_attack_;
  ::google::protobuf::uint32 skill_attack_;
  ::google::protobuf::uint32 physical_defence_;
  ::google::protobuf::uint32 magic_defence_;
  ::google::protobuf::uint32 skill_defence_;
  ::google::protobuf::uint32 health_point_;
  ::google::protobuf::uint32 accurate_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 wreck_;
  ::google::protobuf::uint32 parry_;
  ::google::protobuf::uint32 critical_strike_;
  ::google::protobuf::uint32 tenacity_;
  ::google::protobuf::uint32 slay_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 proficiency_;
  ::google::protobuf::uint32 current_hp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static BasicUserBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillPart : public ::google::protobuf::Message {
 public:
  UserSkillPart();
  virtual ~UserSkillPart();
  
  UserSkillPart(const UserSkillPart& from);
  
  inline UserSkillPart& operator=(const UserSkillPart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillPart& default_instance();
  
  void Swap(UserSkillPart* other);
  
  // implements Message ----------------------------------------------
  
  UserSkillPart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillPart& from);
  void MergeFrom(const UserSkillPart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);
  
  // required .BasicUserBattleInfo exp_battle_info = 2;
  inline bool has_exp_battle_info() const;
  inline void clear_exp_battle_info();
  static const int kExpBattleInfoFieldNumber = 2;
  inline const ::BasicUserBattleInfo& exp_battle_info() const;
  inline ::BasicUserBattleInfo* mutable_exp_battle_info();
  inline ::BasicUserBattleInfo* release_exp_battle_info();
  
  // required float continue_time = 5;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 5;
  inline float continue_time() const;
  inline void set_continue_time(float value);
  
  // required uint32 can_attack_number = 6;
  inline bool has_can_attack_number() const;
  inline void clear_can_attack_number();
  static const int kCanAttackNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 can_attack_number() const;
  inline void set_can_attack_number(::google::protobuf::uint32 value);
  
  // required uint32 hurt = 7;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 7;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);
  
  // required float continue_time2 = 8;
  inline bool has_continue_time2() const;
  inline void clear_continue_time2();
  static const int kContinueTime2FieldNumber = 8;
  inline float continue_time2() const;
  inline void set_continue_time2(float value);
  
  // @@protoc_insertion_point(class_scope:UserSkillPart)
 private:
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_exp_battle_info();
  inline void clear_has_exp_battle_info();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();
  inline void set_has_can_attack_number();
  inline void clear_has_can_attack_number();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_continue_time2();
  inline void clear_has_continue_time2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BasicUserBattleInfo* exp_battle_info_;
  ::google::protobuf::uint32 part_;
  float continue_time_;
  ::google::protobuf::uint32 can_attack_number_;
  ::google::protobuf::uint32 hurt_;
  float continue_time2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static UserSkillPart* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillInfo : public ::google::protobuf::Message {
 public:
  UserSkillInfo();
  virtual ~UserSkillInfo();
  
  UserSkillInfo(const UserSkillInfo& from);
  
  inline UserSkillInfo& operator=(const UserSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillInfo& default_instance();
  
  void Swap(UserSkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  UserSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillInfo& from);
  void MergeFrom(const UserSkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 part = 3;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 3;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 4;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // required uint32 money = 5;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // required uint32 exploit = 6;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 6;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);
  
  // required float own_cd = 7;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 7;
  inline float own_cd() const;
  inline void set_own_cd(float value);
  
  // required float share_cd = 8;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 8;
  inline float share_cd() const;
  inline void set_share_cd(float value);
  
  // repeated .UserSkillPart parts = 9;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 9;
  inline const ::UserSkillPart& parts(int index) const;
  inline ::UserSkillPart* mutable_parts(int index);
  inline ::UserSkillPart* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
      mutable_parts();
  
  // required uint32 max_level = 10;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:UserSkillInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 part_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  float own_cd_;
  float share_cd_;
  ::google::protobuf::RepeatedPtrField< ::UserSkillPart > parts_;
  ::google::protobuf::uint32 max_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static UserSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BasicUserInfo : public ::google::protobuf::Message {
 public:
  BasicUserInfo();
  virtual ~BasicUserInfo();
  
  BasicUserInfo(const BasicUserInfo& from);
  
  inline BasicUserInfo& operator=(const BasicUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserInfo& default_instance();
  
  void Swap(BasicUserInfo* other);
  
  // implements Message ----------------------------------------------
  
  BasicUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserInfo& from);
  void MergeFrom(const BasicUserInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 gender = 6;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 6;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // required uint32 lv = 7;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 8;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 8;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 9;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 9;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 orient = 10;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 10;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);
  
  // optional uint32 battle_side = 11;
  inline bool has_battle_side() const;
  inline void clear_battle_side();
  static const int kBattleSideFieldNumber = 11;
  inline ::google::protobuf::uint32 battle_side() const;
  inline void set_battle_side(::google::protobuf::uint32 value);
  
  // optional .BasicUserBattleInfo battle_info = 12;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 12;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // required uint32 next_lv = 13;
  inline bool has_next_lv() const;
  inline void clear_next_lv();
  static const int kNextLvFieldNumber = 13;
  inline ::google::protobuf::uint32 next_lv() const;
  inline void set_next_lv(::google::protobuf::uint32 value);
  
  // optional uint32 vip_lv = 14;
  inline bool has_vip_lv() const;
  inline void clear_vip_lv();
  static const int kVipLvFieldNumber = 14;
  inline ::google::protobuf::uint32 vip_lv() const;
  inline void set_vip_lv(::google::protobuf::uint32 value);
  
  // optional bool red_name = 15;
  inline bool has_red_name() const;
  inline void clear_red_name();
  static const int kRedNameFieldNumber = 15;
  inline bool red_name() const;
  inline void set_red_name(bool value);
  
  // optional uint32 effectiveness = 16;
  inline bool has_effectiveness() const;
  inline void clear_effectiveness();
  static const int kEffectivenessFieldNumber = 16;
  inline ::google::protobuf::uint32 effectiveness() const;
  inline void set_effectiveness(::google::protobuf::uint32 value);
  
  // optional uint32 globalid = 17;
  inline bool has_globalid() const;
  inline void clear_globalid();
  static const int kGlobalidFieldNumber = 17;
  inline ::google::protobuf::uint32 globalid() const;
  inline void set_globalid(::google::protobuf::uint32 value);
  
  // optional uint32 gid_high = 18;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 18;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // optional uint32 gid_low = 19;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 19;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // optional bytes gname = 20;
  inline bool has_gname() const;
  inline void clear_gname();
  static const int kGnameFieldNumber = 20;
  inline const ::std::string& gname() const;
  inline void set_gname(const ::std::string& value);
  inline void set_gname(const char* value);
  inline void set_gname(const void* value, size_t size);
  inline ::std::string* mutable_gname();
  inline ::std::string* release_gname();
  
  // optional uint32 gstatus = 21;
  inline bool has_gstatus() const;
  inline void clear_gstatus();
  static const int kGstatusFieldNumber = 21;
  inline ::google::protobuf::uint32 gstatus() const;
  inline void set_gstatus(::google::protobuf::uint32 value);
  
  // optional uint32 current_title = 22;
  inline bool has_current_title() const;
  inline void clear_current_title();
  static const int kCurrentTitleFieldNumber = 22;
  inline ::google::protobuf::uint32 current_title() const;
  inline void set_current_title(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BasicUserInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();
  inline void set_has_battle_side();
  inline void clear_has_battle_side();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_next_lv();
  inline void clear_has_next_lv();
  inline void set_has_vip_lv();
  inline void clear_has_vip_lv();
  inline void set_has_red_name();
  inline void clear_has_red_name();
  inline void set_has_effectiveness();
  inline void clear_has_effectiveness();
  inline void set_has_globalid();
  inline void clear_has_globalid();
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  inline void set_has_gname();
  inline void clear_has_gname();
  inline void set_has_gstatus();
  inline void clear_has_gstatus();
  inline void set_has_current_title();
  inline void clear_has_current_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;
  ::google::protobuf::uint32 battle_side_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 next_lv_;
  ::google::protobuf::uint32 vip_lv_;
  bool red_name_;
  ::google::protobuf::uint32 effectiveness_;
  ::google::protobuf::uint32 globalid_;
  ::google::protobuf::uint32 gid_high_;
  ::std::string* gname_;
  ::google::protobuf::uint32 gid_low_;
  ::google::protobuf::uint32 gstatus_;
  ::google::protobuf::uint32 current_title_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static BasicUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapReq : public ::google::protobuf::Message {
 public:
  CSEnterMapReq();
  virtual ~CSEnterMapReq();
  
  CSEnterMapReq(const CSEnterMapReq& from);
  
  inline CSEnterMapReq& operator=(const CSEnterMapReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapReq& default_instance();
  
  void Swap(CSEnterMapReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEnterMapReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapReq& from);
  void MergeFrom(const CSEnterMapReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 2;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 2;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 3;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 3;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 orient = 4;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 4;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEnterMapReq)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnterMapReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapRsp : public ::google::protobuf::Message {
 public:
  CSEnterMapRsp();
  virtual ~CSEnterMapRsp();
  
  CSEnterMapRsp(const CSEnterMapRsp& from);
  
  inline CSEnterMapRsp& operator=(const CSEnterMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapRsp& default_instance();
  
  void Swap(CSEnterMapRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEnterMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapRsp& from);
  void MergeFrom(const CSEnterMapRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // required .BasicUserInfo userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSEnterMapRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnterMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSLeaveMapRsp : public ::google::protobuf::Message {
 public:
  CSLeaveMapRsp();
  virtual ~CSLeaveMapRsp();
  
  CSLeaveMapRsp(const CSLeaveMapRsp& from);
  
  inline CSLeaveMapRsp& operator=(const CSLeaveMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLeaveMapRsp& default_instance();
  
  void Swap(CSLeaveMapRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLeaveMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLeaveMapRsp& from);
  void MergeFrom(const CSLeaveMapRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSLeaveMapRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLeaveMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersReq : public ::google::protobuf::Message {
 public:
  CSGetMapUsersReq();
  virtual ~CSGetMapUsersReq();
  
  CSGetMapUsersReq(const CSGetMapUsersReq& from);
  
  inline CSGetMapUsersReq& operator=(const CSGetMapUsersReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersReq& default_instance();
  
  void Swap(CSGetMapUsersReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMapUsersReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersReq& from);
  void MergeFrom(const CSGetMapUsersReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetMapUsersReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMapUsersReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersRsp : public ::google::protobuf::Message {
 public:
  CSGetMapUsersRsp();
  virtual ~CSGetMapUsersRsp();
  
  CSGetMapUsersRsp(const CSGetMapUsersRsp& from);
  
  inline CSGetMapUsersRsp& operator=(const CSGetMapUsersRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersRsp& default_instance();
  
  void Swap(CSGetMapUsersRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMapUsersRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersRsp& from);
  void MergeFrom(const CSGetMapUsersRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .BasicUserInfo userinfo = 1;
  inline int userinfo_size() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  inline const ::BasicUserInfo& userinfo(int index) const;
  inline ::BasicUserInfo* mutable_userinfo(int index);
  inline ::BasicUserInfo* add_userinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
      userinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
      mutable_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSGetMapUsersRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::BasicUserInfo > userinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMapUsersRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillReq : public ::google::protobuf::Message {
 public:
  CSGetUserSkillReq();
  virtual ~CSGetUserSkillReq();
  
  CSGetUserSkillReq(const CSGetUserSkillReq& from);
  
  inline CSGetUserSkillReq& operator=(const CSGetUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillReq& default_instance();
  
  void Swap(CSGetUserSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillReq& from);
  void MergeFrom(const CSGetUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserSkillReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSGetUserSkillRsp();
  virtual ~CSGetUserSkillRsp();
  
  CSGetUserSkillRsp(const CSGetUserSkillRsp& from);
  
  inline CSGetUserSkillRsp& operator=(const CSGetUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillRsp& default_instance();
  
  void Swap(CSGetUserSkillRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillRsp& from);
  void MergeFrom(const CSGetUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .UserSkillInfo userskills = 4;
  inline int userskills_size() const;
  inline void clear_userskills();
  static const int kUserskillsFieldNumber = 4;
  inline const ::UserSkillInfo& userskills(int index) const;
  inline ::UserSkillInfo* mutable_userskills(int index);
  inline ::UserSkillInfo* add_userskills();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
      userskills() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
      mutable_userskills();
  
  // repeated uint32 ready = 5;
  inline int ready_size() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline ::google::protobuf::uint32 ready(int index) const;
  inline void set_ready(int index, ::google::protobuf::uint32 value);
  inline void add_ready(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ready() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ready();
  
  // @@protoc_insertion_point(class_scope:CSGetUserSkillRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::UserSkillInfo > userskills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ready_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoReq : public ::google::protobuf::Message {
 public:
  CSGetUserInfoReq();
  virtual ~CSGetUserInfoReq();
  
  CSGetUserInfoReq(const CSGetUserInfoReq& from);
  
  inline CSGetUserInfoReq& operator=(const CSGetUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoReq& default_instance();
  
  void Swap(CSGetUserInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoReq& from);
  void MergeFrom(const CSGetUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserInfoReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetUserInfoRsp();
  virtual ~CSGetUserInfoRsp();
  
  CSGetUserInfoRsp(const CSGetUserInfoRsp& from);
  
  inline CSGetUserInfoRsp& operator=(const CSGetUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoRsp& default_instance();
  
  void Swap(CSGetUserInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoRsp& from);
  void MergeFrom(const CSGetUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .BasicUserInfo userinfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 4;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSGetUserInfoRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillReq : public ::google::protobuf::Message {
 public:
  CSAddUserSkillReq();
  virtual ~CSAddUserSkillReq();
  
  CSAddUserSkillReq(const CSAddUserSkillReq& from);
  
  inline CSAddUserSkillReq& operator=(const CSAddUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillReq& default_instance();
  
  void Swap(CSAddUserSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillReq& from);
  void MergeFrom(const CSAddUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddUserSkillReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSAddUserSkillRsp();
  virtual ~CSAddUserSkillRsp();
  
  CSAddUserSkillRsp(const CSAddUserSkillRsp& from);
  
  inline CSAddUserSkillRsp& operator=(const CSAddUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillRsp& default_instance();
  
  void Swap(CSAddUserSkillRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillRsp& from);
  void MergeFrom(const CSAddUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // required uint32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddUserSkillRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 max_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffReq : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffReq();
  virtual ~CSUserSkillDiffReq();
  
  CSUserSkillDiffReq(const CSUserSkillDiffReq& from);
  
  inline CSUserSkillDiffReq& operator=(const CSUserSkillDiffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffReq& default_instance();
  
  void Swap(CSUserSkillDiffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSUserSkillDiffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffReq& from);
  void MergeFrom(const CSUserSkillDiffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSUserSkillDiffReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUserSkillDiffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffRsp : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffRsp();
  virtual ~CSUserSkillDiffRsp();
  
  CSUserSkillDiffRsp(const CSUserSkillDiffRsp& from);
  
  inline CSUserSkillDiffRsp& operator=(const CSUserSkillDiffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffRsp& default_instance();
  
  void Swap(CSUserSkillDiffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUserSkillDiffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffRsp& from);
  void MergeFrom(const CSUserSkillDiffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // optional uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 exploit = 4;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);
  
  // optional uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // optional .BasicUserBattleInfo battle_info = 6;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 6;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // optional int32 own_cd = 7;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 7;
  inline ::google::protobuf::int32 own_cd() const;
  inline void set_own_cd(::google::protobuf::int32 value);
  
  // optional int32 share_cd = 8;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 8;
  inline ::google::protobuf::int32 share_cd() const;
  inline void set_share_cd(::google::protobuf::int32 value);
  
  // optional int32 hurt = 9;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 9;
  inline ::google::protobuf::int32 hurt() const;
  inline void set_hurt(::google::protobuf::int32 value);
  
  // optional uint32 continue_time = 10;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 continue_time() const;
  inline void set_continue_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSUserSkillDiffRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::int32 own_cd_;
  ::google::protobuf::int32 share_cd_;
  ::google::protobuf::int32 hurt_;
  ::google::protobuf::uint32 continue_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUserSkillDiffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSkillUpdateValidRsq : public ::google::protobuf::Message {
 public:
  CSSkillUpdateValidRsq();
  virtual ~CSSkillUpdateValidRsq();
  
  CSSkillUpdateValidRsq(const CSSkillUpdateValidRsq& from);
  
  inline CSSkillUpdateValidRsq& operator=(const CSSkillUpdateValidRsq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSkillUpdateValidRsq& default_instance();
  
  void Swap(CSSkillUpdateValidRsq* other);
  
  // implements Message ----------------------------------------------
  
  CSSkillUpdateValidRsq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSkillUpdateValidRsq& from);
  void MergeFrom(const CSSkillUpdateValidRsq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool valid = 1;
  inline bool has_valid() const;
  inline void clear_valid();
  static const int kValidFieldNumber = 1;
  inline bool valid() const;
  inline void set_valid(bool value);
  
  // @@protoc_insertion_point(class_scope:CSSkillUpdateValidRsq)
 private:
  inline void set_has_valid();
  inline void clear_has_valid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool valid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSkillUpdateValidRsq* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkReq : public ::google::protobuf::Message {
 public:
  CSWalkReq();
  virtual ~CSWalkReq();
  
  CSWalkReq(const CSWalkReq& from);
  
  inline CSWalkReq& operator=(const CSWalkReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkReq& default_instance();
  
  void Swap(CSWalkReq* other);
  
  // implements Message ----------------------------------------------
  
  CSWalkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkReq& from);
  void MergeFrom(const CSWalkReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 xpos = 1;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 1;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 2;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 2;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 animid = 3;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 3;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);
  
  // required bool flip = 4;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 4;
  inline bool flip() const;
  inline void set_flip(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWalkReq)
 private:
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWalkReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkRsp : public ::google::protobuf::Message {
 public:
  CSWalkRsp();
  virtual ~CSWalkRsp();
  
  CSWalkRsp(const CSWalkRsp& from);
  
  inline CSWalkRsp& operator=(const CSWalkRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkRsp& default_instance();
  
  void Swap(CSWalkRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSWalkRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkRsp& from);
  void MergeFrom(const CSWalkRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 4;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 4;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 5;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 5;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 animid = 6;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 6;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);
  
  // required bool flip = 7;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 7;
  inline bool flip() const;
  inline void set_flip(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWalkRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWalkRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAttr : public ::google::protobuf::Message {
 public:
  CSItemAttr();
  virtual ~CSItemAttr();
  
  CSItemAttr(const CSItemAttr& from);
  
  inline CSItemAttr& operator=(const CSItemAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAttr& default_instance();
  
  void Swap(CSItemAttr* other);
  
  // implements Message ----------------------------------------------
  
  CSItemAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAttr& from);
  void MergeFrom(const CSItemAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 attr_key = 1;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);
  
  // required uint32 attr_basic_value = 2;
  inline bool has_attr_basic_value() const;
  inline void clear_attr_basic_value();
  static const int kAttrBasicValueFieldNumber = 2;
  inline ::google::protobuf::uint32 attr_basic_value() const;
  inline void set_attr_basic_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_intensify_value = 3;
  inline bool has_attr_intensify_value() const;
  inline void clear_attr_intensify_value();
  static const int kAttrIntensifyValueFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_intensify_value() const;
  inline void set_attr_intensify_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_gem_value = 4;
  inline bool has_attr_gem_value() const;
  inline void clear_attr_gem_value();
  static const int kAttrGemValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_gem_value() const;
  inline void set_attr_gem_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemAttr)
 private:
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_basic_value();
  inline void clear_has_attr_basic_value();
  inline void set_has_attr_intensify_value();
  inline void clear_has_attr_intensify_value();
  inline void set_has_attr_gem_value();
  inline void clear_has_attr_gem_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_basic_value_;
  ::google::protobuf::uint32 attr_intensify_value_;
  ::google::protobuf::uint32 attr_gem_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemAttr* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipHole : public ::google::protobuf::Message {
 public:
  CSEquipHole();
  virtual ~CSEquipHole();
  
  CSEquipHole(const CSEquipHole& from);
  
  inline CSEquipHole& operator=(const CSEquipHole& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipHole& default_instance();
  
  void Swap(CSEquipHole* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipHole& from);
  void MergeFrom(const CSEquipHole& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hole_index = 1;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);
  
  // required uint32 item_gem_id = 2;
  inline bool has_item_gem_id() const;
  inline void clear_item_gem_id();
  static const int kItemGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_gem_id() const;
  inline void set_item_gem_id(::google::protobuf::uint32 value);
  
  // required uint32 attr_key = 3;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);
  
  // required uint32 attr_value = 4;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_value() const;
  inline void set_attr_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_min_v = 5;
  inline bool has_attr_min_v() const;
  inline void clear_attr_min_v();
  static const int kAttrMinVFieldNumber = 5;
  inline ::google::protobuf::uint32 attr_min_v() const;
  inline void set_attr_min_v(::google::protobuf::uint32 value);
  
  // optional uint32 attr_max_v = 6;
  inline bool has_attr_max_v() const;
  inline void clear_attr_max_v();
  static const int kAttrMaxVFieldNumber = 6;
  inline ::google::protobuf::uint32 attr_max_v() const;
  inline void set_attr_max_v(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipHole)
 private:
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  inline void set_has_item_gem_id();
  inline void clear_has_item_gem_id();
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();
  inline void set_has_attr_min_v();
  inline void clear_has_attr_min_v();
  inline void set_has_attr_max_v();
  inline void clear_has_attr_max_v();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hole_index_;
  ::google::protobuf::uint32 item_gem_id_;
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_value_;
  ::google::protobuf::uint32 attr_min_v_;
  ::google::protobuf::uint32 attr_max_v_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipHole* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase_Item_Attr : public ::google::protobuf::Message {
 public:
  EquipmentBase_Item_Attr();
  virtual ~EquipmentBase_Item_Attr();
  
  EquipmentBase_Item_Attr(const EquipmentBase_Item_Attr& from);
  
  inline EquipmentBase_Item_Attr& operator=(const EquipmentBase_Item_Attr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase_Item_Attr& default_instance();
  
  void Swap(EquipmentBase_Item_Attr* other);
  
  // implements Message ----------------------------------------------
  
  EquipmentBase_Item_Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase_Item_Attr& from);
  void MergeFrom(const EquipmentBase_Item_Attr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:EquipmentBase.Item_Attr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static EquipmentBase_Item_Attr* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase : public ::google::protobuf::Message {
 public:
  EquipmentBase();
  virtual ~EquipmentBase();
  
  EquipmentBase(const EquipmentBase& from);
  
  inline EquipmentBase& operator=(const EquipmentBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase& default_instance();
  
  void Swap(EquipmentBase* other);
  
  // implements Message ----------------------------------------------
  
  EquipmentBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase& from);
  void MergeFrom(const EquipmentBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef EquipmentBase_Item_Attr Item_Attr;
  
  // accessors -------------------------------------------------------
  
  // required uint32 cost_levelup = 1;
  inline bool has_cost_levelup() const;
  inline void clear_cost_levelup();
  static const int kCostLevelupFieldNumber = 1;
  inline ::google::protobuf::uint32 cost_levelup() const;
  inline void set_cost_levelup(::google::protobuf::uint32 value);
  
  // repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
  inline int incr_attr_next_lv_size() const;
  inline void clear_incr_attr_next_lv();
  static const int kIncrAttrNextLvFieldNumber = 2;
  inline const ::EquipmentBase_Item_Attr& incr_attr_next_lv(int index) const;
  inline ::EquipmentBase_Item_Attr* mutable_incr_attr_next_lv(int index);
  inline ::EquipmentBase_Item_Attr* add_incr_attr_next_lv();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
      incr_attr_next_lv() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
      mutable_incr_attr_next_lv();
  
  // repeated .CSEquipHole equip_holes = 3;
  inline int equip_holes_size() const;
  inline void clear_equip_holes();
  static const int kEquipHolesFieldNumber = 3;
  inline const ::CSEquipHole& equip_holes(int index) const;
  inline ::CSEquipHole* mutable_equip_holes(int index);
  inline ::CSEquipHole* add_equip_holes();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
      equip_holes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
      mutable_equip_holes();
  
  // repeated uint32 rel_ids = 4;
  inline int rel_ids_size() const;
  inline void clear_rel_ids();
  static const int kRelIdsFieldNumber = 4;
  inline ::google::protobuf::uint32 rel_ids(int index) const;
  inline void set_rel_ids(int index, ::google::protobuf::uint32 value);
  inline void add_rel_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rel_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rel_ids();
  
  // @@protoc_insertion_point(class_scope:EquipmentBase)
 private:
  inline void set_has_cost_levelup();
  inline void clear_has_cost_levelup();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr > incr_attr_next_lv_;
  ::google::protobuf::RepeatedPtrField< ::CSEquipHole > equip_holes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rel_ids_;
  ::google::protobuf::uint32 cost_levelup_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static EquipmentBase* default_instance_;
};
// -------------------------------------------------------------------

class SpiritStoneBase : public ::google::protobuf::Message {
 public:
  SpiritStoneBase();
  virtual ~SpiritStoneBase();
  
  SpiritStoneBase(const SpiritStoneBase& from);
  
  inline SpiritStoneBase& operator=(const SpiritStoneBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritStoneBase& default_instance();
  
  void Swap(SpiritStoneBase* other);
  
  // implements Message ----------------------------------------------
  
  SpiritStoneBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritStoneBase& from);
  void MergeFrom(const SpiritStoneBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 consume = 1;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 1;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);
  
  // required uint32 convert = 2;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 2;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:SpiritStoneBase)
 private:
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static SpiritStoneBase* default_instance_;
};
// -------------------------------------------------------------------

class ManorBase : public ::google::protobuf::Message {
 public:
  ManorBase();
  virtual ~ManorBase();
  
  ManorBase(const ManorBase& from);
  
  inline ManorBase& operator=(const ManorBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorBase& default_instance();
  
  void Swap(ManorBase* other);
  
  // implements Message ----------------------------------------------
  
  ManorBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorBase& from);
  void MergeFrom(const ManorBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hunt_gain_coin = 1;
  inline bool has_hunt_gain_coin() const;
  inline void clear_hunt_gain_coin();
  static const int kHuntGainCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 hunt_gain_coin() const;
  inline void set_hunt_gain_coin(::google::protobuf::uint32 value);
  
  // required uint32 pick_gain_exp = 2;
  inline bool has_pick_gain_exp() const;
  inline void clear_pick_gain_exp();
  static const int kPickGainExpFieldNumber = 2;
  inline ::google::protobuf::uint32 pick_gain_exp() const;
  inline void set_pick_gain_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ManorBase)
 private:
  inline void set_has_hunt_gain_coin();
  inline void clear_has_hunt_gain_coin();
  inline void set_has_pick_gain_exp();
  inline void clear_has_pick_gain_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hunt_gain_coin_;
  ::google::protobuf::uint32 pick_gain_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ManorBase* default_instance_;
};
// -------------------------------------------------------------------

class CSItemInfo : public ::google::protobuf::Message {
 public:
  CSItemInfo();
  virtual ~CSItemInfo();
  
  CSItemInfo(const CSItemInfo& from);
  
  inline CSItemInfo& operator=(const CSItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemInfo& default_instance();
  
  void Swap(CSItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemInfo& from);
  void MergeFrom(const CSItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // optional uint32 item_level = 4;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // repeated .CSItemAttr item_attrs = 5;
  inline int item_attrs_size() const;
  inline void clear_item_attrs();
  static const int kItemAttrsFieldNumber = 5;
  inline const ::CSItemAttr& item_attrs(int index) const;
  inline ::CSItemAttr* mutable_item_attrs(int index);
  inline ::CSItemAttr* add_item_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
      item_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
      mutable_item_attrs();
  
  // optional .EquipmentBase equip_info = 6;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 6;
  inline const ::EquipmentBase& equip_info() const;
  inline ::EquipmentBase* mutable_equip_info();
  inline ::EquipmentBase* release_equip_info();
  
  // optional .SpiritStoneBase ss_info = 7;
  inline bool has_ss_info() const;
  inline void clear_ss_info();
  static const int kSsInfoFieldNumber = 7;
  inline const ::SpiritStoneBase& ss_info() const;
  inline ::SpiritStoneBase* mutable_ss_info();
  inline ::SpiritStoneBase* release_ss_info();
  
  // optional .ManorBase manor_info = 8;
  inline bool has_manor_info() const;
  inline void clear_manor_info();
  static const int kManorInfoFieldNumber = 8;
  inline const ::ManorBase& manor_info() const;
  inline ::ManorBase* mutable_manor_info();
  inline ::ManorBase* release_manor_info();
  
  // optional uint32 item_dead_tm = 9 [default = 2147483647];
  inline bool has_item_dead_tm() const;
  inline void clear_item_dead_tm();
  static const int kItemDeadTmFieldNumber = 9;
  inline ::google::protobuf::uint32 item_dead_tm() const;
  inline void set_item_dead_tm(::google::protobuf::uint32 value);
  
  // optional uint32 item_op_flag = 10 [default = 100];
  inline bool has_item_op_flag() const;
  inline void clear_item_op_flag();
  static const int kItemOpFlagFieldNumber = 10;
  inline ::google::protobuf::uint32 item_op_flag() const;
  inline void set_item_op_flag(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_equip_info();
  inline void clear_has_equip_info();
  inline void set_has_ss_info();
  inline void clear_has_ss_info();
  inline void set_has_manor_info();
  inline void clear_has_manor_info();
  inline void set_has_item_dead_tm();
  inline void clear_has_item_dead_tm();
  inline void set_has_item_op_flag();
  inline void clear_has_item_op_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::RepeatedPtrField< ::CSItemAttr > item_attrs_;
  ::EquipmentBase* equip_info_;
  ::SpiritStoneBase* ss_info_;
  ::ManorBase* manor_info_;
  ::google::protobuf::uint32 item_dead_tm_;
  ::google::protobuf::uint32 item_op_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsReq : public ::google::protobuf::Message {
 public:
  CSAllItemsReq();
  virtual ~CSAllItemsReq();
  
  CSAllItemsReq(const CSAllItemsReq& from);
  
  inline CSAllItemsReq& operator=(const CSAllItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsReq& default_instance();
  
  void Swap(CSAllItemsReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAllItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsReq& from);
  void MergeFrom(const CSAllItemsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAllItemsReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAllItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsRsp : public ::google::protobuf::Message {
 public:
  CSAllItemsRsp();
  virtual ~CSAllItemsRsp();
  
  CSAllItemsRsp(const CSAllItemsRsp& from);
  
  inline CSAllItemsRsp& operator=(const CSAllItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsRsp& default_instance();
  
  void Swap(CSAllItemsRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAllItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsRsp& from);
  void MergeFrom(const CSAllItemsRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 def_bag_size = 1;
  inline bool has_def_bag_size() const;
  inline void clear_def_bag_size();
  static const int kDefBagSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 def_bag_size() const;
  inline void set_def_bag_size(::google::protobuf::uint32 value);
  
  // required uint32 def_store_size = 2;
  inline bool has_def_store_size() const;
  inline void clear_def_store_size();
  static const int kDefStoreSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 def_store_size() const;
  inline void set_def_store_size(::google::protobuf::uint32 value);
  
  // required uint32 def_ss_bag_size = 3;
  inline bool has_def_ss_bag_size() const;
  inline void clear_def_ss_bag_size();
  static const int kDefSsBagSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 def_ss_bag_size() const;
  inline void set_def_ss_bag_size(::google::protobuf::uint32 value);
  
  // required uint32 def_ss_store_size = 4;
  inline bool has_def_ss_store_size() const;
  inline void clear_def_ss_store_size();
  static const int kDefSsStoreSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 def_ss_store_size() const;
  inline void set_def_ss_store_size(::google::protobuf::uint32 value);
  
  // required uint32 def_equip_lvup_max_cd_time = 5;
  inline bool has_def_equip_lvup_max_cd_time() const;
  inline void clear_def_equip_lvup_max_cd_time();
  static const int kDefEquipLvupMaxCdTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 def_equip_lvup_max_cd_time() const;
  inline void set_def_equip_lvup_max_cd_time(::google::protobuf::uint32 value);
  
  // repeated .CSItemInfo items = 15;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 15;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSAllItemsRsp)
 private:
  inline void set_has_def_bag_size();
  inline void clear_has_def_bag_size();
  inline void set_has_def_store_size();
  inline void clear_has_def_store_size();
  inline void set_has_def_ss_bag_size();
  inline void clear_has_def_ss_bag_size();
  inline void set_has_def_ss_store_size();
  inline void clear_has_def_ss_store_size();
  inline void set_has_def_equip_lvup_max_cd_time();
  inline void clear_has_def_equip_lvup_max_cd_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 def_bag_size_;
  ::google::protobuf::uint32 def_store_size_;
  ::google::protobuf::uint32 def_ss_bag_size_;
  ::google::protobuf::uint32 def_ss_store_size_;
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 def_equip_lvup_max_cd_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAllItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAddRsp : public ::google::protobuf::Message {
 public:
  CSItemAddRsp();
  virtual ~CSItemAddRsp();
  
  CSItemAddRsp(const CSItemAddRsp& from);
  
  inline CSItemAddRsp& operator=(const CSItemAddRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAddRsp& default_instance();
  
  void Swap(CSItemAddRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemAddRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAddRsp& from);
  void MergeFrom(const CSItemAddRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSItemAddRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemAddRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveReq : public ::google::protobuf::Message {
 public:
  CSItemRemoveReq();
  virtual ~CSItemRemoveReq();
  
  CSItemRemoveReq(const CSItemRemoveReq& from);
  
  inline CSItemRemoveReq& operator=(const CSItemRemoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveReq& default_instance();
  
  void Swap(CSItemRemoveReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemRemoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveReq& from);
  void MergeFrom(const CSItemRemoveReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemRemoveReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemRemoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveRsp : public ::google::protobuf::Message {
 public:
  CSItemRemoveRsp();
  virtual ~CSItemRemoveRsp();
  
  CSItemRemoveRsp(const CSItemRemoveRsp& from);
  
  inline CSItemRemoveRsp& operator=(const CSItemRemoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveRsp& default_instance();
  
  void Swap(CSItemRemoveRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemRemoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveRsp& from);
  void MergeFrom(const CSItemRemoveRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemRemoveRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemRemoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseReq : public ::google::protobuf::Message {
 public:
  CSItemUseReq();
  virtual ~CSItemUseReq();
  
  CSItemUseReq(const CSItemUseReq& from);
  
  inline CSItemUseReq& operator=(const CSItemUseReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseReq& default_instance();
  
  void Swap(CSItemUseReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseReq& from);
  void MergeFrom(const CSItemUseReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 num = 3 [default = 1];
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemUseReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUseReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseRsp_Item : public ::google::protobuf::Message {
 public:
  CSItemUseRsp_Item();
  virtual ~CSItemUseRsp_Item();
  
  CSItemUseRsp_Item(const CSItemUseRsp_Item& from);
  
  inline CSItemUseRsp_Item& operator=(const CSItemUseRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseRsp_Item& default_instance();
  
  void Swap(CSItemUseRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUseRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseRsp_Item& from);
  void MergeFrom(const CSItemUseRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemUseRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUseRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseRsp : public ::google::protobuf::Message {
 public:
  CSItemUseRsp();
  virtual ~CSItemUseRsp();
  
  CSItemUseRsp(const CSItemUseRsp& from);
  
  inline CSItemUseRsp& operator=(const CSItemUseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseRsp& default_instance();
  
  void Swap(CSItemUseRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseRsp& from);
  void MergeFrom(const CSItemUseRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSItemUseRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // repeated .CSItemUseRsp.Item to_items = 2;
  inline int to_items_size() const;
  inline void clear_to_items();
  static const int kToItemsFieldNumber = 2;
  inline const ::CSItemUseRsp_Item& to_items(int index) const;
  inline ::CSItemUseRsp_Item* mutable_to_items(int index);
  inline ::CSItemUseRsp_Item* add_to_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemUseRsp_Item >&
      to_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemUseRsp_Item >*
      mutable_to_items();
  
  // @@protoc_insertion_point(class_scope:CSItemUseRsp)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSItemUseRsp_Item > to_items_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUseRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveReq : public ::google::protobuf::Message {
 public:
  CSItemMoveReq();
  virtual ~CSItemMoveReq();
  
  CSItemMoveReq(const CSItemMoveReq& from);
  
  inline CSItemMoveReq& operator=(const CSItemMoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveReq& default_instance();
  
  void Swap(CSItemMoveReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveReq& from);
  void MergeFrom(const CSItemMoveReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);
  
  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveReq)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveRsp : public ::google::protobuf::Message {
 public:
  CSItemMoveRsp();
  virtual ~CSItemMoveRsp();
  
  CSItemMoveRsp(const CSItemMoveRsp& from);
  
  inline CSItemMoveRsp& operator=(const CSItemMoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveRsp& default_instance();
  
  void Swap(CSItemMoveRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveRsp& from);
  void MergeFrom(const CSItemMoveRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);
  
  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveRsp)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUpdateRsp : public ::google::protobuf::Message {
 public:
  CSItemUpdateRsp();
  virtual ~CSItemUpdateRsp();
  
  CSItemUpdateRsp(const CSItemUpdateRsp& from);
  
  inline CSItemUpdateRsp& operator=(const CSItemUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUpdateRsp& default_instance();
  
  void Swap(CSItemUpdateRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUpdateRsp& from);
  void MergeFrom(const CSItemUpdateRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSItemInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::CSItemInfo& item(int index) const;
  inline ::CSItemInfo* mutable_item(int index);
  inline ::CSItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_item();
  
  // @@protoc_insertion_point(class_scope:CSItemUpdateRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemOrderReq : public ::google::protobuf::Message {
 public:
  CSItemOrderReq();
  virtual ~CSItemOrderReq();
  
  CSItemOrderReq(const CSItemOrderReq& from);
  
  inline CSItemOrderReq& operator=(const CSItemOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemOrderReq& default_instance();
  
  void Swap(CSItemOrderReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemOrderReq& from);
  void MergeFrom(const CSItemOrderReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemOrderReq)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveToRecycleBinReq : public ::google::protobuf::Message {
 public:
  CSItemMoveToRecycleBinReq();
  virtual ~CSItemMoveToRecycleBinReq();
  
  CSItemMoveToRecycleBinReq(const CSItemMoveToRecycleBinReq& from);
  
  inline CSItemMoveToRecycleBinReq& operator=(const CSItemMoveToRecycleBinReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveToRecycleBinReq& default_instance();
  
  void Swap(CSItemMoveToRecycleBinReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveToRecycleBinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveToRecycleBinReq& from);
  void MergeFrom(const CSItemMoveToRecycleBinReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveToRecycleBinReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveToRecycleBinReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveToRecycleBinRsp : public ::google::protobuf::Message {
 public:
  CSItemMoveToRecycleBinRsp();
  virtual ~CSItemMoveToRecycleBinRsp();
  
  CSItemMoveToRecycleBinRsp(const CSItemMoveToRecycleBinRsp& from);
  
  inline CSItemMoveToRecycleBinRsp& operator=(const CSItemMoveToRecycleBinRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveToRecycleBinRsp& default_instance();
  
  void Swap(CSItemMoveToRecycleBinRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveToRecycleBinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveToRecycleBinRsp& from);
  void MergeFrom(const CSItemMoveToRecycleBinRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveToRecycleBinRsp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveToRecycleBinRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSRepoRecycleBinItemReq : public ::google::protobuf::Message {
 public:
  CSRepoRecycleBinItemReq();
  virtual ~CSRepoRecycleBinItemReq();
  
  CSRepoRecycleBinItemReq(const CSRepoRecycleBinItemReq& from);
  
  inline CSRepoRecycleBinItemReq& operator=(const CSRepoRecycleBinItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRepoRecycleBinItemReq& default_instance();
  
  void Swap(CSRepoRecycleBinItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRepoRecycleBinItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRepoRecycleBinItemReq& from);
  void MergeFrom(const CSRepoRecycleBinItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRepoRecycleBinItemReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRepoRecycleBinItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRepoRecycleBinItemRsp : public ::google::protobuf::Message {
 public:
  CSRepoRecycleBinItemRsp();
  virtual ~CSRepoRecycleBinItemRsp();
  
  CSRepoRecycleBinItemRsp(const CSRepoRecycleBinItemRsp& from);
  
  inline CSRepoRecycleBinItemRsp& operator=(const CSRepoRecycleBinItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRepoRecycleBinItemRsp& default_instance();
  
  void Swap(CSRepoRecycleBinItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRepoRecycleBinItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRepoRecycleBinItemRsp& from);
  void MergeFrom(const CSRepoRecycleBinItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRepoRecycleBinItemRsp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRepoRecycleBinItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceInfo : public ::google::protobuf::Message {
 public:
  CSInstanceInfo();
  virtual ~CSInstanceInfo();
  
  CSInstanceInfo(const CSInstanceInfo& from);
  
  inline CSInstanceInfo& operator=(const CSInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceInfo& default_instance();
  
  void Swap(CSInstanceInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceInfo& from);
  void MergeFrom(const CSInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
  // required bool can_enter_flag = 3;
  inline bool has_can_enter_flag() const;
  inline void clear_can_enter_flag();
  static const int kCanEnterFlagFieldNumber = 3;
  inline bool can_enter_flag() const;
  inline void set_can_enter_flag(bool value);
  
  // required uint32 refresh_times = 4;
  inline bool has_refresh_times() const;
  inline void clear_refresh_times();
  static const int kRefreshTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 refresh_times() const;
  inline void set_refresh_times(::google::protobuf::uint32 value);
  
  // optional uint32 btl_times = 5;
  inline bool has_btl_times() const;
  inline void clear_btl_times();
  static const int kBtlTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 btl_times() const;
  inline void set_btl_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceInfo)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_can_enter_flag();
  inline void clear_has_can_enter_flag();
  inline void set_has_refresh_times();
  inline void clear_has_refresh_times();
  inline void set_has_btl_times();
  inline void clear_has_btl_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_id_;
  ::google::protobuf::uint32 star_;
  bool can_enter_flag_;
  ::google::protobuf::uint32 refresh_times_;
  ::google::protobuf::uint32 btl_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceReq : public ::google::protobuf::Message {
 public:
  CSInstanceReq();
  virtual ~CSInstanceReq();
  
  CSInstanceReq(const CSInstanceReq& from);
  
  inline CSInstanceReq& operator=(const CSInstanceReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceReq& default_instance();
  
  void Swap(CSInstanceReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceReq& from);
  void MergeFrom(const CSInstanceReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 start = 1;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 1;
  inline ::google::protobuf::uint32 start() const;
  inline void set_start(::google::protobuf::uint32 value);
  
  // required uint32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceReq)
 private:
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_end();
  inline void clear_has_end();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 end_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceRsp : public ::google::protobuf::Message {
 public:
  CSInstanceRsp();
  virtual ~CSInstanceRsp();
  
  CSInstanceRsp(const CSInstanceRsp& from);
  
  inline CSInstanceRsp& operator=(const CSInstanceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceRsp& default_instance();
  
  void Swap(CSInstanceRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceRsp& from);
  void MergeFrom(const CSInstanceRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSInstanceInfo new_instances = 1;
  inline int new_instances_size() const;
  inline void clear_new_instances();
  static const int kNewInstancesFieldNumber = 1;
  inline const ::CSInstanceInfo& new_instances(int index) const;
  inline ::CSInstanceInfo* mutable_new_instances(int index);
  inline ::CSInstanceInfo* add_new_instances();
  inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >&
      new_instances() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >*
      mutable_new_instances();
  
  // @@protoc_insertion_point(class_scope:CSInstanceRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo > new_instances_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUGCityBoxRewardReq : public ::google::protobuf::Message {
 public:
  CSGetUGCityBoxRewardReq();
  virtual ~CSGetUGCityBoxRewardReq();
  
  CSGetUGCityBoxRewardReq(const CSGetUGCityBoxRewardReq& from);
  
  inline CSGetUGCityBoxRewardReq& operator=(const CSGetUGCityBoxRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUGCityBoxRewardReq& default_instance();
  
  void Swap(CSGetUGCityBoxRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUGCityBoxRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUGCityBoxRewardReq& from);
  void MergeFrom(const CSGetUGCityBoxRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUGCityBoxRewardReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUGCityBoxRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUGCityBoxRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetUGCityBoxRewardRsp();
  virtual ~CSGetUGCityBoxRewardRsp();
  
  CSGetUGCityBoxRewardRsp(const CSGetUGCityBoxRewardRsp& from);
  
  inline CSGetUGCityBoxRewardRsp& operator=(const CSGetUGCityBoxRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUGCityBoxRewardRsp& default_instance();
  
  void Swap(CSGetUGCityBoxRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUGCityBoxRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUGCityBoxRewardRsp& from);
  void MergeFrom(const CSGetUGCityBoxRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional .CSReward reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSGetUGCityBoxRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 index_;
  ::CSReward* reward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUGCityBoxRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSReward_RewardInfo : public ::google::protobuf::Message {
 public:
  CSReward_RewardInfo();
  virtual ~CSReward_RewardInfo();
  
  CSReward_RewardInfo(const CSReward_RewardInfo& from);
  
  inline CSReward_RewardInfo& operator=(const CSReward_RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward_RewardInfo& default_instance();
  
  void Swap(CSReward_RewardInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSReward_RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward_RewardInfo& from);
  void MergeFrom(const CSReward_RewardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_level = 2;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSReward.RewardInfo)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSReward_RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSReward : public ::google::protobuf::Message {
 public:
  CSReward();
  virtual ~CSReward();
  
  CSReward(const CSReward& from);
  
  inline CSReward& operator=(const CSReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward& default_instance();
  
  void Swap(CSReward* other);
  
  // implements Message ----------------------------------------------
  
  CSReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward& from);
  void MergeFrom(const CSReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSReward_RewardInfo RewardInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSReward.RewardInfo rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::CSReward_RewardInfo& rewards(int index) const;
  inline ::CSReward_RewardInfo* mutable_rewards(int index);
  inline ::CSReward_RewardInfo* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
      mutable_rewards();
  
  // optional uint32 add_coin = 2;
  inline bool has_add_coin() const;
  inline void clear_add_coin();
  static const int kAddCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 add_coin() const;
  inline void set_add_coin(::google::protobuf::uint32 value);
  
  // optional uint32 add_exp = 3;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::uint32 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint32 value);
  
  // optional uint32 add_exploit = 4;
  inline bool has_add_exploit() const;
  inline void clear_add_exploit();
  static const int kAddExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 add_exploit() const;
  inline void set_add_exploit(::google::protobuf::uint32 value);
  
  // optional uint32 add_diamond = 5;
  inline bool has_add_diamond() const;
  inline void clear_add_diamond();
  static const int kAddDiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 add_diamond() const;
  inline void set_add_diamond(::google::protobuf::uint32 value);
  
  // optional uint32 add_phase_exp = 6;
  inline bool has_add_phase_exp() const;
  inline void clear_add_phase_exp();
  static const int kAddPhaseExpFieldNumber = 6;
  inline ::google::protobuf::uint32 add_phase_exp() const;
  inline void set_add_phase_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSReward)
 private:
  inline void set_has_add_coin();
  inline void clear_has_add_coin();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_add_exploit();
  inline void clear_has_add_exploit();
  inline void set_has_add_diamond();
  inline void clear_has_add_diamond();
  inline void set_has_add_phase_exp();
  inline void clear_has_add_phase_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo > rewards_;
  ::google::protobuf::uint32 add_coin_;
  ::google::protobuf::uint32 add_exp_;
  ::google::protobuf::uint32 add_exploit_;
  ::google::protobuf::uint32 add_diamond_;
  ::google::protobuf::uint32 add_phase_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSReward* default_instance_;
};
// -------------------------------------------------------------------

class CSLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSLevelUpRsp();
  virtual ~CSLevelUpRsp();
  
  CSLevelUpRsp(const CSLevelUpRsp& from);
  
  inline CSLevelUpRsp& operator=(const CSLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLevelUpRsp& default_instance();
  
  void Swap(CSLevelUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLevelUpRsp& from);
  void MergeFrom(const CSLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSLevelUpRsp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBasicUserBattleInfoRsp : public ::google::protobuf::Message {
 public:
  CSBasicUserBattleInfoRsp();
  virtual ~CSBasicUserBattleInfoRsp();
  
  CSBasicUserBattleInfoRsp(const CSBasicUserBattleInfoRsp& from);
  
  inline CSBasicUserBattleInfoRsp& operator=(const CSBasicUserBattleInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBasicUserBattleInfoRsp& default_instance();
  
  void Swap(CSBasicUserBattleInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSBasicUserBattleInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBasicUserBattleInfoRsp& from);
  void MergeFrom(const CSBasicUserBattleInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .BasicUserBattleInfo battle_info = 4;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 4;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // @@protoc_insertion_point(class_scope:CSBasicUserBattleInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 reg_time_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBasicUserBattleInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneReq : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneReq();
  virtual ~CSSearchSpiritStoneReq();
  
  CSSearchSpiritStoneReq(const CSSearchSpiritStoneReq& from);
  
  inline CSSearchSpiritStoneReq& operator=(const CSSearchSpiritStoneReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneReq& default_instance();
  
  void Swap(CSSearchSpiritStoneReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchSpiritStoneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneReq& from);
  void MergeFrom(const CSSearchSpiritStoneReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchSpiritStoneReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneRsp : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneRsp();
  virtual ~CSSearchSpiritStoneRsp();
  
  CSSearchSpiritStoneRsp(const CSSearchSpiritStoneRsp& from);
  
  inline CSSearchSpiritStoneRsp& operator=(const CSSearchSpiritStoneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneRsp& default_instance();
  
  void Swap(CSSearchSpiritStoneRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchSpiritStoneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneRsp& from);
  void MergeFrom(const CSSearchSpiritStoneRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 cost_coin = 2;
  inline bool has_cost_coin() const;
  inline void clear_cost_coin();
  static const int kCostCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 cost_coin() const;
  inline void set_cost_coin(::google::protobuf::uint32 value);
  
  // optional uint32 mon_id = 3;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cost_coin();
  inline void clear_has_cost_coin();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 cost_coin_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchSpiritStoneRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagReq();
  virtual ~CSSpiritStoneMoveBagReq();
  
  CSSpiritStoneMoveBagReq(const CSSpiritStoneMoveBagReq& from);
  
  inline CSSpiritStoneMoveBagReq& operator=(const CSSpiritStoneMoveBagReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagReq& default_instance();
  
  void Swap(CSSpiritStoneMoveBagReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneMoveBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagReq& from);
  void MergeFrom(const CSSpiritStoneMoveBagReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagRsp();
  virtual ~CSSpiritStoneMoveBagRsp();
  
  CSSpiritStoneMoveBagRsp(const CSSpiritStoneMoveBagRsp& from);
  
  inline CSSpiritStoneMoveBagRsp& operator=(const CSSpiritStoneMoveBagRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagRsp& default_instance();
  
  void Swap(CSSpiritStoneMoveBagRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneMoveBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagRsp& from);
  void MergeFrom(const CSSpiritStoneMoveBagRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpReq();
  virtual ~CSSpiritStoneLevelUpReq();
  
  CSSpiritStoneLevelUpReq(const CSSpiritStoneLevelUpReq& from);
  
  inline CSSpiritStoneLevelUpReq& operator=(const CSSpiritStoneLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpReq& default_instance();
  
  void Swap(CSSpiritStoneLevelUpReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpReq& from);
  void MergeFrom(const CSSpiritStoneLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpRsp();
  virtual ~CSSpiritStoneLevelUpRsp();
  
  CSSpiritStoneLevelUpRsp(const CSSpiritStoneLevelUpRsp& from);
  
  inline CSSpiritStoneLevelUpRsp& operator=(const CSSpiritStoneLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpRsp& default_instance();
  
  void Swap(CSSpiritStoneLevelUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpRsp& from);
  void MergeFrom(const CSSpiritStoneLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 cost_sp = 3;
  inline bool has_cost_sp() const;
  inline void clear_cost_sp();
  static const int kCostSpFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_sp() const;
  inline void set_cost_sp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cost_sp();
  inline void clear_has_cost_sp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 cost_sp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPReq();
  virtual ~CSSpiritStoneToSPReq();
  
  CSSpiritStoneToSPReq(const CSSpiritStoneToSPReq& from);
  
  inline CSSpiritStoneToSPReq& operator=(const CSSpiritStoneToSPReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPReq& default_instance();
  
  void Swap(CSSpiritStoneToSPReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneToSPReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPReq& from);
  void MergeFrom(const CSSpiritStoneToSPReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneToSPReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPRsp();
  virtual ~CSSpiritStoneToSPRsp();
  
  CSSpiritStoneToSPRsp(const CSSpiritStoneToSPRsp& from);
  
  inline CSSpiritStoneToSPRsp& operator=(const CSSpiritStoneToSPRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPRsp& default_instance();
  
  void Swap(CSSpiritStoneToSPRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneToSPRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPRsp& from);
  void MergeFrom(const CSSpiritStoneToSPRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 sp_key = 2;
  inline bool has_sp_key() const;
  inline void clear_sp_key();
  static const int kSpKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 sp_key() const;
  inline void set_sp_key(::google::protobuf::uint32 value);
  
  // optional uint32 sp_value = 3;
  inline bool has_sp_value() const;
  inline void clear_sp_value();
  static const int kSpValueFieldNumber = 3;
  inline ::google::protobuf::uint32 sp_value() const;
  inline void set_sp_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sp_key();
  inline void clear_has_sp_key();
  inline void set_has_sp_value();
  inline void clear_has_sp_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 sp_key_;
  ::google::protobuf::uint32 sp_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneToSPRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoReq : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoReq();
  virtual ~CSGetExchangeSSInfoReq();
  
  CSGetExchangeSSInfoReq(const CSGetExchangeSSInfoReq& from);
  
  inline CSGetExchangeSSInfoReq& operator=(const CSGetExchangeSSInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoReq& default_instance();
  
  void Swap(CSGetExchangeSSInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExchangeSSInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoReq& from);
  void MergeFrom(const CSGetExchangeSSInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeSSInfo : public ::google::protobuf::Message {
 public:
  ExchangeSSInfo();
  virtual ~ExchangeSSInfo();
  
  ExchangeSSInfo(const ExchangeSSInfo& from);
  
  inline ExchangeSSInfo& operator=(const ExchangeSSInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeSSInfo& default_instance();
  
  void Swap(ExchangeSSInfo* other);
  
  // implements Message ----------------------------------------------
  
  ExchangeSSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeSSInfo& from);
  void MergeFrom(const ExchangeSSInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ss_id = 1;
  inline bool has_ss_id() const;
  inline void clear_ss_id();
  static const int kSsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ss_id() const;
  inline void set_ss_id(::google::protobuf::uint32 value);
  
  // required uint32 consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);
  
  // required uint32 convert = 3;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 3;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);
  
  // required uint32 need_chip = 4;
  inline bool has_need_chip() const;
  inline void clear_need_chip();
  static const int kNeedChipFieldNumber = 4;
  inline ::google::protobuf::uint32 need_chip() const;
  inline void set_need_chip(::google::protobuf::uint32 value);
  
  // required uint32 key = 5;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 5;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ExchangeSSInfo)
 private:
  inline void set_has_ss_id();
  inline void clear_has_ss_id();
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();
  inline void set_has_need_chip();
  inline void clear_has_need_chip();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ss_id_;
  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;
  ::google::protobuf::uint32 need_chip_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ExchangeSSInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoRsp();
  virtual ~CSGetExchangeSSInfoRsp();
  
  CSGetExchangeSSInfoRsp(const CSGetExchangeSSInfoRsp& from);
  
  inline CSGetExchangeSSInfoRsp& operator=(const CSGetExchangeSSInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoRsp& default_instance();
  
  void Swap(CSGetExchangeSSInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExchangeSSInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoRsp& from);
  void MergeFrom(const CSGetExchangeSSInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ExchangeSSInfo ss_list = 1;
  inline int ss_list_size() const;
  inline void clear_ss_list();
  static const int kSsListFieldNumber = 1;
  inline const ::ExchangeSSInfo& ss_list(int index) const;
  inline ::ExchangeSSInfo* mutable_ss_list(int index);
  inline ::ExchangeSSInfo* add_ss_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
      ss_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
      mutable_ss_list();
  
  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo > ss_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorReq : public ::google::protobuf::Message {
 public:
  CSAddManorReq();
  virtual ~CSAddManorReq();
  
  CSAddManorReq(const CSAddManorReq& from);
  
  inline CSAddManorReq& operator=(const CSAddManorReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorReq& default_instance();
  
  void Swap(CSAddManorReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddManorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorReq& from);
  void MergeFrom(const CSAddManorReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 manor_id = 1;
  inline bool has_manor_id() const;
  inline void clear_manor_id();
  static const int kManorIdFieldNumber = 1;
  inline ::google::protobuf::uint32 manor_id() const;
  inline void set_manor_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddManorReq)
 private:
  inline void set_has_manor_id();
  inline void clear_has_manor_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manor_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddManorReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorRsp : public ::google::protobuf::Message {
 public:
  CSAddManorRsp();
  virtual ~CSAddManorRsp();
  
  CSAddManorRsp(const CSAddManorRsp& from);
  
  inline CSAddManorRsp& operator=(const CSAddManorRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorRsp& default_instance();
  
  void Swap(CSAddManorRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddManorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorRsp& from);
  void MergeFrom(const CSAddManorRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddManorRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddManorRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpReq : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpReq();
  virtual ~CSWarmSportLvUpReq();
  
  CSWarmSportLvUpReq(const CSWarmSportLvUpReq& from);
  
  inline CSWarmSportLvUpReq& operator=(const CSWarmSportLvUpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpReq& default_instance();
  
  void Swap(CSWarmSportLvUpReq* other);
  
  // implements Message ----------------------------------------------
  
  CSWarmSportLvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpReq& from);
  void MergeFrom(const CSWarmSportLvUpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional bool to_max_lv = 2 [default = false];
  inline bool has_to_max_lv() const;
  inline void clear_to_max_lv();
  static const int kToMaxLvFieldNumber = 2;
  inline bool to_max_lv() const;
  inline void set_to_max_lv(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_to_max_lv();
  inline void clear_has_to_max_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  bool to_max_lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWarmSportLvUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpRsp : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpRsp();
  virtual ~CSWarmSportLvUpRsp();
  
  CSWarmSportLvUpRsp(const CSWarmSportLvUpRsp& from);
  
  inline CSWarmSportLvUpRsp& operator=(const CSWarmSportLvUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpRsp& default_instance();
  
  void Swap(CSWarmSportLvUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSWarmSportLvUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpRsp& from);
  void MergeFrom(const CSWarmSportLvUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWarmSportLvUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptReq : public ::google::protobuf::Message {
 public:
  CSManorOptReq();
  virtual ~CSManorOptReq();
  
  CSManorOptReq(const CSManorOptReq& from);
  
  inline CSManorOptReq& operator=(const CSManorOptReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptReq& default_instance();
  
  void Swap(CSManorOptReq* other);
  
  // implements Message ----------------------------------------------
  
  CSManorOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptReq& from);
  void MergeFrom(const CSManorOptReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSManorOptReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSManorOptReq* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptRsp : public ::google::protobuf::Message {
 public:
  CSManorOptRsp();
  virtual ~CSManorOptRsp();
  
  CSManorOptRsp(const CSManorOptRsp& from);
  
  inline CSManorOptRsp& operator=(const CSManorOptRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptRsp& default_instance();
  
  void Swap(CSManorOptRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSManorOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptRsp& from);
  void MergeFrom(const CSManorOptRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSManorOptRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSManorOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListReq : public ::google::protobuf::Message {
 public:
  CSMonListReq();
  virtual ~CSMonListReq();
  
  CSMonListReq(const CSMonListReq& from);
  
  inline CSMonListReq& operator=(const CSMonListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListReq& default_instance();
  
  void Swap(CSMonListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMonListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListReq& from);
  void MergeFrom(const CSMonListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMonListReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMonListReq* default_instance_;
};
// -------------------------------------------------------------------

class MonInfo : public ::google::protobuf::Message {
 public:
  MonInfo();
  virtual ~MonInfo();
  
  MonInfo(const MonInfo& from);
  
  inline MonInfo& operator=(const MonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonInfo& default_instance();
  
  void Swap(MonInfo* other);
  
  // implements Message ----------------------------------------------
  
  MonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonInfo& from);
  void MergeFrom(const MonInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // optional uint32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional uint32 grade = 4;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 4;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:MonInfo)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static MonInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListRsp : public ::google::protobuf::Message {
 public:
  CSMonListRsp();
  virtual ~CSMonListRsp();
  
  CSMonListRsp(const CSMonListRsp& from);
  
  inline CSMonListRsp& operator=(const CSMonListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListRsp& default_instance();
  
  void Swap(CSMonListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMonListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListRsp& from);
  void MergeFrom(const CSMonListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .MonInfo mon_info = 4;
  inline int mon_info_size() const;
  inline void clear_mon_info();
  static const int kMonInfoFieldNumber = 4;
  inline const ::MonInfo& mon_info(int index) const;
  inline ::MonInfo* mutable_mon_info(int index);
  inline ::MonInfo* add_mon_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
      mon_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
      mutable_mon_info();
  
  // @@protoc_insertion_point(class_scope:CSMonListRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::MonInfo > mon_info_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMonListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusReq : public ::google::protobuf::Message {
 public:
  CSSetMonStatusReq();
  virtual ~CSSetMonStatusReq();
  
  CSSetMonStatusReq(const CSSetMonStatusReq& from);
  
  inline CSSetMonStatusReq& operator=(const CSSetMonStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusReq& default_instance();
  
  void Swap(CSSetMonStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMonStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusReq& from);
  void MergeFrom(const CSSetMonStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMonStatusReq)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMonStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusRsp : public ::google::protobuf::Message {
 public:
  CSSetMonStatusRsp();
  virtual ~CSSetMonStatusRsp();
  
  CSSetMonStatusRsp(const CSSetMonStatusRsp& from);
  
  inline CSSetMonStatusRsp& operator=(const CSSetMonStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusRsp& default_instance();
  
  void Swap(CSSetMonStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMonStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusRsp& from);
  void MergeFrom(const CSSetMonStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 mon_id = 2;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // optional uint32 mon_status = 3;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMonStatusRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMonStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomReq();
  virtual ~CSPVPQueryRoomReq();
  
  CSPVPQueryRoomReq(const CSPVPQueryRoomReq& from);
  
  inline CSPVPQueryRoomReq& operator=(const CSPVPQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomReq& default_instance();
  
  void Swap(CSPVPQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomReq& from);
  void MergeFrom(const CSPVPQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPRoomBase : public ::google::protobuf::Message {
 public:
  PVPRoomBase();
  virtual ~PVPRoomBase();
  
  PVPRoomBase(const PVPRoomBase& from);
  
  inline PVPRoomBase& operator=(const PVPRoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPRoomBase& default_instance();
  
  void Swap(PVPRoomBase* other);
  
  // implements Message ----------------------------------------------
  
  PVPRoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPRoomBase& from);
  void MergeFrom(const PVPRoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PVPRoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVPRoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomRsp();
  virtual ~CSPVPQueryRoomRsp();
  
  CSPVPQueryRoomRsp(const CSPVPQueryRoomRsp& from);
  
  inline CSPVPQueryRoomRsp& operator=(const CSPVPQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomRsp& default_instance();
  
  void Swap(CSPVPQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomRsp& from);
  void MergeFrom(const CSPVPQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PVPRoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVPRoomBase& rooms(int index) const;
  inline ::PVPRoomBase* mutable_rooms(int index);
  inline ::PVPRoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PVPRoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVPBaseInfoRsp();
  virtual ~CSPVPBaseInfoRsp();
  
  CSPVPBaseInfoRsp(const CSPVPBaseInfoRsp& from);
  
  inline CSPVPBaseInfoRsp& operator=(const CSPVPBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPBaseInfoRsp& default_instance();
  
  void Swap(CSPVPBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPBaseInfoRsp& from);
  void MergeFrom(const CSPVPBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 winning = 1;
  inline bool has_winning() const;
  inline void clear_winning();
  static const int kWinningFieldNumber = 1;
  inline ::google::protobuf::uint32 winning() const;
  inline void set_winning(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPBaseInfoRsp)
 private:
  inline void set_has_winning();
  inline void clear_has_winning();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 winning_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPCreateRoomReq();
  virtual ~CSPVPCreateRoomReq();
  
  CSPVPCreateRoomReq(const CSPVPCreateRoomReq& from);
  
  inline CSPVPCreateRoomReq& operator=(const CSPVPCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCreateRoomReq& default_instance();
  
  void Swap(CSPVPCreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCreateRoomReq& from);
  void MergeFrom(const CSPVPCreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPCreateRoomReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 top_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomReq();
  virtual ~CSPVPJoinRoomReq();
  
  CSPVPJoinRoomReq(const CSPVPJoinRoomReq& from);
  
  inline CSPVPJoinRoomReq& operator=(const CSPVPJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomReq& default_instance();
  
  void Swap(CSPVPJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomReq& from);
  void MergeFrom(const CSPVPJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPSeatBase : public ::google::protobuf::Message {
 public:
  PVPSeatBase();
  virtual ~PVPSeatBase();
  
  PVPSeatBase(const PVPSeatBase& from);
  
  inline PVPSeatBase& operator=(const PVPSeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPSeatBase& default_instance();
  
  void Swap(PVPSeatBase* other);
  
  // implements Message ----------------------------------------------
  
  PVPSeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPSeatBase& from);
  void MergeFrom(const PVPSeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // @@protoc_insertion_point(class_scope:PVPSeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVPSeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomRsp();
  virtual ~CSPVPJoinRoomRsp();
  
  CSPVPJoinRoomRsp(const CSPVPJoinRoomRsp& from);
  
  inline CSPVPJoinRoomRsp& operator=(const CSPVPJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomRsp& default_instance();
  
  void Swap(CSPVPJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomRsp& from);
  void MergeFrom(const CSPVPJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 3;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .PVPSeatBase seats = 4;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 4;
  inline const ::PVPSeatBase& seats(int index) const;
  inline ::PVPSeatBase* mutable_seats(int index);
  inline ::PVPSeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::PVPSeatBase > seats_;
  ::google::protobuf::uint32 top_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomReq();
  virtual ~CSPVPExitRoomReq();
  
  CSPVPExitRoomReq(const CSPVPExitRoomReq& from);
  
  inline CSPVPExitRoomReq& operator=(const CSPVPExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomReq& default_instance();
  
  void Swap(CSPVPExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomReq& from);
  void MergeFrom(const CSPVPExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomRsp();
  virtual ~CSPVPExitRoomRsp();
  
  CSPVPExitRoomRsp(const CSPVPExitRoomRsp& from);
  
  inline CSPVPExitRoomRsp& operator=(const CSPVPExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomRsp& default_instance();
  
  void Swap(CSPVPExitRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomRsp& from);
  void MergeFrom(const CSPVPExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPExitRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPCloseRoomRsp();
  virtual ~CSPVPCloseRoomRsp();
  
  CSPVPCloseRoomRsp(const CSPVPCloseRoomRsp& from);
  
  inline CSPVPCloseRoomRsp& operator=(const CSPVPCloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCloseRoomRsp& default_instance();
  
  void Swap(CSPVPCloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCloseRoomRsp& from);
  void MergeFrom(const CSPVPCloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPCloseRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPChangeSeatReq : public ::google::protobuf::Message {
 public:
  CSPVPChangeSeatReq();
  virtual ~CSPVPChangeSeatReq();
  
  CSPVPChangeSeatReq(const CSPVPChangeSeatReq& from);
  
  inline CSPVPChangeSeatReq& operator=(const CSPVPChangeSeatReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPChangeSeatReq& default_instance();
  
  void Swap(CSPVPChangeSeatReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPChangeSeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPChangeSeatReq& from);
  void MergeFrom(const CSPVPChangeSeatReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPChangeSeatReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPChangeSeatReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPReadyReq();
  virtual ~CSPVPReadyReq();
  
  CSPVPReadyReq(const CSPVPReadyReq& from);
  
  inline CSPVPReadyReq& operator=(const CSPVPReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPReadyReq& default_instance();
  
  void Swap(CSPVPReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPReadyReq& from);
  void MergeFrom(const CSPVPReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPCancelReadyReq();
  virtual ~CSPVPCancelReadyReq();
  
  CSPVPCancelReadyReq(const CSPVPCancelReadyReq& from);
  
  inline CSPVPCancelReadyReq& operator=(const CSPVPCancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCancelReadyReq& default_instance();
  
  void Swap(CSPVPCancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCancelReadyReq& from);
  void MergeFrom(const CSPVPCancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPCancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVPKickoffReq();
  virtual ~CSPVPKickoffReq();
  
  CSPVPKickoffReq(const CSPVPKickoffReq& from);
  
  inline CSPVPKickoffReq& operator=(const CSPVPKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffReq& default_instance();
  
  void Swap(CSPVPKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffReq& from);
  void MergeFrom(const CSPVPKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVPKickoffRsp();
  virtual ~CSPVPKickoffRsp();
  
  CSPVPKickoffRsp(const CSPVPKickoffRsp& from);
  
  inline CSPVPKickoffRsp& operator=(const CSPVPKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffRsp& default_instance();
  
  void Swap(CSPVPKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffRsp& from);
  void MergeFrom(const CSPVPKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartReq : public ::google::protobuf::Message {
 public:
  CSPVPStartReq();
  virtual ~CSPVPStartReq();
  
  CSPVPStartReq(const CSPVPStartReq& from);
  
  inline CSPVPStartReq& operator=(const CSPVPStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartReq& default_instance();
  
  void Swap(CSPVPStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartReq& from);
  void MergeFrom(const CSPVPStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartRsp : public ::google::protobuf::Message {
 public:
  CSPVPStartRsp();
  virtual ~CSPVPStartRsp();
  
  CSPVPStartRsp(const CSPVPStartRsp& from);
  
  inline CSPVPStartRsp& operator=(const CSPVPStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartRsp& default_instance();
  
  void Swap(CSPVPStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartRsp& from);
  void MergeFrom(const CSPVPStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleReq : public ::google::protobuf::Message {
 public:
  CSPPVEBattleReq();
  virtual ~CSPPVEBattleReq();
  
  CSPPVEBattleReq(const CSPPVEBattleReq& from);
  
  inline CSPPVEBattleReq& operator=(const CSPPVEBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleReq& default_instance();
  
  void Swap(CSPPVEBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPPVEBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleReq& from);
  void MergeFrom(const CSPPVEBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPPVEBattleReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPPVEBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleRsp : public ::google::protobuf::Message {
 public:
  CSPPVEBattleRsp();
  virtual ~CSPPVEBattleRsp();
  
  CSPPVEBattleRsp(const CSPPVEBattleRsp& from);
  
  inline CSPPVEBattleRsp& operator=(const CSPPVEBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleRsp& default_instance();
  
  void Swap(CSPPVEBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPPVEBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleRsp& from);
  void MergeFrom(const CSPPVEBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();
  
  // @@protoc_insertion_point(class_scope:CSPPVEBattleRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPPVEBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomReq();
  virtual ~CSPVEQueryRoomReq();
  
  CSPVEQueryRoomReq(const CSPVEQueryRoomReq& from);
  
  inline CSPVEQueryRoomReq& operator=(const CSPVEQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomReq& default_instance();
  
  void Swap(CSPVEQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomReq& from);
  void MergeFrom(const CSPVEQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVERoomBase : public ::google::protobuf::Message {
 public:
  PVERoomBase();
  virtual ~PVERoomBase();
  
  PVERoomBase(const PVERoomBase& from);
  
  inline PVERoomBase& operator=(const PVERoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVERoomBase& default_instance();
  
  void Swap(PVERoomBase* other);
  
  // implements Message ----------------------------------------------
  
  PVERoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVERoomBase& from);
  void MergeFrom(const PVERoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PVERoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVERoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomRsp();
  virtual ~CSPVEQueryRoomRsp();
  
  CSPVEQueryRoomRsp(const CSPVEQueryRoomRsp& from);
  
  inline CSPVEQueryRoomRsp& operator=(const CSPVEQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomRsp& default_instance();
  
  void Swap(CSPVEQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomRsp& from);
  void MergeFrom(const CSPVEQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PVERoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVERoomBase& rooms(int index) const;
  inline ::PVERoomBase* mutable_rooms(int index);
  inline ::PVERoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PVERoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVEBaseInfoRsp();
  virtual ~CSPVEBaseInfoRsp();
  
  CSPVEBaseInfoRsp(const CSPVEBaseInfoRsp& from);
  
  inline CSPVEBaseInfoRsp& operator=(const CSPVEBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEBaseInfoRsp& default_instance();
  
  void Swap(CSPVEBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEBaseInfoRsp& from);
  void MergeFrom(const CSPVEBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 countdown = 1;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 1;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEBaseInfoRsp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVECreateRoomReq();
  virtual ~CSPVECreateRoomReq();
  
  CSPVECreateRoomReq(const CSPVECreateRoomReq& from);
  
  inline CSPVECreateRoomReq& operator=(const CSPVECreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECreateRoomReq& default_instance();
  
  void Swap(CSPVECreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECreateRoomReq& from);
  void MergeFrom(const CSPVECreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 top_level = 1;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 battle_id = 2;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVECreateRoomReq)
 private:
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 battle_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomReq();
  virtual ~CSPVEJoinRoomReq();
  
  CSPVEJoinRoomReq(const CSPVEJoinRoomReq& from);
  
  inline CSPVEJoinRoomReq& operator=(const CSPVEJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomReq& default_instance();
  
  void Swap(CSPVEJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomReq& from);
  void MergeFrom(const CSPVEJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomFailureRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomFailureRsp();
  virtual ~CSPVEJoinRoomFailureRsp();
  
  CSPVEJoinRoomFailureRsp(const CSPVEJoinRoomFailureRsp& from);
  
  inline CSPVEJoinRoomFailureRsp& operator=(const CSPVEJoinRoomFailureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomFailureRsp& default_instance();
  
  void Swap(CSPVEJoinRoomFailureRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomFailureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomFailureRsp& from);
  void MergeFrom(const CSPVEJoinRoomFailureRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomFailureRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomFailureRsp* default_instance_;
};
// -------------------------------------------------------------------

class PVESeatBase : public ::google::protobuf::Message {
 public:
  PVESeatBase();
  virtual ~PVESeatBase();
  
  PVESeatBase(const PVESeatBase& from);
  
  inline PVESeatBase& operator=(const PVESeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVESeatBase& default_instance();
  
  void Swap(PVESeatBase* other);
  
  // implements Message ----------------------------------------------
  
  PVESeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVESeatBase& from);
  void MergeFrom(const PVESeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // optional uint32 userid = 6 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 6;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_time = 7 [default = 0];
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // optional uint32 channel_id = 8 [default = 0];
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 8;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bytes kakao_url = 9 [default = ""];
  inline bool has_kakao_url() const;
  inline void clear_kakao_url();
  static const int kKakaoUrlFieldNumber = 9;
  inline const ::std::string& kakao_url() const;
  inline void set_kakao_url(const ::std::string& value);
  inline void set_kakao_url(const char* value);
  inline void set_kakao_url(const void* value, size_t size);
  inline ::std::string* mutable_kakao_url();
  inline ::std::string* release_kakao_url();
  
  // optional uint32 effective = 10 [default = 0];
  inline bool has_effective() const;
  inline void clear_effective();
  static const int kEffectiveFieldNumber = 10;
  inline ::google::protobuf::uint32 effective() const;
  inline void set_effective(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PVESeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_kakao_url();
  inline void clear_has_kakao_url();
  inline void set_has_effective();
  inline void clear_has_effective();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* kakao_url_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 effective_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVESeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomRsp();
  virtual ~CSPVEJoinRoomRsp();
  
  CSPVEJoinRoomRsp(const CSPVEJoinRoomRsp& from);
  
  inline CSPVEJoinRoomRsp& operator=(const CSPVEJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomRsp& default_instance();
  
  void Swap(CSPVEJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomRsp& from);
  void MergeFrom(const CSPVEJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .PVESeatBase seats = 3;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 3;
  inline const ::PVESeatBase& seats(int index) const;
  inline ::PVESeatBase* mutable_seats(int index);
  inline ::PVESeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::RepeatedPtrField< ::PVESeatBase > seats_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomReq();
  virtual ~CSPVEExitRoomReq();
  
  CSPVEExitRoomReq(const CSPVEExitRoomReq& from);
  
  inline CSPVEExitRoomReq& operator=(const CSPVEExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomReq& default_instance();
  
  void Swap(CSPVEExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomReq& from);
  void MergeFrom(const CSPVEExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomRsp();
  virtual ~CSPVEExitRoomRsp();
  
  CSPVEExitRoomRsp(const CSPVEExitRoomRsp& from);
  
  inline CSPVEExitRoomRsp& operator=(const CSPVEExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomRsp& default_instance();
  
  void Swap(CSPVEExitRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomRsp& from);
  void MergeFrom(const CSPVEExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEExitRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVECloseRoomRsp();
  virtual ~CSPVECloseRoomRsp();
  
  CSPVECloseRoomRsp(const CSPVECloseRoomRsp& from);
  
  inline CSPVECloseRoomRsp& operator=(const CSPVECloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECloseRoomRsp& default_instance();
  
  void Swap(CSPVECloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECloseRoomRsp& from);
  void MergeFrom(const CSPVECloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVECloseRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEReadyReq : public ::google::protobuf::Message {
 public:
  CSPVEReadyReq();
  virtual ~CSPVEReadyReq();
  
  CSPVEReadyReq(const CSPVEReadyReq& from);
  
  inline CSPVEReadyReq& operator=(const CSPVEReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEReadyReq& default_instance();
  
  void Swap(CSPVEReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEReadyReq& from);
  void MergeFrom(const CSPVEReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVECancelReadyReq();
  virtual ~CSPVECancelReadyReq();
  
  CSPVECancelReadyReq(const CSPVECancelReadyReq& from);
  
  inline CSPVECancelReadyReq& operator=(const CSPVECancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECancelReadyReq& default_instance();
  
  void Swap(CSPVECancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECancelReadyReq& from);
  void MergeFrom(const CSPVECancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVECancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVEKickoffReq();
  virtual ~CSPVEKickoffReq();
  
  CSPVEKickoffReq(const CSPVEKickoffReq& from);
  
  inline CSPVEKickoffReq& operator=(const CSPVEKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffReq& default_instance();
  
  void Swap(CSPVEKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffReq& from);
  void MergeFrom(const CSPVEKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVEKickoffRsp();
  virtual ~CSPVEKickoffRsp();
  
  CSPVEKickoffRsp(const CSPVEKickoffRsp& from);
  
  inline CSPVEKickoffRsp& operator=(const CSPVEKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffRsp& default_instance();
  
  void Swap(CSPVEKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffRsp& from);
  void MergeFrom(const CSPVEKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartReq : public ::google::protobuf::Message {
 public:
  CSPVEStartReq();
  virtual ~CSPVEStartReq();
  
  CSPVEStartReq(const CSPVEStartReq& from);
  
  inline CSPVEStartReq& operator=(const CSPVEStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartReq& default_instance();
  
  void Swap(CSPVEStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartReq& from);
  void MergeFrom(const CSPVEStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartRsp : public ::google::protobuf::Message {
 public:
  CSPVEStartRsp();
  virtual ~CSPVEStartRsp();
  
  CSPVEStartRsp(const CSPVEStartRsp& from);
  
  inline CSPVEStartRsp& operator=(const CSPVEStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartRsp& default_instance();
  
  void Swap(CSPVEStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartRsp& from);
  void MergeFrom(const CSPVEStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIReq : public ::google::protobuf::Message {
 public:
  CSPVAIReq();
  virtual ~CSPVAIReq();
  
  CSPVAIReq(const CSPVAIReq& from);
  
  inline CSPVAIReq& operator=(const CSPVAIReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIReq& default_instance();
  
  void Swap(CSPVAIReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIReq& from);
  void MergeFrom(const CSPVAIReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional .PB_INSTANCE_TYPE_T type = 4 [default = PB_INSTANCE_TYPE_PVAI];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline PB_INSTANCE_TYPE_T type() const;
  inline void set_type(PB_INSTANCE_TYPE_T value);
  
  // @@protoc_insertion_point(class_scope:CSPVAIReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoReq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoReq();
  virtual ~CSPVAIInfoReq();
  
  CSPVAIInfoReq(const CSPVAIInfoReq& from);
  
  inline CSPVAIInfoReq& operator=(const CSPVAIInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoReq& default_instance();
  
  void Swap(CSPVAIInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoReq& from);
  void MergeFrom(const CSPVAIInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAIInfo : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAIInfo();
  virtual ~CSPVAIInfoRsq_CSPVAIInfo();
  
  CSPVAIInfoRsq_CSPVAIInfo(const CSPVAIInfoRsq_CSPVAIInfo& from);
  
  inline CSPVAIInfoRsq_CSPVAIInfo& operator=(const CSPVAIInfoRsq_CSPVAIInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAIInfo& default_instance();
  
  void Swap(CSPVAIInfoRsq_CSPVAIInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq_CSPVAIInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 lv = 7;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // optional .AI_STATUS_T ai_status = 8;
  inline bool has_ai_status() const;
  inline void clear_ai_status();
  static const int kAiStatusFieldNumber = 8;
  inline AI_STATUS_T ai_status() const;
  inline void set_ai_status(AI_STATUS_T value);
  
  // repeated uint32 fairys = 9;
  inline int fairys_size() const;
  inline void clear_fairys();
  static const int kFairysFieldNumber = 9;
  inline ::google::protobuf::uint32 fairys(int index) const;
  inline void set_fairys(int index, ::google::protobuf::uint32 value);
  inline void add_fairys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairys();
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAIInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_ai_status();
  inline void clear_has_ai_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 rank_;
  ::std::string* name_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairys_;
  int ai_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAIInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAILog : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAILog();
  virtual ~CSPVAIInfoRsq_CSPVAILog();
  
  CSPVAIInfoRsq_CSPVAILog(const CSPVAIInfoRsq_CSPVAILog& from);
  
  inline CSPVAIInfoRsq_CSPVAILog& operator=(const CSPVAIInfoRsq_CSPVAILog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAILog& default_instance();
  
  void Swap(CSPVAIInfoRsq_CSPVAILog* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq_CSPVAILog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required bool direct = 2;
  inline bool has_direct() const;
  inline void clear_direct();
  static const int kDirectFieldNumber = 2;
  inline bool direct() const;
  inline void set_direct(bool value);
  
  // required bool win = 3;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 3;
  inline bool win() const;
  inline void set_win(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAILog)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_direct();
  inline void clear_has_direct();
  inline void set_has_win();
  inline void clear_has_win();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  bool direct_;
  bool win_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAILog* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq();
  virtual ~CSPVAIInfoRsq();
  
  CSPVAIInfoRsq(const CSPVAIInfoRsq& from);
  
  inline CSPVAIInfoRsq& operator=(const CSPVAIInfoRsq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq& default_instance();
  
  void Swap(CSPVAIInfoRsq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq& from);
  void MergeFrom(const CSPVAIInfoRsq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSPVAIInfoRsq_CSPVAIInfo CSPVAIInfo;
  typedef CSPVAIInfoRsq_CSPVAILog CSPVAILog;
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CSPVAIInfoRsq_CSPVAIInfo& infos(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAIInfo* mutable_infos(int index);
  inline ::CSPVAIInfoRsq_CSPVAIInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
      mutable_infos();
  
  // repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 3;
  inline const ::CSPVAIInfoRsq_CSPVAILog& logs(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAILog* mutable_logs(int index);
  inline ::CSPVAIInfoRsq_CSPVAILog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
      mutable_logs();
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog > logs_;
  ::google::protobuf::uint32 rank_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetInstanceInfoReq : public ::google::protobuf::Message {
 public:
  CSGetInstanceInfoReq();
  virtual ~CSGetInstanceInfoReq();
  
  CSGetInstanceInfoReq(const CSGetInstanceInfoReq& from);
  
  inline CSGetInstanceInfoReq& operator=(const CSGetInstanceInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetInstanceInfoReq& default_instance();
  
  void Swap(CSGetInstanceInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetInstanceInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetInstanceInfoReq& from);
  void MergeFrom(const CSGetInstanceInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetInstanceInfoReq)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetInstanceInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetInstanceInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetInstanceInfoRsp();
  virtual ~CSGetInstanceInfoRsp();
  
  CSGetInstanceInfoRsp(const CSGetInstanceInfoRsp& from);
  
  inline CSGetInstanceInfoRsp& operator=(const CSGetInstanceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetInstanceInfoRsp& default_instance();
  
  void Swap(CSGetInstanceInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetInstanceInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetInstanceInfoRsp& from);
  void MergeFrom(const CSGetInstanceInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // required uint32 effectiveness = 2;
  inline bool has_effectiveness() const;
  inline void clear_effectiveness();
  static const int kEffectivenessFieldNumber = 2;
  inline ::google::protobuf::uint32 effectiveness() const;
  inline void set_effectiveness(::google::protobuf::uint32 value);
  
  // required .CSReward reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSGetInstanceInfoRsp)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_effectiveness();
  inline void clear_has_effectiveness();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_id_;
  ::google::protobuf::uint32 effectiveness_;
  ::CSReward* reward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetInstanceInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVXRewardRsp : public ::google::protobuf::Message {
 public:
  CSPVXRewardRsp();
  virtual ~CSPVXRewardRsp();
  
  CSPVXRewardRsp(const CSPVXRewardRsp& from);
  
  inline CSPVXRewardRsp& operator=(const CSPVXRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVXRewardRsp& default_instance();
  
  void Swap(CSPVXRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVXRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVXRewardRsp& from);
  void MergeFrom(const CSPVXRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool is_win = 1;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win() const;
  inline void set_is_win(bool value);
  
  // required uint32 pvx_type = 2;
  inline bool has_pvx_type() const;
  inline void clear_pvx_type();
  static const int kPvxTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 pvx_type() const;
  inline void set_pvx_type(::google::protobuf::uint32 value);
  
  // required uint32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // required uint32 reputation = 4;
  inline bool has_reputation() const;
  inline void clear_reputation();
  static const int kReputationFieldNumber = 4;
  inline ::google::protobuf::uint32 reputation() const;
  inline void set_reputation(::google::protobuf::uint32 value);
  
  // optional .CSReward reward = 5;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSPVXRewardRsp)
 private:
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_pvx_type();
  inline void clear_has_pvx_type();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_reputation();
  inline void clear_has_reputation();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_win_;
  ::google::protobuf::uint32 pvx_type_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 reputation_;
  ::CSReward* reward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVXRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemReq : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemReq();
  virtual ~CSEquipInlayGemReq();
  
  CSEquipInlayGemReq(const CSEquipInlayGemReq& from);
  
  inline CSEquipInlayGemReq& operator=(const CSEquipInlayGemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemReq& default_instance();
  
  void Swap(CSEquipInlayGemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipInlayGemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemReq& from);
  void MergeFrom(const CSEquipInlayGemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);
  
  // required uint32 gem_id = 2;
  inline bool has_gem_id() const;
  inline void clear_gem_id();
  static const int kGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gem_id() const;
  inline void set_gem_id(::google::protobuf::uint32 value);
  
  // required uint32 hole_index = 3;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipInlayGemReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_gem_id();
  inline void clear_has_gem_id();
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 gem_id_;
  ::google::protobuf::uint32 hole_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipInlayGemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemRsp : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemRsp();
  virtual ~CSEquipInlayGemRsp();
  
  CSEquipInlayGemRsp(const CSEquipInlayGemRsp& from);
  
  inline CSEquipInlayGemRsp& operator=(const CSEquipInlayGemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemRsp& default_instance();
  
  void Swap(CSEquipInlayGemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipInlayGemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemRsp& from);
  void MergeFrom(const CSEquipInlayGemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipInlayGemRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipInlayGemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrReq : public ::google::protobuf::Message {
 public:
  CSResetGemAttrReq();
  virtual ~CSResetGemAttrReq();
  
  CSResetGemAttrReq(const CSResetGemAttrReq& from);
  
  inline CSResetGemAttrReq& operator=(const CSResetGemAttrReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrReq& default_instance();
  
  void Swap(CSResetGemAttrReq* other);
  
  // implements Message ----------------------------------------------
  
  CSResetGemAttrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrReq& from);
  void MergeFrom(const CSResetGemAttrReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);
  
  // repeated uint32 holes_index = 2;
  inline int holes_index_size() const;
  inline void clear_holes_index();
  static const int kHolesIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 holes_index(int index) const;
  inline void set_holes_index(int index, ::google::protobuf::uint32 value);
  inline void add_holes_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      holes_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_holes_index();
  
  // optional uint32 cost_attr_key = 3;
  inline bool has_cost_attr_key() const;
  inline void clear_cost_attr_key();
  static const int kCostAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_attr_key() const;
  inline void set_cost_attr_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSResetGemAttrReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_cost_attr_key();
  inline void clear_has_cost_attr_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > holes_index_;
  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 cost_attr_key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSResetGemAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrRsp : public ::google::protobuf::Message {
 public:
  CSResetGemAttrRsp();
  virtual ~CSResetGemAttrRsp();
  
  CSResetGemAttrRsp(const CSResetGemAttrRsp& from);
  
  inline CSResetGemAttrRsp& operator=(const CSResetGemAttrRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrRsp& default_instance();
  
  void Swap(CSResetGemAttrRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSResetGemAttrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrRsp& from);
  void MergeFrom(const CSResetGemAttrRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSResetGemAttrRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSResetGemAttrRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthReq : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthReq();
  virtual ~CSEquipmentStrengthReq();
  
  CSEquipmentStrengthReq(const CSEquipmentStrengthReq& from);
  
  inline CSEquipmentStrengthReq& operator=(const CSEquipmentStrengthReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthReq& default_instance();
  
  void Swap(CSEquipmentStrengthReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentStrengthReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthReq& from);
  void MergeFrom(const CSEquipmentStrengthReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required bool direct = 2;
  inline bool has_direct() const;
  inline void clear_direct();
  static const int kDirectFieldNumber = 2;
  inline bool direct() const;
  inline void set_direct(bool value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direct();
  inline void clear_has_direct();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  bool direct_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentStrengthReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthRsp();
  virtual ~CSEquipmentStrengthRsp();
  
  CSEquipmentStrengthRsp(const CSEquipmentStrengthRsp& from);
  
  inline CSEquipmentStrengthRsp& operator=(const CSEquipmentStrengthRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthRsp& default_instance();
  
  void Swap(CSEquipmentStrengthRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentStrengthRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthRsp& from);
  void MergeFrom(const CSEquipmentStrengthRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentStrengthRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeReq : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeReq();
  virtual ~CSEquipmentComposeReq();
  
  CSEquipmentComposeReq(const CSEquipmentComposeReq& from);
  
  inline CSEquipmentComposeReq& operator=(const CSEquipmentComposeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeReq& default_instance();
  
  void Swap(CSEquipmentComposeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentComposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeReq& from);
  void MergeFrom(const CSEquipmentComposeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);
  
  // repeated uint32 from_item_pos = 2;
  inline int from_item_pos_size() const;
  inline void clear_from_item_pos();
  static const int kFromItemPosFieldNumber = 2;
  inline ::google::protobuf::uint32 from_item_pos(int index) const;
  inline void set_from_item_pos(int index, ::google::protobuf::uint32 value);
  inline void add_from_item_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      from_item_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_from_item_pos();
  
  // optional uint32 multi = 3 [default = 1];
  inline bool has_multi() const;
  inline void clear_multi();
  static const int kMultiFieldNumber = 3;
  inline ::google::protobuf::uint32 multi() const;
  inline void set_multi(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentComposeReq)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_multi();
  inline void clear_has_multi();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > from_item_pos_;
  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 multi_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentComposeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeRsp_Item : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeRsp_Item();
  virtual ~CSEquipmentComposeRsp_Item();
  
  CSEquipmentComposeRsp_Item(const CSEquipmentComposeRsp_Item& from);
  
  inline CSEquipmentComposeRsp_Item& operator=(const CSEquipmentComposeRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeRsp_Item& default_instance();
  
  void Swap(CSEquipmentComposeRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentComposeRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeRsp_Item& from);
  void MergeFrom(const CSEquipmentComposeRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentComposeRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentComposeRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeRsp();
  virtual ~CSEquipmentComposeRsp();
  
  CSEquipmentComposeRsp(const CSEquipmentComposeRsp& from);
  
  inline CSEquipmentComposeRsp& operator=(const CSEquipmentComposeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeRsp& default_instance();
  
  void Swap(CSEquipmentComposeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentComposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeRsp& from);
  void MergeFrom(const CSEquipmentComposeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSEquipmentComposeRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);
  
  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // repeated .CSEquipmentComposeRsp.Item items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::CSEquipmentComposeRsp_Item& items(int index) const;
  inline ::CSEquipmentComposeRsp_Item* mutable_items(int index);
  inline ::CSEquipmentComposeRsp_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentComposeRsp_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentComposeRsp_Item >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSEquipmentComposeRsp)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::RepeatedPtrField< ::CSEquipmentComposeRsp_Item > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentComposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeQueryReq : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeQueryReq();
  virtual ~CSEquipmentDecomposeQueryReq();
  
  CSEquipmentDecomposeQueryReq(const CSEquipmentDecomposeQueryReq& from);
  
  inline CSEquipmentDecomposeQueryReq& operator=(const CSEquipmentDecomposeQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeQueryReq& default_instance();
  
  void Swap(CSEquipmentDecomposeQueryReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeQueryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeQueryReq& from);
  void MergeFrom(const CSEquipmentDecomposeQueryReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeQueryReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeQueryRsp_Item : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeQueryRsp_Item();
  virtual ~CSEquipmentDecomposeQueryRsp_Item();
  
  CSEquipmentDecomposeQueryRsp_Item(const CSEquipmentDecomposeQueryRsp_Item& from);
  
  inline CSEquipmentDecomposeQueryRsp_Item& operator=(const CSEquipmentDecomposeQueryRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeQueryRsp_Item& default_instance();
  
  void Swap(CSEquipmentDecomposeQueryRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeQueryRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeQueryRsp_Item& from);
  void MergeFrom(const CSEquipmentDecomposeQueryRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeQueryRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeQueryRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeQueryRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeQueryRsp();
  virtual ~CSEquipmentDecomposeQueryRsp();
  
  CSEquipmentDecomposeQueryRsp(const CSEquipmentDecomposeQueryRsp& from);
  
  inline CSEquipmentDecomposeQueryRsp& operator=(const CSEquipmentDecomposeQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeQueryRsp& default_instance();
  
  void Swap(CSEquipmentDecomposeQueryRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeQueryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeQueryRsp& from);
  void MergeFrom(const CSEquipmentDecomposeQueryRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSEquipmentDecomposeQueryRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // repeated .CSEquipmentDecomposeQueryRsp.Item items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::CSEquipmentDecomposeQueryRsp_Item& items(int index) const;
  inline ::CSEquipmentDecomposeQueryRsp_Item* mutable_items(int index);
  inline ::CSEquipmentDecomposeQueryRsp_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeQueryRsp_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeQueryRsp_Item >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeQueryRsp)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeQueryRsp_Item > items_;
  ::google::protobuf::uint32 money_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeQueryRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeReq : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeReq();
  virtual ~CSEquipmentDecomposeReq();
  
  CSEquipmentDecomposeReq(const CSEquipmentDecomposeReq& from);
  
  inline CSEquipmentDecomposeReq& operator=(const CSEquipmentDecomposeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeReq& default_instance();
  
  void Swap(CSEquipmentDecomposeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeReq& from);
  void MergeFrom(const CSEquipmentDecomposeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeRsp_Item : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeRsp_Item();
  virtual ~CSEquipmentDecomposeRsp_Item();
  
  CSEquipmentDecomposeRsp_Item(const CSEquipmentDecomposeRsp_Item& from);
  
  inline CSEquipmentDecomposeRsp_Item& operator=(const CSEquipmentDecomposeRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeRsp_Item& default_instance();
  
  void Swap(CSEquipmentDecomposeRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeRsp_Item& from);
  void MergeFrom(const CSEquipmentDecomposeRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentDecomposeRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentDecomposeRsp();
  virtual ~CSEquipmentDecomposeRsp();
  
  CSEquipmentDecomposeRsp(const CSEquipmentDecomposeRsp& from);
  
  inline CSEquipmentDecomposeRsp& operator=(const CSEquipmentDecomposeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentDecomposeRsp& default_instance();
  
  void Swap(CSEquipmentDecomposeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentDecomposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentDecomposeRsp& from);
  void MergeFrom(const CSEquipmentDecomposeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSEquipmentDecomposeRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // repeated .CSEquipmentDecomposeRsp.Item items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::CSEquipmentDecomposeRsp_Item& items(int index) const;
  inline ::CSEquipmentDecomposeRsp_Item* mutable_items(int index);
  inline ::CSEquipmentDecomposeRsp_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeRsp_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeRsp_Item >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSEquipmentDecomposeRsp)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeRsp_Item > items_;
  ::google::protobuf::uint32 money_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentDecomposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoReq : public ::google::protobuf::Message {
 public:
  CSTaskInfoReq();
  virtual ~CSTaskInfoReq();
  
  CSTaskInfoReq(const CSTaskInfoReq& from);
  
  inline CSTaskInfoReq& operator=(const CSTaskInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoReq& default_instance();
  
  void Swap(CSTaskInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoReq& from);
  void MergeFrom(const CSTaskInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 check_gg = 1 [default = 0];
  inline bool has_check_gg() const;
  inline void clear_check_gg();
  static const int kCheckGgFieldNumber = 1;
  inline ::google::protobuf::uint32 check_gg() const;
  inline void set_check_gg(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskInfoReq)
 private:
  inline void set_has_check_gg();
  inline void clear_has_check_gg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 check_gg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class TaskInfo : public ::google::protobuf::Message {
 public:
  TaskInfo();
  virtual ~TaskInfo();
  
  TaskInfo(const TaskInfo& from);
  
  inline TaskInfo& operator=(const TaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfo& default_instance();
  
  void Swap(TaskInfo* other);
  
  // implements Message ----------------------------------------------
  
  TaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfo& from);
  void MergeFrom(const TaskInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:TaskInfo)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static TaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSTaskInfoRsp();
  virtual ~CSTaskInfoRsp();
  
  CSTaskInfoRsp(const CSTaskInfoRsp& from);
  
  inline CSTaskInfoRsp& operator=(const CSTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoRsp& default_instance();
  
  void Swap(CSTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoRsp& from);
  void MergeFrom(const CSTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 acceptable_tasks = 1;
  inline int acceptable_tasks_size() const;
  inline void clear_acceptable_tasks();
  static const int kAcceptableTasksFieldNumber = 1;
  inline ::google::protobuf::uint32 acceptable_tasks(int index) const;
  inline void set_acceptable_tasks(int index, ::google::protobuf::uint32 value);
  inline void add_acceptable_tasks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      acceptable_tasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_acceptable_tasks();
  
  // repeated .TaskInfo accept_tasks = 2;
  inline int accept_tasks_size() const;
  inline void clear_accept_tasks();
  static const int kAcceptTasksFieldNumber = 2;
  inline const ::TaskInfo& accept_tasks(int index) const;
  inline ::TaskInfo* mutable_accept_tasks(int index);
  inline ::TaskInfo* add_accept_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      accept_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_accept_tasks();
  
  // @@protoc_insertion_point(class_scope:CSTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > acceptable_tasks_;
  ::google::protobuf::RepeatedPtrField< ::TaskInfo > accept_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepReq : public ::google::protobuf::Message {
 public:
  CSTaskDoStepReq();
  virtual ~CSTaskDoStepReq();
  
  CSTaskDoStepReq(const CSTaskDoStepReq& from);
  
  inline CSTaskDoStepReq& operator=(const CSTaskDoStepReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepReq& default_instance();
  
  void Swap(CSTaskDoStepReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskDoStepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepReq& from);
  void MergeFrom(const CSTaskDoStepReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskDoStepReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskDoStepReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepRsp : public ::google::protobuf::Message {
 public:
  CSTaskDoStepRsp();
  virtual ~CSTaskDoStepRsp();
  
  CSTaskDoStepRsp(const CSTaskDoStepRsp& from);
  
  inline CSTaskDoStepRsp& operator=(const CSTaskDoStepRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepRsp& default_instance();
  
  void Swap(CSTaskDoStepRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskDoStepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepRsp& from);
  void MergeFrom(const CSTaskDoStepRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskDoStepRsp)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskDoStepRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogReq : public ::google::protobuf::Message {
 public:
  CSTaskLogReq();
  virtual ~CSTaskLogReq();
  
  CSTaskLogReq(const CSTaskLogReq& from);
  
  inline CSTaskLogReq& operator=(const CSTaskLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogReq& default_instance();
  
  void Swap(CSTaskLogReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogReq& from);
  void MergeFrom(const CSTaskLogReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTaskLogReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskLogReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogRsp : public ::google::protobuf::Message {
 public:
  CSTaskLogRsp();
  virtual ~CSTaskLogRsp();
  
  CSTaskLogRsp(const CSTaskLogRsp& from);
  
  inline CSTaskLogRsp& operator=(const CSTaskLogRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogRsp& default_instance();
  
  void Swap(CSTaskLogRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskLogRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogRsp& from);
  void MergeFrom(const CSTaskLogRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .TaskInfo tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::TaskInfo& tasks(int index) const;
  inline ::TaskInfo* mutable_tasks(int index);
  inline ::TaskInfo* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_tasks();
  
  // @@protoc_insertion_point(class_scope:CSTaskLogRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::TaskInfo > tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskLogRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskStatusReq : public ::google::protobuf::Message {
 public:
  CSTaskStatusReq();
  virtual ~CSTaskStatusReq();
  
  CSTaskStatusReq(const CSTaskStatusReq& from);
  
  inline CSTaskStatusReq& operator=(const CSTaskStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskStatusReq& default_instance();
  
  void Swap(CSTaskStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskStatusReq& from);
  void MergeFrom(const CSTaskStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskStatusReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskStatusRsp : public ::google::protobuf::Message {
 public:
  CSTaskStatusRsp();
  virtual ~CSTaskStatusRsp();
  
  CSTaskStatusRsp(const CSTaskStatusRsp& from);
  
  inline CSTaskStatusRsp& operator=(const CSTaskStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskStatusRsp& default_instance();
  
  void Swap(CSTaskStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskStatusRsp& from);
  void MergeFrom(const CSTaskStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required .PB_TASK_STATUS_T status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline PB_TASK_STATUS_T status() const;
  inline void set_status(PB_TASK_STATUS_T value);
  
  // @@protoc_insertion_point(class_scope:CSTaskStatusRsp)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  int status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskInfo : public ::google::protobuf::Message {
 public:
  DailyTaskInfo();
  virtual ~DailyTaskInfo();
  
  DailyTaskInfo(const DailyTaskInfo& from);
  
  inline DailyTaskInfo& operator=(const DailyTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskInfo& default_instance();
  
  void Swap(DailyTaskInfo* other);
  
  // implements Message ----------------------------------------------
  
  DailyTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskInfo& from);
  void MergeFrom(const DailyTaskInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 daily_task_id = 1;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // required int32 daily_task_status = 2;
  inline bool has_daily_task_status() const;
  inline void clear_daily_task_status();
  static const int kDailyTaskStatusFieldNumber = 2;
  inline ::google::protobuf::int32 daily_task_status() const;
  inline void set_daily_task_status(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:DailyTaskInfo)
 private:
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  inline void set_has_daily_task_status();
  inline void clear_has_daily_task_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daily_task_id_;
  ::google::protobuf::int32 daily_task_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static DailyTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSDailyTaskInfoReq : public ::google::protobuf::Message {
 public:
  CSDailyTaskInfoReq();
  virtual ~CSDailyTaskInfoReq();
  
  CSDailyTaskInfoReq(const CSDailyTaskInfoReq& from);
  
  inline CSDailyTaskInfoReq& operator=(const CSDailyTaskInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDailyTaskInfoReq& default_instance();
  
  void Swap(CSDailyTaskInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDailyTaskInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDailyTaskInfoReq& from);
  void MergeFrom(const CSDailyTaskInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSDailyTaskInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDailyTaskInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDailyTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSDailyTaskInfoRsp();
  virtual ~CSDailyTaskInfoRsp();
  
  CSDailyTaskInfoRsp(const CSDailyTaskInfoRsp& from);
  
  inline CSDailyTaskInfoRsp& operator=(const CSDailyTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDailyTaskInfoRsp& default_instance();
  
  void Swap(CSDailyTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDailyTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDailyTaskInfoRsp& from);
  void MergeFrom(const CSDailyTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DailyTaskInfo daily_tasks = 1;
  inline int daily_tasks_size() const;
  inline void clear_daily_tasks();
  static const int kDailyTasksFieldNumber = 1;
  inline const ::DailyTaskInfo& daily_tasks(int index) const;
  inline ::DailyTaskInfo* mutable_daily_tasks(int index);
  inline ::DailyTaskInfo* add_daily_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
      daily_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
      mutable_daily_tasks();
  
  // @@protoc_insertion_point(class_scope:CSDailyTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo > daily_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDailyTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAcceptDailyTaskReq : public ::google::protobuf::Message {
 public:
  CSAcceptDailyTaskReq();
  virtual ~CSAcceptDailyTaskReq();
  
  CSAcceptDailyTaskReq(const CSAcceptDailyTaskReq& from);
  
  inline CSAcceptDailyTaskReq& operator=(const CSAcceptDailyTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAcceptDailyTaskReq& default_instance();
  
  void Swap(CSAcceptDailyTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAcceptDailyTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAcceptDailyTaskReq& from);
  void MergeFrom(const CSAcceptDailyTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 daily_task_id = 1;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAcceptDailyTaskReq)
 private:
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAcceptDailyTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAcceptDailyTaskRsp : public ::google::protobuf::Message {
 public:
  CSAcceptDailyTaskRsp();
  virtual ~CSAcceptDailyTaskRsp();
  
  CSAcceptDailyTaskRsp(const CSAcceptDailyTaskRsp& from);
  
  inline CSAcceptDailyTaskRsp& operator=(const CSAcceptDailyTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAcceptDailyTaskRsp& default_instance();
  
  void Swap(CSAcceptDailyTaskRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAcceptDailyTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAcceptDailyTaskRsp& from);
  void MergeFrom(const CSAcceptDailyTaskRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAcceptDailyTaskRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAcceptDailyTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGiveUpDailyTaskReq : public ::google::protobuf::Message {
 public:
  CSGiveUpDailyTaskReq();
  virtual ~CSGiveUpDailyTaskReq();
  
  CSGiveUpDailyTaskReq(const CSGiveUpDailyTaskReq& from);
  
  inline CSGiveUpDailyTaskReq& operator=(const CSGiveUpDailyTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGiveUpDailyTaskReq& default_instance();
  
  void Swap(CSGiveUpDailyTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGiveUpDailyTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGiveUpDailyTaskReq& from);
  void MergeFrom(const CSGiveUpDailyTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGiveUpDailyTaskReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGiveUpDailyTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGiveUpDailyTaskRsp : public ::google::protobuf::Message {
 public:
  CSGiveUpDailyTaskRsp();
  virtual ~CSGiveUpDailyTaskRsp();
  
  CSGiveUpDailyTaskRsp(const CSGiveUpDailyTaskRsp& from);
  
  inline CSGiveUpDailyTaskRsp& operator=(const CSGiveUpDailyTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGiveUpDailyTaskRsp& default_instance();
  
  void Swap(CSGiveUpDailyTaskRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGiveUpDailyTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGiveUpDailyTaskRsp& from);
  void MergeFrom(const CSGiveUpDailyTaskRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGiveUpDailyTaskRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGiveUpDailyTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyTaskRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyTaskRewardReq();
  virtual ~CSGetDailyTaskRewardReq();
  
  CSGetDailyTaskRewardReq(const CSGetDailyTaskRewardReq& from);
  
  inline CSGetDailyTaskRewardReq& operator=(const CSGetDailyTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyTaskRewardReq& default_instance();
  
  void Swap(CSGetDailyTaskRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyTaskRewardReq& from);
  void MergeFrom(const CSGetDailyTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetDailyTaskRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyTaskRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyTaskRewardRsp();
  virtual ~CSGetDailyTaskRewardRsp();
  
  CSGetDailyTaskRewardRsp(const CSGetDailyTaskRewardRsp& from);
  
  inline CSGetDailyTaskRewardRsp& operator=(const CSGetDailyTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyTaskRewardRsp& default_instance();
  
  void Swap(CSGetDailyTaskRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyTaskRewardRsp& from);
  void MergeFrom(const CSGetDailyTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyTaskRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyUpdateDailyTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyUpdateDailyTaskInfoRsp();
  virtual ~CSNotifyUpdateDailyTaskInfoRsp();
  
  CSNotifyUpdateDailyTaskInfoRsp(const CSNotifyUpdateDailyTaskInfoRsp& from);
  
  inline CSNotifyUpdateDailyTaskInfoRsp& operator=(const CSNotifyUpdateDailyTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyUpdateDailyTaskInfoRsp& default_instance();
  
  void Swap(CSNotifyUpdateDailyTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyUpdateDailyTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyUpdateDailyTaskInfoRsp& from);
  void MergeFrom(const CSNotifyUpdateDailyTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DailyTaskInfo update_daily_tasks = 1;
  inline int update_daily_tasks_size() const;
  inline void clear_update_daily_tasks();
  static const int kUpdateDailyTasksFieldNumber = 1;
  inline const ::DailyTaskInfo& update_daily_tasks(int index) const;
  inline ::DailyTaskInfo* mutable_update_daily_tasks(int index);
  inline ::DailyTaskInfo* add_update_daily_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
      update_daily_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
      mutable_update_daily_tasks();
  
  // @@protoc_insertion_point(class_scope:CSNotifyUpdateDailyTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo > update_daily_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyUpdateDailyTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyGoalRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyGoalRewardReq();
  virtual ~CSGetDailyGoalRewardReq();
  
  CSGetDailyGoalRewardReq(const CSGetDailyGoalRewardReq& from);
  
  inline CSGetDailyGoalRewardReq& operator=(const CSGetDailyGoalRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyGoalRewardReq& default_instance();
  
  void Swap(CSGetDailyGoalRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyGoalRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyGoalRewardReq& from);
  void MergeFrom(const CSGetDailyGoalRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetDailyGoalRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyGoalRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyGoalRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyGoalRewardRsp();
  virtual ~CSGetDailyGoalRewardRsp();
  
  CSGetDailyGoalRewardRsp(const CSGetDailyGoalRewardRsp& from);
  
  inline CSGetDailyGoalRewardRsp& operator=(const CSGetDailyGoalRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyGoalRewardRsp& default_instance();
  
  void Swap(CSGetDailyGoalRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyGoalRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyGoalRewardRsp& from);
  void MergeFrom(const CSGetDailyGoalRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyGoalRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyGoalRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyRewardReq();
  virtual ~CSGetDailyRewardReq();
  
  CSGetDailyRewardReq(const CSGetDailyRewardReq& from);
  
  inline CSGetDailyRewardReq& operator=(const CSGetDailyRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyRewardReq& default_instance();
  
  void Swap(CSGetDailyRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyRewardReq& from);
  void MergeFrom(const CSGetDailyRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyRewardReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyRewardRsp();
  virtual ~CSGetDailyRewardRsp();
  
  CSGetDailyRewardRsp(const CSGetDailyRewardRsp& from);
  
  inline CSGetDailyRewardRsp& operator=(const CSGetDailyRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyRewardRsp& default_instance();
  
  void Swap(CSGetDailyRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyRewardRsp& from);
  void MergeFrom(const CSGetDailyRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetLoginRewardReq : public ::google::protobuf::Message {
 public:
  CSGetLoginRewardReq();
  virtual ~CSGetLoginRewardReq();
  
  CSGetLoginRewardReq(const CSGetLoginRewardReq& from);
  
  inline CSGetLoginRewardReq& operator=(const CSGetLoginRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetLoginRewardReq& default_instance();
  
  void Swap(CSGetLoginRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetLoginRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetLoginRewardReq& from);
  void MergeFrom(const CSGetLoginRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 someday = 1;
  inline bool has_someday() const;
  inline void clear_someday();
  static const int kSomedayFieldNumber = 1;
  inline ::google::protobuf::uint32 someday() const;
  inline void set_someday(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetLoginRewardReq)
 private:
  inline void set_has_someday();
  inline void clear_has_someday();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 someday_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetLoginRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetLoginRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetLoginRewardRsp();
  virtual ~CSGetLoginRewardRsp();
  
  CSGetLoginRewardRsp(const CSGetLoginRewardRsp& from);
  
  inline CSGetLoginRewardRsp& operator=(const CSGetLoginRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetLoginRewardRsp& default_instance();
  
  void Swap(CSGetLoginRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetLoginRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetLoginRewardRsp& from);
  void MergeFrom(const CSGetLoginRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetLoginRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetLoginRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSelectPVAIACCURewardReq : public ::google::protobuf::Message {
 public:
  CSSelectPVAIACCURewardReq();
  virtual ~CSSelectPVAIACCURewardReq();
  
  CSSelectPVAIACCURewardReq(const CSSelectPVAIACCURewardReq& from);
  
  inline CSSelectPVAIACCURewardReq& operator=(const CSSelectPVAIACCURewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSelectPVAIACCURewardReq& default_instance();
  
  void Swap(CSSelectPVAIACCURewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSelectPVAIACCURewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSelectPVAIACCURewardReq& from);
  void MergeFrom(const CSSelectPVAIACCURewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSSelectPVAIACCURewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSelectPVAIACCURewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSelectPVAIACCURewardRsp : public ::google::protobuf::Message {
 public:
  CSSelectPVAIACCURewardRsp();
  virtual ~CSSelectPVAIACCURewardRsp();
  
  CSSelectPVAIACCURewardRsp(const CSSelectPVAIACCURewardRsp& from);
  
  inline CSSelectPVAIACCURewardRsp& operator=(const CSSelectPVAIACCURewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSelectPVAIACCURewardRsp& default_instance();
  
  void Swap(CSSelectPVAIACCURewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSelectPVAIACCURewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSelectPVAIACCURewardRsp& from);
  void MergeFrom(const CSSelectPVAIACCURewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accu_coin = 1;
  inline bool has_accu_coin() const;
  inline void clear_accu_coin();
  static const int kAccuCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 accu_coin() const;
  inline void set_accu_coin(::google::protobuf::uint32 value);
  
  // required uint32 accu_reputation = 2;
  inline bool has_accu_reputation() const;
  inline void clear_accu_reputation();
  static const int kAccuReputationFieldNumber = 2;
  inline ::google::protobuf::uint32 accu_reputation() const;
  inline void set_accu_reputation(::google::protobuf::uint32 value);
  
  // required uint32 one_hour_coin = 3;
  inline bool has_one_hour_coin() const;
  inline void clear_one_hour_coin();
  static const int kOneHourCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 one_hour_coin() const;
  inline void set_one_hour_coin(::google::protobuf::uint32 value);
  
  // required uint32 one_hour_reputation = 4;
  inline bool has_one_hour_reputation() const;
  inline void clear_one_hour_reputation();
  static const int kOneHourReputationFieldNumber = 4;
  inline ::google::protobuf::uint32 one_hour_reputation() const;
  inline void set_one_hour_reputation(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSelectPVAIACCURewardRsp)
 private:
  inline void set_has_accu_coin();
  inline void clear_has_accu_coin();
  inline void set_has_accu_reputation();
  inline void clear_has_accu_reputation();
  inline void set_has_one_hour_coin();
  inline void clear_has_one_hour_coin();
  inline void set_has_one_hour_reputation();
  inline void clear_has_one_hour_reputation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accu_coin_;
  ::google::protobuf::uint32 accu_reputation_;
  ::google::protobuf::uint32 one_hour_coin_;
  ::google::protobuf::uint32 one_hour_reputation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSelectPVAIACCURewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesSetReq : public ::google::protobuf::Message {
 public:
  CSAttributesSetReq();
  virtual ~CSAttributesSetReq();
  
  CSAttributesSetReq(const CSAttributesSetReq& from);
  
  inline CSAttributesSetReq& operator=(const CSAttributesSetReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesSetReq& default_instance();
  
  void Swap(CSAttributesSetReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesSetReq& from);
  void MergeFrom(const CSAttributesSetReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAttributesSetReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesReq : public ::google::protobuf::Message {
 public:
  CSAttributesReq();
  virtual ~CSAttributesReq();
  
  CSAttributesReq(const CSAttributesReq& from);
  
  inline CSAttributesReq& operator=(const CSAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesReq& default_instance();
  
  void Swap(CSAttributesReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesReq& from);
  void MergeFrom(const CSAttributesReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();
  
  // @@protoc_insertion_point(class_scope:CSAttributesReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp_KeyValue : public ::google::protobuf::Message {
 public:
  CSAttributesRsp_KeyValue();
  virtual ~CSAttributesRsp_KeyValue();
  
  CSAttributesRsp_KeyValue(const CSAttributesRsp_KeyValue& from);
  
  inline CSAttributesRsp_KeyValue& operator=(const CSAttributesRsp_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp_KeyValue& default_instance();
  
  void Swap(CSAttributesRsp_KeyValue* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesRsp_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp_KeyValue& from);
  void MergeFrom(const CSAttributesRsp_KeyValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAttributesRsp.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesRsp_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp : public ::google::protobuf::Message {
 public:
  CSAttributesRsp();
  virtual ~CSAttributesRsp();
  
  CSAttributesRsp(const CSAttributesRsp& from);
  
  inline CSAttributesRsp& operator=(const CSAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp& default_instance();
  
  void Swap(CSAttributesRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp& from);
  void MergeFrom(const CSAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSAttributesRsp_KeyValue KeyValue;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSAttributesRsp.KeyValue values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSAttributesRsp_KeyValue& values(int index) const;
  inline ::CSAttributesRsp_KeyValue* mutable_values(int index);
  inline ::CSAttributesRsp_KeyValue* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:CSAttributesRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceSetReq : public ::google::protobuf::Message {
 public:
  CSOnceSetReq();
  virtual ~CSOnceSetReq();
  
  CSOnceSetReq(const CSOnceSetReq& from);
  
  inline CSOnceSetReq& operator=(const CSOnceSetReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceSetReq& default_instance();
  
  void Swap(CSOnceSetReq* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceSetReq& from);
  void MergeFrom(const CSOnceSetReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOnceSetReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceReq : public ::google::protobuf::Message {
 public:
  CSOnceReq();
  virtual ~CSOnceReq();
  
  CSOnceReq(const CSOnceReq& from);
  
  inline CSOnceReq& operator=(const CSOnceReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceReq& default_instance();
  
  void Swap(CSOnceReq* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceReq& from);
  void MergeFrom(const CSOnceReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 indexs = 1;
  inline int indexs_size() const;
  inline void clear_indexs();
  static const int kIndexsFieldNumber = 1;
  inline ::google::protobuf::uint32 indexs(int index) const;
  inline void set_indexs(int index, ::google::protobuf::uint32 value);
  inline void add_indexs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indexs();
  
  // @@protoc_insertion_point(class_scope:CSOnceReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indexs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp_Once : public ::google::protobuf::Message {
 public:
  CSOnceRsp_Once();
  virtual ~CSOnceRsp_Once();
  
  CSOnceRsp_Once(const CSOnceRsp_Once& from);
  
  inline CSOnceRsp_Once& operator=(const CSOnceRsp_Once& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp_Once& default_instance();
  
  void Swap(CSOnceRsp_Once* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceRsp_Once* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp_Once& from);
  void MergeFrom(const CSOnceRsp_Once& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required bool is_set = 2;
  inline bool has_is_set() const;
  inline void clear_is_set();
  static const int kIsSetFieldNumber = 2;
  inline bool is_set() const;
  inline void set_is_set(bool value);
  
  // @@protoc_insertion_point(class_scope:CSOnceRsp.Once)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_is_set();
  inline void clear_has_is_set();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  bool is_set_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceRsp_Once* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp : public ::google::protobuf::Message {
 public:
  CSOnceRsp();
  virtual ~CSOnceRsp();
  
  CSOnceRsp(const CSOnceRsp& from);
  
  inline CSOnceRsp& operator=(const CSOnceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp& default_instance();
  
  void Swap(CSOnceRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp& from);
  void MergeFrom(const CSOnceRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSOnceRsp_Once Once;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSOnceRsp.Once values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSOnceRsp_Once& values(int index) const;
  inline ::CSOnceRsp_Once* mutable_values(int index);
  inline ::CSOnceRsp_Once* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:CSOnceRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoReq : public ::google::protobuf::Message {
 public:
  CSTrainInfoReq();
  virtual ~CSTrainInfoReq();
  
  CSTrainInfoReq(const CSTrainInfoReq& from);
  
  inline CSTrainInfoReq& operator=(const CSTrainInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoReq& default_instance();
  
  void Swap(CSTrainInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoReq& from);
  void MergeFrom(const CSTrainInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoRsp : public ::google::protobuf::Message {
 public:
  CSTrainInfoRsp();
  virtual ~CSTrainInfoRsp();
  
  CSTrainInfoRsp(const CSTrainInfoRsp& from);
  
  inline CSTrainInfoRsp& operator=(const CSTrainInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoRsp& default_instance();
  
  void Swap(CSTrainInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoRsp& from);
  void MergeFrom(const CSTrainInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 potential = 1;
  inline bool has_potential() const;
  inline void clear_potential();
  static const int kPotentialFieldNumber = 1;
  inline ::google::protobuf::uint32 potential() const;
  inline void set_potential(::google::protobuf::uint32 value);
  
  // required uint32 courage = 2;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 2;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);
  
  // required uint32 charm = 3;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 3;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);
  
  // required uint32 trick = 4;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 4;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTrainInfoRsp)
 private:
  inline void set_has_potential();
  inline void clear_has_potential();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 potential_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainReq : public ::google::protobuf::Message {
 public:
  CSTrainReq();
  virtual ~CSTrainReq();
  
  CSTrainReq(const CSTrainReq& from);
  
  inline CSTrainReq& operator=(const CSTrainReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainReq& default_instance();
  
  void Swap(CSTrainReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainReq& from);
  void MergeFrom(const CSTrainReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTrainReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainRsp : public ::google::protobuf::Message {
 public:
  CSTrainRsp();
  virtual ~CSTrainRsp();
  
  CSTrainRsp(const CSTrainRsp& from);
  
  inline CSTrainRsp& operator=(const CSTrainRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainRsp& default_instance();
  
  void Swap(CSTrainRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainRsp& from);
  void MergeFrom(const CSTrainRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 courage = 1;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 1;
  inline ::google::protobuf::int32 courage() const;
  inline void set_courage(::google::protobuf::int32 value);
  
  // required int32 charm = 2;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 2;
  inline ::google::protobuf::int32 charm() const;
  inline void set_charm(::google::protobuf::int32 value);
  
  // required int32 trick = 3;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 3;
  inline ::google::protobuf::int32 trick() const;
  inline void set_trick(::google::protobuf::int32 value);
  
  // required bool succ = 4;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 4;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSTrainRsp)
 private:
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 courage_;
  ::google::protobuf::int32 charm_;
  ::google::protobuf::int32 trick_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineReq : public ::google::protobuf::Message {
 public:
  CSTrainDetermineReq();
  virtual ~CSTrainDetermineReq();
  
  CSTrainDetermineReq(const CSTrainDetermineReq& from);
  
  inline CSTrainDetermineReq& operator=(const CSTrainDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineReq& default_instance();
  
  void Swap(CSTrainDetermineReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineReq& from);
  void MergeFrom(const CSTrainDetermineReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainDetermineReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineRsp : public ::google::protobuf::Message {
 public:
  CSTrainDetermineRsp();
  virtual ~CSTrainDetermineRsp();
  
  CSTrainDetermineRsp(const CSTrainDetermineRsp& from);
  
  inline CSTrainDetermineRsp& operator=(const CSTrainDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineRsp& default_instance();
  
  void Swap(CSTrainDetermineRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineRsp& from);
  void MergeFrom(const CSTrainDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainDetermineRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreReq : public ::google::protobuf::Message {
 public:
  CSExploreReq();
  virtual ~CSExploreReq();
  
  CSExploreReq(const CSExploreReq& from);
  
  inline CSExploreReq& operator=(const CSExploreReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreReq& default_instance();
  
  void Swap(CSExploreReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreReq& from);
  void MergeFrom(const CSExploreReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreRsp : public ::google::protobuf::Message {
 public:
  CSExploreRsp();
  virtual ~CSExploreRsp();
  
  CSExploreRsp(const CSExploreRsp& from);
  
  inline CSExploreRsp& operator=(const CSExploreRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreRsp& default_instance();
  
  void Swap(CSExploreRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreRsp& from);
  void MergeFrom(const CSExploreRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // required uint32 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreRsp)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineReq : public ::google::protobuf::Message {
 public:
  CSExploreDetermineReq();
  virtual ~CSExploreDetermineReq();
  
  CSExploreDetermineReq(const CSExploreDetermineReq& from);
  
  inline CSExploreDetermineReq& operator=(const CSExploreDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineReq& default_instance();
  
  void Swap(CSExploreDetermineReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineReq& from);
  void MergeFrom(const CSExploreDetermineReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreDetermineReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineRsp : public ::google::protobuf::Message {
 public:
  CSExploreDetermineRsp();
  virtual ~CSExploreDetermineRsp();
  
  CSExploreDetermineRsp(const CSExploreDetermineRsp& from);
  
  inline CSExploreDetermineRsp& operator=(const CSExploreDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineRsp& default_instance();
  
  void Swap(CSExploreDetermineRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineRsp& from);
  void MergeFrom(const CSExploreDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // optional .CSReward rewards = 2;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSExploreDetermineRsp)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSReward* rewards_;
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerReq : public ::google::protobuf::Message {
 public:
  CSQueryDowerReq();
  virtual ~CSQueryDowerReq();
  
  CSQueryDowerReq(const CSQueryDowerReq& from);
  
  inline CSQueryDowerReq& operator=(const CSQueryDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerReq& default_instance();
  
  void Swap(CSQueryDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerReq& from);
  void MergeFrom(const CSQueryDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp_Dower : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp_Dower();
  virtual ~CSQueryDowerRsp_Dower();
  
  CSQueryDowerRsp_Dower(const CSQueryDowerRsp_Dower& from);
  
  inline CSQueryDowerRsp_Dower& operator=(const CSQueryDowerRsp_Dower& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp_Dower& default_instance();
  
  void Swap(CSQueryDowerRsp_Dower* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerRsp_Dower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp_Dower& from);
  void MergeFrom(const CSQueryDowerRsp_Dower& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);
  
  // required uint32 plus = 4;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 4;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // required uint32 each_plus = 5;
  inline bool has_each_plus() const;
  inline void clear_each_plus();
  static const int kEachPlusFieldNumber = 5;
  inline ::google::protobuf::uint32 each_plus() const;
  inline void set_each_plus(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp.Dower)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_each_plus();
  inline void clear_has_each_plus();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 max_level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 each_plus_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerRsp_Dower* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp();
  virtual ~CSQueryDowerRsp();
  
  CSQueryDowerRsp(const CSQueryDowerRsp& from);
  
  inline CSQueryDowerRsp& operator=(const CSQueryDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp& default_instance();
  
  void Swap(CSQueryDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp& from);
  void MergeFrom(const CSQueryDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSQueryDowerRsp_Dower Dower;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSQueryDowerRsp.Dower dower = 1;
  inline int dower_size() const;
  inline void clear_dower();
  static const int kDowerFieldNumber = 1;
  inline const ::CSQueryDowerRsp_Dower& dower(int index) const;
  inline ::CSQueryDowerRsp_Dower* mutable_dower(int index);
  inline ::CSQueryDowerRsp_Dower* add_dower();
  inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
      dower() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
      mutable_dower();
  
  // optional uint32 timeout = 2;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower > dower_;
  ::google::protobuf::uint32 timeout_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoReq : public ::google::protobuf::Message {
 public:
  CSDowerInfoReq();
  virtual ~CSDowerInfoReq();
  
  CSDowerInfoReq(const CSDowerInfoReq& from);
  
  inline CSDowerInfoReq& operator=(const CSDowerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoReq& default_instance();
  
  void Swap(CSDowerInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoReq& from);
  void MergeFrom(const CSDowerInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerInfoReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoRsp : public ::google::protobuf::Message {
 public:
  CSDowerInfoRsp();
  virtual ~CSDowerInfoRsp();
  
  CSDowerInfoRsp(const CSDowerInfoRsp& from);
  
  inline CSDowerInfoRsp& operator=(const CSDowerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoRsp& default_instance();
  
  void Swap(CSDowerInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoRsp& from);
  void MergeFrom(const CSDowerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 next_exploit = 3;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 3;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);
  
  // required uint32 next_time = 4;
  inline bool has_next_time() const;
  inline void clear_next_time();
  static const int kNextTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 next_time() const;
  inline void set_next_time(::google::protobuf::uint32 value);
  
  // required uint32 diff_physical_attack = 5;
  inline bool has_diff_physical_attack() const;
  inline void clear_diff_physical_attack();
  static const int kDiffPhysicalAttackFieldNumber = 5;
  inline ::google::protobuf::uint32 diff_physical_attack() const;
  inline void set_diff_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_magic_attack = 6;
  inline bool has_diff_magic_attack() const;
  inline void clear_diff_magic_attack();
  static const int kDiffMagicAttackFieldNumber = 6;
  inline ::google::protobuf::uint32 diff_magic_attack() const;
  inline void set_diff_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_skill_attack = 7;
  inline bool has_diff_skill_attack() const;
  inline void clear_diff_skill_attack();
  static const int kDiffSkillAttackFieldNumber = 7;
  inline ::google::protobuf::uint32 diff_skill_attack() const;
  inline void set_diff_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_physical_defence = 8;
  inline bool has_diff_physical_defence() const;
  inline void clear_diff_physical_defence();
  static const int kDiffPhysicalDefenceFieldNumber = 8;
  inline ::google::protobuf::uint32 diff_physical_defence() const;
  inline void set_diff_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_magic_defence = 9;
  inline bool has_diff_magic_defence() const;
  inline void clear_diff_magic_defence();
  static const int kDiffMagicDefenceFieldNumber = 9;
  inline ::google::protobuf::uint32 diff_magic_defence() const;
  inline void set_diff_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_skill_defence = 10;
  inline bool has_diff_skill_defence() const;
  inline void clear_diff_skill_defence();
  static const int kDiffSkillDefenceFieldNumber = 10;
  inline ::google::protobuf::uint32 diff_skill_defence() const;
  inline void set_diff_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_hp = 11;
  inline bool has_diff_hp() const;
  inline void clear_diff_hp();
  static const int kDiffHpFieldNumber = 11;
  inline ::google::protobuf::uint32 diff_hp() const;
  inline void set_diff_hp(::google::protobuf::uint32 value);
  
  // required uint32 plus = 12;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 12;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();
  inline void set_has_next_time();
  inline void clear_has_next_time();
  inline void set_has_diff_physical_attack();
  inline void clear_has_diff_physical_attack();
  inline void set_has_diff_magic_attack();
  inline void clear_has_diff_magic_attack();
  inline void set_has_diff_skill_attack();
  inline void clear_has_diff_skill_attack();
  inline void set_has_diff_physical_defence();
  inline void clear_has_diff_physical_defence();
  inline void set_has_diff_magic_defence();
  inline void clear_has_diff_magic_defence();
  inline void set_has_diff_skill_defence();
  inline void clear_has_diff_skill_defence();
  inline void set_has_diff_hp();
  inline void clear_has_diff_hp();
  inline void set_has_plus();
  inline void clear_has_plus();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 next_exploit_;
  ::google::protobuf::uint32 next_time_;
  ::google::protobuf::uint32 diff_physical_attack_;
  ::google::protobuf::uint32 diff_magic_attack_;
  ::google::protobuf::uint32 diff_skill_attack_;
  ::google::protobuf::uint32 diff_physical_defence_;
  ::google::protobuf::uint32 diff_magic_defence_;
  ::google::protobuf::uint32 diff_skill_defence_;
  ::google::protobuf::uint32 diff_hp_;
  ::google::protobuf::uint32 plus_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerReq : public ::google::protobuf::Message {
 public:
  CSDowerReq();
  virtual ~CSDowerReq();
  
  CSDowerReq(const CSDowerReq& from);
  
  inline CSDowerReq& operator=(const CSDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerReq& default_instance();
  
  void Swap(CSDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerReq& from);
  void MergeFrom(const CSDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerRsp : public ::google::protobuf::Message {
 public:
  CSDowerRsp();
  virtual ~CSDowerRsp();
  
  CSDowerRsp(const CSDowerRsp& from);
  
  inline CSDowerRsp& operator=(const CSDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerRsp& default_instance();
  
  void Swap(CSDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerRsp& from);
  void MergeFrom(const CSDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 timeout = 1;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 1;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 plus = 3;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 3;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // required uint32 next_exploit = 4;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 timeout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 next_exploit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterReq : public ::google::protobuf::Message {
 public:
  CSABMonsterReq();
  virtual ~CSABMonsterReq();
  
  CSABMonsterReq(const CSABMonsterReq& from);
  
  inline CSABMonsterReq& operator=(const CSABMonsterReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterReq& default_instance();
  
  void Swap(CSABMonsterReq* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterReq& from);
  void MergeFrom(const CSABMonsterReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 instance_type = 2 [default = 1];
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSABMonsterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterRsp_MonInfo : public ::google::protobuf::Message {
 public:
  CSABMonsterRsp_MonInfo();
  virtual ~CSABMonsterRsp_MonInfo();
  
  CSABMonsterRsp_MonInfo(const CSABMonsterRsp_MonInfo& from);
  
  inline CSABMonsterRsp_MonInfo& operator=(const CSABMonsterRsp_MonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterRsp_MonInfo& default_instance();
  
  void Swap(CSABMonsterRsp_MonInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterRsp_MonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterRsp_MonInfo& from);
  void MergeFrom(const CSABMonsterRsp_MonInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_num = 2;
  inline bool has_mon_num() const;
  inline void clear_mon_num();
  static const int kMonNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_num() const;
  inline void set_mon_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSABMonsterRsp.MonInfo)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_num();
  inline void clear_has_mon_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterRsp_MonInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterRsp : public ::google::protobuf::Message {
 public:
  CSABMonsterRsp();
  virtual ~CSABMonsterRsp();
  
  CSABMonsterRsp(const CSABMonsterRsp& from);
  
  inline CSABMonsterRsp& operator=(const CSABMonsterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterRsp& default_instance();
  
  void Swap(CSABMonsterRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterRsp& from);
  void MergeFrom(const CSABMonsterRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSABMonsterRsp_MonInfo MonInfo;
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 instance_type = 2;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // repeated .CSABMonsterRsp.MonInfo mon_infos = 3;
  inline int mon_infos_size() const;
  inline void clear_mon_infos();
  static const int kMonInfosFieldNumber = 3;
  inline const ::CSABMonsterRsp_MonInfo& mon_infos(int index) const;
  inline ::CSABMonsterRsp_MonInfo* mutable_mon_infos(int index);
  inline ::CSABMonsterRsp_MonInfo* add_mon_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >&
      mon_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >*
      mutable_mon_infos();
  
  // @@protoc_insertion_point(class_scope:CSABMonsterRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo > mon_infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleReq : public ::google::protobuf::Message {
 public:
  CSAutoBattleReq();
  virtual ~CSAutoBattleReq();
  
  CSAutoBattleReq(const CSAutoBattleReq& from);
  
  inline CSAutoBattleReq& operator=(const CSAutoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleReq& default_instance();
  
  void Swap(CSAutoBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleReq& from);
  void MergeFrom(const CSAutoBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleRsp : public ::google::protobuf::Message {
 public:
  CSAutoBattleRsp();
  virtual ~CSAutoBattleRsp();
  
  CSAutoBattleRsp(const CSAutoBattleRsp& from);
  
  inline CSAutoBattleRsp& operator=(const CSAutoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleRsp& default_instance();
  
  void Swap(CSAutoBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleRsp& from);
  void MergeFrom(const CSAutoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 instance_type = 3;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSABRewardRsp : public ::google::protobuf::Message {
 public:
  CSABRewardRsp();
  virtual ~CSABRewardRsp();
  
  CSABRewardRsp(const CSABRewardRsp& from);
  
  inline CSABRewardRsp& operator=(const CSABRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABRewardRsp& default_instance();
  
  void Swap(CSABRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSABRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABRewardRsp& from);
  void MergeFrom(const CSABRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 instance_type = 2;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // required .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSABRewardRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelAutoBattleReq : public ::google::protobuf::Message {
 public:
  CSCancelAutoBattleReq();
  virtual ~CSCancelAutoBattleReq();
  
  CSCancelAutoBattleReq(const CSCancelAutoBattleReq& from);
  
  inline CSCancelAutoBattleReq& operator=(const CSCancelAutoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelAutoBattleReq& default_instance();
  
  void Swap(CSCancelAutoBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCancelAutoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelAutoBattleReq& from);
  void MergeFrom(const CSCancelAutoBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCancelAutoBattleReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCancelAutoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelAutoBattleRsp : public ::google::protobuf::Message {
 public:
  CSCancelAutoBattleRsp();
  virtual ~CSCancelAutoBattleRsp();
  
  CSCancelAutoBattleRsp(const CSCancelAutoBattleRsp& from);
  
  inline CSCancelAutoBattleRsp& operator=(const CSCancelAutoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelAutoBattleRsp& default_instance();
  
  void Swap(CSCancelAutoBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCancelAutoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelAutoBattleRsp& from);
  void MergeFrom(const CSCancelAutoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCancelAutoBattleRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCancelAutoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterReq : public ::google::protobuf::Message {
 public:
  CSExchangeParameterReq();
  virtual ~CSExchangeParameterReq();
  
  CSExchangeParameterReq(const CSExchangeParameterReq& from);
  
  inline CSExchangeParameterReq& operator=(const CSExchangeParameterReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterReq& default_instance();
  
  void Swap(CSExchangeParameterReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterReq& from);
  void MergeFrom(const CSExchangeParameterReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterRsp : public ::google::protobuf::Message {
 public:
  CSExchangeParameterRsp();
  virtual ~CSExchangeParameterRsp();
  
  CSExchangeParameterRsp(const CSExchangeParameterRsp& from);
  
  inline CSExchangeParameterRsp& operator=(const CSExchangeParameterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterRsp& default_instance();
  
  void Swap(CSExchangeParameterRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterRsp& from);
  void MergeFrom(const CSExchangeParameterRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 3;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterRsp* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo_Item : public ::google::protobuf::Message {
 public:
  ShopItemInfo_Item();
  virtual ~ShopItemInfo_Item();
  
  ShopItemInfo_Item(const ShopItemInfo_Item& from);
  
  inline ShopItemInfo_Item& operator=(const ShopItemInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo_Item& default_instance();
  
  void Swap(ShopItemInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  ShopItemInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo_Item& from);
  void MergeFrom(const ShopItemInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ShopItemInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShopItemInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo : public ::google::protobuf::Message {
 public:
  ShopItemInfo();
  virtual ~ShopItemInfo();
  
  ShopItemInfo(const ShopItemInfo& from);
  
  inline ShopItemInfo& operator=(const ShopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo& default_instance();
  
  void Swap(ShopItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  ShopItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo& from);
  void MergeFrom(const ShopItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ShopItemInfo_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required .ShopItemInfo.Item from_item = 2;
  inline bool has_from_item() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 2;
  inline const ::ShopItemInfo_Item& from_item() const;
  inline ::ShopItemInfo_Item* mutable_from_item();
  inline ::ShopItemInfo_Item* release_from_item();
  
  // required .ShopItemInfo.Item to_item = 3;
  inline bool has_to_item() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 3;
  inline const ::ShopItemInfo_Item& to_item() const;
  inline ::ShopItemInfo_Item* mutable_to_item();
  inline ::ShopItemInfo_Item* release_to_item();
  
  // required bool is_buy = 4;
  inline bool has_is_buy() const;
  inline void clear_is_buy();
  static const int kIsBuyFieldNumber = 4;
  inline bool is_buy() const;
  inline void set_is_buy(bool value);
  
  // @@protoc_insertion_point(class_scope:ShopItemInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_from_item();
  inline void clear_has_from_item();
  inline void set_has_to_item();
  inline void clear_has_to_item();
  inline void set_has_is_buy();
  inline void clear_has_is_buy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ShopItemInfo_Item* from_item_;
  ::google::protobuf::uint32 index_;
  bool is_buy_;
  ::ShopItemInfo_Item* to_item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShopItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsReq : public ::google::protobuf::Message {
 public:
  CSGetShopItemsReq();
  virtual ~CSGetShopItemsReq();
  
  CSGetShopItemsReq(const CSGetShopItemsReq& from);
  
  inline CSGetShopItemsReq& operator=(const CSGetShopItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsReq& default_instance();
  
  void Swap(CSGetShopItemsReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShopItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsReq& from);
  void MergeFrom(const CSGetShopItemsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetShopItemsReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShopItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsRsp : public ::google::protobuf::Message {
 public:
  CSGetShopItemsRsp();
  virtual ~CSGetShopItemsRsp();
  
  CSGetShopItemsRsp(const CSGetShopItemsRsp& from);
  
  inline CSGetShopItemsRsp& operator=(const CSGetShopItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsRsp& default_instance();
  
  void Swap(CSGetShopItemsRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShopItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsRsp& from);
  void MergeFrom(const CSGetShopItemsRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ShopItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ShopItemInfo& items(int index) const;
  inline ::ShopItemInfo* mutable_items(int index);
  inline ::ShopItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
      mutable_items();
  
  // optional uint32 rtimes = 2;
  inline bool has_rtimes() const;
  inline void clear_rtimes();
  static const int kRtimesFieldNumber = 2;
  inline ::google::protobuf::uint32 rtimes() const;
  inline void set_rtimes(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetShopItemsRsp)
 private:
  inline void set_has_rtimes();
  inline void clear_has_rtimes();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ShopItemInfo > items_;
  ::google::protobuf::uint32 rtimes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShopItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemReq : public ::google::protobuf::Message {
 public:
  CSBuyShopItemReq();
  virtual ~CSBuyShopItemReq();
  
  CSBuyShopItemReq(const CSBuyShopItemReq& from);
  
  inline CSBuyShopItemReq& operator=(const CSBuyShopItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemReq& default_instance();
  
  void Swap(CSBuyShopItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSBuyShopItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemReq& from);
  void MergeFrom(const CSBuyShopItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSBuyShopItemReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBuyShopItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemRsp : public ::google::protobuf::Message {
 public:
  CSBuyShopItemRsp();
  virtual ~CSBuyShopItemRsp();
  
  CSBuyShopItemRsp(const CSBuyShopItemRsp& from);
  
  inline CSBuyShopItemRsp& operator=(const CSBuyShopItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemRsp& default_instance();
  
  void Swap(CSBuyShopItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSBuyShopItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemRsp& from);
  void MergeFrom(const CSBuyShopItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSBuyShopItemRsp)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBuyShopItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemReq : public ::google::protobuf::Message {
 public:
  CSGetUserItemReq();
  virtual ~CSGetUserItemReq();
  
  CSGetUserItemReq(const CSGetUserItemReq& from);
  
  inline CSGetUserItemReq& operator=(const CSGetUserItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemReq& default_instance();
  
  void Swap(CSGetUserItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemReq& from);
  void MergeFrom(const CSGetUserItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserItemReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemRsp : public ::google::protobuf::Message {
 public:
  CSGetUserItemRsp();
  virtual ~CSGetUserItemRsp();
  
  CSGetUserItemRsp(const CSGetUserItemRsp& from);
  
  inline CSGetUserItemRsp& operator=(const CSGetUserItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemRsp& default_instance();
  
  void Swap(CSGetUserItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemRsp& from);
  void MergeFrom(const CSGetUserItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .CSItemInfo items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSGetUserItemRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesReq : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesReq();
  virtual ~CSGetUserAttributesReq();
  
  CSGetUserAttributesReq(const CSGetUserAttributesReq& from);
  
  inline CSGetUserAttributesReq& operator=(const CSGetUserAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesReq& default_instance();
  
  void Swap(CSGetUserAttributesReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesReq& from);
  void MergeFrom(const CSGetUserAttributesReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserAttributesReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesRsp : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesRsp();
  virtual ~CSGetUserAttributesRsp();
  
  CSGetUserAttributesRsp(const CSGetUserAttributesRsp& from);
  
  inline CSGetUserAttributesRsp& operator=(const CSGetUserAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesRsp& default_instance();
  
  void Swap(CSGetUserAttributesRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesRsp& from);
  void MergeFrom(const CSGetUserAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .CSAttributesRsp attributes = 4;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 4;
  inline const ::CSAttributesRsp& attributes() const;
  inline ::CSAttributesRsp* mutable_attributes();
  inline ::CSAttributesRsp* release_attributes();
  
  // @@protoc_insertion_point(class_scope:CSGetUserAttributesRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_attributes();
  inline void clear_has_attributes();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::CSAttributesRsp* attributes_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyMoneyConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyMoneyConfInfoRsp();
  virtual ~CSNotifyMoneyConfInfoRsp();
  
  CSNotifyMoneyConfInfoRsp(const CSNotifyMoneyConfInfoRsp& from);
  
  inline CSNotifyMoneyConfInfoRsp& operator=(const CSNotifyMoneyConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyMoneyConfInfoRsp& default_instance();
  
  void Swap(CSNotifyMoneyConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyMoneyConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyMoneyConfInfoRsp& from);
  void MergeFrom(const CSNotifyMoneyConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pay = 1;
  inline bool has_pay() const;
  inline void clear_pay();
  static const int kPayFieldNumber = 1;
  inline ::google::protobuf::uint32 pay() const;
  inline void set_pay(::google::protobuf::uint32 value);
  
  // required uint32 diamond = 2;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);
  
  // required uint32 explore = 3;
  inline bool has_explore() const;
  inline void clear_explore();
  static const int kExploreFieldNumber = 3;
  inline ::google::protobuf::uint32 explore() const;
  inline void set_explore(::google::protobuf::uint32 value);
  
  // required uint32 train = 4;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 4;
  inline ::google::protobuf::uint32 train() const;
  inline void set_train(::google::protobuf::uint32 value);
  
  // required uint32 hold_on_line_max_exp = 20;
  inline bool has_hold_on_line_max_exp() const;
  inline void clear_hold_on_line_max_exp();
  static const int kHoldOnLineMaxExpFieldNumber = 20;
  inline ::google::protobuf::uint32 hold_on_line_max_exp() const;
  inline void set_hold_on_line_max_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyMoneyConfInfoRsp)
 private:
  inline void set_has_pay();
  inline void clear_has_pay();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_explore();
  inline void clear_has_explore();
  inline void set_has_train();
  inline void clear_has_train();
  inline void set_has_hold_on_line_max_exp();
  inline void clear_has_hold_on_line_max_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pay_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 explore_;
  ::google::protobuf::uint32 train_;
  ::google::protobuf::uint32 hold_on_line_max_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyMoneyConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyLevelConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyLevelConfInfoRsp();
  virtual ~CSNotifyLevelConfInfoRsp();
  
  CSNotifyLevelConfInfoRsp(const CSNotifyLevelConfInfoRsp& from);
  
  inline CSNotifyLevelConfInfoRsp& operator=(const CSNotifyLevelConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyLevelConfInfoRsp& default_instance();
  
  void Swap(CSNotifyLevelConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyLevelConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyLevelConfInfoRsp& from);
  void MergeFrom(const CSNotifyLevelConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pay_money = 1;
  inline bool has_pay_money() const;
  inline void clear_pay_money();
  static const int kPayMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 pay_money() const;
  inline void set_pay_money(::google::protobuf::uint32 value);
  
  // required uint32 mine_money = 2;
  inline bool has_mine_money() const;
  inline void clear_mine_money();
  static const int kMineMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 mine_money() const;
  inline void set_mine_money(::google::protobuf::uint32 value);
  
  // required uint32 train_money = 3;
  inline bool has_train_money() const;
  inline void clear_train_money();
  static const int kTrainMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 train_money() const;
  inline void set_train_money(::google::protobuf::uint32 value);
  
  // required uint32 suspend_limit_exp = 4;
  inline bool has_suspend_limit_exp() const;
  inline void clear_suspend_limit_exp();
  static const int kSuspendLimitExpFieldNumber = 4;
  inline ::google::protobuf::uint32 suspend_limit_exp() const;
  inline void set_suspend_limit_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyLevelConfInfoRsp)
 private:
  inline void set_has_pay_money();
  inline void clear_has_pay_money();
  inline void set_has_mine_money();
  inline void clear_has_mine_money();
  inline void set_has_train_money();
  inline void clear_has_train_money();
  inline void set_has_suspend_limit_exp();
  inline void clear_has_suspend_limit_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pay_money_;
  ::google::protobuf::uint32 mine_money_;
  ::google::protobuf::uint32 train_money_;
  ::google::protobuf::uint32 suspend_limit_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyLevelConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyVipConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyVipConfInfoRsp();
  virtual ~CSNotifyVipConfInfoRsp();
  
  CSNotifyVipConfInfoRsp(const CSNotifyVipConfInfoRsp& from);
  
  inline CSNotifyVipConfInfoRsp& operator=(const CSNotifyVipConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyVipConfInfoRsp& default_instance();
  
  void Swap(CSNotifyVipConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyVipConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyVipConfInfoRsp& from);
  void MergeFrom(const CSNotifyVipConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hold_on_line_max_time = 1;
  inline bool has_hold_on_line_max_time() const;
  inline void clear_hold_on_line_max_time();
  static const int kHoldOnLineMaxTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 hold_on_line_max_time() const;
  inline void set_hold_on_line_max_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyVipConfInfoRsp)
 private:
  inline void set_has_hold_on_line_max_time();
  inline void clear_has_hold_on_line_max_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hold_on_line_max_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyVipConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyCliSysFlagRsp_SysFlag : public ::google::protobuf::Message {
 public:
  CSNotifyCliSysFlagRsp_SysFlag();
  virtual ~CSNotifyCliSysFlagRsp_SysFlag();
  
  CSNotifyCliSysFlagRsp_SysFlag(const CSNotifyCliSysFlagRsp_SysFlag& from);
  
  inline CSNotifyCliSysFlagRsp_SysFlag& operator=(const CSNotifyCliSysFlagRsp_SysFlag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyCliSysFlagRsp_SysFlag& default_instance();
  
  void Swap(CSNotifyCliSysFlagRsp_SysFlag* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyCliSysFlagRsp_SysFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyCliSysFlagRsp_SysFlag& from);
  void MergeFrom(const CSNotifyCliSysFlagRsp_SysFlag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSNotifyCliSysFlagRsp.SysIndex sys_index = 1;
  inline bool has_sys_index() const;
  inline void clear_sys_index();
  static const int kSysIndexFieldNumber = 1;
  inline ::CSNotifyCliSysFlagRsp_SysIndex sys_index() const;
  inline void set_sys_index(::CSNotifyCliSysFlagRsp_SysIndex value);
  
  // required bool flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline bool flag() const;
  inline void set_flag(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyCliSysFlagRsp.SysFlag)
 private:
  inline void set_has_sys_index();
  inline void clear_has_sys_index();
  inline void set_has_flag();
  inline void clear_has_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int sys_index_;
  bool flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyCliSysFlagRsp_SysFlag* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyCliSysFlagRsp : public ::google::protobuf::Message {
 public:
  CSNotifyCliSysFlagRsp();
  virtual ~CSNotifyCliSysFlagRsp();
  
  CSNotifyCliSysFlagRsp(const CSNotifyCliSysFlagRsp& from);
  
  inline CSNotifyCliSysFlagRsp& operator=(const CSNotifyCliSysFlagRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyCliSysFlagRsp& default_instance();
  
  void Swap(CSNotifyCliSysFlagRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyCliSysFlagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyCliSysFlagRsp& from);
  void MergeFrom(const CSNotifyCliSysFlagRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSNotifyCliSysFlagRsp_SysFlag SysFlag;
  
  typedef CSNotifyCliSysFlagRsp_SysIndex SysIndex;
  static const SysIndex DOWER_SYSTEM = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
  static inline bool SysIndex_IsValid(int value) {
    return CSNotifyCliSysFlagRsp_SysIndex_IsValid(value);
  }
  static const SysIndex SysIndex_MIN =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MIN;
  static const SysIndex SysIndex_MAX =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX;
  static const int SysIndex_ARRAYSIZE =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SysIndex_descriptor() {
    return CSNotifyCliSysFlagRsp_SysIndex_descriptor();
  }
  static inline const ::std::string& SysIndex_Name(SysIndex value) {
    return CSNotifyCliSysFlagRsp_SysIndex_Name(value);
  }
  static inline bool SysIndex_Parse(const ::std::string& name,
      SysIndex* value) {
    return CSNotifyCliSysFlagRsp_SysIndex_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .CSNotifyCliSysFlagRsp.SysFlag sys_flags = 1;
  inline int sys_flags_size() const;
  inline void clear_sys_flags();
  static const int kSysFlagsFieldNumber = 1;
  inline const ::CSNotifyCliSysFlagRsp_SysFlag& sys_flags(int index) const;
  inline ::CSNotifyCliSysFlagRsp_SysFlag* mutable_sys_flags(int index);
  inline ::CSNotifyCliSysFlagRsp_SysFlag* add_sys_flags();
  inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >&
      sys_flags() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >*
      mutable_sys_flags();
  
  // @@protoc_insertion_point(class_scope:CSNotifyCliSysFlagRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag > sys_flags_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyCliSysFlagRsp* default_instance_;
};
// -------------------------------------------------------------------

class PartnerInfo : public ::google::protobuf::Message {
 public:
  PartnerInfo();
  virtual ~PartnerInfo();
  
  PartnerInfo(const PartnerInfo& from);
  
  inline PartnerInfo& operator=(const PartnerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartnerInfo& default_instance();
  
  void Swap(PartnerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PartnerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartnerInfo& from);
  void MergeFrom(const PartnerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 prestige = 7;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint32 prestige() const;
  inline void set_prestige(::google::protobuf::uint32 value);
  
  // required uint32 pvai_rank = 8;
  inline bool has_pvai_rank() const;
  inline void clear_pvai_rank();
  static const int kPvaiRankFieldNumber = 8;
  inline ::google::protobuf::uint32 pvai_rank() const;
  inline void set_pvai_rank(::google::protobuf::uint32 value);
  
  // optional uint32 time = 9 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 killed_times = 10 [default = 0];
  inline bool has_killed_times() const;
  inline void clear_killed_times();
  static const int kKilledTimesFieldNumber = 10;
  inline ::google::protobuf::uint32 killed_times() const;
  inline void set_killed_times(::google::protobuf::uint32 value);
  
  // optional uint32 kill_punish = 11 [default = 0];
  inline bool has_kill_punish() const;
  inline void clear_kill_punish();
  static const int kKillPunishFieldNumber = 11;
  inline ::google::protobuf::uint32 kill_punish() const;
  inline void set_kill_punish(::google::protobuf::uint32 value);
  
  // optional uint32 redname_lv = 12 [default = 0];
  inline bool has_redname_lv() const;
  inline void clear_redname_lv();
  static const int kRednameLvFieldNumber = 12;
  inline ::google::protobuf::uint32 redname_lv() const;
  inline void set_redname_lv(::google::protobuf::uint32 value);
  
  // optional uint32 kills = 13 [default = 0];
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 13;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);
  
  // optional uint32 isol = 14 [default = 0];
  inline bool has_isol() const;
  inline void clear_isol();
  static const int kIsolFieldNumber = 14;
  inline ::google::protobuf::uint32 isol() const;
  inline void set_isol(::google::protobuf::uint32 value);
  
  // optional uint32 powerscore = 15 [default = 0];
  inline bool has_powerscore() const;
  inline void clear_powerscore();
  static const int kPowerscoreFieldNumber = 15;
  inline ::google::protobuf::uint32 powerscore() const;
  inline void set_powerscore(::google::protobuf::uint32 value);
  
  // optional uint32 left_pvped_times = 16 [default = 0];
  inline bool has_left_pvped_times() const;
  inline void clear_left_pvped_times();
  static const int kLeftPvpedTimesFieldNumber = 16;
  inline ::google::protobuf::uint32 left_pvped_times() const;
  inline void set_left_pvped_times(::google::protobuf::uint32 value);
  
  // optional bytes gname = 17 [default = ""];
  inline bool has_gname() const;
  inline void clear_gname();
  static const int kGnameFieldNumber = 17;
  inline const ::std::string& gname() const;
  inline void set_gname(const ::std::string& value);
  inline void set_gname(const char* value);
  inline void set_gname(const void* value, size_t size);
  inline ::std::string* mutable_gname();
  inline ::std::string* release_gname();
  
  // @@protoc_insertion_point(class_scope:PartnerInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_pvai_rank();
  inline void clear_has_pvai_rank();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_killed_times();
  inline void clear_has_killed_times();
  inline void set_has_kill_punish();
  inline void clear_has_kill_punish();
  inline void set_has_redname_lv();
  inline void clear_has_redname_lv();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_isol();
  inline void clear_has_isol();
  inline void set_has_powerscore();
  inline void clear_has_powerscore();
  inline void set_has_left_pvped_times();
  inline void clear_has_left_pvped_times();
  inline void set_has_gname();
  inline void clear_has_gname();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 prestige_;
  ::google::protobuf::uint32 pvai_rank_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 killed_times_;
  ::google::protobuf::uint32 kill_punish_;
  ::google::protobuf::uint32 redname_lv_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 isol_;
  ::google::protobuf::uint32 powerscore_;
  ::std::string* gname_;
  ::google::protobuf::uint32 left_pvped_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PartnerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSNearByReq : public ::google::protobuf::Message {
 public:
  CSNearByReq();
  virtual ~CSNearByReq();
  
  CSNearByReq(const CSNearByReq& from);
  
  inline CSNearByReq& operator=(const CSNearByReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearByReq& default_instance();
  
  void Swap(CSNearByReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNearByReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearByReq& from);
  void MergeFrom(const CSNearByReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNearByReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearByReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNearByRsp : public ::google::protobuf::Message {
 public:
  CSNearByRsp();
  virtual ~CSNearByRsp();
  
  CSNearByRsp(const CSNearByRsp& from);
  
  inline CSNearByRsp& operator=(const CSNearByRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearByRsp& default_instance();
  
  void Swap(CSNearByRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNearByRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearByRsp& from);
  void MergeFrom(const CSNearByRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo nearby = 1;
  inline int nearby_size() const;
  inline void clear_nearby();
  static const int kNearbyFieldNumber = 1;
  inline const ::PartnerInfo& nearby(int index) const;
  inline ::PartnerInfo* mutable_nearby(int index);
  inline ::PartnerInfo* add_nearby();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      nearby() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_nearby();
  
  // @@protoc_insertion_point(class_scope:CSNearByRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > nearby_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearByRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPartnerInfoReq : public ::google::protobuf::Message {
 public:
  CSPartnerInfoReq();
  virtual ~CSPartnerInfoReq();
  
  CSPartnerInfoReq(const CSPartnerInfoReq& from);
  
  inline CSPartnerInfoReq& operator=(const CSPartnerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPartnerInfoReq& default_instance();
  
  void Swap(CSPartnerInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPartnerInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPartnerInfoReq& from);
  void MergeFrom(const CSPartnerInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPartnerInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPartnerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddPartnerReq : public ::google::protobuf::Message {
 public:
  CSAddPartnerReq();
  virtual ~CSAddPartnerReq();
  
  CSAddPartnerReq(const CSAddPartnerReq& from);
  
  inline CSAddPartnerReq& operator=(const CSAddPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddPartnerReq& default_instance();
  
  void Swap(CSAddPartnerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddPartnerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddPartnerReq& from);
  void MergeFrom(const CSAddPartnerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:CSAddPartnerReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddPartnerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelPartnerReq : public ::google::protobuf::Message {
 public:
  CSDelPartnerReq();
  virtual ~CSDelPartnerReq();
  
  CSDelPartnerReq(const CSDelPartnerReq& from);
  
  inline CSDelPartnerReq& operator=(const CSDelPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelPartnerReq& default_instance();
  
  void Swap(CSDelPartnerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelPartnerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelPartnerReq& from);
  void MergeFrom(const CSDelPartnerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelPartnerReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelPartnerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPartnerInfoRsp : public ::google::protobuf::Message {
 public:
  CSPartnerInfoRsp();
  virtual ~CSPartnerInfoRsp();
  
  CSPartnerInfoRsp(const CSPartnerInfoRsp& from);
  
  inline CSPartnerInfoRsp& operator=(const CSPartnerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPartnerInfoRsp& default_instance();
  
  void Swap(CSPartnerInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPartnerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPartnerInfoRsp& from);
  void MergeFrom(const CSPartnerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo partner = 1;
  inline int partner_size() const;
  inline void clear_partner();
  static const int kPartnerFieldNumber = 1;
  inline const ::PartnerInfo& partner(int index) const;
  inline ::PartnerInfo* mutable_partner(int index);
  inline ::PartnerInfo* add_partner();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      partner() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_partner();
  
  // @@protoc_insertion_point(class_scope:CSPartnerInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > partner_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPartnerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddPartnerRsp : public ::google::protobuf::Message {
 public:
  CSAddPartnerRsp();
  virtual ~CSAddPartnerRsp();
  
  CSAddPartnerRsp(const CSAddPartnerRsp& from);
  
  inline CSAddPartnerRsp& operator=(const CSAddPartnerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddPartnerRsp& default_instance();
  
  void Swap(CSAddPartnerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddPartnerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddPartnerRsp& from);
  void MergeFrom(const CSAddPartnerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSAddPartnerRsp_AddPartnerType AddPartnerType;
  static const AddPartnerType succ = CSAddPartnerRsp_AddPartnerType_succ;
  static const AddPartnerType existed = CSAddPartnerRsp_AddPartnerType_existed;
  static const AddPartnerType nofound = CSAddPartnerRsp_AddPartnerType_nofound;
  static const AddPartnerType overflow = CSAddPartnerRsp_AddPartnerType_overflow;
  static const AddPartnerType self = CSAddPartnerRsp_AddPartnerType_self;
  static inline bool AddPartnerType_IsValid(int value) {
    return CSAddPartnerRsp_AddPartnerType_IsValid(value);
  }
  static const AddPartnerType AddPartnerType_MIN =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_MIN;
  static const AddPartnerType AddPartnerType_MAX =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX;
  static const int AddPartnerType_ARRAYSIZE =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AddPartnerType_descriptor() {
    return CSAddPartnerRsp_AddPartnerType_descriptor();
  }
  static inline const ::std::string& AddPartnerType_Name(AddPartnerType value) {
    return CSAddPartnerRsp_AddPartnerType_Name(value);
  }
  static inline bool AddPartnerType_Parse(const ::std::string& name,
      AddPartnerType* value) {
    return CSAddPartnerRsp_AddPartnerType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .CSAddPartnerRsp.AddPartnerType rsp = 1 [default = succ];
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline ::CSAddPartnerRsp_AddPartnerType rsp() const;
  inline void set_rsp(::CSAddPartnerRsp_AddPartnerType value);
  
  // @@protoc_insertion_point(class_scope:CSAddPartnerRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddPartnerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelPartnerRsp : public ::google::protobuf::Message {
 public:
  CSDelPartnerRsp();
  virtual ~CSDelPartnerRsp();
  
  CSDelPartnerRsp(const CSDelPartnerRsp& from);
  
  inline CSDelPartnerRsp& operator=(const CSDelPartnerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelPartnerRsp& default_instance();
  
  void Swap(CSDelPartnerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelPartnerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelPartnerRsp& from);
  void MergeFrom(const CSDelPartnerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelPartnerRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelPartnerRsp* default_instance_;
};
// -------------------------------------------------------------------

class DndInfo : public ::google::protobuf::Message {
 public:
  DndInfo();
  virtual ~DndInfo();
  
  DndInfo(const DndInfo& from);
  
  inline DndInfo& operator=(const DndInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DndInfo& default_instance();
  
  void Swap(DndInfo* other);
  
  // implements Message ----------------------------------------------
  
  DndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DndInfo& from);
  void MergeFrom(const DndInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:DndInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static DndInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSAddDndReq : public ::google::protobuf::Message {
 public:
  CSAddDndReq();
  virtual ~CSAddDndReq();
  
  CSAddDndReq(const CSAddDndReq& from);
  
  inline CSAddDndReq& operator=(const CSAddDndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddDndReq& default_instance();
  
  void Swap(CSAddDndReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddDndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddDndReq& from);
  void MergeFrom(const CSAddDndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddDndReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddDndReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDndInfoReq : public ::google::protobuf::Message {
 public:
  CSDndInfoReq();
  virtual ~CSDndInfoReq();
  
  CSDndInfoReq(const CSDndInfoReq& from);
  
  inline CSDndInfoReq& operator=(const CSDndInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDndInfoReq& default_instance();
  
  void Swap(CSDndInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDndInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDndInfoReq& from);
  void MergeFrom(const CSDndInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSDndInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDndInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelDndReq : public ::google::protobuf::Message {
 public:
  CSDelDndReq();
  virtual ~CSDelDndReq();
  
  CSDelDndReq(const CSDelDndReq& from);
  
  inline CSDelDndReq& operator=(const CSDelDndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelDndReq& default_instance();
  
  void Swap(CSDelDndReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelDndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelDndReq& from);
  void MergeFrom(const CSDelDndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelDndReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelDndReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDndInfoRsp : public ::google::protobuf::Message {
 public:
  CSDndInfoRsp();
  virtual ~CSDndInfoRsp();
  
  CSDndInfoRsp(const CSDndInfoRsp& from);
  
  inline CSDndInfoRsp& operator=(const CSDndInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDndInfoRsp& default_instance();
  
  void Swap(CSDndInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDndInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDndInfoRsp& from);
  void MergeFrom(const CSDndInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DndInfo dnd = 1;
  inline int dnd_size() const;
  inline void clear_dnd();
  static const int kDndFieldNumber = 1;
  inline const ::DndInfo& dnd(int index) const;
  inline ::DndInfo* mutable_dnd(int index);
  inline ::DndInfo* add_dnd();
  inline const ::google::protobuf::RepeatedPtrField< ::DndInfo >&
      dnd() const;
  inline ::google::protobuf::RepeatedPtrField< ::DndInfo >*
      mutable_dnd();
  
  // @@protoc_insertion_point(class_scope:CSDndInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DndInfo > dnd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDndInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddDndRsp : public ::google::protobuf::Message {
 public:
  CSAddDndRsp();
  virtual ~CSAddDndRsp();
  
  CSAddDndRsp(const CSAddDndRsp& from);
  
  inline CSAddDndRsp& operator=(const CSAddDndRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddDndRsp& default_instance();
  
  void Swap(CSAddDndRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddDndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddDndRsp& from);
  void MergeFrom(const CSAddDndRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSAddDndRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddDndRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelDndRsp : public ::google::protobuf::Message {
 public:
  CSDelDndRsp();
  virtual ~CSDelDndRsp();
  
  CSDelDndRsp(const CSDelDndRsp& from);
  
  inline CSDelDndRsp& operator=(const CSDelDndRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelDndRsp& default_instance();
  
  void Swap(CSDelDndRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelDndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelDndRsp& from);
  void MergeFrom(const CSDelDndRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelDndRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelDndRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteReq : public ::google::protobuf::Message {
 public:
  CSNoteReq();
  virtual ~CSNoteReq();
  
  CSNoteReq(const CSNoteReq& from);
  
  inline CSNoteReq& operator=(const CSNoteReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteReq& default_instance();
  
  void Swap(CSNoteReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteReq& from);
  void MergeFrom(const CSNoteReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .NoteType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline NoteType type() const;
  inline void set_type(NoteType value);
  
  // required bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // required uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 userid = 5 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 5;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_tm = 6 [default = 0];
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 6;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 channel_id = 7 [default = 0];
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 7;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bool dnd = 8 [default = true];
  inline bool has_dnd() const;
  inline void clear_dnd();
  static const int kDndFieldNumber = 8;
  inline bool dnd() const;
  inline void set_dnd(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNoteReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_dnd();
  inline void clear_has_dnd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  int type_;
  ::google::protobuf::uint32 seq_;
  ::std::string* name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  bool dnd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteRsp : public ::google::protobuf::Message {
 public:
  CSNoteRsp();
  virtual ~CSNoteRsp();
  
  CSNoteRsp(const CSNoteRsp& from);
  
  inline CSNoteRsp& operator=(const CSNoteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteRsp& default_instance();
  
  void Swap(CSNoteRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteRsp& from);
  void MergeFrom(const CSNoteRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // required .NoteResult succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline NoteResult succ() const;
  inline void set_succ(NoteResult value);
  
  // optional uint32 dead = 3;
  inline bool has_dead() const;
  inline void clear_dead();
  static const int kDeadFieldNumber = 3;
  inline ::google::protobuf::uint32 dead() const;
  inline void set_dead(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNoteRsp)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_dead();
  inline void clear_has_dead();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seq_;
  int succ_;
  ::google::protobuf::uint32 dead_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteShow : public ::google::protobuf::Message {
 public:
  CSNoteShow();
  virtual ~CSNoteShow();
  
  CSNoteShow(const CSNoteShow& from);
  
  inline CSNoteShow& operator=(const CSNoteShow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteShow& default_instance();
  
  void Swap(CSNoteShow* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteShow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteShow& from);
  void MergeFrom(const CSNoteShow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .NoteType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline NoteType type() const;
  inline void set_type(NoteType value);
  
  // required bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional bytes tname = 4;
  inline bool has_tname() const;
  inline void clear_tname();
  static const int kTnameFieldNumber = 4;
  inline const ::std::string& tname() const;
  inline void set_tname(const ::std::string& value);
  inline void set_tname(const char* value);
  inline void set_tname(const void* value, size_t size);
  inline ::std::string* mutable_tname();
  inline ::std::string* release_tname();
  
  // optional uint32 userid = 5;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 5;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_tm = 6;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 6;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 channel_id = 7;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 7;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bool system = 8;
  inline bool has_system() const;
  inline void clear_system();
  static const int kSystemFieldNumber = 8;
  inline bool system() const;
  inline void set_system(bool value);
  
  // optional uint32 isgmuser = 9;
  inline bool has_isgmuser() const;
  inline void clear_isgmuser();
  static const int kIsgmuserFieldNumber = 9;
  inline ::google::protobuf::uint32 isgmuser() const;
  inline void set_isgmuser(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNoteShow)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tname();
  inline void clear_has_tname();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_system();
  inline void clear_has_system();
  inline void set_has_isgmuser();
  inline void clear_has_isgmuser();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  ::std::string* name_;
  int type_;
  ::google::protobuf::uint32 userid_;
  ::std::string* tname_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  bool system_;
  ::google::protobuf::uint32 isgmuser_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteShow* default_instance_;
};
// -------------------------------------------------------------------

class CSMailReq : public ::google::protobuf::Message {
 public:
  CSMailReq();
  virtual ~CSMailReq();
  
  CSMailReq(const CSMailReq& from);
  
  inline CSMailReq& operator=(const CSMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailReq& default_instance();
  
  void Swap(CSMailReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailReq& from);
  void MergeFrom(const CSMailReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailReq* default_instance_;
};
// -------------------------------------------------------------------

class AttachItem : public ::google::protobuf::Message {
 public:
  AttachItem();
  virtual ~AttachItem();
  
  AttachItem(const AttachItem& from);
  
  inline AttachItem& operator=(const AttachItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachItem& default_instance();
  
  void Swap(AttachItem* other);
  
  // implements Message ----------------------------------------------
  
  AttachItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttachItem& from);
  void MergeFrom(const AttachItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:AttachItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static AttachItem* default_instance_;
};
// -------------------------------------------------------------------

class CSMailRsp : public ::google::protobuf::Message {
 public:
  CSMailRsp();
  virtual ~CSMailRsp();
  
  CSMailRsp(const CSMailRsp& from);
  
  inline CSMailRsp& operator=(const CSMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailRsp& default_instance();
  
  void Swap(CSMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailRsp& from);
  void MergeFrom(const CSMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // optional bytes title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional bytes from = 3;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 3;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const void* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // optional bytes content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // repeated .AttachItem items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::AttachItem& items(int index) const;
  inline ::AttachItem* mutable_items(int index);
  inline ::AttachItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::AttachItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::AttachItem >*
      mutable_items();
  
  // required bool hasget = 6;
  inline bool has_hasget() const;
  inline void clear_hasget();
  static const int kHasgetFieldNumber = 6;
  inline bool hasget() const;
  inline void set_hasget(bool value);
  
  // required bytes from_tm = 7;
  inline bool has_from_tm() const;
  inline void clear_from_tm();
  static const int kFromTmFieldNumber = 7;
  inline const ::std::string& from_tm() const;
  inline void set_from_tm(const ::std::string& value);
  inline void set_from_tm(const char* value);
  inline void set_from_tm(const void* value, size_t size);
  inline ::std::string* mutable_from_tm();
  inline ::std::string* release_from_tm();
  
  // @@protoc_insertion_point(class_scope:CSMailRsp)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_hasget();
  inline void clear_has_hasget();
  inline void set_has_from_tm();
  inline void clear_has_from_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* title_;
  ::std::string* from_;
  ::google::protobuf::uint32 mailid_;
  bool hasget_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::AttachItem > items_;
  ::std::string* from_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class MailList : public ::google::protobuf::Message {
 public:
  MailList();
  virtual ~MailList();
  
  MailList(const MailList& from);
  
  inline MailList& operator=(const MailList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailList& default_instance();
  
  void Swap(MailList* other);
  
  // implements Message ----------------------------------------------
  
  MailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailList& from);
  void MergeFrom(const MailList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // optional bytes title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // required bool hasread = 3;
  inline bool has_hasread() const;
  inline void clear_hasread();
  static const int kHasreadFieldNumber = 3;
  inline bool hasread() const;
  inline void set_hasread(bool value);
  
  // required bool hasattach = 4;
  inline bool has_hasattach() const;
  inline void clear_hasattach();
  static const int kHasattachFieldNumber = 4;
  inline bool hasattach() const;
  inline void set_hasattach(bool value);
  
  // @@protoc_insertion_point(class_scope:MailList)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_hasread();
  inline void clear_has_hasread();
  inline void set_has_hasattach();
  inline void clear_has_hasattach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* title_;
  ::google::protobuf::uint32 mailid_;
  bool hasread_;
  bool hasattach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static MailList* default_instance_;
};
// -------------------------------------------------------------------

class CSMailListReq : public ::google::protobuf::Message {
 public:
  CSMailListReq();
  virtual ~CSMailListReq();
  
  CSMailListReq(const CSMailListReq& from);
  
  inline CSMailListReq& operator=(const CSMailListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailListReq& default_instance();
  
  void Swap(CSMailListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMailListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailListReq& from);
  void MergeFrom(const CSMailListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSMailListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMailListRsp : public ::google::protobuf::Message {
 public:
  CSMailListRsp();
  virtual ~CSMailListRsp();
  
  CSMailListRsp(const CSMailListRsp& from);
  
  inline CSMailListRsp& operator=(const CSMailListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailListRsp& default_instance();
  
  void Swap(CSMailListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMailListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailListRsp& from);
  void MergeFrom(const CSMailListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MailList maillist = 1;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMaillistFieldNumber = 1;
  inline const ::MailList& maillist(int index) const;
  inline ::MailList* mutable_maillist(int index);
  inline ::MailList* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::MailList >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailList >*
      mutable_maillist();
  
  // optional .CSMailRsp mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::CSMailRsp& mail() const;
  inline ::CSMailRsp* mutable_mail();
  inline ::CSMailRsp* release_mail();
  
  // @@protoc_insertion_point(class_scope:CSMailListRsp)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MailList > maillist_;
  ::CSMailRsp* mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelMailReq : public ::google::protobuf::Message {
 public:
  CSDelMailReq();
  virtual ~CSDelMailReq();
  
  CSDelMailReq(const CSDelMailReq& from);
  
  inline CSDelMailReq& operator=(const CSDelMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelMailReq& default_instance();
  
  void Swap(CSDelMailReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelMailReq& from);
  void MergeFrom(const CSDelMailReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelMailReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelMailRsp : public ::google::protobuf::Message {
 public:
  CSDelMailRsp();
  virtual ~CSDelMailRsp();
  
  CSDelMailRsp(const CSDelMailRsp& from);
  
  inline CSDelMailRsp& operator=(const CSDelMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelMailRsp& default_instance();
  
  void Swap(CSDelMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelMailRsp& from);
  void MergeFrom(const CSDelMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline bool rsp() const;
  inline void set_rsp(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelMailRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetAttachReq : public ::google::protobuf::Message {
 public:
  CSGetAttachReq();
  virtual ~CSGetAttachReq();
  
  CSGetAttachReq(const CSGetAttachReq& from);
  
  inline CSGetAttachReq& operator=(const CSGetAttachReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetAttachReq& default_instance();
  
  void Swap(CSGetAttachReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetAttachReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetAttachReq& from);
  void MergeFrom(const CSGetAttachReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetAttachReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetAttachReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetAttachRsp : public ::google::protobuf::Message {
 public:
  CSGetAttachRsp();
  virtual ~CSGetAttachRsp();
  
  CSGetAttachRsp(const CSGetAttachRsp& from);
  
  inline CSGetAttachRsp& operator=(const CSGetAttachRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetAttachRsp& default_instance();
  
  void Swap(CSGetAttachRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetAttachRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetAttachRsp& from);
  void MergeFrom(const CSGetAttachRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline ::google::protobuf::uint32 rsp() const;
  inline void set_rsp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetAttachRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetAttachRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNewMailRsp : public ::google::protobuf::Message {
 public:
  CSNewMailRsp();
  virtual ~CSNewMailRsp();
  
  CSNewMailRsp(const CSNewMailRsp& from);
  
  inline CSNewMailRsp& operator=(const CSNewMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewMailRsp& default_instance();
  
  void Swap(CSNewMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNewMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewMailRsp& from);
  void MergeFrom(const CSNewMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNewMailRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSActivityListReq : public ::google::protobuf::Message {
 public:
  CSActivityListReq();
  virtual ~CSActivityListReq();
  
  CSActivityListReq(const CSActivityListReq& from);
  
  inline CSActivityListReq& operator=(const CSActivityListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSActivityListReq& default_instance();
  
  void Swap(CSActivityListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSActivityListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSActivityListReq& from);
  void MergeFrom(const CSActivityListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSActivityListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSActivityListReq* default_instance_;
};
// -------------------------------------------------------------------

class Activity_Step : public ::google::protobuf::Message {
 public:
  Activity_Step();
  virtual ~Activity_Step();
  
  Activity_Step(const Activity_Step& from);
  
  inline Activity_Step& operator=(const Activity_Step& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity_Step& default_instance();
  
  void Swap(Activity_Step* other);
  
  // implements Message ----------------------------------------------
  
  Activity_Step* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity_Step& from);
  void MergeFrom(const Activity_Step& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 step_type = 1;
  inline bool has_step_type() const;
  inline void clear_step_type();
  static const int kStepTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 step_type() const;
  inline void set_step_type(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // required uint32 is_need_step = 4;
  inline bool has_is_need_step() const;
  inline void clear_is_need_step();
  static const int kIsNeedStepFieldNumber = 4;
  inline ::google::protobuf::uint32 is_need_step() const;
  inline void set_is_need_step(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Activity_Step)
 private:
  inline void set_has_step_type();
  inline void clear_has_step_type();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  inline void set_has_is_need_step();
  inline void clear_has_is_need_step();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 step_type_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  ::google::protobuf::uint32 is_need_step_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Activity_Step* default_instance_;
};
// -------------------------------------------------------------------

class Activity_Info : public ::google::protobuf::Message {
 public:
  Activity_Info();
  virtual ~Activity_Info();
  
  Activity_Info(const Activity_Info& from);
  
  inline Activity_Info& operator=(const Activity_Info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity_Info& default_instance();
  
  void Swap(Activity_Info* other);
  
  // implements Message ----------------------------------------------
  
  Activity_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity_Info& from);
  void MergeFrom(const Activity_Info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // repeated .Activity_Step activity_steps = 2;
  inline int activity_steps_size() const;
  inline void clear_activity_steps();
  static const int kActivityStepsFieldNumber = 2;
  inline const ::Activity_Step& activity_steps(int index) const;
  inline ::Activity_Step* mutable_activity_steps(int index);
  inline ::Activity_Step* add_activity_steps();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Step >&
      activity_steps() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Step >*
      mutable_activity_steps();
  
  // required uint32 revc_reward_times = 3;
  inline bool has_revc_reward_times() const;
  inline void clear_revc_reward_times();
  static const int kRevcRewardTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 revc_reward_times() const;
  inline void set_revc_reward_times(::google::protobuf::uint32 value);
  
  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 time_limit = 5;
  inline bool has_time_limit() const;
  inline void clear_time_limit();
  static const int kTimeLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 time_limit() const;
  inline void set_time_limit(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Activity_Info)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_revc_reward_times();
  inline void clear_has_revc_reward_times();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_time_limit();
  inline void clear_has_time_limit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Step > activity_steps_;
  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 revc_reward_times_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 time_limit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Activity_Info* default_instance_;
};
// -------------------------------------------------------------------

class CSActivityListRsp : public ::google::protobuf::Message {
 public:
  CSActivityListRsp();
  virtual ~CSActivityListRsp();
  
  CSActivityListRsp(const CSActivityListRsp& from);
  
  inline CSActivityListRsp& operator=(const CSActivityListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSActivityListRsp& default_instance();
  
  void Swap(CSActivityListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSActivityListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSActivityListRsp& from);
  void MergeFrom(const CSActivityListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Activity_Info activitys = 1;
  inline int activitys_size() const;
  inline void clear_activitys();
  static const int kActivitysFieldNumber = 1;
  inline const ::Activity_Info& activitys(int index) const;
  inline ::Activity_Info* mutable_activitys(int index);
  inline ::Activity_Info* add_activitys();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
      activitys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
      mutable_activitys();
  
  // @@protoc_insertion_point(class_scope:CSActivityListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Info > activitys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSActivityListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRewardReq : public ::google::protobuf::Message {
 public:
  CSGetActivityRewardReq();
  virtual ~CSGetActivityRewardReq();
  
  CSGetActivityRewardReq(const CSGetActivityRewardReq& from);
  
  inline CSGetActivityRewardReq& operator=(const CSGetActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRewardReq& default_instance();
  
  void Swap(CSGetActivityRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRewardReq& from);
  void MergeFrom(const CSGetActivityRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRewardReq)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 activity_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetActivityRewardRsp();
  virtual ~CSGetActivityRewardRsp();
  
  CSGetActivityRewardRsp(const CSGetActivityRewardRsp& from);
  
  inline CSGetActivityRewardRsp& operator=(const CSGetActivityRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRewardRsp& default_instance();
  
  void Swap(CSGetActivityRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRewardRsp& from);
  void MergeFrom(const CSGetActivityRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // required bool is_succ = 2;
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // optional .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRewardRsp)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 activity_id_;
  bool is_succ_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUpdateActivityInfoRsp : public ::google::protobuf::Message {
 public:
  CSUpdateActivityInfoRsp();
  virtual ~CSUpdateActivityInfoRsp();
  
  CSUpdateActivityInfoRsp(const CSUpdateActivityInfoRsp& from);
  
  inline CSUpdateActivityInfoRsp& operator=(const CSUpdateActivityInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUpdateActivityInfoRsp& default_instance();
  
  void Swap(CSUpdateActivityInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUpdateActivityInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUpdateActivityInfoRsp& from);
  void MergeFrom(const CSUpdateActivityInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Activity_Info activitys = 1;
  inline int activitys_size() const;
  inline void clear_activitys();
  static const int kActivitysFieldNumber = 1;
  inline const ::Activity_Info& activitys(int index) const;
  inline ::Activity_Info* mutable_activitys(int index);
  inline ::Activity_Info* add_activitys();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
      activitys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
      mutable_activitys();
  
  // @@protoc_insertion_point(class_scope:CSUpdateActivityInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Info > activitys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUpdateActivityInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelActivityInfoRsp : public ::google::protobuf::Message {
 public:
  CSDelActivityInfoRsp();
  virtual ~CSDelActivityInfoRsp();
  
  CSDelActivityInfoRsp(const CSDelActivityInfoRsp& from);
  
  inline CSDelActivityInfoRsp& operator=(const CSDelActivityInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelActivityInfoRsp& default_instance();
  
  void Swap(CSDelActivityInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelActivityInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelActivityInfoRsp& from);
  void MergeFrom(const CSDelActivityInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 activity_ids = 1;
  inline int activity_ids_size() const;
  inline void clear_activity_ids();
  static const int kActivityIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_ids(int index) const;
  inline void set_activity_ids(int index, ::google::protobuf::uint32 value);
  inline void add_activity_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activity_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activity_ids();
  
  // @@protoc_insertion_point(class_scope:CSDelActivityInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activity_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelActivityInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFQueryRoomReq();
  virtual ~CSCDEFQueryRoomReq();
  
  CSCDEFQueryRoomReq(const CSCDEFQueryRoomReq& from);
  
  inline CSCDEFQueryRoomReq& operator=(const CSCDEFQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFQueryRoomReq& default_instance();
  
  void Swap(CSCDEFQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFQueryRoomReq& from);
  void MergeFrom(const CSCDEFQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CDEFRoomBase : public ::google::protobuf::Message {
 public:
  CDEFRoomBase();
  virtual ~CDEFRoomBase();
  
  CDEFRoomBase(const CDEFRoomBase& from);
  
  inline CDEFRoomBase& operator=(const CDEFRoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CDEFRoomBase& default_instance();
  
  void Swap(CDEFRoomBase* other);
  
  // implements Message ----------------------------------------------
  
  CDEFRoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDEFRoomBase& from);
  void MergeFrom(const CDEFRoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CDEFRoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CDEFRoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFQueryRoomRsp();
  virtual ~CSCDEFQueryRoomRsp();
  
  CSCDEFQueryRoomRsp(const CSCDEFQueryRoomRsp& from);
  
  inline CSCDEFQueryRoomRsp& operator=(const CSCDEFQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFQueryRoomRsp& default_instance();
  
  void Swap(CSCDEFQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFQueryRoomRsp& from);
  void MergeFrom(const CSCDEFQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CDEFRoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::CDEFRoomBase& rooms(int index) const;
  inline ::CDEFRoomBase* mutable_rooms(int index);
  inline ::CDEFRoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSCDEFQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSCDEFBaseInfoRsp();
  virtual ~CSCDEFBaseInfoRsp();
  
  CSCDEFBaseInfoRsp(const CSCDEFBaseInfoRsp& from);
  
  inline CSCDEFBaseInfoRsp& operator=(const CSCDEFBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFBaseInfoRsp& default_instance();
  
  void Swap(CSCDEFBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFBaseInfoRsp& from);
  void MergeFrom(const CSCDEFBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 countdown = 1;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 1;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFBaseInfoRsp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCreateRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFCreateRoomReq();
  virtual ~CSCDEFCreateRoomReq();
  
  CSCDEFCreateRoomReq(const CSCDEFCreateRoomReq& from);
  
  inline CSCDEFCreateRoomReq& operator=(const CSCDEFCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCreateRoomReq& default_instance();
  
  void Swap(CSCDEFCreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCreateRoomReq& from);
  void MergeFrom(const CSCDEFCreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 top_level = 1;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 battle_id = 2;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFCreateRoomReq)
 private:
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 battle_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomReq();
  virtual ~CSCDEFJoinRoomReq();
  
  CSCDEFJoinRoomReq(const CSCDEFJoinRoomReq& from);
  
  inline CSCDEFJoinRoomReq& operator=(const CSCDEFJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomReq& default_instance();
  
  void Swap(CSCDEFJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomReq& from);
  void MergeFrom(const CSCDEFJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomFailureRsp : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomFailureRsp();
  virtual ~CSCDEFJoinRoomFailureRsp();
  
  CSCDEFJoinRoomFailureRsp(const CSCDEFJoinRoomFailureRsp& from);
  
  inline CSCDEFJoinRoomFailureRsp& operator=(const CSCDEFJoinRoomFailureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomFailureRsp& default_instance();
  
  void Swap(CSCDEFJoinRoomFailureRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomFailureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomFailureRsp& from);
  void MergeFrom(const CSCDEFJoinRoomFailureRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomFailureRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomFailureRsp* default_instance_;
};
// -------------------------------------------------------------------

class CDEFSeatBase : public ::google::protobuf::Message {
 public:
  CDEFSeatBase();
  virtual ~CDEFSeatBase();
  
  CDEFSeatBase(const CDEFSeatBase& from);
  
  inline CDEFSeatBase& operator=(const CDEFSeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CDEFSeatBase& default_instance();
  
  void Swap(CDEFSeatBase* other);
  
  // implements Message ----------------------------------------------
  
  CDEFSeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDEFSeatBase& from);
  void MergeFrom(const CDEFSeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // optional uint32 effective = 6;
  inline bool has_effective() const;
  inline void clear_effective();
  static const int kEffectiveFieldNumber = 6;
  inline ::google::protobuf::uint32 effective() const;
  inline void set_effective(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CDEFSeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  inline void set_has_effective();
  inline void clear_has_effective();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  ::google::protobuf::uint32 effective_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CDEFSeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomRsp();
  virtual ~CSCDEFJoinRoomRsp();
  
  CSCDEFJoinRoomRsp(const CSCDEFJoinRoomRsp& from);
  
  inline CSCDEFJoinRoomRsp& operator=(const CSCDEFJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomRsp& default_instance();
  
  void Swap(CSCDEFJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomRsp& from);
  void MergeFrom(const CSCDEFJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .CDEFSeatBase seats = 3;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 3;
  inline const ::CDEFSeatBase& seats(int index) const;
  inline ::CDEFSeatBase* mutable_seats(int index);
  inline ::CDEFSeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase > seats_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFExitRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFExitRoomReq();
  virtual ~CSCDEFExitRoomReq();
  
  CSCDEFExitRoomReq(const CSCDEFExitRoomReq& from);
  
  inline CSCDEFExitRoomReq& operator=(const CSCDEFExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFExitRoomReq& default_instance();
  
  void Swap(CSCDEFExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFExitRoomReq& from);
  void MergeFrom(const CSCDEFExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFCloseRoomRsp();
  virtual ~CSCDEFCloseRoomRsp();
  
  CSCDEFCloseRoomRsp(const CSCDEFCloseRoomRsp& from);
  
  inline CSCDEFCloseRoomRsp& operator=(const CSCDEFCloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCloseRoomRsp& default_instance();
  
  void Swap(CSCDEFCloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCloseRoomRsp& from);
  void MergeFrom(const CSCDEFCloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFCloseRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFReadyReq : public ::google::protobuf::Message {
 public:
  CSCDEFReadyReq();
  virtual ~CSCDEFReadyReq();
  
  CSCDEFReadyReq(const CSCDEFReadyReq& from);
  
  inline CSCDEFReadyReq& operator=(const CSCDEFReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFReadyReq& default_instance();
  
  void Swap(CSCDEFReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFReadyReq& from);
  void MergeFrom(const CSCDEFReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCancelReadyReq : public ::google::protobuf::Message {
 public:
  CSCDEFCancelReadyReq();
  virtual ~CSCDEFCancelReadyReq();
  
  CSCDEFCancelReadyReq(const CSCDEFCancelReadyReq& from);
  
  inline CSCDEFCancelReadyReq& operator=(const CSCDEFCancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCancelReadyReq& default_instance();
  
  void Swap(CSCDEFCancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCancelReadyReq& from);
  void MergeFrom(const CSCDEFCancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFCancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFKickoffReq : public ::google::protobuf::Message {
 public:
  CSCDEFKickoffReq();
  virtual ~CSCDEFKickoffReq();
  
  CSCDEFKickoffReq(const CSCDEFKickoffReq& from);
  
  inline CSCDEFKickoffReq& operator=(const CSCDEFKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFKickoffReq& default_instance();
  
  void Swap(CSCDEFKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFKickoffReq& from);
  void MergeFrom(const CSCDEFKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFKickoffRsp : public ::google::protobuf::Message {
 public:
  CSCDEFKickoffRsp();
  virtual ~CSCDEFKickoffRsp();
  
  CSCDEFKickoffRsp(const CSCDEFKickoffRsp& from);
  
  inline CSCDEFKickoffRsp& operator=(const CSCDEFKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFKickoffRsp& default_instance();
  
  void Swap(CSCDEFKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFKickoffRsp& from);
  void MergeFrom(const CSCDEFKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFStartReq : public ::google::protobuf::Message {
 public:
  CSCDEFStartReq();
  virtual ~CSCDEFStartReq();
  
  CSCDEFStartReq(const CSCDEFStartReq& from);
  
  inline CSCDEFStartReq& operator=(const CSCDEFStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFStartReq& default_instance();
  
  void Swap(CSCDEFStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFStartReq& from);
  void MergeFrom(const CSCDEFStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeReq : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeReq();
  virtual ~CSGetSpecActivityTimeReq();
  
  CSGetSpecActivityTimeReq(const CSGetSpecActivityTimeReq& from);
  
  inline CSGetSpecActivityTimeReq& operator=(const CSGetSpecActivityTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeReq& default_instance();
  
  void Swap(CSGetSpecActivityTimeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeReq& from);
  void MergeFrom(const CSGetSpecActivityTimeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeRsp_Time : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeRsp_Time();
  virtual ~CSGetSpecActivityTimeRsp_Time();
  
  CSGetSpecActivityTimeRsp_Time(const CSGetSpecActivityTimeRsp_Time& from);
  
  inline CSGetSpecActivityTimeRsp_Time& operator=(const CSGetSpecActivityTimeRsp_Time& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeRsp_Time& default_instance();
  
  void Swap(CSGetSpecActivityTimeRsp_Time* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeRsp_Time* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeRsp_Time& from);
  void MergeFrom(const CSGetSpecActivityTimeRsp_Time& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 enter_time = 1;
  inline bool has_enter_time() const;
  inline void clear_enter_time();
  static const int kEnterTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 enter_time() const;
  inline void set_enter_time(::google::protobuf::uint32 value);
  
  // required uint32 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // required uint32 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeRsp.Time)
 private:
  inline void set_has_enter_time();
  inline void clear_has_enter_time();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 enter_time_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 end_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeRsp_Time* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeRsp_Inter : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeRsp_Inter();
  virtual ~CSGetSpecActivityTimeRsp_Inter();
  
  CSGetSpecActivityTimeRsp_Inter(const CSGetSpecActivityTimeRsp_Inter& from);
  
  inline CSGetSpecActivityTimeRsp_Inter& operator=(const CSGetSpecActivityTimeRsp_Inter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeRsp_Inter& default_instance();
  
  void Swap(CSGetSpecActivityTimeRsp_Inter* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeRsp_Inter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeRsp_Inter& from);
  void MergeFrom(const CSGetSpecActivityTimeRsp_Inter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated .CSGetSpecActivityTimeRsp.Time ac_time = 2;
  inline int ac_time_size() const;
  inline void clear_ac_time();
  static const int kAcTimeFieldNumber = 2;
  inline const ::CSGetSpecActivityTimeRsp_Time& ac_time(int index) const;
  inline ::CSGetSpecActivityTimeRsp_Time* mutable_ac_time(int index);
  inline ::CSGetSpecActivityTimeRsp_Time* add_ac_time();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Time >&
      ac_time() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Time >*
      mutable_ac_time();
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeRsp.Inter)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Time > ac_time_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeRsp_Inter* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeRsp : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeRsp();
  virtual ~CSGetSpecActivityTimeRsp();
  
  CSGetSpecActivityTimeRsp(const CSGetSpecActivityTimeRsp& from);
  
  inline CSGetSpecActivityTimeRsp& operator=(const CSGetSpecActivityTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeRsp& default_instance();
  
  void Swap(CSGetSpecActivityTimeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeRsp& from);
  void MergeFrom(const CSGetSpecActivityTimeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSGetSpecActivityTimeRsp_Time Time;
  typedef CSGetSpecActivityTimeRsp_Inter Inter;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGetSpecActivityTimeRsp.Inter interval = 1;
  inline int interval_size() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 1;
  inline const ::CSGetSpecActivityTimeRsp_Inter& interval(int index) const;
  inline ::CSGetSpecActivityTimeRsp_Inter* mutable_interval(int index);
  inline ::CSGetSpecActivityTimeRsp_Inter* add_interval();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >&
      interval() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >*
      mutable_interval();
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter > interval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFStartRsp : public ::google::protobuf::Message {
 public:
  CSCDEFStartRsp();
  virtual ~CSCDEFStartRsp();
  
  CSCDEFStartRsp(const CSCDEFStartRsp& from);
  
  inline CSCDEFStartRsp& operator=(const CSCDEFStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFStartRsp& default_instance();
  
  void Swap(CSCDEFStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFStartRsp& from);
  void MergeFrom(const CSCDEFStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class Announcement : public ::google::protobuf::Message {
 public:
  Announcement();
  virtual ~Announcement();
  
  Announcement(const Announcement& from);
  
  inline Announcement& operator=(const Announcement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Announcement& default_instance();
  
  void Swap(Announcement* other);
  
  // implements Message ----------------------------------------------
  
  Announcement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Announcement& from);
  void MergeFrom(const Announcement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSStyle context = 1;
  inline int context_size() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline const ::CSStyle& context(int index) const;
  inline ::CSStyle* mutable_context(int index);
  inline ::CSStyle* add_context();
  inline const ::google::protobuf::RepeatedPtrField< ::CSStyle >&
      context() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSStyle >*
      mutable_context();
  
  // optional uint32 from = 2;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 2;
  inline ::google::protobuf::uint32 from() const;
  inline void set_from(::google::protobuf::uint32 value);
  
  // optional uint32 to = 3;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 3;
  inline ::google::protobuf::uint32 to() const;
  inline void set_to(::google::protobuf::uint32 value);
  
  // optional uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // required bytes title = 5;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 5;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // @@protoc_insertion_point(class_scope:Announcement)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_title();
  inline void clear_has_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSStyle > context_;
  ::google::protobuf::uint32 from_;
  ::google::protobuf::uint32 to_;
  ::std::string* title_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Announcement* default_instance_;
};
// -------------------------------------------------------------------

class CSLoginAnnouncementRsp : public ::google::protobuf::Message {
 public:
  CSLoginAnnouncementRsp();
  virtual ~CSLoginAnnouncementRsp();
  
  CSLoginAnnouncementRsp(const CSLoginAnnouncementRsp& from);
  
  inline CSLoginAnnouncementRsp& operator=(const CSLoginAnnouncementRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLoginAnnouncementRsp& default_instance();
  
  void Swap(CSLoginAnnouncementRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLoginAnnouncementRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLoginAnnouncementRsp& from);
  void MergeFrom(const CSLoginAnnouncementRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Announcement content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::Announcement& content() const;
  inline ::Announcement* mutable_content();
  inline ::Announcement* release_content();
  
  // @@protoc_insertion_point(class_scope:CSLoginAnnouncementRsp)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::Announcement* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLoginAnnouncementRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementPreReq : public ::google::protobuf::Message {
 public:
  CSAnnouncementPreReq();
  virtual ~CSAnnouncementPreReq();
  
  CSAnnouncementPreReq(const CSAnnouncementPreReq& from);
  
  inline CSAnnouncementPreReq& operator=(const CSAnnouncementPreReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementPreReq& default_instance();
  
  void Swap(CSAnnouncementPreReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementPreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementPreReq& from);
  void MergeFrom(const CSAnnouncementPreReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementPreReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementPreReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementPreRsp : public ::google::protobuf::Message {
 public:
  CSAnnouncementPreRsp();
  virtual ~CSAnnouncementPreRsp();
  
  CSAnnouncementPreRsp(const CSAnnouncementPreRsp& from);
  
  inline CSAnnouncementPreRsp& operator=(const CSAnnouncementPreRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementPreRsp& default_instance();
  
  void Swap(CSAnnouncementPreRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementPreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementPreRsp& from);
  void MergeFrom(const CSAnnouncementPreRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementPreRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementPreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementReq : public ::google::protobuf::Message {
 public:
  CSAnnouncementReq();
  virtual ~CSAnnouncementReq();
  
  CSAnnouncementReq(const CSAnnouncementReq& from);
  
  inline CSAnnouncementReq& operator=(const CSAnnouncementReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementReq& default_instance();
  
  void Swap(CSAnnouncementReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementReq& from);
  void MergeFrom(const CSAnnouncementReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementRsp : public ::google::protobuf::Message {
 public:
  CSAnnouncementRsp();
  virtual ~CSAnnouncementRsp();
  
  CSAnnouncementRsp(const CSAnnouncementRsp& from);
  
  inline CSAnnouncementRsp& operator=(const CSAnnouncementRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementRsp& default_instance();
  
  void Swap(CSAnnouncementRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementRsp& from);
  void MergeFrom(const CSAnnouncementRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Announcement content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::Announcement& content(int index) const;
  inline ::Announcement* mutable_content(int index);
  inline ::Announcement* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::Announcement >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::Announcement >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Announcement > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMaAdvertisingRsp : public ::google::protobuf::Message {
 public:
  CSMaAdvertisingRsp();
  virtual ~CSMaAdvertisingRsp();
  
  CSMaAdvertisingRsp(const CSMaAdvertisingRsp& from);
  
  inline CSMaAdvertisingRsp& operator=(const CSMaAdvertisingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMaAdvertisingRsp& default_instance();
  
  void Swap(CSMaAdvertisingRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMaAdvertisingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMaAdvertisingRsp& from);
  void MergeFrom(const CSMaAdvertisingRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSMaStyle content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::CSMaStyle& content(int index) const;
  inline ::CSMaStyle* mutable_content(int index);
  inline ::CSMaStyle* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMaStyle >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMaStyle >*
      mutable_content();
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMaAdvertisingRsp)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSMaStyle > content_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMaAdvertisingRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSStyle : public ::google::protobuf::Message {
 public:
  CSStyle();
  virtual ~CSStyle();
  
  CSStyle(const CSStyle& from);
  
  inline CSStyle& operator=(const CSStyle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSStyle& default_instance();
  
  void Swap(CSStyle* other);
  
  // implements Message ----------------------------------------------
  
  CSStyle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSStyle& from);
  void MergeFrom(const CSStyle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::uint32 red() const;
  inline void set_red(::google::protobuf::uint32 value);
  
  // required uint32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::uint32 green() const;
  inline void set_green(::google::protobuf::uint32 value);
  
  // required uint32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::uint32 blue() const;
  inline void set_blue(::google::protobuf::uint32 value);
  
  // required bytes text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // required uint32 fontsize = 5;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontsizeFieldNumber = 5;
  inline ::google::protobuf::uint32 fontsize() const;
  inline void set_fontsize(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSStyle)
 private:
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_green();
  inline void clear_has_green();
  inline void set_has_blue();
  inline void clear_has_blue();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::std::string* text_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 fontsize_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSStyle* default_instance_;
};
// -------------------------------------------------------------------

class CSMaStyle : public ::google::protobuf::Message {
 public:
  CSMaStyle();
  virtual ~CSMaStyle();
  
  CSMaStyle(const CSMaStyle& from);
  
  inline CSMaStyle& operator=(const CSMaStyle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMaStyle& default_instance();
  
  void Swap(CSMaStyle* other);
  
  // implements Message ----------------------------------------------
  
  CSMaStyle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMaStyle& from);
  void MergeFrom(const CSMaStyle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::uint32 red() const;
  inline void set_red(::google::protobuf::uint32 value);
  
  // required uint32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::uint32 green() const;
  inline void set_green(::google::protobuf::uint32 value);
  
  // required uint32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::uint32 blue() const;
  inline void set_blue(::google::protobuf::uint32 value);
  
  // required bytes text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:CSMaStyle)
 private:
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_green();
  inline void clear_has_green();
  inline void set_has_blue();
  inline void clear_has_blue();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::std::string* text_;
  ::google::protobuf::uint32 blue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMaStyle* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyRewardToOtherRsp : public ::google::protobuf::Message {
 public:
  CSNotifyRewardToOtherRsp();
  virtual ~CSNotifyRewardToOtherRsp();
  
  CSNotifyRewardToOtherRsp(const CSNotifyRewardToOtherRsp& from);
  
  inline CSNotifyRewardToOtherRsp& operator=(const CSNotifyRewardToOtherRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyRewardToOtherRsp& default_instance();
  
  void Swap(CSNotifyRewardToOtherRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyRewardToOtherRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyRewardToOtherRsp& from);
  void MergeFrom(const CSNotifyRewardToOtherRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes player_name = 1;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const void* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  
  // required .CSReward reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // optional uint32 activity_id = 3;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 3;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyRewardToOtherRsp)
 private:
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* player_name_;
  ::CSReward* reward_;
  ::google::protobuf::uint32 activity_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyRewardToOtherRsp* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg1 : public ::google::protobuf::Message {
 public:
  LyleMsg1();
  virtual ~LyleMsg1();
  
  LyleMsg1(const LyleMsg1& from);
  
  inline LyleMsg1& operator=(const LyleMsg1& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg1& default_instance();
  
  void Swap(LyleMsg1* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg1& from);
  void MergeFrom(const LyleMsg1& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg1)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg1* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg2 : public ::google::protobuf::Message {
 public:
  LyleMsg2();
  virtual ~LyleMsg2();
  
  LyleMsg2(const LyleMsg2& from);
  
  inline LyleMsg2& operator=(const LyleMsg2& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg2& default_instance();
  
  void Swap(LyleMsg2* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg2& from);
  void MergeFrom(const LyleMsg2& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg2)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg2* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg3 : public ::google::protobuf::Message {
 public:
  LyleMsg3();
  virtual ~LyleMsg3();
  
  LyleMsg3(const LyleMsg3& from);
  
  inline LyleMsg3& operator=(const LyleMsg3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg3& default_instance();
  
  void Swap(LyleMsg3* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg3& from);
  void MergeFrom(const LyleMsg3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg3)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg3* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg4 : public ::google::protobuf::Message {
 public:
  LyleMsg4();
  virtual ~LyleMsg4();
  
  LyleMsg4(const LyleMsg4& from);
  
  inline LyleMsg4& operator=(const LyleMsg4& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg4& default_instance();
  
  void Swap(LyleMsg4* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg4& from);
  void MergeFrom(const LyleMsg4& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg4)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg4* default_instance_;
};
// -------------------------------------------------------------------

class CSGetChipComposeStatusReq : public ::google::protobuf::Message {
 public:
  CSGetChipComposeStatusReq();
  virtual ~CSGetChipComposeStatusReq();
  
  CSGetChipComposeStatusReq(const CSGetChipComposeStatusReq& from);
  
  inline CSGetChipComposeStatusReq& operator=(const CSGetChipComposeStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetChipComposeStatusReq& default_instance();
  
  void Swap(CSGetChipComposeStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetChipComposeStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetChipComposeStatusReq& from);
  void MergeFrom(const CSGetChipComposeStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 opt_target = 1;
  inline bool has_opt_target() const;
  inline void clear_opt_target();
  static const int kOptTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 opt_target() const;
  inline void set_opt_target(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetChipComposeStatusReq)
 private:
  inline void set_has_opt_target();
  inline void clear_has_opt_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 opt_target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetChipComposeStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetChipComposeStatusRsp : public ::google::protobuf::Message {
 public:
  CSGetChipComposeStatusRsp();
  virtual ~CSGetChipComposeStatusRsp();
  
  CSGetChipComposeStatusRsp(const CSGetChipComposeStatusRsp& from);
  
  inline CSGetChipComposeStatusRsp& operator=(const CSGetChipComposeStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetChipComposeStatusRsp& default_instance();
  
  void Swap(CSGetChipComposeStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetChipComposeStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetChipComposeStatusRsp& from);
  void MergeFrom(const CSGetChipComposeStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 opt_target = 1;
  inline bool has_opt_target() const;
  inline void clear_opt_target();
  static const int kOptTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 opt_target() const;
  inline void set_opt_target(::google::protobuf::uint32 value);
  
  // required bool can_compose = 2;
  inline bool has_can_compose() const;
  inline void clear_can_compose();
  static const int kCanComposeFieldNumber = 2;
  inline bool can_compose() const;
  inline void set_can_compose(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetChipComposeStatusRsp)
 private:
  inline void set_has_opt_target();
  inline void clear_has_opt_target();
  inline void set_has_can_compose();
  inline void clear_has_can_compose();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 opt_target_;
  bool can_compose_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetChipComposeStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRankReq : public ::google::protobuf::Message {
 public:
  CSGetActivityRankReq();
  virtual ~CSGetActivityRankReq();
  
  CSGetActivityRankReq(const CSGetActivityRankReq& from);
  
  inline CSGetActivityRankReq& operator=(const CSGetActivityRankReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRankReq& default_instance();
  
  void Swap(CSGetActivityRankReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRankReq& from);
  void MergeFrom(const CSGetActivityRankReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // required uint32 query_type = 2;
  inline bool has_query_type() const;
  inline void clear_query_type();
  static const int kQueryTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 query_type() const;
  inline void set_query_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRankReq)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_query_type();
  inline void clear_has_query_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 query_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRankReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRankRsp_RanKInfo : public ::google::protobuf::Message {
 public:
  CSGetActivityRankRsp_RanKInfo();
  virtual ~CSGetActivityRankRsp_RanKInfo();
  
  CSGetActivityRankRsp_RanKInfo(const CSGetActivityRankRsp_RanKInfo& from);
  
  inline CSGetActivityRankRsp_RanKInfo& operator=(const CSGetActivityRankRsp_RanKInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRankRsp_RanKInfo& default_instance();
  
  void Swap(CSGetActivityRankRsp_RanKInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRankRsp_RanKInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRankRsp_RanKInfo& from);
  void MergeFrom(const CSGetActivityRankRsp_RanKInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 3;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 rank = 5;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 5;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // required uint32 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRankRsp.RanKInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 channel_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRankRsp_RanKInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRankRsp : public ::google::protobuf::Message {
 public:
  CSGetActivityRankRsp();
  virtual ~CSGetActivityRankRsp();
  
  CSGetActivityRankRsp(const CSGetActivityRankRsp& from);
  
  inline CSGetActivityRankRsp& operator=(const CSGetActivityRankRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRankRsp& default_instance();
  
  void Swap(CSGetActivityRankRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRankRsp& from);
  void MergeFrom(const CSGetActivityRankRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSGetActivityRankRsp_RanKInfo RanKInfo;
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // required uint32 query_type = 2;
  inline bool has_query_type() const;
  inline void clear_query_type();
  static const int kQueryTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 query_type() const;
  inline void set_query_type(::google::protobuf::uint32 value);
  
  // repeated .CSGetActivityRankRsp.RanKInfo rank_infos = 3;
  inline int rank_infos_size() const;
  inline void clear_rank_infos();
  static const int kRankInfosFieldNumber = 3;
  inline const ::CSGetActivityRankRsp_RanKInfo& rank_infos(int index) const;
  inline ::CSGetActivityRankRsp_RanKInfo* mutable_rank_infos(int index);
  inline ::CSGetActivityRankRsp_RanKInfo* add_rank_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGetActivityRankRsp_RanKInfo >&
      rank_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGetActivityRankRsp_RanKInfo >*
      mutable_rank_infos();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRankRsp)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_query_type();
  inline void clear_has_query_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 query_type_;
  ::google::protobuf::RepeatedPtrField< ::CSGetActivityRankRsp_RanKInfo > rank_infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAskOnlineGiftReq : public ::google::protobuf::Message {
 public:
  CSAskOnlineGiftReq();
  virtual ~CSAskOnlineGiftReq();
  
  CSAskOnlineGiftReq(const CSAskOnlineGiftReq& from);
  
  inline CSAskOnlineGiftReq& operator=(const CSAskOnlineGiftReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAskOnlineGiftReq& default_instance();
  
  void Swap(CSAskOnlineGiftReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAskOnlineGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAskOnlineGiftReq& from);
  void MergeFrom(const CSAskOnlineGiftReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAskOnlineGiftReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAskOnlineGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAskOnlineGiftRsp : public ::google::protobuf::Message {
 public:
  CSAskOnlineGiftRsp();
  virtual ~CSAskOnlineGiftRsp();
  
  CSAskOnlineGiftRsp(const CSAskOnlineGiftRsp& from);
  
  inline CSAskOnlineGiftRsp& operator=(const CSAskOnlineGiftRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAskOnlineGiftRsp& default_instance();
  
  void Swap(CSAskOnlineGiftRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAskOnlineGiftRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAskOnlineGiftRsp& from);
  void MergeFrom(const CSAskOnlineGiftRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 award_id = 1;
  inline bool has_award_id() const;
  inline void clear_award_id();
  static const int kAwardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 award_id() const;
  inline void set_award_id(::google::protobuf::uint32 value);
  
  // required int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CSAskOnlineGiftRsp)
 private:
  inline void set_has_award_id();
  inline void clear_has_award_id();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 award_id_;
  ::google::protobuf::int32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAskOnlineGiftRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetOnlineGiftReq : public ::google::protobuf::Message {
 public:
  CSGetOnlineGiftReq();
  virtual ~CSGetOnlineGiftReq();
  
  CSGetOnlineGiftReq(const CSGetOnlineGiftReq& from);
  
  inline CSGetOnlineGiftReq& operator=(const CSGetOnlineGiftReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetOnlineGiftReq& default_instance();
  
  void Swap(CSGetOnlineGiftReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetOnlineGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetOnlineGiftReq& from);
  void MergeFrom(const CSGetOnlineGiftReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetOnlineGiftReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetOnlineGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetOnlineGiftRsp : public ::google::protobuf::Message {
 public:
  CSGetOnlineGiftRsp();
  virtual ~CSGetOnlineGiftRsp();
  
  CSGetOnlineGiftRsp(const CSGetOnlineGiftRsp& from);
  
  inline CSGetOnlineGiftRsp& operator=(const CSGetOnlineGiftRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetOnlineGiftRsp& default_instance();
  
  void Swap(CSGetOnlineGiftRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetOnlineGiftRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetOnlineGiftRsp& from);
  void MergeFrom(const CSGetOnlineGiftRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetOnlineGiftRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetOnlineGiftRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCheckTopupAwardReq : public ::google::protobuf::Message {
 public:
  CSCheckTopupAwardReq();
  virtual ~CSCheckTopupAwardReq();
  
  CSCheckTopupAwardReq(const CSCheckTopupAwardReq& from);
  
  inline CSCheckTopupAwardReq& operator=(const CSCheckTopupAwardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCheckTopupAwardReq& default_instance();
  
  void Swap(CSCheckTopupAwardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCheckTopupAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCheckTopupAwardReq& from);
  void MergeFrom(const CSCheckTopupAwardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCheckTopupAwardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCheckTopupAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCheckTopupAwardRsp : public ::google::protobuf::Message {
 public:
  CSCheckTopupAwardRsp();
  virtual ~CSCheckTopupAwardRsp();
  
  CSCheckTopupAwardRsp(const CSCheckTopupAwardRsp& from);
  
  inline CSCheckTopupAwardRsp& operator=(const CSCheckTopupAwardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCheckTopupAwardRsp& default_instance();
  
  void Swap(CSCheckTopupAwardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCheckTopupAwardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCheckTopupAwardRsp& from);
  void MergeFrom(const CSCheckTopupAwardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCheckTopupAwardRsp)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCheckTopupAwardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetTopupAwardReq : public ::google::protobuf::Message {
 public:
  CSGetTopupAwardReq();
  virtual ~CSGetTopupAwardReq();
  
  CSGetTopupAwardReq(const CSGetTopupAwardReq& from);
  
  inline CSGetTopupAwardReq& operator=(const CSGetTopupAwardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetTopupAwardReq& default_instance();
  
  void Swap(CSGetTopupAwardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetTopupAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetTopupAwardReq& from);
  void MergeFrom(const CSGetTopupAwardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetTopupAwardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetTopupAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetTopupAwardRsp : public ::google::protobuf::Message {
 public:
  CSGetTopupAwardRsp();
  virtual ~CSGetTopupAwardRsp();
  
  CSGetTopupAwardRsp(const CSGetTopupAwardRsp& from);
  
  inline CSGetTopupAwardRsp& operator=(const CSGetTopupAwardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetTopupAwardRsp& default_instance();
  
  void Swap(CSGetTopupAwardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetTopupAwardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetTopupAwardRsp& from);
  void MergeFrom(const CSGetTopupAwardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetTopupAwardRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetTopupAwardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2JoinReq : public ::google::protobuf::Message {
 public:
  CSPVP2JoinReq();
  virtual ~CSPVP2JoinReq();
  
  CSPVP2JoinReq(const CSPVP2JoinReq& from);
  
  inline CSPVP2JoinReq& operator=(const CSPVP2JoinReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2JoinReq& default_instance();
  
  void Swap(CSPVP2JoinReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2JoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2JoinReq& from);
  void MergeFrom(const CSPVP2JoinReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVP2JoinReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2JoinReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2JoinRsp : public ::google::protobuf::Message {
 public:
  CSPVP2JoinRsp();
  virtual ~CSPVP2JoinRsp();
  
  CSPVP2JoinRsp(const CSPVP2JoinRsp& from);
  
  inline CSPVP2JoinRsp& operator=(const CSPVP2JoinRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2JoinRsp& default_instance();
  
  void Swap(CSPVP2JoinRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2JoinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2JoinRsp& from);
  void MergeFrom(const CSPVP2JoinRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool join_ret = 1;
  inline bool has_join_ret() const;
  inline void clear_join_ret();
  static const int kJoinRetFieldNumber = 1;
  inline bool join_ret() const;
  inline void set_join_ret(bool value);
  
  // optional uint32 start_btl_time = 2;
  inline bool has_start_btl_time() const;
  inline void clear_start_btl_time();
  static const int kStartBtlTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 start_btl_time() const;
  inline void set_start_btl_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVP2JoinRsp)
 private:
  inline void set_has_join_ret();
  inline void clear_has_join_ret();
  inline void set_has_start_btl_time();
  inline void clear_has_start_btl_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool join_ret_;
  ::google::protobuf::uint32 start_btl_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2JoinRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2BtlCancelReq : public ::google::protobuf::Message {
 public:
  CSPVP2BtlCancelReq();
  virtual ~CSPVP2BtlCancelReq();
  
  CSPVP2BtlCancelReq(const CSPVP2BtlCancelReq& from);
  
  inline CSPVP2BtlCancelReq& operator=(const CSPVP2BtlCancelReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2BtlCancelReq& default_instance();
  
  void Swap(CSPVP2BtlCancelReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2BtlCancelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2BtlCancelReq& from);
  void MergeFrom(const CSPVP2BtlCancelReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVP2BtlCancelReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2BtlCancelReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2BtlCancelRsp : public ::google::protobuf::Message {
 public:
  CSPVP2BtlCancelRsp();
  virtual ~CSPVP2BtlCancelRsp();
  
  CSPVP2BtlCancelRsp(const CSPVP2BtlCancelRsp& from);
  
  inline CSPVP2BtlCancelRsp& operator=(const CSPVP2BtlCancelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2BtlCancelRsp& default_instance();
  
  void Swap(CSPVP2BtlCancelRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2BtlCancelRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2BtlCancelRsp& from);
  void MergeFrom(const CSPVP2BtlCancelRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVP2BtlCancelRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2BtlCancelRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2RewardRsp : public ::google::protobuf::Message {
 public:
  CSPVP2RewardRsp();
  virtual ~CSPVP2RewardRsp();
  
  CSPVP2RewardRsp(const CSPVP2RewardRsp& from);
  
  inline CSPVP2RewardRsp& operator=(const CSPVP2RewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2RewardRsp& default_instance();
  
  void Swap(CSPVP2RewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2RewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2RewardRsp& from);
  void MergeFrom(const CSPVP2RewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 btl_ret = 1;
  inline bool has_btl_ret() const;
  inline void clear_btl_ret();
  static const int kBtlRetFieldNumber = 1;
  inline ::google::protobuf::uint32 btl_ret() const;
  inline void set_btl_ret(::google::protobuf::uint32 value);
  
  // required uint32 bcoin = 2;
  inline bool has_bcoin() const;
  inline void clear_bcoin();
  static const int kBcoinFieldNumber = 2;
  inline ::google::protobuf::uint32 bcoin() const;
  inline void set_bcoin(::google::protobuf::uint32 value);
  
  // required uint32 bpvp2_score = 3;
  inline bool has_bpvp2_score() const;
  inline void clear_bpvp2_score();
  static const int kBpvp2ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 bpvp2_score() const;
  inline void set_bpvp2_score(::google::protobuf::uint32 value);
  
  // optional uint32 ccoin = 4 [default = 0];
  inline bool has_ccoin() const;
  inline void clear_ccoin();
  static const int kCcoinFieldNumber = 4;
  inline ::google::protobuf::uint32 ccoin() const;
  inline void set_ccoin(::google::protobuf::uint32 value);
  
  // optional uint32 cpvp2_score = 5 [default = 0];
  inline bool has_cpvp2_score() const;
  inline void clear_cpvp2_score();
  static const int kCpvp2ScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 cpvp2_score() const;
  inline void set_cpvp2_score(::google::protobuf::uint32 value);
  
  // optional .CSReward reward = 6;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 6;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSPVP2RewardRsp)
 private:
  inline void set_has_btl_ret();
  inline void clear_has_btl_ret();
  inline void set_has_bcoin();
  inline void clear_has_bcoin();
  inline void set_has_bpvp2_score();
  inline void clear_has_bpvp2_score();
  inline void set_has_ccoin();
  inline void clear_has_ccoin();
  inline void set_has_cpvp2_score();
  inline void clear_has_cpvp2_score();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 btl_ret_;
  ::google::protobuf::uint32 bcoin_;
  ::google::protobuf::uint32 bpvp2_score_;
  ::google::protobuf::uint32 ccoin_;
  ::CSReward* reward_;
  ::google::protobuf::uint32 cpvp2_score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2RewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class cs_fairy_info : public ::google::protobuf::Message {
 public:
  cs_fairy_info();
  virtual ~cs_fairy_info();
  
  cs_fairy_info(const cs_fairy_info& from);
  
  inline cs_fairy_info& operator=(const cs_fairy_info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_fairy_info& default_instance();
  
  void Swap(cs_fairy_info* other);
  
  // implements Message ----------------------------------------------
  
  cs_fairy_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_fairy_info& from);
  void MergeFrom(const cs_fairy_info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // required uint32 fairy_id = 2;
  inline bool has_fairy_id() const;
  inline void clear_fairy_id();
  static const int kFairyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 fairy_id() const;
  inline void set_fairy_id(::google::protobuf::uint32 value);
  
  // required uint32 fairy_grade = 3;
  inline bool has_fairy_grade() const;
  inline void clear_fairy_grade();
  static const int kFairyGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 fairy_grade() const;
  inline void set_fairy_grade(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:cs_fairy_info)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_fairy_id();
  inline void clear_has_fairy_id();
  inline void set_has_fairy_grade();
  inline void clear_has_fairy_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* username_;
  ::google::protobuf::uint32 fairy_id_;
  ::google::protobuf::uint32 fairy_grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static cs_fairy_info* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryRankReq : public ::google::protobuf::Message {
 public:
  CSQueryRankReq();
  virtual ~CSQueryRankReq();
  
  CSQueryRankReq(const CSQueryRankReq& from);
  
  inline CSQueryRankReq& operator=(const CSQueryRankReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryRankReq& default_instance();
  
  void Swap(CSQueryRankReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryRankReq& from);
  void MergeFrom(const CSQueryRankReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // required uint32 rank_start = 3;
  inline bool has_rank_start() const;
  inline void clear_rank_start();
  static const int kRankStartFieldNumber = 3;
  inline ::google::protobuf::uint32 rank_start() const;
  inline void set_rank_start(::google::protobuf::uint32 value);
  
  // required uint32 rank_end = 4;
  inline bool has_rank_end() const;
  inline void clear_rank_end();
  static const int kRankEndFieldNumber = 4;
  inline ::google::protobuf::uint32 rank_end() const;
  inline void set_rank_end(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryRankReq)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_rank_start();
  inline void clear_has_rank_start();
  inline void set_has_rank_end();
  inline void clear_has_rank_end();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 rank_start_;
  ::google::protobuf::uint32 rank_end_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryRankReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryRankRsp_RankInfo : public ::google::protobuf::Message {
 public:
  CSQueryRankRsp_RankInfo();
  virtual ~CSQueryRankRsp_RankInfo();
  
  CSQueryRankRsp_RankInfo(const CSQueryRankRsp_RankInfo& from);
  
  inline CSQueryRankRsp_RankInfo& operator=(const CSQueryRankRsp_RankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryRankRsp_RankInfo& default_instance();
  
  void Swap(CSQueryRankRsp_RankInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryRankRsp_RankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryRankRsp_RankInfo& from);
  void MergeFrom(const CSQueryRankRsp_RankInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint64 score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // required uint32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // required uint32 updown = 7;
  inline bool has_updown() const;
  inline void clear_updown();
  static const int kUpdownFieldNumber = 7;
  inline ::google::protobuf::uint32 updown() const;
  inline void set_updown(::google::protobuf::uint32 value);
  
  // optional uint32 type = 8;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional bytes gname = 9;
  inline bool has_gname() const;
  inline void clear_gname();
  static const int kGnameFieldNumber = 9;
  inline const ::std::string& gname() const;
  inline void set_gname(const ::std::string& value);
  inline void set_gname(const char* value);
  inline void set_gname(const void* value, size_t size);
  inline ::std::string* mutable_gname();
  inline ::std::string* release_gname();
  
  // @@protoc_insertion_point(class_scope:CSQueryRankRsp.RankInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_updown();
  inline void clear_has_updown();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gname();
  inline void clear_has_gname();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 updown_;
  ::google::protobuf::uint32 type_;
  ::std::string* gname_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryRankRsp_RankInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryRankRsp : public ::google::protobuf::Message {
 public:
  CSQueryRankRsp();
  virtual ~CSQueryRankRsp();
  
  CSQueryRankRsp(const CSQueryRankRsp& from);
  
  inline CSQueryRankRsp& operator=(const CSQueryRankRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryRankRsp& default_instance();
  
  void Swap(CSQueryRankRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryRankRsp& from);
  void MergeFrom(const CSQueryRankRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSQueryRankRsp_RankInfo RankInfo;
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // repeated .CSQueryRankRsp.RankInfo rank_info = 3;
  inline int rank_info_size() const;
  inline void clear_rank_info();
  static const int kRankInfoFieldNumber = 3;
  inline const ::CSQueryRankRsp_RankInfo& rank_info(int index) const;
  inline ::CSQueryRankRsp_RankInfo* mutable_rank_info(int index);
  inline ::CSQueryRankRsp_RankInfo* add_rank_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CSQueryRankRsp_RankInfo >&
      rank_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSQueryRankRsp_RankInfo >*
      mutable_rank_info();
  
  // @@protoc_insertion_point(class_scope:CSQueryRankRsp)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::RepeatedPtrField< ::CSQueryRankRsp_RankInfo > rank_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryPlayerRankInfoReq : public ::google::protobuf::Message {
 public:
  CSQueryPlayerRankInfoReq();
  virtual ~CSQueryPlayerRankInfoReq();
  
  CSQueryPlayerRankInfoReq(const CSQueryPlayerRankInfoReq& from);
  
  inline CSQueryPlayerRankInfoReq& operator=(const CSQueryPlayerRankInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryPlayerRankInfoReq& default_instance();
  
  void Swap(CSQueryPlayerRankInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryPlayerRankInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryPlayerRankInfoReq& from);
  void MergeFrom(const CSQueryPlayerRankInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 3;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 4;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryPlayerRankInfoReq)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryPlayerRankInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryPlayerRankInfoRsp_RankInfo : public ::google::protobuf::Message {
 public:
  CSQueryPlayerRankInfoRsp_RankInfo();
  virtual ~CSQueryPlayerRankInfoRsp_RankInfo();
  
  CSQueryPlayerRankInfoRsp_RankInfo(const CSQueryPlayerRankInfoRsp_RankInfo& from);
  
  inline CSQueryPlayerRankInfoRsp_RankInfo& operator=(const CSQueryPlayerRankInfoRsp_RankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryPlayerRankInfoRsp_RankInfo& default_instance();
  
  void Swap(CSQueryPlayerRankInfoRsp_RankInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryPlayerRankInfoRsp_RankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryPlayerRankInfoRsp_RankInfo& from);
  void MergeFrom(const CSQueryPlayerRankInfoRsp_RankInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_type = 1;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // required uint64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // required uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryPlayerRankInfoRsp.RankInfo)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_rank();
  inline void clear_has_rank();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 rank_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryPlayerRankInfoRsp_RankInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryPlayerRankInfoRsp : public ::google::protobuf::Message {
 public:
  CSQueryPlayerRankInfoRsp();
  virtual ~CSQueryPlayerRankInfoRsp();
  
  CSQueryPlayerRankInfoRsp(const CSQueryPlayerRankInfoRsp& from);
  
  inline CSQueryPlayerRankInfoRsp& operator=(const CSQueryPlayerRankInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryPlayerRankInfoRsp& default_instance();
  
  void Swap(CSQueryPlayerRankInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryPlayerRankInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryPlayerRankInfoRsp& from);
  void MergeFrom(const CSQueryPlayerRankInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSQueryPlayerRankInfoRsp_RankInfo RankInfo;
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 3;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 4;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // repeated .CSQueryPlayerRankInfoRsp.RankInfo rank_info = 6;
  inline int rank_info_size() const;
  inline void clear_rank_info();
  static const int kRankInfoFieldNumber = 6;
  inline const ::CSQueryPlayerRankInfoRsp_RankInfo& rank_info(int index) const;
  inline ::CSQueryPlayerRankInfoRsp_RankInfo* mutable_rank_info(int index);
  inline ::CSQueryPlayerRankInfoRsp_RankInfo* add_rank_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CSQueryPlayerRankInfoRsp_RankInfo >&
      rank_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSQueryPlayerRankInfoRsp_RankInfo >*
      mutable_rank_info();
  
  // optional uint32 pvp2_daily_max_cwin_num = 7;
  inline bool has_pvp2_daily_max_cwin_num() const;
  inline void clear_pvp2_daily_max_cwin_num();
  static const int kPvp2DailyMaxCwinNumFieldNumber = 7;
  inline ::google::protobuf::uint32 pvp2_daily_max_cwin_num() const;
  inline void set_pvp2_daily_max_cwin_num(::google::protobuf::uint32 value);
  
  // optional uint32 pvp2_daily_accu_coin = 8;
  inline bool has_pvp2_daily_accu_coin() const;
  inline void clear_pvp2_daily_accu_coin();
  static const int kPvp2DailyAccuCoinFieldNumber = 8;
  inline ::google::protobuf::uint32 pvp2_daily_accu_coin() const;
  inline void set_pvp2_daily_accu_coin(::google::protobuf::uint32 value);
  
  // optional uint32 pvp2_daily_accu_reputation = 9 [default = 0];
  inline bool has_pvp2_daily_accu_reputation() const;
  inline void clear_pvp2_daily_accu_reputation();
  static const int kPvp2DailyAccuReputationFieldNumber = 9;
  inline ::google::protobuf::uint32 pvp2_daily_accu_reputation() const;
  inline void set_pvp2_daily_accu_reputation(::google::protobuf::uint32 value);
  
  // optional uint32 wb_daily_times = 10;
  inline bool has_wb_daily_times() const;
  inline void clear_wb_daily_times();
  static const int kWbDailyTimesFieldNumber = 10;
  inline ::google::protobuf::uint32 wb_daily_times() const;
  inline void set_wb_daily_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryPlayerRankInfoRsp)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pvp2_daily_max_cwin_num();
  inline void clear_has_pvp2_daily_max_cwin_num();
  inline void set_has_pvp2_daily_accu_coin();
  inline void clear_has_pvp2_daily_accu_coin();
  inline void set_has_pvp2_daily_accu_reputation();
  inline void clear_has_pvp2_daily_accu_reputation();
  inline void set_has_wb_daily_times();
  inline void clear_has_wb_daily_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::CSQueryPlayerRankInfoRsp_RankInfo > rank_info_;
  ::google::protobuf::uint32 pvp2_daily_max_cwin_num_;
  ::google::protobuf::uint32 pvp2_daily_accu_coin_;
  ::google::protobuf::uint32 pvp2_daily_accu_reputation_;
  ::google::protobuf::uint32 wb_daily_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryPlayerRankInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryRankCountReq : public ::google::protobuf::Message {
 public:
  CSQueryRankCountReq();
  virtual ~CSQueryRankCountReq();
  
  CSQueryRankCountReq(const CSQueryRankCountReq& from);
  
  inline CSQueryRankCountReq& operator=(const CSQueryRankCountReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryRankCountReq& default_instance();
  
  void Swap(CSQueryRankCountReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryRankCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryRankCountReq& from);
  void MergeFrom(const CSQueryRankCountReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryRankCountReq)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryRankCountReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryRankCountRsp : public ::google::protobuf::Message {
 public:
  CSQueryRankCountRsp();
  virtual ~CSQueryRankCountRsp();
  
  CSQueryRankCountRsp(const CSQueryRankCountRsp& from);
  
  inline CSQueryRankCountRsp& operator=(const CSQueryRankCountRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryRankCountRsp& default_instance();
  
  void Swap(CSQueryRankCountRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryRankCountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryRankCountRsp& from);
  void MergeFrom(const CSQueryRankCountRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // required uint32 rank_count = 3;
  inline bool has_rank_count() const;
  inline void clear_rank_count();
  static const int kRankCountFieldNumber = 3;
  inline ::google::protobuf::uint32 rank_count() const;
  inline void set_rank_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryRankCountRsp)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_rank_count();
  inline void clear_has_rank_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 rank_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryRankCountRsp* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg7 : public ::google::protobuf::Message {
 public:
  LyleMsg7();
  virtual ~LyleMsg7();
  
  LyleMsg7(const LyleMsg7& from);
  
  inline LyleMsg7& operator=(const LyleMsg7& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg7& default_instance();
  
  void Swap(LyleMsg7* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg7* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg7& from);
  void MergeFrom(const LyleMsg7& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg7)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg7* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg8 : public ::google::protobuf::Message {
 public:
  LyleMsg8();
  virtual ~LyleMsg8();
  
  LyleMsg8(const LyleMsg8& from);
  
  inline LyleMsg8& operator=(const LyleMsg8& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg8& default_instance();
  
  void Swap(LyleMsg8* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg8* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg8& from);
  void MergeFrom(const LyleMsg8& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg8)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg8* default_instance_;
};
// -------------------------------------------------------------------

class CSMailBasicInfo : public ::google::protobuf::Message {
 public:
  CSMailBasicInfo();
  virtual ~CSMailBasicInfo();
  
  CSMailBasicInfo(const CSMailBasicInfo& from);
  
  inline CSMailBasicInfo& operator=(const CSMailBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailBasicInfo& default_instance();
  
  void Swap(CSMailBasicInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSMailBasicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailBasicInfo& from);
  void MergeFrom(const CSMailBasicInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required uint32 mail_status = 3;
  inline bool has_mail_status() const;
  inline void clear_mail_status();
  static const int kMailStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 mail_status() const;
  inline void set_mail_status(::google::protobuf::uint32 value);
  
  // required bytes title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // required bool has_attach = 5;
  inline bool has_has_attach() const;
  inline void clear_has_attach();
  static const int kHasAttachFieldNumber = 5;
  inline bool has_attach() const;
  inline void set_has_attach(bool value);
  
  // required bool is_sys_mail = 6;
  inline bool has_is_sys_mail() const;
  inline void clear_is_sys_mail();
  static const int kIsSysMailFieldNumber = 6;
  inline bool is_sys_mail() const;
  inline void set_is_sys_mail(bool value);
  
  // @@protoc_insertion_point(class_scope:CSMailBasicInfo)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_mail_status();
  inline void clear_has_mail_status();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_has_attach();
  inline void clear_has_has_attach();
  inline void set_has_is_sys_mail();
  inline void clear_has_is_sys_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::std::string* title_;
  ::google::protobuf::uint32 mail_status_;
  bool has_attach_;
  bool is_sys_mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailBasicInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMailInfo_AMItem : public ::google::protobuf::Message {
 public:
  CSMailInfo_AMItem();
  virtual ~CSMailInfo_AMItem();
  
  CSMailInfo_AMItem(const CSMailInfo_AMItem& from);
  
  inline CSMailInfo_AMItem& operator=(const CSMailInfo_AMItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailInfo_AMItem& default_instance();
  
  void Swap(CSMailInfo_AMItem* other);
  
  // implements Message ----------------------------------------------
  
  CSMailInfo_AMItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailInfo_AMItem& from);
  void MergeFrom(const CSMailInfo_AMItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMailInfo.AMItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailInfo_AMItem* default_instance_;
};
// -------------------------------------------------------------------

class CSMailInfo : public ::google::protobuf::Message {
 public:
  CSMailInfo();
  virtual ~CSMailInfo();
  
  CSMailInfo(const CSMailInfo& from);
  
  inline CSMailInfo& operator=(const CSMailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailInfo& default_instance();
  
  void Swap(CSMailInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailInfo& from);
  void MergeFrom(const CSMailInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSMailInfo_AMItem AMItem;
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required bytes title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // required bytes from = 4;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 4;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const void* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // required bytes content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // repeated .CSMailInfo.AMItem items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::CSMailInfo_AMItem& items(int index) const;
  inline ::CSMailInfo_AMItem* mutable_items(int index);
  inline ::CSMailInfo_AMItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo_AMItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo_AMItem >*
      mutable_items();
  
  // required uint32 mail_status = 7;
  inline bool has_mail_status() const;
  inline void clear_mail_status();
  static const int kMailStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 mail_status() const;
  inline void set_mail_status(::google::protobuf::uint32 value);
  
  // required bool is_sys_mail = 8;
  inline bool has_is_sys_mail() const;
  inline void clear_is_sys_mail();
  static const int kIsSysMailFieldNumber = 8;
  inline bool is_sys_mail() const;
  inline void set_is_sys_mail(bool value);
  
  // @@protoc_insertion_point(class_scope:CSMailInfo)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_mail_status();
  inline void clear_has_mail_status();
  inline void set_has_is_sys_mail();
  inline void clear_has_is_sys_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::std::string* title_;
  ::std::string* from_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::CSMailInfo_AMItem > items_;
  ::google::protobuf::uint32 mail_status_;
  bool is_sys_mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailListReq : public ::google::protobuf::Message {
 public:
  CSGetMailListReq();
  virtual ~CSGetMailListReq();
  
  CSGetMailListReq(const CSGetMailListReq& from);
  
  inline CSGetMailListReq& operator=(const CSGetMailListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailListReq& default_instance();
  
  void Swap(CSGetMailListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailListReq& from);
  void MergeFrom(const CSGetMailListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index_start = 1;
  inline bool has_index_start() const;
  inline void clear_index_start();
  static const int kIndexStartFieldNumber = 1;
  inline ::google::protobuf::uint32 index_start() const;
  inline void set_index_start(::google::protobuf::uint32 value);
  
  // required uint32 index_over = 2;
  inline bool has_index_over() const;
  inline void clear_index_over();
  static const int kIndexOverFieldNumber = 2;
  inline ::google::protobuf::uint32 index_over() const;
  inline void set_index_over(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetMailListReq)
 private:
  inline void set_has_index_start();
  inline void clear_has_index_start();
  inline void set_has_index_over();
  inline void clear_has_index_over();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_start_;
  ::google::protobuf::uint32 index_over_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailListRsp_MailBasic : public ::google::protobuf::Message {
 public:
  CSGetMailListRsp_MailBasic();
  virtual ~CSGetMailListRsp_MailBasic();
  
  CSGetMailListRsp_MailBasic(const CSGetMailListRsp_MailBasic& from);
  
  inline CSGetMailListRsp_MailBasic& operator=(const CSGetMailListRsp_MailBasic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailListRsp_MailBasic& default_instance();
  
  void Swap(CSGetMailListRsp_MailBasic* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailListRsp_MailBasic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailListRsp_MailBasic& from);
  void MergeFrom(const CSGetMailListRsp_MailBasic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSMailBasicInfo mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::CSMailBasicInfo& mail() const;
  inline ::CSMailBasicInfo* mutable_mail();
  inline ::CSMailBasicInfo* release_mail();
  
  // required uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetMailListRsp.MailBasic)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSMailBasicInfo* mail_;
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailListRsp_MailBasic* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailListRsp : public ::google::protobuf::Message {
 public:
  CSGetMailListRsp();
  virtual ~CSGetMailListRsp();
  
  CSGetMailListRsp(const CSGetMailListRsp& from);
  
  inline CSGetMailListRsp& operator=(const CSGetMailListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailListRsp& default_instance();
  
  void Swap(CSGetMailListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailListRsp& from);
  void MergeFrom(const CSGetMailListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSGetMailListRsp_MailBasic MailBasic;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGetMailListRsp.MailBasic base_mails = 1;
  inline int base_mails_size() const;
  inline void clear_base_mails();
  static const int kBaseMailsFieldNumber = 1;
  inline const ::CSGetMailListRsp_MailBasic& base_mails(int index) const;
  inline ::CSGetMailListRsp_MailBasic* mutable_base_mails(int index);
  inline ::CSGetMailListRsp_MailBasic* add_base_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGetMailListRsp_MailBasic >&
      base_mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGetMailListRsp_MailBasic >*
      mutable_base_mails();
  
  // @@protoc_insertion_point(class_scope:CSGetMailListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGetMailListRsp_MailBasic > base_mails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailInfoReq : public ::google::protobuf::Message {
 public:
  CSGetMailInfoReq();
  virtual ~CSGetMailInfoReq();
  
  CSGetMailInfoReq(const CSGetMailInfoReq& from);
  
  inline CSGetMailInfoReq& operator=(const CSGetMailInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailInfoReq& default_instance();
  
  void Swap(CSGetMailInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailInfoReq& from);
  void MergeFrom(const CSGetMailInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetMailInfoReq)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetMailInfoRsp();
  virtual ~CSGetMailInfoRsp();
  
  CSGetMailInfoRsp(const CSGetMailInfoRsp& from);
  
  inline CSGetMailInfoRsp& operator=(const CSGetMailInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailInfoRsp& default_instance();
  
  void Swap(CSGetMailInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailInfoRsp& from);
  void MergeFrom(const CSGetMailInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CSMailInfo mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::CSMailInfo& mail() const;
  inline ::CSMailInfo* mutable_mail();
  inline ::CSMailInfo* release_mail();
  
  // @@protoc_insertion_point(class_scope:CSGetMailInfoRsp)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSMailInfo* mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class MailStatus : public ::google::protobuf::Message {
 public:
  MailStatus();
  virtual ~MailStatus();
  
  MailStatus(const MailStatus& from);
  
  inline MailStatus& operator=(const MailStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailStatus& default_instance();
  
  void Swap(MailStatus* other);
  
  // implements Message ----------------------------------------------
  
  MailStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailStatus& from);
  void MergeFrom(const MailStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required uint32 new_status = 3;
  inline bool has_new_status() const;
  inline void clear_new_status();
  static const int kNewStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 new_status() const;
  inline void set_new_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:MailStatus)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_new_status();
  inline void clear_has_new_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::google::protobuf::uint32 new_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static MailStatus* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMailStatusReq : public ::google::protobuf::Message {
 public:
  CSSetMailStatusReq();
  virtual ~CSSetMailStatusReq();
  
  CSSetMailStatusReq(const CSSetMailStatusReq& from);
  
  inline CSSetMailStatusReq& operator=(const CSSetMailStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMailStatusReq& default_instance();
  
  void Swap(CSSetMailStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMailStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMailStatusReq& from);
  void MergeFrom(const CSSetMailStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MailStatus mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::MailStatus& mails(int index) const;
  inline ::MailStatus* mutable_mails(int index);
  inline ::MailStatus* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::MailStatus >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailStatus >*
      mutable_mails();
  
  // @@protoc_insertion_point(class_scope:CSSetMailStatusReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MailStatus > mails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMailStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMailStatusRsp : public ::google::protobuf::Message {
 public:
  CSSetMailStatusRsp();
  virtual ~CSSetMailStatusRsp();
  
  CSSetMailStatusRsp(const CSSetMailStatusRsp& from);
  
  inline CSSetMailStatusRsp& operator=(const CSSetMailStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMailStatusRsp& default_instance();
  
  void Swap(CSSetMailStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMailStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMailStatusRsp& from);
  void MergeFrom(const CSSetMailStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MailStatus mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::MailStatus& mails(int index) const;
  inline ::MailStatus* mutable_mails(int index);
  inline ::MailStatus* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::MailStatus >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailStatus >*
      mutable_mails();
  
  // @@protoc_insertion_point(class_scope:CSSetMailStatusRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MailStatus > mails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMailStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyMailNumInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyMailNumInfoRsp();
  virtual ~CSNotifyMailNumInfoRsp();
  
  CSNotifyMailNumInfoRsp(const CSNotifyMailNumInfoRsp& from);
  
  inline CSNotifyMailNumInfoRsp& operator=(const CSNotifyMailNumInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyMailNumInfoRsp& default_instance();
  
  void Swap(CSNotifyMailNumInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyMailNumInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyMailNumInfoRsp& from);
  void MergeFrom(const CSNotifyMailNumInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 new_mail_num = 1;
  inline bool has_new_mail_num() const;
  inline void clear_new_mail_num();
  static const int kNewMailNumFieldNumber = 1;
  inline ::google::protobuf::uint32 new_mail_num() const;
  inline void set_new_mail_num(::google::protobuf::uint32 value);
  
  // required uint32 total_mail_num = 2;
  inline bool has_total_mail_num() const;
  inline void clear_total_mail_num();
  static const int kTotalMailNumFieldNumber = 2;
  inline ::google::protobuf::uint32 total_mail_num() const;
  inline void set_total_mail_num(::google::protobuf::uint32 value);
  
  // required uint32 has_attach_num = 3;
  inline bool has_has_attach_num() const;
  inline void clear_has_attach_num();
  static const int kHasAttachNumFieldNumber = 3;
  inline ::google::protobuf::uint32 has_attach_num() const;
  inline void set_has_attach_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyMailNumInfoRsp)
 private:
  inline void set_has_new_mail_num();
  inline void clear_has_new_mail_num();
  inline void set_has_total_mail_num();
  inline void clear_has_total_mail_num();
  inline void set_has_has_attach_num();
  inline void clear_has_has_attach_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 new_mail_num_;
  ::google::protobuf::uint32 total_mail_num_;
  ::google::protobuf::uint32 has_attach_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyMailNumInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMarqueeRsp : public ::google::protobuf::Message {
 public:
  CSMarqueeRsp();
  virtual ~CSMarqueeRsp();
  
  CSMarqueeRsp(const CSMarqueeRsp& from);
  
  inline CSMarqueeRsp& operator=(const CSMarqueeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMarqueeRsp& default_instance();
  
  void Swap(CSMarqueeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMarqueeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMarqueeRsp& from);
  void MergeFrom(const CSMarqueeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 marquee_id = 1;
  inline bool has_marquee_id() const;
  inline void clear_marquee_id();
  static const int kMarqueeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 marquee_id() const;
  inline void set_marquee_id(::google::protobuf::uint32 value);
  
  // required uint32 priority = 2;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 2;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);
  
  // optional string player1 = 3;
  inline bool has_player1() const;
  inline void clear_player1();
  static const int kPlayer1FieldNumber = 3;
  inline const ::std::string& player1() const;
  inline void set_player1(const ::std::string& value);
  inline void set_player1(const char* value);
  inline void set_player1(const char* value, size_t size);
  inline ::std::string* mutable_player1();
  inline ::std::string* release_player1();
  
  // optional string player2 = 4;
  inline bool has_player2() const;
  inline void clear_player2();
  static const int kPlayer2FieldNumber = 4;
  inline const ::std::string& player2() const;
  inline void set_player2(const ::std::string& value);
  inline void set_player2(const char* value);
  inline void set_player2(const char* value, size_t size);
  inline ::std::string* mutable_player2();
  inline ::std::string* release_player2();
  
  // optional uint32 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 number = 6;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMarqueeRsp)
 private:
  inline void set_has_marquee_id();
  inline void clear_has_marquee_id();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_player1();
  inline void clear_has_player1();
  inline void set_has_player2();
  inline void clear_has_player2();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_number();
  inline void clear_has_number();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 marquee_id_;
  ::google::protobuf::uint32 priority_;
  ::std::string* player1_;
  ::std::string* player2_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 number_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMarqueeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMagicCardReq : public ::google::protobuf::Message {
 public:
  CSMagicCardReq();
  virtual ~CSMagicCardReq();
  
  CSMagicCardReq(const CSMagicCardReq& from);
  
  inline CSMagicCardReq& operator=(const CSMagicCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMagicCardReq& default_instance();
  
  void Swap(CSMagicCardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMagicCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMagicCardReq& from);
  void MergeFrom(const CSMagicCardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes card_passwd = 1;
  inline bool has_card_passwd() const;
  inline void clear_card_passwd();
  static const int kCardPasswdFieldNumber = 1;
  inline const ::std::string& card_passwd() const;
  inline void set_card_passwd(const ::std::string& value);
  inline void set_card_passwd(const char* value);
  inline void set_card_passwd(const void* value, size_t size);
  inline ::std::string* mutable_card_passwd();
  inline ::std::string* release_card_passwd();
  
  // required .CARDTYPE type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline CARDTYPE type() const;
  inline void set_type(CARDTYPE value);
  
  // optional uint32 card_id = 3;
  inline bool has_card_id() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 3;
  inline ::google::protobuf::uint32 card_id() const;
  inline void set_card_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMagicCardReq)
 private:
  inline void set_has_card_passwd();
  inline void clear_has_card_passwd();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_card_id();
  inline void clear_has_card_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* card_passwd_;
  int type_;
  ::google::protobuf::uint32 card_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMagicCardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMagicCardRsp : public ::google::protobuf::Message {
 public:
  CSMagicCardRsp();
  virtual ~CSMagicCardRsp();
  
  CSMagicCardRsp(const CSMagicCardRsp& from);
  
  inline CSMagicCardRsp& operator=(const CSMagicCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMagicCardRsp& default_instance();
  
  void Swap(CSMagicCardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMagicCardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMagicCardRsp& from);
  void MergeFrom(const CSMagicCardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSMagicCardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMagicCardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPSetOpeningReq : public ::google::protobuf::Message {
 public:
  CSPVPSetOpeningReq();
  virtual ~CSPVPSetOpeningReq();
  
  CSPVPSetOpeningReq(const CSPVPSetOpeningReq& from);
  
  inline CSPVPSetOpeningReq& operator=(const CSPVPSetOpeningReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPSetOpeningReq& default_instance();
  
  void Swap(CSPVPSetOpeningReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPSetOpeningReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPSetOpeningReq& from);
  void MergeFrom(const CSPVPSetOpeningReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline bool open() const;
  inline void set_open(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPSetOpeningReq)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool open_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPSetOpeningReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPSetOpeningRsp : public ::google::protobuf::Message {
 public:
  CSPVPSetOpeningRsp();
  virtual ~CSPVPSetOpeningRsp();
  
  CSPVPSetOpeningRsp(const CSPVPSetOpeningRsp& from);
  
  inline CSPVPSetOpeningRsp& operator=(const CSPVPSetOpeningRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPSetOpeningRsp& default_instance();
  
  void Swap(CSPVPSetOpeningRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPSetOpeningRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPSetOpeningRsp& from);
  void MergeFrom(const CSPVPSetOpeningRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline bool open() const;
  inline void set_open(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPSetOpeningRsp)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool open_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPSetOpeningRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVESetOpeningReq : public ::google::protobuf::Message {
 public:
  CSPVESetOpeningReq();
  virtual ~CSPVESetOpeningReq();
  
  CSPVESetOpeningReq(const CSPVESetOpeningReq& from);
  
  inline CSPVESetOpeningReq& operator=(const CSPVESetOpeningReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVESetOpeningReq& default_instance();
  
  void Swap(CSPVESetOpeningReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVESetOpeningReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVESetOpeningReq& from);
  void MergeFrom(const CSPVESetOpeningReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline bool open() const;
  inline void set_open(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVESetOpeningReq)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool open_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVESetOpeningReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVESetOpeningRsp : public ::google::protobuf::Message {
 public:
  CSPVESetOpeningRsp();
  virtual ~CSPVESetOpeningRsp();
  
  CSPVESetOpeningRsp(const CSPVESetOpeningRsp& from);
  
  inline CSPVESetOpeningRsp& operator=(const CSPVESetOpeningRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVESetOpeningRsp& default_instance();
  
  void Swap(CSPVESetOpeningRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVESetOpeningRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVESetOpeningRsp& from);
  void MergeFrom(const CSPVESetOpeningRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline bool open() const;
  inline void set_open(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVESetOpeningRsp)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool open_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVESetOpeningRsp* default_instance_;
};
// -------------------------------------------------------------------

class base_info : public ::google::protobuf::Message {
 public:
  base_info();
  virtual ~base_info();
  
  base_info(const base_info& from);
  
  inline base_info& operator=(const base_info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const base_info& default_instance();
  
  void Swap(base_info* other);
  
  // implements Message ----------------------------------------------
  
  base_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const base_info& from);
  void MergeFrom(const base_info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:base_info)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static base_info* default_instance_;
};
// -------------------------------------------------------------------

class player_basic_info_t : public ::google::protobuf::Message {
 public:
  player_basic_info_t();
  virtual ~player_basic_info_t();
  
  player_basic_info_t(const player_basic_info_t& from);
  
  inline player_basic_info_t& operator=(const player_basic_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_basic_info_t& default_instance();
  
  void Swap(player_basic_info_t* other);
  
  // implements Message ----------------------------------------------
  
  player_basic_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_basic_info_t& from);
  void MergeFrom(const player_basic_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bytes name = 4 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 type = 5 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 gender = 6 [default = 0];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 6;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // optional uint32 lv = 7 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // optional uint32 time = 8 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:player_basic_info_t)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static player_basic_info_t* default_instance_;
};
// -------------------------------------------------------------------

class CSInviteToBattleReq : public ::google::protobuf::Message {
 public:
  CSInviteToBattleReq();
  virtual ~CSInviteToBattleReq();
  
  CSInviteToBattleReq(const CSInviteToBattleReq& from);
  
  inline CSInviteToBattleReq& operator=(const CSInviteToBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInviteToBattleReq& default_instance();
  
  void Swap(CSInviteToBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInviteToBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInviteToBattleReq& from);
  void MergeFrom(const CSInviteToBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);
  
  // required uint32 scene_type = 3;
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_type() const;
  inline void set_scene_type(::google::protobuf::uint32 value);
  
  // repeated .base_info invitee = 4;
  inline int invitee_size() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 4;
  inline const ::base_info& invitee(int index) const;
  inline ::base_info* mutable_invitee(int index);
  inline ::base_info* add_invitee();
  inline const ::google::protobuf::RepeatedPtrField< ::base_info >&
      invitee() const;
  inline ::google::protobuf::RepeatedPtrField< ::base_info >*
      mutable_invitee();
  
  // @@protoc_insertion_point(class_scope:CSInviteToBattleReq)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::RepeatedPtrField< ::base_info > invitee_;
  ::google::protobuf::uint32 scene_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInviteToBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInviteToBattleRsp : public ::google::protobuf::Message {
 public:
  CSInviteToBattleRsp();
  virtual ~CSInviteToBattleRsp();
  
  CSInviteToBattleRsp(const CSInviteToBattleRsp& from);
  
  inline CSInviteToBattleRsp& operator=(const CSInviteToBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInviteToBattleRsp& default_instance();
  
  void Swap(CSInviteToBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSInviteToBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInviteToBattleRsp& from);
  void MergeFrom(const CSInviteToBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);
  
  // required uint32 scene_type = 3;
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_type() const;
  inline void set_scene_type(::google::protobuf::uint32 value);
  
  // required .base_info inviter = 4;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 4;
  inline const ::base_info& inviter() const;
  inline ::base_info* mutable_inviter();
  inline ::base_info* release_inviter();
  
  // @@protoc_insertion_point(class_scope:CSInviteToBattleRsp)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();
  inline void set_has_inviter();
  inline void clear_has_inviter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 scene_id_;
  ::base_info* inviter_;
  ::google::protobuf::uint32 scene_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInviteToBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAnswerToBattleReq : public ::google::protobuf::Message {
 public:
  CSAnswerToBattleReq();
  virtual ~CSAnswerToBattleReq();
  
  CSAnswerToBattleReq(const CSAnswerToBattleReq& from);
  
  inline CSAnswerToBattleReq& operator=(const CSAnswerToBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnswerToBattleReq& default_instance();
  
  void Swap(CSAnswerToBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAnswerToBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnswerToBattleReq& from);
  void MergeFrom(const CSAnswerToBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool accept = 1;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 1;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // required .base_info inviter = 2;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 2;
  inline const ::base_info& inviter() const;
  inline ::base_info* mutable_inviter();
  inline ::base_info* release_inviter();
  
  // @@protoc_insertion_point(class_scope:CSAnswerToBattleReq)
 private:
  inline void set_has_accept();
  inline void clear_has_accept();
  inline void set_has_inviter();
  inline void clear_has_inviter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* inviter_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnswerToBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAnswerToBattleRsp : public ::google::protobuf::Message {
 public:
  CSAnswerToBattleRsp();
  virtual ~CSAnswerToBattleRsp();
  
  CSAnswerToBattleRsp(const CSAnswerToBattleRsp& from);
  
  inline CSAnswerToBattleRsp& operator=(const CSAnswerToBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnswerToBattleRsp& default_instance();
  
  void Swap(CSAnswerToBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAnswerToBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnswerToBattleRsp& from);
  void MergeFrom(const CSAnswerToBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool accept = 1;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 1;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // required .base_info invitee = 2;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 2;
  inline const ::base_info& invitee() const;
  inline ::base_info* mutable_invitee();
  inline ::base_info* release_invitee();
  
  // @@protoc_insertion_point(class_scope:CSAnswerToBattleRsp)
 private:
  inline void set_has_accept();
  inline void clear_has_accept();
  inline void set_has_invitee();
  inline void clear_has_invitee();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* invitee_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnswerToBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSLookupFriendListReq : public ::google::protobuf::Message {
 public:
  CSLookupFriendListReq();
  virtual ~CSLookupFriendListReq();
  
  CSLookupFriendListReq(const CSLookupFriendListReq& from);
  
  inline CSLookupFriendListReq& operator=(const CSLookupFriendListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLookupFriendListReq& default_instance();
  
  void Swap(CSLookupFriendListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSLookupFriendListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLookupFriendListReq& from);
  void MergeFrom(const CSLookupFriendListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .base_info friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::base_info& friends(int index) const;
  inline ::base_info* mutable_friends(int index);
  inline ::base_info* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::base_info >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::base_info >*
      mutable_friends();
  
  // @@protoc_insertion_point(class_scope:CSLookupFriendListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::base_info > friends_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLookupFriendListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSLookupFriendListRsp : public ::google::protobuf::Message {
 public:
  CSLookupFriendListRsp();
  virtual ~CSLookupFriendListRsp();
  
  CSLookupFriendListRsp(const CSLookupFriendListRsp& from);
  
  inline CSLookupFriendListRsp& operator=(const CSLookupFriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLookupFriendListRsp& default_instance();
  
  void Swap(CSLookupFriendListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLookupFriendListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLookupFriendListRsp& from);
  void MergeFrom(const CSLookupFriendListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .player_basic_info_t friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::player_basic_info_t& friends(int index) const;
  inline ::player_basic_info_t* mutable_friends(int index);
  inline ::player_basic_info_t* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >*
      mutable_friends();
  
  // repeated .player_basic_info_t off_friends = 2;
  inline int off_friends_size() const;
  inline void clear_off_friends();
  static const int kOffFriendsFieldNumber = 2;
  inline const ::player_basic_info_t& off_friends(int index) const;
  inline ::player_basic_info_t* mutable_off_friends(int index);
  inline ::player_basic_info_t* add_off_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >&
      off_friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >*
      mutable_off_friends();
  
  // @@protoc_insertion_point(class_scope:CSLookupFriendListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::player_basic_info_t > friends_;
  ::google::protobuf::RepeatedPtrField< ::player_basic_info_t > off_friends_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLookupFriendListRsp* default_instance_;
};
// -------------------------------------------------------------------

class FairyBasic : public ::google::protobuf::Message {
 public:
  FairyBasic();
  virtual ~FairyBasic();
  
  FairyBasic(const FairyBasic& from);
  
  inline FairyBasic& operator=(const FairyBasic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyBasic& default_instance();
  
  void Swap(FairyBasic* other);
  
  // implements Message ----------------------------------------------
  
  FairyBasic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyBasic& from);
  void MergeFrom(const FairyBasic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_lv = 1;
  inline bool has_fairy_lv() const;
  inline void clear_fairy_lv();
  static const int kFairyLvFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_lv() const;
  inline void set_fairy_lv(::google::protobuf::uint32 value);
  
  // required uint32 fairy_grade = 2;
  inline bool has_fairy_grade() const;
  inline void clear_fairy_grade();
  static const int kFairyGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 fairy_grade() const;
  inline void set_fairy_grade(::google::protobuf::uint32 value);
  
  // required uint32 fairy_exp = 4;
  inline bool has_fairy_exp() const;
  inline void clear_fairy_exp();
  static const int kFairyExpFieldNumber = 4;
  inline ::google::protobuf::uint32 fairy_exp() const;
  inline void set_fairy_exp(::google::protobuf::uint32 value);
  
  // required uint32 next_lv_exp = 5;
  inline bool has_next_lv_exp() const;
  inline void clear_next_lv_exp();
  static const int kNextLvExpFieldNumber = 5;
  inline ::google::protobuf::uint32 next_lv_exp() const;
  inline void set_next_lv_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FairyBasic)
 private:
  inline void set_has_fairy_lv();
  inline void clear_has_fairy_lv();
  inline void set_has_fairy_grade();
  inline void clear_has_fairy_grade();
  inline void set_has_fairy_exp();
  inline void clear_has_fairy_exp();
  inline void set_has_next_lv_exp();
  inline void clear_has_next_lv_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_lv_;
  ::google::protobuf::uint32 fairy_grade_;
  ::google::protobuf::uint32 fairy_exp_;
  ::google::protobuf::uint32 next_lv_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static FairyBasic* default_instance_;
};
// -------------------------------------------------------------------

class FairyAttr : public ::google::protobuf::Message {
 public:
  FairyAttr();
  virtual ~FairyAttr();
  
  FairyAttr(const FairyAttr& from);
  
  inline FairyAttr& operator=(const FairyAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyAttr& default_instance();
  
  void Swap(FairyAttr* other);
  
  // implements Message ----------------------------------------------
  
  FairyAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyAttr& from);
  void MergeFrom(const FairyAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FairyAttr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static FairyAttr* default_instance_;
};
// -------------------------------------------------------------------

class FairyTrainAttr : public ::google::protobuf::Message {
 public:
  FairyTrainAttr();
  virtual ~FairyTrainAttr();
  
  FairyTrainAttr(const FairyTrainAttr& from);
  
  inline FairyTrainAttr& operator=(const FairyTrainAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyTrainAttr& default_instance();
  
  void Swap(FairyTrainAttr* other);
  
  // implements Message ----------------------------------------------
  
  FairyTrainAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyTrainAttr& from);
  void MergeFrom(const FairyTrainAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FairyTrainAttr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static FairyTrainAttr* default_instance_;
};
// -------------------------------------------------------------------

class FairyInfo : public ::google::protobuf::Message {
 public:
  FairyInfo();
  virtual ~FairyInfo();
  
  FairyInfo(const FairyInfo& from);
  
  inline FairyInfo& operator=(const FairyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyInfo& default_instance();
  
  void Swap(FairyInfo* other);
  
  // implements Message ----------------------------------------------
  
  FairyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyInfo& from);
  void MergeFrom(const FairyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // required uint32 fairy_id = 2;
  inline bool has_fairy_id() const;
  inline void clear_fairy_id();
  static const int kFairyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 fairy_id() const;
  inline void set_fairy_id(::google::protobuf::uint32 value);
  
  // required uint32 fairy_born_time = 3;
  inline bool has_fairy_born_time() const;
  inline void clear_fairy_born_time();
  static const int kFairyBornTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 fairy_born_time() const;
  inline void set_fairy_born_time(::google::protobuf::uint32 value);
  
  // required uint32 fairy_get_way = 4;
  inline bool has_fairy_get_way() const;
  inline void clear_fairy_get_way();
  static const int kFairyGetWayFieldNumber = 4;
  inline ::google::protobuf::uint32 fairy_get_way() const;
  inline void set_fairy_get_way(::google::protobuf::uint32 value);
  
  // required .FairyBasic fairy_basic = 5;
  inline bool has_fairy_basic() const;
  inline void clear_fairy_basic();
  static const int kFairyBasicFieldNumber = 5;
  inline const ::FairyBasic& fairy_basic() const;
  inline ::FairyBasic* mutable_fairy_basic();
  inline ::FairyBasic* release_fairy_basic();
  
  // repeated .FairyAttr fairy_attrs = 6;
  inline int fairy_attrs_size() const;
  inline void clear_fairy_attrs();
  static const int kFairyAttrsFieldNumber = 6;
  inline const ::FairyAttr& fairy_attrs(int index) const;
  inline ::FairyAttr* mutable_fairy_attrs(int index);
  inline ::FairyAttr* add_fairy_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyAttr >&
      fairy_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyAttr >*
      mutable_fairy_attrs();
  
  // repeated .FairyTrainAttr fairy_train_attrs = 7;
  inline int fairy_train_attrs_size() const;
  inline void clear_fairy_train_attrs();
  static const int kFairyTrainAttrsFieldNumber = 7;
  inline const ::FairyTrainAttr& fairy_train_attrs(int index) const;
  inline ::FairyTrainAttr* mutable_fairy_train_attrs(int index);
  inline ::FairyTrainAttr* add_fairy_train_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
      fairy_train_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
      mutable_fairy_train_attrs();
  
  // repeated uint32 fairy_rel_ids = 8;
  inline int fairy_rel_ids_size() const;
  inline void clear_fairy_rel_ids();
  static const int kFairyRelIdsFieldNumber = 8;
  inline ::google::protobuf::uint32 fairy_rel_ids(int index) const;
  inline void set_fairy_rel_ids(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_rel_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_rel_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_rel_ids();
  
  // required uint32 fairy_effectiveness = 9;
  inline bool has_fairy_effectiveness() const;
  inline void clear_fairy_effectiveness();
  static const int kFairyEffectivenessFieldNumber = 9;
  inline ::google::protobuf::uint32 fairy_effectiveness() const;
  inline void set_fairy_effectiveness(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FairyInfo)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_fairy_id();
  inline void clear_has_fairy_id();
  inline void set_has_fairy_born_time();
  inline void clear_has_fairy_born_time();
  inline void set_has_fairy_get_way();
  inline void clear_has_fairy_get_way();
  inline void set_has_fairy_basic();
  inline void clear_has_fairy_basic();
  inline void set_has_fairy_effectiveness();
  inline void clear_has_fairy_effectiveness();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::uint32 fairy_id_;
  ::google::protobuf::uint32 fairy_born_time_;
  ::google::protobuf::uint32 fairy_get_way_;
  ::FairyBasic* fairy_basic_;
  ::google::protobuf::RepeatedPtrField< ::FairyAttr > fairy_attrs_;
  ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr > fairy_train_attrs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_rel_ids_;
  ::google::protobuf::uint32 fairy_effectiveness_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static FairyInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFairyListReq : public ::google::protobuf::Message {
 public:
  CSGetFairyListReq();
  virtual ~CSGetFairyListReq();
  
  CSGetFairyListReq(const CSGetFairyListReq& from);
  
  inline CSGetFairyListReq& operator=(const CSGetFairyListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFairyListReq& default_instance();
  
  void Swap(CSGetFairyListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetFairyListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFairyListReq& from);
  void MergeFrom(const CSGetFairyListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bool req_btl_fairy = 4;
  inline bool has_req_btl_fairy() const;
  inline void clear_req_btl_fairy();
  static const int kReqBtlFairyFieldNumber = 4;
  inline bool req_btl_fairy() const;
  inline void set_req_btl_fairy(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetFairyListReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_req_btl_fairy();
  inline void clear_has_req_btl_fairy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  bool req_btl_fairy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetFairyListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetFairyListRsp : public ::google::protobuf::Message {
 public:
  CSGetFairyListRsp();
  virtual ~CSGetFairyListRsp();
  
  CSGetFairyListRsp(const CSGetFairyListRsp& from);
  
  inline CSGetFairyListRsp& operator=(const CSGetFairyListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetFairyListRsp& default_instance();
  
  void Swap(CSGetFairyListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetFairyListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetFairyListRsp& from);
  void MergeFrom(const CSGetFairyListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .FairyInfo fairy_infos = 4;
  inline int fairy_infos_size() const;
  inline void clear_fairy_infos();
  static const int kFairyInfosFieldNumber = 4;
  inline const ::FairyInfo& fairy_infos(int index) const;
  inline ::FairyInfo* mutable_fairy_infos(int index);
  inline ::FairyInfo* add_fairy_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyInfo >&
      fairy_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyInfo >*
      mutable_fairy_infos();
  
  // @@protoc_insertion_point(class_scope:CSGetFairyListRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::FairyInfo > fairy_infos_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetFairyListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMoveFairyPosReq : public ::google::protobuf::Message {
 public:
  CSMoveFairyPosReq();
  virtual ~CSMoveFairyPosReq();
  
  CSMoveFairyPosReq(const CSMoveFairyPosReq& from);
  
  inline CSMoveFairyPosReq& operator=(const CSMoveFairyPosReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMoveFairyPosReq& default_instance();
  
  void Swap(CSMoveFairyPosReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMoveFairyPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMoveFairyPosReq& from);
  void MergeFrom(const CSMoveFairyPosReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 from_pos = 1;
  inline bool has_from_pos() const;
  inline void clear_from_pos();
  static const int kFromPosFieldNumber = 1;
  inline ::google::protobuf::uint32 from_pos() const;
  inline void set_from_pos(::google::protobuf::uint32 value);
  
  // required uint32 to_pos = 2;
  inline bool has_to_pos() const;
  inline void clear_to_pos();
  static const int kToPosFieldNumber = 2;
  inline ::google::protobuf::uint32 to_pos() const;
  inline void set_to_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMoveFairyPosReq)
 private:
  inline void set_has_from_pos();
  inline void clear_has_from_pos();
  inline void set_has_to_pos();
  inline void clear_has_to_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 from_pos_;
  ::google::protobuf::uint32 to_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMoveFairyPosReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMoveFairyPosRsp : public ::google::protobuf::Message {
 public:
  CSMoveFairyPosRsp();
  virtual ~CSMoveFairyPosRsp();
  
  CSMoveFairyPosRsp(const CSMoveFairyPosRsp& from);
  
  inline CSMoveFairyPosRsp& operator=(const CSMoveFairyPosRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMoveFairyPosRsp& default_instance();
  
  void Swap(CSMoveFairyPosRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMoveFairyPosRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMoveFairyPosRsp& from);
  void MergeFrom(const CSMoveFairyPosRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 from_pos = 1;
  inline bool has_from_pos() const;
  inline void clear_from_pos();
  static const int kFromPosFieldNumber = 1;
  inline ::google::protobuf::uint32 from_pos() const;
  inline void set_from_pos(::google::protobuf::uint32 value);
  
  // required uint32 to_pos = 2;
  inline bool has_to_pos() const;
  inline void clear_to_pos();
  static const int kToPosFieldNumber = 2;
  inline ::google::protobuf::uint32 to_pos() const;
  inline void set_to_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMoveFairyPosRsp)
 private:
  inline void set_has_from_pos();
  inline void clear_has_from_pos();
  inline void set_has_to_pos();
  inline void clear_has_to_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 from_pos_;
  ::google::protobuf::uint32 to_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMoveFairyPosRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyTrainReq : public ::google::protobuf::Message {
 public:
  CSFairyTrainReq();
  virtual ~CSFairyTrainReq();
  
  CSFairyTrainReq(const CSFairyTrainReq& from);
  
  inline CSFairyTrainReq& operator=(const CSFairyTrainReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyTrainReq& default_instance();
  
  void Swap(CSFairyTrainReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyTrainReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyTrainReq& from);
  void MergeFrom(const CSFairyTrainReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // required uint32 train_lv = 2;
  inline bool has_train_lv() const;
  inline void clear_train_lv();
  static const int kTrainLvFieldNumber = 2;
  inline ::google::protobuf::uint32 train_lv() const;
  inline void set_train_lv(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyTrainReq)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_train_lv();
  inline void clear_has_train_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::uint32 train_lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyTrainReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyTrainRsp : public ::google::protobuf::Message {
 public:
  CSFairyTrainRsp();
  virtual ~CSFairyTrainRsp();
  
  CSFairyTrainRsp(const CSFairyTrainRsp& from);
  
  inline CSFairyTrainRsp& operator=(const CSFairyTrainRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyTrainRsp& default_instance();
  
  void Swap(CSFairyTrainRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyTrainRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyTrainRsp& from);
  void MergeFrom(const CSFairyTrainRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // repeated .FairyTrainAttr fairy_train_attrs = 2;
  inline int fairy_train_attrs_size() const;
  inline void clear_fairy_train_attrs();
  static const int kFairyTrainAttrsFieldNumber = 2;
  inline const ::FairyTrainAttr& fairy_train_attrs(int index) const;
  inline ::FairyTrainAttr* mutable_fairy_train_attrs(int index);
  inline ::FairyTrainAttr* add_fairy_train_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
      fairy_train_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
      mutable_fairy_train_attrs();
  
  // required int32 eff_diff = 3;
  inline bool has_eff_diff() const;
  inline void clear_eff_diff();
  static const int kEffDiffFieldNumber = 3;
  inline ::google::protobuf::int32 eff_diff() const;
  inline void set_eff_diff(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyTrainRsp)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_eff_diff();
  inline void clear_has_eff_diff();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr > fairy_train_attrs_;
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::int32 eff_diff_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyTrainRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyTrainDetermineReq : public ::google::protobuf::Message {
 public:
  CSFairyTrainDetermineReq();
  virtual ~CSFairyTrainDetermineReq();
  
  CSFairyTrainDetermineReq(const CSFairyTrainDetermineReq& from);
  
  inline CSFairyTrainDetermineReq& operator=(const CSFairyTrainDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyTrainDetermineReq& default_instance();
  
  void Swap(CSFairyTrainDetermineReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyTrainDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyTrainDetermineReq& from);
  void MergeFrom(const CSFairyTrainDetermineReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // required bool save = 2;
  inline bool has_save() const;
  inline void clear_save();
  static const int kSaveFieldNumber = 2;
  inline bool save() const;
  inline void set_save(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyTrainDetermineReq)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_save();
  inline void clear_has_save();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  bool save_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyTrainDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyTrainDetermineRsp : public ::google::protobuf::Message {
 public:
  CSFairyTrainDetermineRsp();
  virtual ~CSFairyTrainDetermineRsp();
  
  CSFairyTrainDetermineRsp(const CSFairyTrainDetermineRsp& from);
  
  inline CSFairyTrainDetermineRsp& operator=(const CSFairyTrainDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyTrainDetermineRsp& default_instance();
  
  void Swap(CSFairyTrainDetermineRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyTrainDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyTrainDetermineRsp& from);
  void MergeFrom(const CSFairyTrainDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyTrainDetermineRsp)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyTrainDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyAddExpReq : public ::google::protobuf::Message {
 public:
  CSFairyAddExpReq();
  virtual ~CSFairyAddExpReq();
  
  CSFairyAddExpReq(const CSFairyAddExpReq& from);
  
  inline CSFairyAddExpReq& operator=(const CSFairyAddExpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyAddExpReq& default_instance();
  
  void Swap(CSFairyAddExpReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyAddExpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyAddExpReq& from);
  void MergeFrom(const CSFairyAddExpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // repeated uint32 del_fairy_poss = 2;
  inline int del_fairy_poss_size() const;
  inline void clear_del_fairy_poss();
  static const int kDelFairyPossFieldNumber = 2;
  inline ::google::protobuf::uint32 del_fairy_poss(int index) const;
  inline void set_del_fairy_poss(int index, ::google::protobuf::uint32 value);
  inline void add_del_fairy_poss(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_fairy_poss() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_fairy_poss();
  
  // optional uint32 fairy_elem = 3;
  inline bool has_fairy_elem() const;
  inline void clear_fairy_elem();
  static const int kFairyElemFieldNumber = 3;
  inline ::google::protobuf::uint32 fairy_elem() const;
  inline void set_fairy_elem(::google::protobuf::uint32 value);
  
  // optional bool req_info = 4;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 4;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // optional uint32 times = 5;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyAddExpReq)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_fairy_elem();
  inline void clear_has_fairy_elem();
  inline void set_has_req_info();
  inline void clear_has_req_info();
  inline void set_has_times();
  inline void clear_has_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_fairy_poss_;
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::uint32 fairy_elem_;
  bool req_info_;
  ::google::protobuf::uint32 times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyAddExpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyAddExpRsp : public ::google::protobuf::Message {
 public:
  CSFairyAddExpRsp();
  virtual ~CSFairyAddExpRsp();
  
  CSFairyAddExpRsp(const CSFairyAddExpRsp& from);
  
  inline CSFairyAddExpRsp& operator=(const CSFairyAddExpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyAddExpRsp& default_instance();
  
  void Swap(CSFairyAddExpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyAddExpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyAddExpRsp& from);
  void MergeFrom(const CSFairyAddExpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // optional bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional .FairyInfo fairy_info = 3;
  inline bool has_fairy_info() const;
  inline void clear_fairy_info();
  static const int kFairyInfoFieldNumber = 3;
  inline const ::FairyInfo& fairy_info() const;
  inline ::FairyInfo* mutable_fairy_info();
  inline ::FairyInfo* release_fairy_info();
  
  // optional uint32 cost_coin = 4;
  inline bool has_cost_coin() const;
  inline void clear_cost_coin();
  static const int kCostCoinFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_coin() const;
  inline void set_cost_coin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyAddExpRsp)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_fairy_info();
  inline void clear_has_fairy_info();
  inline void set_has_cost_coin();
  inline void clear_has_cost_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  bool succ_;
  ::FairyInfo* fairy_info_;
  ::google::protobuf::uint32 cost_coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyAddExpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyUpGradeLevelReq : public ::google::protobuf::Message {
 public:
  CSFairyUpGradeLevelReq();
  virtual ~CSFairyUpGradeLevelReq();
  
  CSFairyUpGradeLevelReq(const CSFairyUpGradeLevelReq& from);
  
  inline CSFairyUpGradeLevelReq& operator=(const CSFairyUpGradeLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyUpGradeLevelReq& default_instance();
  
  void Swap(CSFairyUpGradeLevelReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyUpGradeLevelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyUpGradeLevelReq& from);
  void MergeFrom(const CSFairyUpGradeLevelReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // optional bool req_info = 4;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 4;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyUpGradeLevelReq)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_req_info();
  inline void clear_has_req_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  bool req_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyUpGradeLevelReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyUpGradeLevelRsp_Item : public ::google::protobuf::Message {
 public:
  CSFairyUpGradeLevelRsp_Item();
  virtual ~CSFairyUpGradeLevelRsp_Item();
  
  CSFairyUpGradeLevelRsp_Item(const CSFairyUpGradeLevelRsp_Item& from);
  
  inline CSFairyUpGradeLevelRsp_Item& operator=(const CSFairyUpGradeLevelRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyUpGradeLevelRsp_Item& default_instance();
  
  void Swap(CSFairyUpGradeLevelRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyUpGradeLevelRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyUpGradeLevelRsp_Item& from);
  void MergeFrom(const CSFairyUpGradeLevelRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyUpGradeLevelRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyUpGradeLevelRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyUpGradeLevelRsp : public ::google::protobuf::Message {
 public:
  CSFairyUpGradeLevelRsp();
  virtual ~CSFairyUpGradeLevelRsp();
  
  CSFairyUpGradeLevelRsp(const CSFairyUpGradeLevelRsp& from);
  
  inline CSFairyUpGradeLevelRsp& operator=(const CSFairyUpGradeLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyUpGradeLevelRsp& default_instance();
  
  void Swap(CSFairyUpGradeLevelRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyUpGradeLevelRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyUpGradeLevelRsp& from);
  void MergeFrom(const CSFairyUpGradeLevelRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSFairyUpGradeLevelRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // optional bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional .FairyInfo fairy_info = 3;
  inline bool has_fairy_info() const;
  inline void clear_fairy_info();
  static const int kFairyInfoFieldNumber = 3;
  inline const ::FairyInfo& fairy_info() const;
  inline ::FairyInfo* mutable_fairy_info();
  inline ::FairyInfo* release_fairy_info();
  
  // repeated .CSFairyUpGradeLevelRsp.Item consume_items = 4;
  inline int consume_items_size() const;
  inline void clear_consume_items();
  static const int kConsumeItemsFieldNumber = 4;
  inline const ::CSFairyUpGradeLevelRsp_Item& consume_items(int index) const;
  inline ::CSFairyUpGradeLevelRsp_Item* mutable_consume_items(int index);
  inline ::CSFairyUpGradeLevelRsp_Item* add_consume_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSFairyUpGradeLevelRsp_Item >&
      consume_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSFairyUpGradeLevelRsp_Item >*
      mutable_consume_items();
  
  // @@protoc_insertion_point(class_scope:CSFairyUpGradeLevelRsp)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_fairy_info();
  inline void clear_has_fairy_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  bool succ_;
  ::FairyInfo* fairy_info_;
  ::google::protobuf::RepeatedPtrField< ::CSFairyUpGradeLevelRsp_Item > consume_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyUpGradeLevelRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyDecomposeReq : public ::google::protobuf::Message {
 public:
  CSFairyDecomposeReq();
  virtual ~CSFairyDecomposeReq();
  
  CSFairyDecomposeReq(const CSFairyDecomposeReq& from);
  
  inline CSFairyDecomposeReq& operator=(const CSFairyDecomposeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyDecomposeReq& default_instance();
  
  void Swap(CSFairyDecomposeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyDecomposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyDecomposeReq& from);
  void MergeFrom(const CSFairyDecomposeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairy_pos = 1;
  inline int fairy_pos_size() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos(int index) const;
  inline void set_fairy_pos(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_pos();
  
  // required bool req_info = 2;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 2;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // optional bool is_fragments = 3;
  inline bool has_is_fragments() const;
  inline void clear_is_fragments();
  static const int kIsFragmentsFieldNumber = 3;
  inline bool is_fragments() const;
  inline void set_is_fragments(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyDecomposeReq)
 private:
  inline void set_has_req_info();
  inline void clear_has_req_info();
  inline void set_has_is_fragments();
  inline void clear_has_is_fragments();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_pos_;
  bool req_info_;
  bool is_fragments_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyDecomposeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyDecomposeRsp_Item : public ::google::protobuf::Message {
 public:
  CSFairyDecomposeRsp_Item();
  virtual ~CSFairyDecomposeRsp_Item();
  
  CSFairyDecomposeRsp_Item(const CSFairyDecomposeRsp_Item& from);
  
  inline CSFairyDecomposeRsp_Item& operator=(const CSFairyDecomposeRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyDecomposeRsp_Item& default_instance();
  
  void Swap(CSFairyDecomposeRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyDecomposeRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyDecomposeRsp_Item& from);
  void MergeFrom(const CSFairyDecomposeRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyDecomposeRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyDecomposeRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyDecomposeRsp : public ::google::protobuf::Message {
 public:
  CSFairyDecomposeRsp();
  virtual ~CSFairyDecomposeRsp();
  
  CSFairyDecomposeRsp(const CSFairyDecomposeRsp& from);
  
  inline CSFairyDecomposeRsp& operator=(const CSFairyDecomposeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyDecomposeRsp& default_instance();
  
  void Swap(CSFairyDecomposeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyDecomposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyDecomposeRsp& from);
  void MergeFrom(const CSFairyDecomposeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSFairyDecomposeRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairy_pos = 1;
  inline int fairy_pos_size() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos(int index) const;
  inline void set_fairy_pos(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_pos();
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // repeated .CSFairyDecomposeRsp.Item to_items = 3;
  inline int to_items_size() const;
  inline void clear_to_items();
  static const int kToItemsFieldNumber = 3;
  inline const ::CSFairyDecomposeRsp_Item& to_items(int index) const;
  inline ::CSFairyDecomposeRsp_Item* mutable_to_items(int index);
  inline ::CSFairyDecomposeRsp_Item* add_to_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >&
      to_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >*
      mutable_to_items();
  
  // required bool req_info = 4;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 4;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // repeated .CSFairyDecomposeRsp.Item fragments = 5;
  inline int fragments_size() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 5;
  inline const ::CSFairyDecomposeRsp_Item& fragments(int index) const;
  inline ::CSFairyDecomposeRsp_Item* mutable_fragments(int index);
  inline ::CSFairyDecomposeRsp_Item* add_fragments();
  inline const ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >&
      fragments() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >*
      mutable_fragments();
  
  // optional bool is_fragments = 6;
  inline bool has_is_fragments() const;
  inline void clear_is_fragments();
  static const int kIsFragmentsFieldNumber = 6;
  inline bool is_fragments() const;
  inline void set_is_fragments(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyDecomposeRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_req_info();
  inline void clear_has_req_info();
  inline void set_has_is_fragments();
  inline void clear_has_is_fragments();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_pos_;
  ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item > to_items_;
  ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item > fragments_;
  bool succ_;
  bool req_info_;
  bool is_fragments_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyDecomposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyRebirthReq : public ::google::protobuf::Message {
 public:
  CSFairyRebirthReq();
  virtual ~CSFairyRebirthReq();
  
  CSFairyRebirthReq(const CSFairyRebirthReq& from);
  
  inline CSFairyRebirthReq& operator=(const CSFairyRebirthReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyRebirthReq& default_instance();
  
  void Swap(CSFairyRebirthReq* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyRebirthReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyRebirthReq& from);
  void MergeFrom(const CSFairyRebirthReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairy_pos = 1;
  inline int fairy_pos_size() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos(int index) const;
  inline void set_fairy_pos(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_pos();
  
  // required bool req_info = 2;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 2;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyRebirthReq)
 private:
  inline void set_has_req_info();
  inline void clear_has_req_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_pos_;
  bool req_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyRebirthReq* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyRebirthRsp_Item : public ::google::protobuf::Message {
 public:
  CSFairyRebirthRsp_Item();
  virtual ~CSFairyRebirthRsp_Item();
  
  CSFairyRebirthRsp_Item(const CSFairyRebirthRsp_Item& from);
  
  inline CSFairyRebirthRsp_Item& operator=(const CSFairyRebirthRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyRebirthRsp_Item& default_instance();
  
  void Swap(CSFairyRebirthRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyRebirthRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyRebirthRsp_Item& from);
  void MergeFrom(const CSFairyRebirthRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSFairyRebirthRsp.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyRebirthRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSFairyRebirthRsp : public ::google::protobuf::Message {
 public:
  CSFairyRebirthRsp();
  virtual ~CSFairyRebirthRsp();
  
  CSFairyRebirthRsp(const CSFairyRebirthRsp& from);
  
  inline CSFairyRebirthRsp& operator=(const CSFairyRebirthRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFairyRebirthRsp& default_instance();
  
  void Swap(CSFairyRebirthRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSFairyRebirthRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFairyRebirthRsp& from);
  void MergeFrom(const CSFairyRebirthRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSFairyRebirthRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairy_pos = 1;
  inline int fairy_pos_size() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos(int index) const;
  inline void set_fairy_pos(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_pos();
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // repeated .CSFairyRebirthRsp.Item to_items = 3;
  inline int to_items_size() const;
  inline void clear_to_items();
  static const int kToItemsFieldNumber = 3;
  inline const ::CSFairyRebirthRsp_Item& to_items(int index) const;
  inline ::CSFairyRebirthRsp_Item* mutable_to_items(int index);
  inline ::CSFairyRebirthRsp_Item* add_to_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSFairyRebirthRsp_Item >&
      to_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSFairyRebirthRsp_Item >*
      mutable_to_items();
  
  // required bool req_info = 4;
  inline bool has_req_info() const;
  inline void clear_req_info();
  static const int kReqInfoFieldNumber = 4;
  inline bool req_info() const;
  inline void set_req_info(bool value);
  
  // @@protoc_insertion_point(class_scope:CSFairyRebirthRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_req_info();
  inline void clear_has_req_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_pos_;
  ::google::protobuf::RepeatedPtrField< ::CSFairyRebirthRsp_Item > to_items_;
  bool succ_;
  bool req_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSFairyRebirthRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyAddFairyRsp : public ::google::protobuf::Message {
 public:
  CSNotifyAddFairyRsp();
  virtual ~CSNotifyAddFairyRsp();
  
  CSNotifyAddFairyRsp(const CSNotifyAddFairyRsp& from);
  
  inline CSNotifyAddFairyRsp& operator=(const CSNotifyAddFairyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyAddFairyRsp& default_instance();
  
  void Swap(CSNotifyAddFairyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyAddFairyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyAddFairyRsp& from);
  void MergeFrom(const CSNotifyAddFairyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FairyInfo fairy_info = 1;
  inline bool has_fairy_info() const;
  inline void clear_fairy_info();
  static const int kFairyInfoFieldNumber = 1;
  inline const ::FairyInfo& fairy_info() const;
  inline ::FairyInfo* mutable_fairy_info();
  inline ::FairyInfo* release_fairy_info();
  
  // @@protoc_insertion_point(class_scope:CSNotifyAddFairyRsp)
 private:
  inline void set_has_fairy_info();
  inline void clear_has_fairy_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FairyInfo* fairy_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyAddFairyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyUpdateFairyRsp : public ::google::protobuf::Message {
 public:
  CSNotifyUpdateFairyRsp();
  virtual ~CSNotifyUpdateFairyRsp();
  
  CSNotifyUpdateFairyRsp(const CSNotifyUpdateFairyRsp& from);
  
  inline CSNotifyUpdateFairyRsp& operator=(const CSNotifyUpdateFairyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyUpdateFairyRsp& default_instance();
  
  void Swap(CSNotifyUpdateFairyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyUpdateFairyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyUpdateFairyRsp& from);
  void MergeFrom(const CSNotifyUpdateFairyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // optional .FairyBasic fairy_basic = 2;
  inline bool has_fairy_basic() const;
  inline void clear_fairy_basic();
  static const int kFairyBasicFieldNumber = 2;
  inline const ::FairyBasic& fairy_basic() const;
  inline ::FairyBasic* mutable_fairy_basic();
  inline ::FairyBasic* release_fairy_basic();
  
  // repeated .FairyAttr fairy_attrs = 3;
  inline int fairy_attrs_size() const;
  inline void clear_fairy_attrs();
  static const int kFairyAttrsFieldNumber = 3;
  inline const ::FairyAttr& fairy_attrs(int index) const;
  inline ::FairyAttr* mutable_fairy_attrs(int index);
  inline ::FairyAttr* add_fairy_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyAttr >&
      fairy_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyAttr >*
      mutable_fairy_attrs();
  
  // repeated .FairyTrainAttr fairy_train_attrs = 4;
  inline int fairy_train_attrs_size() const;
  inline void clear_fairy_train_attrs();
  static const int kFairyTrainAttrsFieldNumber = 4;
  inline const ::FairyTrainAttr& fairy_train_attrs(int index) const;
  inline ::FairyTrainAttr* mutable_fairy_train_attrs(int index);
  inline ::FairyTrainAttr* add_fairy_train_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
      fairy_train_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
      mutable_fairy_train_attrs();
  
  // repeated uint32 fairy_rel_ids = 5;
  inline int fairy_rel_ids_size() const;
  inline void clear_fairy_rel_ids();
  static const int kFairyRelIdsFieldNumber = 5;
  inline ::google::protobuf::uint32 fairy_rel_ids(int index) const;
  inline void set_fairy_rel_ids(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_rel_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_rel_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_rel_ids();
  
  // required uint32 fairy_effectiveness = 6;
  inline bool has_fairy_effectiveness() const;
  inline void clear_fairy_effectiveness();
  static const int kFairyEffectivenessFieldNumber = 6;
  inline ::google::protobuf::uint32 fairy_effectiveness() const;
  inline void set_fairy_effectiveness(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyUpdateFairyRsp)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_fairy_basic();
  inline void clear_has_fairy_basic();
  inline void set_has_fairy_effectiveness();
  inline void clear_has_fairy_effectiveness();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FairyBasic* fairy_basic_;
  ::google::protobuf::RepeatedPtrField< ::FairyAttr > fairy_attrs_;
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::uint32 fairy_effectiveness_;
  ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr > fairy_train_attrs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_rel_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyUpdateFairyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyDelFairyRsp : public ::google::protobuf::Message {
 public:
  CSNotifyDelFairyRsp();
  virtual ~CSNotifyDelFairyRsp();
  
  CSNotifyDelFairyRsp(const CSNotifyDelFairyRsp& from);
  
  inline CSNotifyDelFairyRsp& operator=(const CSNotifyDelFairyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyDelFairyRsp& default_instance();
  
  void Swap(CSNotifyDelFairyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyDelFairyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyDelFairyRsp& from);
  void MergeFrom(const CSNotifyDelFairyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairy_pos = 1;
  inline int fairy_pos_size() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos(int index) const;
  inline void set_fairy_pos(int index, ::google::protobuf::uint32 value);
  inline void add_fairy_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairy_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairy_pos();
  
  // @@protoc_insertion_point(class_scope:CSNotifyDelFairyRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairy_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyDelFairyRsp* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg9 : public ::google::protobuf::Message {
 public:
  LyleMsg9();
  virtual ~LyleMsg9();
  
  LyleMsg9(const LyleMsg9& from);
  
  inline LyleMsg9& operator=(const LyleMsg9& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg9& default_instance();
  
  void Swap(LyleMsg9* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg9* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg9& from);
  void MergeFrom(const LyleMsg9& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg9)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg9* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg10 : public ::google::protobuf::Message {
 public:
  LyleMsg10();
  virtual ~LyleMsg10();
  
  LyleMsg10(const LyleMsg10& from);
  
  inline LyleMsg10& operator=(const LyleMsg10& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg10& default_instance();
  
  void Swap(LyleMsg10* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg10& from);
  void MergeFrom(const LyleMsg10& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg10)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg10* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg11 : public ::google::protobuf::Message {
 public:
  LyleMsg11();
  virtual ~LyleMsg11();
  
  LyleMsg11(const LyleMsg11& from);
  
  inline LyleMsg11& operator=(const LyleMsg11& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg11& default_instance();
  
  void Swap(LyleMsg11* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg11* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg11& from);
  void MergeFrom(const LyleMsg11& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg11)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg11* default_instance_;
};
// -------------------------------------------------------------------

class LyleMsg12 : public ::google::protobuf::Message {
 public:
  LyleMsg12();
  virtual ~LyleMsg12();
  
  LyleMsg12(const LyleMsg12& from);
  
  inline LyleMsg12& operator=(const LyleMsg12& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LyleMsg12& default_instance();
  
  void Swap(LyleMsg12* other);
  
  // implements Message ----------------------------------------------
  
  LyleMsg12* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LyleMsg12& from);
  void MergeFrom(const LyleMsg12& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:LyleMsg12)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static LyleMsg12* default_instance_;
};
// -------------------------------------------------------------------

class kakao_cd : public ::google::protobuf::Message {
 public:
  kakao_cd();
  virtual ~kakao_cd();
  
  kakao_cd(const kakao_cd& from);
  
  inline kakao_cd& operator=(const kakao_cd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const kakao_cd& default_instance();
  
  void Swap(kakao_cd* other);
  
  // implements Message ----------------------------------------------
  
  kakao_cd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const kakao_cd& from);
  void MergeFrom(const kakao_cd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // required uint32 expire_time = 3;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 expire_time() const;
  inline void set_expire_time(::google::protobuf::uint32 value);
  
  // optional uint32 start_time = 4 [default = 0];
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // optional bytes name = 5 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:kakao_cd)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 expire_time_;
  ::google::protobuf::uint32 start_time_;
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static kakao_cd* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryKakaoCdReq : public ::google::protobuf::Message {
 public:
  CSQueryKakaoCdReq();
  virtual ~CSQueryKakaoCdReq();
  
  CSQueryKakaoCdReq(const CSQueryKakaoCdReq& from);
  
  inline CSQueryKakaoCdReq& operator=(const CSQueryKakaoCdReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryKakaoCdReq& default_instance();
  
  void Swap(CSQueryKakaoCdReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryKakaoCdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryKakaoCdReq& from);
  void MergeFrom(const CSQueryKakaoCdReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ntype = 1;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ntype() const;
  inline void set_ntype(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryKakaoCdReq)
 private:
  inline void set_has_ntype();
  inline void clear_has_ntype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ntype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryKakaoCdReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryKakaoCdRsp : public ::google::protobuf::Message {
 public:
  CSQueryKakaoCdRsp();
  virtual ~CSQueryKakaoCdRsp();
  
  CSQueryKakaoCdRsp(const CSQueryKakaoCdRsp& from);
  
  inline CSQueryKakaoCdRsp& operator=(const CSQueryKakaoCdRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryKakaoCdRsp& default_instance();
  
  void Swap(CSQueryKakaoCdRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryKakaoCdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryKakaoCdRsp& from);
  void MergeFrom(const CSQueryKakaoCdRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .kakao_cd cd = 1;
  inline int cd_size() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 1;
  inline const ::kakao_cd& cd(int index) const;
  inline ::kakao_cd* mutable_cd(int index);
  inline ::kakao_cd* add_cd();
  inline const ::google::protobuf::RepeatedPtrField< ::kakao_cd >&
      cd() const;
  inline ::google::protobuf::RepeatedPtrField< ::kakao_cd >*
      mutable_cd();
  
  // @@protoc_insertion_point(class_scope:CSQueryKakaoCdRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::kakao_cd > cd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryKakaoCdRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSendPowerReq : public ::google::protobuf::Message {
 public:
  CSSendPowerReq();
  virtual ~CSSendPowerReq();
  
  CSSendPowerReq(const CSSendPowerReq& from);
  
  inline CSSendPowerReq& operator=(const CSSendPowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSendPowerReq& default_instance();
  
  void Swap(CSSendPowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSendPowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSendPowerReq& from);
  void MergeFrom(const CSSendPowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accepter = 1;
  inline bool has_accepter() const;
  inline void clear_accepter();
  static const int kAccepterFieldNumber = 1;
  inline ::google::protobuf::uint32 accepter() const;
  inline void set_accepter(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSendPowerReq)
 private:
  inline void set_has_accepter();
  inline void clear_has_accepter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accepter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSendPowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSendPoweRsp : public ::google::protobuf::Message {
 public:
  CSSendPoweRsp();
  virtual ~CSSendPoweRsp();
  
  CSSendPoweRsp(const CSSendPoweRsp& from);
  
  inline CSSendPoweRsp& operator=(const CSSendPoweRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSendPoweRsp& default_instance();
  
  void Swap(CSSendPoweRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSendPoweRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSendPoweRsp& from);
  void MergeFrom(const CSSendPoweRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSSendPoweRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSendPoweRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetPowerRewardReq : public ::google::protobuf::Message {
 public:
  CSGetPowerRewardReq();
  virtual ~CSGetPowerRewardReq();
  
  CSGetPowerRewardReq(const CSGetPowerRewardReq& from);
  
  inline CSGetPowerRewardReq& operator=(const CSGetPowerRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetPowerRewardReq& default_instance();
  
  void Swap(CSGetPowerRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetPowerRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetPowerRewardReq& from);
  void MergeFrom(const CSGetPowerRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accepter = 1;
  inline bool has_accepter() const;
  inline void clear_accepter();
  static const int kAccepterFieldNumber = 1;
  inline ::google::protobuf::uint32 accepter() const;
  inline void set_accepter(::google::protobuf::uint32 value);
  
  // required uint32 expire_time = 2;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 expire_time() const;
  inline void set_expire_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetPowerRewardReq)
 private:
  inline void set_has_accepter();
  inline void clear_has_accepter();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accepter_;
  ::google::protobuf::uint32 expire_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetPowerRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetPowerRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetPowerRewardRsp();
  virtual ~CSGetPowerRewardRsp();
  
  CSGetPowerRewardRsp(const CSGetPowerRewardRsp& from);
  
  inline CSGetPowerRewardRsp& operator=(const CSGetPowerRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetPowerRewardRsp& default_instance();
  
  void Swap(CSGetPowerRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetPowerRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetPowerRewardRsp& from);
  void MergeFrom(const CSGetPowerRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetPowerRewardRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetPowerRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPushMsgToKakaoReq : public ::google::protobuf::Message {
 public:
  CSPushMsgToKakaoReq();
  virtual ~CSPushMsgToKakaoReq();
  
  CSPushMsgToKakaoReq(const CSPushMsgToKakaoReq& from);
  
  inline CSPushMsgToKakaoReq& operator=(const CSPushMsgToKakaoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPushMsgToKakaoReq& default_instance();
  
  void Swap(CSPushMsgToKakaoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPushMsgToKakaoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPushMsgToKakaoReq& from);
  void MergeFrom(const CSPushMsgToKakaoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 accepter = 1;
  inline int accepter_size() const;
  inline void clear_accepter();
  static const int kAccepterFieldNumber = 1;
  inline ::google::protobuf::uint32 accepter(int index) const;
  inline void set_accepter(int index, ::google::protobuf::uint32 value);
  inline void add_accepter(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accepter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accepter();
  
  // @@protoc_insertion_point(class_scope:CSPushMsgToKakaoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accepter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPushMsgToKakaoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPushMsgToKakaoRsp : public ::google::protobuf::Message {
 public:
  CSPushMsgToKakaoRsp();
  virtual ~CSPushMsgToKakaoRsp();
  
  CSPushMsgToKakaoRsp(const CSPushMsgToKakaoRsp& from);
  
  inline CSPushMsgToKakaoRsp& operator=(const CSPushMsgToKakaoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPushMsgToKakaoRsp& default_instance();
  
  void Swap(CSPushMsgToKakaoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPushMsgToKakaoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPushMsgToKakaoRsp& from);
  void MergeFrom(const CSPushMsgToKakaoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPushMsgToKakaoRsp)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPushMsgToKakaoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaolistFriendReq : public ::google::protobuf::Message {
 public:
  CSKakaolistFriendReq();
  virtual ~CSKakaolistFriendReq();
  
  CSKakaolistFriendReq(const CSKakaolistFriendReq& from);
  
  inline CSKakaolistFriendReq& operator=(const CSKakaolistFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaolistFriendReq& default_instance();
  
  void Swap(CSKakaolistFriendReq* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaolistFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaolistFriendReq& from);
  void MergeFrom(const CSKakaolistFriendReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSKakaolistFriendReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaolistFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaolistFriendRsp : public ::google::protobuf::Message {
 public:
  CSKakaolistFriendRsp();
  virtual ~CSKakaolistFriendRsp();
  
  CSKakaolistFriendRsp(const CSKakaolistFriendRsp& from);
  
  inline CSKakaolistFriendRsp& operator=(const CSKakaolistFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaolistFriendRsp& default_instance();
  
  void Swap(CSKakaolistFriendRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaolistFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaolistFriendRsp& from);
  void MergeFrom(const CSKakaolistFriendRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo game_friends = 1;
  inline int game_friends_size() const;
  inline void clear_game_friends();
  static const int kGameFriendsFieldNumber = 1;
  inline const ::PartnerInfo& game_friends(int index) const;
  inline ::PartnerInfo* mutable_game_friends(int index);
  inline ::PartnerInfo* add_game_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      game_friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_game_friends();
  
  // repeated .PartnerInfo verify_friends = 2;
  inline int verify_friends_size() const;
  inline void clear_verify_friends();
  static const int kVerifyFriendsFieldNumber = 2;
  inline const ::PartnerInfo& verify_friends(int index) const;
  inline ::PartnerInfo* mutable_verify_friends(int index);
  inline ::PartnerInfo* add_verify_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      verify_friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_verify_friends();
  
  // @@protoc_insertion_point(class_scope:CSKakaolistFriendRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > game_friends_;
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > verify_friends_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaolistFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAddFriendReq : public ::google::protobuf::Message {
 public:
  CSKakaoAddFriendReq();
  virtual ~CSKakaoAddFriendReq();
  
  CSKakaoAddFriendReq(const CSKakaoAddFriendReq& from);
  
  inline CSKakaoAddFriendReq& operator=(const CSKakaoAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAddFriendReq& default_instance();
  
  void Swap(CSKakaoAddFriendReq* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAddFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAddFriendReq& from);
  void MergeFrom(const CSKakaoAddFriendReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .base_info invitee = 1;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 1;
  inline const ::base_info& invitee() const;
  inline ::base_info* mutable_invitee();
  inline ::base_info* release_invitee();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAddFriendReq)
 private:
  inline void set_has_invitee();
  inline void clear_has_invitee();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* invitee_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAddFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAddFriendRsp : public ::google::protobuf::Message {
 public:
  CSKakaoAddFriendRsp();
  virtual ~CSKakaoAddFriendRsp();
  
  CSKakaoAddFriendRsp(const CSKakaoAddFriendRsp& from);
  
  inline CSKakaoAddFriendRsp& operator=(const CSKakaoAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAddFriendRsp& default_instance();
  
  void Swap(CSKakaoAddFriendRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAddFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAddFriendRsp& from);
  void MergeFrom(const CSKakaoAddFriendRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .base_info inviter = 1;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 1;
  inline const ::base_info& inviter() const;
  inline ::base_info* mutable_inviter();
  inline ::base_info* release_inviter();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAddFriendRsp)
 private:
  inline void set_has_inviter();
  inline void clear_has_inviter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* inviter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAddFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAnswerFriendReq : public ::google::protobuf::Message {
 public:
  CSKakaoAnswerFriendReq();
  virtual ~CSKakaoAnswerFriendReq();
  
  CSKakaoAnswerFriendReq(const CSKakaoAnswerFriendReq& from);
  
  inline CSKakaoAnswerFriendReq& operator=(const CSKakaoAnswerFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAnswerFriendReq& default_instance();
  
  void Swap(CSKakaoAnswerFriendReq* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAnswerFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAnswerFriendReq& from);
  void MergeFrom(const CSKakaoAnswerFriendReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accept = 1;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 1;
  inline ::google::protobuf::uint32 accept() const;
  inline void set_accept(::google::protobuf::uint32 value);
  
  // required .base_info inviter = 2;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 2;
  inline const ::base_info& inviter() const;
  inline ::base_info* mutable_inviter();
  inline ::base_info* release_inviter();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAnswerFriendReq)
 private:
  inline void set_has_accept();
  inline void clear_has_accept();
  inline void set_has_inviter();
  inline void clear_has_inviter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* inviter_;
  ::google::protobuf::uint32 accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAnswerFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAnswerFriendRsp : public ::google::protobuf::Message {
 public:
  CSKakaoAnswerFriendRsp();
  virtual ~CSKakaoAnswerFriendRsp();
  
  CSKakaoAnswerFriendRsp(const CSKakaoAnswerFriendRsp& from);
  
  inline CSKakaoAnswerFriendRsp& operator=(const CSKakaoAnswerFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAnswerFriendRsp& default_instance();
  
  void Swap(CSKakaoAnswerFriendRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAnswerFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAnswerFriendRsp& from);
  void MergeFrom(const CSKakaoAnswerFriendRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accept = 1;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 1;
  inline ::google::protobuf::uint32 accept() const;
  inline void set_accept(::google::protobuf::uint32 value);
  
  // required .base_info invitee = 2;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 2;
  inline const ::base_info& invitee() const;
  inline ::base_info* mutable_invitee();
  inline ::base_info* release_invitee();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAnswerFriendRsp)
 private:
  inline void set_has_accept();
  inline void clear_has_accept();
  inline void set_has_invitee();
  inline void clear_has_invitee();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* invitee_;
  ::google::protobuf::uint32 accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAnswerFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoDelFriendReq : public ::google::protobuf::Message {
 public:
  CSKakaoDelFriendReq();
  virtual ~CSKakaoDelFriendReq();
  
  CSKakaoDelFriendReq(const CSKakaoDelFriendReq& from);
  
  inline CSKakaoDelFriendReq& operator=(const CSKakaoDelFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoDelFriendReq& default_instance();
  
  void Swap(CSKakaoDelFriendReq* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoDelFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoDelFriendReq& from);
  void MergeFrom(const CSKakaoDelFriendReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .base_info fri = 1;
  inline bool has_fri() const;
  inline void clear_fri();
  static const int kFriFieldNumber = 1;
  inline const ::base_info& fri() const;
  inline ::base_info* mutable_fri();
  inline ::base_info* release_fri();
  
  // @@protoc_insertion_point(class_scope:CSKakaoDelFriendReq)
 private:
  inline void set_has_fri();
  inline void clear_has_fri();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* fri_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoDelFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoDBAddRsp : public ::google::protobuf::Message {
 public:
  CSKakaoDBAddRsp();
  virtual ~CSKakaoDBAddRsp();
  
  CSKakaoDBAddRsp(const CSKakaoDBAddRsp& from);
  
  inline CSKakaoDBAddRsp& operator=(const CSKakaoDBAddRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoDBAddRsp& default_instance();
  
  void Swap(CSKakaoDBAddRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoDBAddRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoDBAddRsp& from);
  void MergeFrom(const CSKakaoDBAddRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required .base_info fri = 2;
  inline bool has_fri() const;
  inline void clear_fri();
  static const int kFriFieldNumber = 2;
  inline const ::base_info& fri() const;
  inline ::base_info* mutable_fri();
  inline ::base_info* release_fri();
  
  // @@protoc_insertion_point(class_scope:CSKakaoDBAddRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_fri();
  inline void clear_has_fri();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::base_info* fri_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoDBAddRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPLearnPrepareReq : public ::google::protobuf::Message {
 public:
  CSPVPLearnPrepareReq();
  virtual ~CSPVPLearnPrepareReq();
  
  CSPVPLearnPrepareReq(const CSPVPLearnPrepareReq& from);
  
  inline CSPVPLearnPrepareReq& operator=(const CSPVPLearnPrepareReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPLearnPrepareReq& default_instance();
  
  void Swap(CSPVPLearnPrepareReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPLearnPrepareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPLearnPrepareReq& from);
  void MergeFrom(const CSPVPLearnPrepareReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bool mandatory = 4;
  inline bool has_mandatory() const;
  inline void clear_mandatory();
  static const int kMandatoryFieldNumber = 4;
  inline bool mandatory() const;
  inline void set_mandatory(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPLearnPrepareReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_mandatory();
  inline void clear_has_mandatory();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  bool mandatory_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPLearnPrepareReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPLearnPrepareRsp : public ::google::protobuf::Message {
 public:
  CSPVPLearnPrepareRsp();
  virtual ~CSPVPLearnPrepareRsp();
  
  CSPVPLearnPrepareRsp(const CSPVPLearnPrepareRsp& from);
  
  inline CSPVPLearnPrepareRsp& operator=(const CSPVPLearnPrepareRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPLearnPrepareRsp& default_instance();
  
  void Swap(CSPVPLearnPrepareRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPLearnPrepareRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPLearnPrepareRsp& from);
  void MergeFrom(const CSPVPLearnPrepareRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 effectiveness = 5;
  inline bool has_effectiveness() const;
  inline void clear_effectiveness();
  static const int kEffectivenessFieldNumber = 5;
  inline ::google::protobuf::uint32 effectiveness() const;
  inline void set_effectiveness(::google::protobuf::uint32 value);
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required bool mandatory = 7;
  inline bool has_mandatory() const;
  inline void clear_mandatory();
  static const int kMandatoryFieldNumber = 7;
  inline bool mandatory() const;
  inline void set_mandatory(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPLearnPrepareRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_effectiveness();
  inline void clear_has_effectiveness();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mandatory();
  inline void clear_has_mandatory();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 effectiveness_;
  ::google::protobuf::uint32 type_;
  bool mandatory_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPLearnPrepareRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPLearnReq : public ::google::protobuf::Message {
 public:
  CSPVPLearnReq();
  virtual ~CSPVPLearnReq();
  
  CSPVPLearnReq(const CSPVPLearnReq& from);
  
  inline CSPVPLearnReq& operator=(const CSPVPLearnReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPLearnReq& default_instance();
  
  void Swap(CSPVPLearnReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPLearnReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPLearnReq& from);
  void MergeFrom(const CSPVPLearnReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bool mandatory = 4;
  inline bool has_mandatory() const;
  inline void clear_mandatory();
  static const int kMandatoryFieldNumber = 4;
  inline bool mandatory() const;
  inline void set_mandatory(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPLearnReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_mandatory();
  inline void clear_has_mandatory();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  bool mandatory_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPLearnReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPLearnRsp : public ::google::protobuf::Message {
 public:
  CSPVPLearnRsp();
  virtual ~CSPVPLearnRsp();
  
  CSPVPLearnRsp(const CSPVPLearnRsp& from);
  
  inline CSPVPLearnRsp& operator=(const CSPVPLearnRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPLearnRsp& default_instance();
  
  void Swap(CSPVPLearnRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPLearnRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPLearnRsp& from);
  void MergeFrom(const CSPVPLearnRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 effectiveness = 5;
  inline bool has_effectiveness() const;
  inline void clear_effectiveness();
  static const int kEffectivenessFieldNumber = 5;
  inline ::google::protobuf::uint32 effectiveness() const;
  inline void set_effectiveness(::google::protobuf::uint32 value);
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required bool mandatory = 7;
  inline bool has_mandatory() const;
  inline void clear_mandatory();
  static const int kMandatoryFieldNumber = 7;
  inline bool mandatory() const;
  inline void set_mandatory(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVPLearnRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_effectiveness();
  inline void clear_has_effectiveness();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mandatory();
  inline void clear_has_mandatory();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 effectiveness_;
  ::google::protobuf::uint32 type_;
  bool mandatory_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPLearnRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPLearnMandatoryRsp : public ::google::protobuf::Message {
 public:
  CSPVPLearnMandatoryRsp();
  virtual ~CSPVPLearnMandatoryRsp();
  
  CSPVPLearnMandatoryRsp(const CSPVPLearnMandatoryRsp& from);
  
  inline CSPVPLearnMandatoryRsp& operator=(const CSPVPLearnMandatoryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPLearnMandatoryRsp& default_instance();
  
  void Swap(CSPVPLearnMandatoryRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPLearnMandatoryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPLearnMandatoryRsp& from);
  void MergeFrom(const CSPVPLearnMandatoryRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPLearnMandatoryRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPLearnMandatoryRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPAckLearnReq : public ::google::protobuf::Message {
 public:
  CSPVPAckLearnReq();
  virtual ~CSPVPAckLearnReq();
  
  CSPVPAckLearnReq(const CSPVPAckLearnReq& from);
  
  inline CSPVPAckLearnReq& operator=(const CSPVPAckLearnReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPAckLearnReq& default_instance();
  
  void Swap(CSPVPAckLearnReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPAckLearnReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPAckLearnReq& from);
  void MergeFrom(const CSPVPAckLearnReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bool accept = 4;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 4;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPAckLearnReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_accept();
  inline void clear_has_accept();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  bool accept_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPAckLearnReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPAckLearnRefuseRsp : public ::google::protobuf::Message {
 public:
  CSPVPAckLearnRefuseRsp();
  virtual ~CSPVPAckLearnRefuseRsp();
  
  CSPVPAckLearnRefuseRsp(const CSPVPAckLearnRefuseRsp& from);
  
  inline CSPVPAckLearnRefuseRsp& operator=(const CSPVPAckLearnRefuseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPAckLearnRefuseRsp& default_instance();
  
  void Swap(CSPVPAckLearnRefuseRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPAckLearnRefuseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPAckLearnRefuseRsp& from);
  void MergeFrom(const CSPVPAckLearnRefuseRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPAckLearnRefuseRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPAckLearnRefuseRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleCheckReq : public ::google::protobuf::Message {
 public:
  CSAutoBattleCheckReq();
  virtual ~CSAutoBattleCheckReq();
  
  CSAutoBattleCheckReq(const CSAutoBattleCheckReq& from);
  
  inline CSAutoBattleCheckReq& operator=(const CSAutoBattleCheckReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleCheckReq& default_instance();
  
  void Swap(CSAutoBattleCheckReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleCheckReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleCheckReq& from);
  void MergeFrom(const CSAutoBattleCheckReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleCheckReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleCheckRsp : public ::google::protobuf::Message {
 public:
  CSAutoBattleCheckRsp();
  virtual ~CSAutoBattleCheckRsp();
  
  CSAutoBattleCheckRsp(const CSAutoBattleCheckRsp& from);
  
  inline CSAutoBattleCheckRsp& operator=(const CSAutoBattleCheckRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleCheckRsp& default_instance();
  
  void Swap(CSAutoBattleCheckRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleCheckRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleCheckRsp& from);
  void MergeFrom(const CSAutoBattleCheckRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 on_or_off = 1;
  inline bool has_on_or_off() const;
  inline void clear_on_or_off();
  static const int kOnOrOffFieldNumber = 1;
  inline ::google::protobuf::uint32 on_or_off() const;
  inline void set_on_or_off(::google::protobuf::uint32 value);
  
  // required uint32 vip_lv = 2;
  inline bool has_vip_lv() const;
  inline void clear_vip_lv();
  static const int kVipLvFieldNumber = 2;
  inline ::google::protobuf::uint32 vip_lv() const;
  inline void set_vip_lv(::google::protobuf::uint32 value);
  
  // required uint32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleCheckRsp)
 private:
  inline void set_has_on_or_off();
  inline void clear_has_on_or_off();
  inline void set_has_vip_lv();
  inline void clear_has_vip_lv();
  inline void set_has_lv();
  inline void clear_has_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 on_or_off_;
  ::google::protobuf::uint32 vip_lv_;
  ::google::protobuf::uint32 lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleCheckRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNearbyRednameReq : public ::google::protobuf::Message {
 public:
  CSNearbyRednameReq();
  virtual ~CSNearbyRednameReq();
  
  CSNearbyRednameReq(const CSNearbyRednameReq& from);
  
  inline CSNearbyRednameReq& operator=(const CSNearbyRednameReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearbyRednameReq& default_instance();
  
  void Swap(CSNearbyRednameReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNearbyRednameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearbyRednameReq& from);
  void MergeFrom(const CSNearbyRednameReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNearbyRednameReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearbyRednameReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNearbyRednameRsp : public ::google::protobuf::Message {
 public:
  CSNearbyRednameRsp();
  virtual ~CSNearbyRednameRsp();
  
  CSNearbyRednameRsp(const CSNearbyRednameRsp& from);
  
  inline CSNearbyRednameRsp& operator=(const CSNearbyRednameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearbyRednameRsp& default_instance();
  
  void Swap(CSNearbyRednameRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNearbyRednameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearbyRednameRsp& from);
  void MergeFrom(const CSNearbyRednameRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo nearby = 1;
  inline int nearby_size() const;
  inline void clear_nearby();
  static const int kNearbyFieldNumber = 1;
  inline const ::PartnerInfo& nearby(int index) const;
  inline ::PartnerInfo* mutable_nearby(int index);
  inline ::PartnerInfo* add_nearby();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      nearby() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_nearby();
  
  // @@protoc_insertion_point(class_scope:CSNearbyRednameRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > nearby_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearbyRednameRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceStarRewardReq : public ::google::protobuf::Message {
 public:
  CSInstanceStarRewardReq();
  virtual ~CSInstanceStarRewardReq();
  
  CSInstanceStarRewardReq(const CSInstanceStarRewardReq& from);
  
  inline CSInstanceStarRewardReq& operator=(const CSInstanceStarRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceStarRewardReq& default_instance();
  
  void Swap(CSInstanceStarRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceStarRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceStarRewardReq& from);
  void MergeFrom(const CSInstanceStarRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_category = 1;
  inline bool has_instance_category() const;
  inline void clear_instance_category();
  static const int kInstanceCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_category() const;
  inline void set_instance_category(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceStarRewardReq)
 private:
  inline void set_has_instance_category();
  inline void clear_has_instance_category();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_category_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceStarRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceStarRewardRsp : public ::google::protobuf::Message {
 public:
  CSInstanceStarRewardRsp();
  virtual ~CSInstanceStarRewardRsp();
  
  CSInstanceStarRewardRsp(const CSInstanceStarRewardRsp& from);
  
  inline CSInstanceStarRewardRsp& operator=(const CSInstanceStarRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceStarRewardRsp& default_instance();
  
  void Swap(CSInstanceStarRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceStarRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceStarRewardRsp& from);
  void MergeFrom(const CSInstanceStarRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_category = 1;
  inline bool has_instance_category() const;
  inline void clear_instance_category();
  static const int kInstanceCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_category() const;
  inline void set_instance_category(::google::protobuf::uint32 value);
  
  // required uint32 stars = 2;
  inline bool has_stars() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 2;
  inline ::google::protobuf::uint32 stars() const;
  inline void set_stars(::google::protobuf::uint32 value);
  
  // required uint32 one_status = 3;
  inline bool has_one_status() const;
  inline void clear_one_status();
  static const int kOneStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 one_status() const;
  inline void set_one_status(::google::protobuf::uint32 value);
  
  // required uint32 two_status = 4;
  inline bool has_two_status() const;
  inline void clear_two_status();
  static const int kTwoStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 two_status() const;
  inline void set_two_status(::google::protobuf::uint32 value);
  
  // required uint32 three_status = 5;
  inline bool has_three_status() const;
  inline void clear_three_status();
  static const int kThreeStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 three_status() const;
  inline void set_three_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceStarRewardRsp)
 private:
  inline void set_has_instance_category();
  inline void clear_has_instance_category();
  inline void set_has_stars();
  inline void clear_has_stars();
  inline void set_has_one_status();
  inline void clear_has_one_status();
  inline void set_has_two_status();
  inline void clear_has_two_status();
  inline void set_has_three_status();
  inline void clear_has_three_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_category_;
  ::google::protobuf::uint32 stars_;
  ::google::protobuf::uint32 one_status_;
  ::google::protobuf::uint32 two_status_;
  ::google::protobuf::uint32 three_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceStarRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceGetStarRewardReq : public ::google::protobuf::Message {
 public:
  CSInstanceGetStarRewardReq();
  virtual ~CSInstanceGetStarRewardReq();
  
  CSInstanceGetStarRewardReq(const CSInstanceGetStarRewardReq& from);
  
  inline CSInstanceGetStarRewardReq& operator=(const CSInstanceGetStarRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceGetStarRewardReq& default_instance();
  
  void Swap(CSInstanceGetStarRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceGetStarRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceGetStarRewardReq& from);
  void MergeFrom(const CSInstanceGetStarRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_category = 1;
  inline bool has_instance_category() const;
  inline void clear_instance_category();
  static const int kInstanceCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_category() const;
  inline void set_instance_category(::google::protobuf::uint32 value);
  
  // required uint32 reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_type() const;
  inline void set_reward_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceGetStarRewardReq)
 private:
  inline void set_has_instance_category();
  inline void clear_has_instance_category();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_category_;
  ::google::protobuf::uint32 reward_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceGetStarRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceGetStarRewardRsp : public ::google::protobuf::Message {
 public:
  CSInstanceGetStarRewardRsp();
  virtual ~CSInstanceGetStarRewardRsp();
  
  CSInstanceGetStarRewardRsp(const CSInstanceGetStarRewardRsp& from);
  
  inline CSInstanceGetStarRewardRsp& operator=(const CSInstanceGetStarRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceGetStarRewardRsp& default_instance();
  
  void Swap(CSInstanceGetStarRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceGetStarRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceGetStarRewardRsp& from);
  void MergeFrom(const CSInstanceGetStarRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_category = 1;
  inline bool has_instance_category() const;
  inline void clear_instance_category();
  static const int kInstanceCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_category() const;
  inline void set_instance_category(::google::protobuf::uint32 value);
  
  // required uint32 reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_type() const;
  inline void set_reward_type(::google::protobuf::uint32 value);
  
  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceGetStarRewardRsp)
 private:
  inline void set_has_instance_category();
  inline void clear_has_instance_category();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_category_;
  ::google::protobuf::uint32 reward_type_;
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceGetStarRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSChkInstanceStarRewardReq : public ::google::protobuf::Message {
 public:
  CSChkInstanceStarRewardReq();
  virtual ~CSChkInstanceStarRewardReq();
  
  CSChkInstanceStarRewardReq(const CSChkInstanceStarRewardReq& from);
  
  inline CSChkInstanceStarRewardReq& operator=(const CSChkInstanceStarRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChkInstanceStarRewardReq& default_instance();
  
  void Swap(CSChkInstanceStarRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSChkInstanceStarRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChkInstanceStarRewardReq& from);
  void MergeFrom(const CSChkInstanceStarRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSChkInstanceStarRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChkInstanceStarRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSChkInstanceStarRewardRsp : public ::google::protobuf::Message {
 public:
  CSChkInstanceStarRewardRsp();
  virtual ~CSChkInstanceStarRewardRsp();
  
  CSChkInstanceStarRewardRsp(const CSChkInstanceStarRewardRsp& from);
  
  inline CSChkInstanceStarRewardRsp& operator=(const CSChkInstanceStarRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChkInstanceStarRewardRsp& default_instance();
  
  void Swap(CSChkInstanceStarRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSChkInstanceStarRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChkInstanceStarRewardRsp& from);
  void MergeFrom(const CSChkInstanceStarRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool all_or_nothing = 1;
  inline bool has_all_or_nothing() const;
  inline void clear_all_or_nothing();
  static const int kAllOrNothingFieldNumber = 1;
  inline bool all_or_nothing() const;
  inline void set_all_or_nothing(bool value);
  
  // required uint32 last_raid_id = 2;
  inline bool has_last_raid_id() const;
  inline void clear_last_raid_id();
  static const int kLastRaidIdFieldNumber = 2;
  inline ::google::protobuf::uint32 last_raid_id() const;
  inline void set_last_raid_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSChkInstanceStarRewardRsp)
 private:
  inline void set_has_all_or_nothing();
  inline void clear_has_all_or_nothing();
  inline void set_has_last_raid_id();
  inline void clear_has_last_raid_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool all_or_nothing_;
  ::google::protobuf::uint32 last_raid_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChkInstanceStarRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelEnemyReq : public ::google::protobuf::Message {
 public:
  CSDelEnemyReq();
  virtual ~CSDelEnemyReq();
  
  CSDelEnemyReq(const CSDelEnemyReq& from);
  
  inline CSDelEnemyReq& operator=(const CSDelEnemyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelEnemyReq& default_instance();
  
  void Swap(CSDelEnemyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelEnemyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelEnemyReq& from);
  void MergeFrom(const CSDelEnemyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channelid = 3;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 3;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelEnemyReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channelid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelEnemyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelEnemyRsp : public ::google::protobuf::Message {
 public:
  CSDelEnemyRsp();
  virtual ~CSDelEnemyRsp();
  
  CSDelEnemyRsp(const CSDelEnemyRsp& from);
  
  inline CSDelEnemyRsp& operator=(const CSDelEnemyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelEnemyRsp& default_instance();
  
  void Swap(CSDelEnemyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelEnemyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelEnemyRsp& from);
  void MergeFrom(const CSDelEnemyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline ::google::protobuf::uint32 succ() const;
  inline void set_succ(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelEnemyRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelEnemyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEnemyInfoReq : public ::google::protobuf::Message {
 public:
  CSEnemyInfoReq();
  virtual ~CSEnemyInfoReq();
  
  CSEnemyInfoReq(const CSEnemyInfoReq& from);
  
  inline CSEnemyInfoReq& operator=(const CSEnemyInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnemyInfoReq& default_instance();
  
  void Swap(CSEnemyInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEnemyInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnemyInfoReq& from);
  void MergeFrom(const CSEnemyInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSEnemyInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnemyInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEnemyInfoRsp : public ::google::protobuf::Message {
 public:
  CSEnemyInfoRsp();
  virtual ~CSEnemyInfoRsp();
  
  CSEnemyInfoRsp(const CSEnemyInfoRsp& from);
  
  inline CSEnemyInfoRsp& operator=(const CSEnemyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnemyInfoRsp& default_instance();
  
  void Swap(CSEnemyInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEnemyInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnemyInfoRsp& from);
  void MergeFrom(const CSEnemyInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo enemy = 1;
  inline int enemy_size() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 1;
  inline const ::PartnerInfo& enemy(int index) const;
  inline ::PartnerInfo* mutable_enemy(int index);
  inline ::PartnerInfo* add_enemy();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      enemy() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_enemy();
  
  // @@protoc_insertion_point(class_scope:CSEnemyInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > enemy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnemyInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetRednameTimeReq : public ::google::protobuf::Message {
 public:
  CSGetRednameTimeReq();
  virtual ~CSGetRednameTimeReq();
  
  CSGetRednameTimeReq(const CSGetRednameTimeReq& from);
  
  inline CSGetRednameTimeReq& operator=(const CSGetRednameTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetRednameTimeReq& default_instance();
  
  void Swap(CSGetRednameTimeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetRednameTimeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetRednameTimeReq& from);
  void MergeFrom(const CSGetRednameTimeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channelid = 3;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 3;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetRednameTimeReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channelid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetRednameTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetRednameTimeRsp : public ::google::protobuf::Message {
 public:
  CSGetRednameTimeRsp();
  virtual ~CSGetRednameTimeRsp();
  
  CSGetRednameTimeRsp(const CSGetRednameTimeRsp& from);
  
  inline CSGetRednameTimeRsp& operator=(const CSGetRednameTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetRednameTimeRsp& default_instance();
  
  void Swap(CSGetRednameTimeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetRednameTimeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetRednameTimeRsp& from);
  void MergeFrom(const CSGetRednameTimeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_tm = 3;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 3;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetRednameTimeRsp)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channelid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetRednameTimeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritDrawReq : public ::google::protobuf::Message {
 public:
  CSSpiritDrawReq();
  virtual ~CSSpiritDrawReq();
  
  CSSpiritDrawReq(const CSSpiritDrawReq& from);
  
  inline CSSpiritDrawReq& operator=(const CSSpiritDrawReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritDrawReq& default_instance();
  
  void Swap(CSSpiritDrawReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritDrawReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritDrawReq& from);
  void MergeFrom(const CSSpiritDrawReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritDrawReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritDrawReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritDrawRsp : public ::google::protobuf::Message {
 public:
  CSSpiritDrawRsp();
  virtual ~CSSpiritDrawRsp();
  
  CSSpiritDrawRsp(const CSSpiritDrawRsp& from);
  
  inline CSSpiritDrawRsp& operator=(const CSSpiritDrawRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritDrawRsp& default_instance();
  
  void Swap(CSSpiritDrawRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritDrawRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritDrawRsp& from);
  void MergeFrom(const CSSpiritDrawRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 spirits = 1;
  inline int spirits_size() const;
  inline void clear_spirits();
  static const int kSpiritsFieldNumber = 1;
  inline ::google::protobuf::uint32 spirits(int index) const;
  inline void set_spirits(int index, ::google::protobuf::uint32 value);
  inline void add_spirits(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      spirits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_spirits();
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritDrawRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > spirits_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritDrawRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipAllBestReq : public ::google::protobuf::Message {
 public:
  CSEquipAllBestReq();
  virtual ~CSEquipAllBestReq();
  
  CSEquipAllBestReq(const CSEquipAllBestReq& from);
  
  inline CSEquipAllBestReq& operator=(const CSEquipAllBestReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipAllBestReq& default_instance();
  
  void Swap(CSEquipAllBestReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipAllBestReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipAllBestReq& from);
  void MergeFrom(const CSEquipAllBestReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipAllBestReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipAllBestReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCALBattleFairyReq : public ::google::protobuf::Message {
 public:
  CSCALBattleFairyReq();
  virtual ~CSCALBattleFairyReq();
  
  CSCALBattleFairyReq(const CSCALBattleFairyReq& from);
  
  inline CSCALBattleFairyReq& operator=(const CSCALBattleFairyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCALBattleFairyReq& default_instance();
  
  void Swap(CSCALBattleFairyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCALBattleFairyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCALBattleFairyReq& from);
  void MergeFrom(const CSCALBattleFairyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCALBattleFairyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCALBattleFairyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCALBattleFairyRsp : public ::google::protobuf::Message {
 public:
  CSCALBattleFairyRsp();
  virtual ~CSCALBattleFairyRsp();
  
  CSCALBattleFairyRsp(const CSCALBattleFairyRsp& from);
  
  inline CSCALBattleFairyRsp& operator=(const CSCALBattleFairyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCALBattleFairyRsp& default_instance();
  
  void Swap(CSCALBattleFairyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCALBattleFairyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCALBattleFairyRsp& from);
  void MergeFrom(const CSCALBattleFairyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCALBattleFairyRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCALBattleFairyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBabelFactorReq : public ::google::protobuf::Message {
 public:
  CSBabelFactorReq();
  virtual ~CSBabelFactorReq();
  
  CSBabelFactorReq(const CSBabelFactorReq& from);
  
  inline CSBabelFactorReq& operator=(const CSBabelFactorReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBabelFactorReq& default_instance();
  
  void Swap(CSBabelFactorReq* other);
  
  // implements Message ----------------------------------------------
  
  CSBabelFactorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBabelFactorReq& from);
  void MergeFrom(const CSBabelFactorReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSBabelFactorReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBabelFactorReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBabelFactorRsp : public ::google::protobuf::Message {
 public:
  CSBabelFactorRsp();
  virtual ~CSBabelFactorRsp();
  
  CSBabelFactorRsp(const CSBabelFactorRsp& from);
  
  inline CSBabelFactorRsp& operator=(const CSBabelFactorRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBabelFactorRsp& default_instance();
  
  void Swap(CSBabelFactorRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSBabelFactorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBabelFactorRsp& from);
  void MergeFrom(const CSBabelFactorRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 factors = 1;
  inline int factors_size() const;
  inline void clear_factors();
  static const int kFactorsFieldNumber = 1;
  inline ::google::protobuf::uint32 factors(int index) const;
  inline void set_factors(int index, ::google::protobuf::uint32 value);
  inline void add_factors(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      factors() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_factors();
  
  // @@protoc_insertion_point(class_scope:CSBabelFactorRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > factors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBabelFactorRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSShoppingInfo : public ::google::protobuf::Message {
 public:
  CSShoppingInfo();
  virtual ~CSShoppingInfo();
  
  CSShoppingInfo(const CSShoppingInfo& from);
  
  inline CSShoppingInfo& operator=(const CSShoppingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShoppingInfo& default_instance();
  
  void Swap(CSShoppingInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSShoppingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShoppingInfo& from);
  void MergeFrom(const CSShoppingInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 shopping_id = 1;
  inline bool has_shopping_id() const;
  inline void clear_shopping_id();
  static const int kShoppingIdFieldNumber = 1;
  inline ::google::protobuf::uint32 shopping_id() const;
  inline void set_shopping_id(::google::protobuf::uint32 value);
  
  // required uint32 buy_times = 2;
  inline bool has_buy_times() const;
  inline void clear_buy_times();
  static const int kBuyTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 buy_times() const;
  inline void set_buy_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSShoppingInfo)
 private:
  inline void set_has_shopping_id();
  inline void clear_has_shopping_id();
  inline void set_has_buy_times();
  inline void clear_has_buy_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 shopping_id_;
  ::google::protobuf::uint32 buy_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSShoppingInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSShoppingReq : public ::google::protobuf::Message {
 public:
  CSShoppingReq();
  virtual ~CSShoppingReq();
  
  CSShoppingReq(const CSShoppingReq& from);
  
  inline CSShoppingReq& operator=(const CSShoppingReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShoppingReq& default_instance();
  
  void Swap(CSShoppingReq* other);
  
  // implements Message ----------------------------------------------
  
  CSShoppingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShoppingReq& from);
  void MergeFrom(const CSShoppingReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 shopping_ids = 1;
  inline int shopping_ids_size() const;
  inline void clear_shopping_ids();
  static const int kShoppingIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 shopping_ids(int index) const;
  inline void set_shopping_ids(int index, ::google::protobuf::uint32 value);
  inline void add_shopping_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shopping_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shopping_ids();
  
  // @@protoc_insertion_point(class_scope:CSShoppingReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shopping_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSShoppingReq* default_instance_;
};
// -------------------------------------------------------------------

class CSShoppingRsp : public ::google::protobuf::Message {
 public:
  CSShoppingRsp();
  virtual ~CSShoppingRsp();
  
  CSShoppingRsp(const CSShoppingRsp& from);
  
  inline CSShoppingRsp& operator=(const CSShoppingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShoppingRsp& default_instance();
  
  void Swap(CSShoppingRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSShoppingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShoppingRsp& from);
  void MergeFrom(const CSShoppingRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSShoppingInfo shoppings = 1;
  inline int shoppings_size() const;
  inline void clear_shoppings();
  static const int kShoppingsFieldNumber = 1;
  inline const ::CSShoppingInfo& shoppings(int index) const;
  inline ::CSShoppingInfo* mutable_shoppings(int index);
  inline ::CSShoppingInfo* add_shoppings();
  inline const ::google::protobuf::RepeatedPtrField< ::CSShoppingInfo >&
      shoppings() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSShoppingInfo >*
      mutable_shoppings();
  
  // @@protoc_insertion_point(class_scope:CSShoppingRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSShoppingInfo > shoppings_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSShoppingRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipNotify : public ::google::protobuf::Message {
 public:
  CSEquipNotify();
  virtual ~CSEquipNotify();
  
  CSEquipNotify(const CSEquipNotify& from);
  
  inline CSEquipNotify& operator=(const CSEquipNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipNotify& default_instance();
  
  void Swap(CSEquipNotify* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipNotify& from);
  void MergeFrom(const CSEquipNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipNotify)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipNotify* default_instance_;
};
// -------------------------------------------------------------------

class CSShowRebirthNotify : public ::google::protobuf::Message {
 public:
  CSShowRebirthNotify();
  virtual ~CSShowRebirthNotify();
  
  CSShowRebirthNotify(const CSShowRebirthNotify& from);
  
  inline CSShowRebirthNotify& operator=(const CSShowRebirthNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowRebirthNotify& default_instance();
  
  void Swap(CSShowRebirthNotify* other);
  
  // implements Message ----------------------------------------------
  
  CSShowRebirthNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowRebirthNotify& from);
  void MergeFrom(const CSShowRebirthNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool show = 1;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 1;
  inline bool show() const;
  inline void set_show(bool value);
  
  // @@protoc_insertion_point(class_scope:CSShowRebirthNotify)
 private:
  inline void set_has_show();
  inline void clear_has_show();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool show_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSShowRebirthNotify* default_instance_;
};
// -------------------------------------------------------------------

class CSNewFairyNotify : public ::google::protobuf::Message {
 public:
  CSNewFairyNotify();
  virtual ~CSNewFairyNotify();
  
  CSNewFairyNotify(const CSNewFairyNotify& from);
  
  inline CSNewFairyNotify& operator=(const CSNewFairyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewFairyNotify& default_instance();
  
  void Swap(CSNewFairyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CSNewFairyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewFairyNotify& from);
  void MergeFrom(const CSNewFairyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fairys = 1;
  inline int fairys_size() const;
  inline void clear_fairys();
  static const int kFairysFieldNumber = 1;
  inline ::google::protobuf::uint32 fairys(int index) const;
  inline void set_fairys(int index, ::google::protobuf::uint32 value);
  inline void add_fairys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fairys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fairys();
  
  // @@protoc_insertion_point(class_scope:CSNewFairyNotify)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fairys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewFairyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CSGoogleGradingRsp : public ::google::protobuf::Message {
 public:
  CSGoogleGradingRsp();
  virtual ~CSGoogleGradingRsp();
  
  CSGoogleGradingRsp(const CSGoogleGradingRsp& from);
  
  inline CSGoogleGradingRsp& operator=(const CSGoogleGradingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoogleGradingRsp& default_instance();
  
  void Swap(CSGoogleGradingRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGoogleGradingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoogleGradingRsp& from);
  void MergeFrom(const CSGoogleGradingRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGoogleGradingRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoogleGradingRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGoogleGradingCompleteReq : public ::google::protobuf::Message {
 public:
  CSGoogleGradingCompleteReq();
  virtual ~CSGoogleGradingCompleteReq();
  
  CSGoogleGradingCompleteReq(const CSGoogleGradingCompleteReq& from);
  
  inline CSGoogleGradingCompleteReq& operator=(const CSGoogleGradingCompleteReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoogleGradingCompleteReq& default_instance();
  
  void Swap(CSGoogleGradingCompleteReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGoogleGradingCompleteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoogleGradingCompleteReq& from);
  void MergeFrom(const CSGoogleGradingCompleteReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGoogleGradingCompleteReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoogleGradingCompleteReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAttrReq : public ::google::protobuf::Message {
 public:
  CSKakaoAttrReq();
  virtual ~CSKakaoAttrReq();
  
  CSKakaoAttrReq(const CSKakaoAttrReq& from);
  
  inline CSKakaoAttrReq& operator=(const CSKakaoAttrReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAttrReq& default_instance();
  
  void Swap(CSKakaoAttrReq* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAttrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAttrReq& from);
  void MergeFrom(const CSKakaoAttrReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 key = 1;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key(int index) const;
  inline void set_key(int index, ::google::protobuf::uint32 value);
  inline void add_key(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      key() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_key();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAttrReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAttrRsp_kakao_value : public ::google::protobuf::Message {
 public:
  CSKakaoAttrRsp_kakao_value();
  virtual ~CSKakaoAttrRsp_kakao_value();
  
  CSKakaoAttrRsp_kakao_value(const CSKakaoAttrRsp_kakao_value& from);
  
  inline CSKakaoAttrRsp_kakao_value& operator=(const CSKakaoAttrRsp_kakao_value& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAttrRsp_kakao_value& default_instance();
  
  void Swap(CSKakaoAttrRsp_kakao_value* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAttrRsp_kakao_value* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAttrRsp_kakao_value& from);
  void MergeFrom(const CSKakaoAttrRsp_kakao_value& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSKakaoAttrRsp.kakao_value)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAttrRsp_kakao_value* default_instance_;
};
// -------------------------------------------------------------------

class CSKakaoAttrRsp : public ::google::protobuf::Message {
 public:
  CSKakaoAttrRsp();
  virtual ~CSKakaoAttrRsp();
  
  CSKakaoAttrRsp(const CSKakaoAttrRsp& from);
  
  inline CSKakaoAttrRsp& operator=(const CSKakaoAttrRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSKakaoAttrRsp& default_instance();
  
  void Swap(CSKakaoAttrRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSKakaoAttrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSKakaoAttrRsp& from);
  void MergeFrom(const CSKakaoAttrRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSKakaoAttrRsp_kakao_value kakao_value;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSKakaoAttrRsp.kakao_value values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSKakaoAttrRsp_kakao_value& values(int index) const;
  inline ::CSKakaoAttrRsp_kakao_value* mutable_values(int index);
  inline ::CSKakaoAttrRsp_kakao_value* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSKakaoAttrRsp_kakao_value >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSKakaoAttrRsp_kakao_value >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:CSKakaoAttrRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSKakaoAttrRsp_kakao_value > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSKakaoAttrRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSkakaoUrlReq : public ::google::protobuf::Message {
 public:
  CSkakaoUrlReq();
  virtual ~CSkakaoUrlReq();
  
  CSkakaoUrlReq(const CSkakaoUrlReq& from);
  
  inline CSkakaoUrlReq& operator=(const CSkakaoUrlReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSkakaoUrlReq& default_instance();
  
  void Swap(CSkakaoUrlReq* other);
  
  // implements Message ----------------------------------------------
  
  CSkakaoUrlReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSkakaoUrlReq& from);
  void MergeFrom(const CSkakaoUrlReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes kakao_url = 1;
  inline bool has_kakao_url() const;
  inline void clear_kakao_url();
  static const int kKakaoUrlFieldNumber = 1;
  inline const ::std::string& kakao_url() const;
  inline void set_kakao_url(const ::std::string& value);
  inline void set_kakao_url(const char* value);
  inline void set_kakao_url(const void* value, size_t size);
  inline ::std::string* mutable_kakao_url();
  inline ::std::string* release_kakao_url();
  
  // @@protoc_insertion_point(class_scope:CSkakaoUrlReq)
 private:
  inline void set_has_kakao_url();
  inline void clear_has_kakao_url();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* kakao_url_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSkakaoUrlReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetCdRewardReq : public ::google::protobuf::Message {
 public:
  CSGetCdRewardReq();
  virtual ~CSGetCdRewardReq();
  
  CSGetCdRewardReq(const CSGetCdRewardReq& from);
  
  inline CSGetCdRewardReq& operator=(const CSGetCdRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetCdRewardReq& default_instance();
  
  void Swap(CSGetCdRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetCdRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetCdRewardReq& from);
  void MergeFrom(const CSGetCdRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint64 accepter = 2;
  inline bool has_accepter() const;
  inline void clear_accepter();
  static const int kAccepterFieldNumber = 2;
  inline ::google::protobuf::uint64 accepter() const;
  inline void set_accepter(::google::protobuf::uint64 value);
  
  // required uint32 expire_time = 3;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 expire_time() const;
  inline void set_expire_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetCdRewardReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_accepter();
  inline void clear_has_accepter();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 accepter_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 expire_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetCdRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetCdRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetCdRewardRsp();
  virtual ~CSGetCdRewardRsp();
  
  CSGetCdRewardRsp(const CSGetCdRewardRsp& from);
  
  inline CSGetCdRewardRsp& operator=(const CSGetCdRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetCdRewardRsp& default_instance();
  
  void Swap(CSGetCdRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetCdRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetCdRewardRsp& from);
  void MergeFrom(const CSGetCdRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetCdRewardRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetCdRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipAllBestRsp : public ::google::protobuf::Message {
 public:
  CSEquipAllBestRsp();
  virtual ~CSEquipAllBestRsp();
  
  CSEquipAllBestRsp(const CSEquipAllBestRsp& from);
  
  inline CSEquipAllBestRsp& operator=(const CSEquipAllBestRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipAllBestRsp& default_instance();
  
  void Swap(CSEquipAllBestRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipAllBestRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipAllBestRsp& from);
  void MergeFrom(const CSEquipAllBestRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSEquipAllBestRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipAllBestRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGoogleGradingReq : public ::google::protobuf::Message {
 public:
  CSGoogleGradingReq();
  virtual ~CSGoogleGradingReq();
  
  CSGoogleGradingReq(const CSGoogleGradingReq& from);
  
  inline CSGoogleGradingReq& operator=(const CSGoogleGradingReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoogleGradingReq& default_instance();
  
  void Swap(CSGoogleGradingReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGoogleGradingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoogleGradingReq& from);
  void MergeFrom(const CSGoogleGradingReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGoogleGradingReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoogleGradingReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExploreTreasureReq : public ::google::protobuf::Message {
 public:
  CSGetExploreTreasureReq();
  virtual ~CSGetExploreTreasureReq();
  
  CSGetExploreTreasureReq(const CSGetExploreTreasureReq& from);
  
  inline CSGetExploreTreasureReq& operator=(const CSGetExploreTreasureReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExploreTreasureReq& default_instance();
  
  void Swap(CSGetExploreTreasureReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExploreTreasureReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExploreTreasureReq& from);
  void MergeFrom(const CSGetExploreTreasureReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetExploreTreasureReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExploreTreasureReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExploreTreasureRsp : public ::google::protobuf::Message {
 public:
  CSGetExploreTreasureRsp();
  virtual ~CSGetExploreTreasureRsp();
  
  CSGetExploreTreasureRsp(const CSGetExploreTreasureRsp& from);
  
  inline CSGetExploreTreasureRsp& operator=(const CSGetExploreTreasureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExploreTreasureRsp& default_instance();
  
  void Swap(CSGetExploreTreasureRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExploreTreasureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExploreTreasureRsp& from);
  void MergeFrom(const CSGetExploreTreasureRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetExploreTreasureRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExploreTreasureRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExploreInfoReq : public ::google::protobuf::Message {
 public:
  CSGetExploreInfoReq();
  virtual ~CSGetExploreInfoReq();
  
  CSGetExploreInfoReq(const CSGetExploreInfoReq& from);
  
  inline CSGetExploreInfoReq& operator=(const CSGetExploreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExploreInfoReq& default_instance();
  
  void Swap(CSGetExploreInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExploreInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExploreInfoReq& from);
  void MergeFrom(const CSGetExploreInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetExploreInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExploreInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExploreInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetExploreInfoRsp();
  virtual ~CSGetExploreInfoRsp();
  
  CSGetExploreInfoRsp(const CSGetExploreInfoRsp& from);
  
  inline CSGetExploreInfoRsp& operator=(const CSGetExploreInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExploreInfoRsp& default_instance();
  
  void Swap(CSGetExploreInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExploreInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExploreInfoRsp& from);
  void MergeFrom(const CSGetExploreInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSGetExploreInfoRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExploreInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityDataReq : public ::google::protobuf::Message {
 public:
  CSGetActivityDataReq();
  virtual ~CSGetActivityDataReq();
  
  CSGetActivityDataReq(const CSGetActivityDataReq& from);
  
  inline CSGetActivityDataReq& operator=(const CSGetActivityDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityDataReq& default_instance();
  
  void Swap(CSGetActivityDataReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityDataReq& from);
  void MergeFrom(const CSGetActivityDataReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetActivityDataReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityDataReq* default_instance_;
};
// -------------------------------------------------------------------

class CSActivityCentreItemInfo : public ::google::protobuf::Message {
 public:
  CSActivityCentreItemInfo();
  virtual ~CSActivityCentreItemInfo();
  
  CSActivityCentreItemInfo(const CSActivityCentreItemInfo& from);
  
  inline CSActivityCentreItemInfo& operator=(const CSActivityCentreItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSActivityCentreItemInfo& default_instance();
  
  void Swap(CSActivityCentreItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSActivityCentreItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSActivityCentreItemInfo& from);
  void MergeFrom(const CSActivityCentreItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional bytes activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline const ::std::string& activity_type() const;
  inline void set_activity_type(const ::std::string& value);
  inline void set_activity_type(const char* value);
  inline void set_activity_type(const void* value, size_t size);
  inline ::std::string* mutable_activity_type();
  inline ::std::string* release_activity_type();
  
  // optional bytes activity_show = 3;
  inline bool has_activity_show() const;
  inline void clear_activity_show();
  static const int kActivityShowFieldNumber = 3;
  inline const ::std::string& activity_show() const;
  inline void set_activity_show(const ::std::string& value);
  inline void set_activity_show(const char* value);
  inline void set_activity_show(const void* value, size_t size);
  inline ::std::string* mutable_activity_show();
  inline ::std::string* release_activity_show();
  
  // optional bytes activity_qualification = 4;
  inline bool has_activity_qualification() const;
  inline void clear_activity_qualification();
  static const int kActivityQualificationFieldNumber = 4;
  inline const ::std::string& activity_qualification() const;
  inline void set_activity_qualification(const ::std::string& value);
  inline void set_activity_qualification(const char* value);
  inline void set_activity_qualification(const void* value, size_t size);
  inline ::std::string* mutable_activity_qualification();
  inline ::std::string* release_activity_qualification();
  
  // optional bytes activity_qualification2 = 5;
  inline bool has_activity_qualification2() const;
  inline void clear_activity_qualification2();
  static const int kActivityQualification2FieldNumber = 5;
  inline const ::std::string& activity_qualification2() const;
  inline void set_activity_qualification2(const ::std::string& value);
  inline void set_activity_qualification2(const char* value);
  inline void set_activity_qualification2(const void* value, size_t size);
  inline ::std::string* mutable_activity_qualification2();
  inline ::std::string* release_activity_qualification2();
  
  // optional bytes award1 = 6;
  inline bool has_award1() const;
  inline void clear_award1();
  static const int kAward1FieldNumber = 6;
  inline const ::std::string& award1() const;
  inline void set_award1(const ::std::string& value);
  inline void set_award1(const char* value);
  inline void set_award1(const void* value, size_t size);
  inline ::std::string* mutable_award1();
  inline ::std::string* release_award1();
  
  // optional bytes award2 = 7;
  inline bool has_award2() const;
  inline void clear_award2();
  static const int kAward2FieldNumber = 7;
  inline const ::std::string& award2() const;
  inline void set_award2(const ::std::string& value);
  inline void set_award2(const char* value);
  inline void set_award2(const void* value, size_t size);
  inline ::std::string* mutable_award2();
  inline ::std::string* release_award2();
  
  // optional uint32 startdate = 8;
  inline bool has_startdate() const;
  inline void clear_startdate();
  static const int kStartdateFieldNumber = 8;
  inline ::google::protobuf::uint32 startdate() const;
  inline void set_startdate(::google::protobuf::uint32 value);
  
  // optional uint32 enddate = 9;
  inline bool has_enddate() const;
  inline void clear_enddate();
  static const int kEnddateFieldNumber = 9;
  inline ::google::protobuf::uint32 enddate() const;
  inline void set_enddate(::google::protobuf::uint32 value);
  
  // optional uint32 starttime = 10;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 10;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);
  
  // optional uint32 endtime = 11;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 11;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);
  
  // repeated uint32 specialtm = 12;
  inline int specialtm_size() const;
  inline void clear_specialtm();
  static const int kSpecialtmFieldNumber = 12;
  inline ::google::protobuf::uint32 specialtm(int index) const;
  inline void set_specialtm(int index, ::google::protobuf::uint32 value);
  inline void add_specialtm(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      specialtm() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_specialtm();
  
  // optional uint32 rewarddate = 13;
  inline bool has_rewarddate() const;
  inline void clear_rewarddate();
  static const int kRewarddateFieldNumber = 13;
  inline ::google::protobuf::uint32 rewarddate() const;
  inline void set_rewarddate(::google::protobuf::uint32 value);
  
  // optional bytes extend_1 = 14;
  inline bool has_extend_1() const;
  inline void clear_extend_1();
  static const int kExtend1FieldNumber = 14;
  inline const ::std::string& extend_1() const;
  inline void set_extend_1(const ::std::string& value);
  inline void set_extend_1(const char* value);
  inline void set_extend_1(const void* value, size_t size);
  inline ::std::string* mutable_extend_1();
  inline ::std::string* release_extend_1();
  
  // optional bytes extend_2 = 15;
  inline bool has_extend_2() const;
  inline void clear_extend_2();
  static const int kExtend2FieldNumber = 15;
  inline const ::std::string& extend_2() const;
  inline void set_extend_2(const ::std::string& value);
  inline void set_extend_2(const char* value);
  inline void set_extend_2(const void* value, size_t size);
  inline ::std::string* mutable_extend_2();
  inline ::std::string* release_extend_2();
  
  // @@protoc_insertion_point(class_scope:CSActivityCentreItemInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_activity_show();
  inline void clear_has_activity_show();
  inline void set_has_activity_qualification();
  inline void clear_has_activity_qualification();
  inline void set_has_activity_qualification2();
  inline void clear_has_activity_qualification2();
  inline void set_has_award1();
  inline void clear_has_award1();
  inline void set_has_award2();
  inline void clear_has_award2();
  inline void set_has_startdate();
  inline void clear_has_startdate();
  inline void set_has_enddate();
  inline void clear_has_enddate();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewarddate();
  inline void clear_has_rewarddate();
  inline void set_has_extend_1();
  inline void clear_has_extend_1();
  inline void set_has_extend_2();
  inline void clear_has_extend_2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* activity_type_;
  ::std::string* activity_show_;
  ::std::string* activity_qualification_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 startdate_;
  ::std::string* activity_qualification2_;
  ::std::string* award1_;
  ::std::string* award2_;
  ::google::protobuf::uint32 enddate_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > specialtm_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 rewarddate_;
  ::std::string* extend_1_;
  ::std::string* extend_2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSActivityCentreItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSShowActivityItemInfo : public ::google::protobuf::Message {
 public:
  CSShowActivityItemInfo();
  virtual ~CSShowActivityItemInfo();
  
  CSShowActivityItemInfo(const CSShowActivityItemInfo& from);
  
  inline CSShowActivityItemInfo& operator=(const CSShowActivityItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowActivityItemInfo& default_instance();
  
  void Swap(CSShowActivityItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSShowActivityItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowActivityItemInfo& from);
  void MergeFrom(const CSShowActivityItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes activity_show = 1;
  inline bool has_activity_show() const;
  inline void clear_activity_show();
  static const int kActivityShowFieldNumber = 1;
  inline const ::std::string& activity_show() const;
  inline void set_activity_show(const ::std::string& value);
  inline void set_activity_show(const char* value);
  inline void set_activity_show(const void* value, size_t size);
  inline ::std::string* mutable_activity_show();
  inline ::std::string* release_activity_show();
  
  // optional bytes activity_condition = 2;
  inline bool has_activity_condition() const;
  inline void clear_activity_condition();
  static const int kActivityConditionFieldNumber = 2;
  inline const ::std::string& activity_condition() const;
  inline void set_activity_condition(const ::std::string& value);
  inline void set_activity_condition(const char* value);
  inline void set_activity_condition(const void* value, size_t size);
  inline ::std::string* mutable_activity_condition();
  inline ::std::string* release_activity_condition();
  
  // optional bytes activity_name = 3;
  inline bool has_activity_name() const;
  inline void clear_activity_name();
  static const int kActivityNameFieldNumber = 3;
  inline const ::std::string& activity_name() const;
  inline void set_activity_name(const ::std::string& value);
  inline void set_activity_name(const char* value);
  inline void set_activity_name(const void* value, size_t size);
  inline ::std::string* mutable_activity_name();
  inline ::std::string* release_activity_name();
  
  // optional bytes font_color = 4;
  inline bool has_font_color() const;
  inline void clear_font_color();
  static const int kFontColorFieldNumber = 4;
  inline const ::std::string& font_color() const;
  inline void set_font_color(const ::std::string& value);
  inline void set_font_color(const char* value);
  inline void set_font_color(const void* value, size_t size);
  inline ::std::string* mutable_font_color();
  inline ::std::string* release_font_color();
  
  // optional bytes buttonid = 5;
  inline bool has_buttonid() const;
  inline void clear_buttonid();
  static const int kButtonidFieldNumber = 5;
  inline const ::std::string& buttonid() const;
  inline void set_buttonid(const ::std::string& value);
  inline void set_buttonid(const char* value);
  inline void set_buttonid(const void* value, size_t size);
  inline ::std::string* mutable_buttonid();
  inline ::std::string* release_buttonid();
  
  // optional bytes buttonid_text = 6;
  inline bool has_buttonid_text() const;
  inline void clear_buttonid_text();
  static const int kButtonidTextFieldNumber = 6;
  inline const ::std::string& buttonid_text() const;
  inline void set_buttonid_text(const ::std::string& value);
  inline void set_buttonid_text(const char* value);
  inline void set_buttonid_text(const void* value, size_t size);
  inline ::std::string* mutable_buttonid_text();
  inline ::std::string* release_buttonid_text();
  
  // optional bytes openlayername = 7;
  inline bool has_openlayername() const;
  inline void clear_openlayername();
  static const int kOpenlayernameFieldNumber = 7;
  inline const ::std::string& openlayername() const;
  inline void set_openlayername(const ::std::string& value);
  inline void set_openlayername(const char* value);
  inline void set_openlayername(const void* value, size_t size);
  inline ::std::string* mutable_openlayername();
  inline ::std::string* release_openlayername();
  
  // optional bytes activity_content = 8;
  inline bool has_activity_content() const;
  inline void clear_activity_content();
  static const int kActivityContentFieldNumber = 8;
  inline const ::std::string& activity_content() const;
  inline void set_activity_content(const ::std::string& value);
  inline void set_activity_content(const char* value);
  inline void set_activity_content(const void* value, size_t size);
  inline ::std::string* mutable_activity_content();
  inline ::std::string* release_activity_content();
  
  // optional bytes itemflag = 9;
  inline bool has_itemflag() const;
  inline void clear_itemflag();
  static const int kItemflagFieldNumber = 9;
  inline const ::std::string& itemflag() const;
  inline void set_itemflag(const ::std::string& value);
  inline void set_itemflag(const char* value);
  inline void set_itemflag(const void* value, size_t size);
  inline ::std::string* mutable_itemflag();
  inline ::std::string* release_itemflag();
  
  // @@protoc_insertion_point(class_scope:CSShowActivityItemInfo)
 private:
  inline void set_has_activity_show();
  inline void clear_has_activity_show();
  inline void set_has_activity_condition();
  inline void clear_has_activity_condition();
  inline void set_has_activity_name();
  inline void clear_has_activity_name();
  inline void set_has_font_color();
  inline void clear_has_font_color();
  inline void set_has_buttonid();
  inline void clear_has_buttonid();
  inline void set_has_buttonid_text();
  inline void clear_has_buttonid_text();
  inline void set_has_openlayername();
  inline void clear_has_openlayername();
  inline void set_has_activity_content();
  inline void clear_has_activity_content();
  inline void set_has_itemflag();
  inline void clear_has_itemflag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* activity_show_;
  ::std::string* activity_condition_;
  ::std::string* activity_name_;
  ::std::string* font_color_;
  ::std::string* buttonid_;
  ::std::string* buttonid_text_;
  ::std::string* openlayername_;
  ::std::string* activity_content_;
  ::std::string* itemflag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSShowActivityItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityDataRsp : public ::google::protobuf::Message {
 public:
  CSGetActivityDataRsp();
  virtual ~CSGetActivityDataRsp();
  
  CSGetActivityDataRsp(const CSGetActivityDataRsp& from);
  
  inline CSGetActivityDataRsp& operator=(const CSGetActivityDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityDataRsp& default_instance();
  
  void Swap(CSGetActivityDataRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityDataRsp& from);
  void MergeFrom(const CSGetActivityDataRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSShowActivityItemInfo show_info = 1;
  inline int show_info_size() const;
  inline void clear_show_info();
  static const int kShowInfoFieldNumber = 1;
  inline const ::CSShowActivityItemInfo& show_info(int index) const;
  inline ::CSShowActivityItemInfo* mutable_show_info(int index);
  inline ::CSShowActivityItemInfo* add_show_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CSShowActivityItemInfo >&
      show_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSShowActivityItemInfo >*
      mutable_show_info();
  
  // repeated .CSActivityCentreItemInfo center_info = 2;
  inline int center_info_size() const;
  inline void clear_center_info();
  static const int kCenterInfoFieldNumber = 2;
  inline const ::CSActivityCentreItemInfo& center_info(int index) const;
  inline ::CSActivityCentreItemInfo* mutable_center_info(int index);
  inline ::CSActivityCentreItemInfo* add_center_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CSActivityCentreItemInfo >&
      center_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSActivityCentreItemInfo >*
      mutable_center_info();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityDataRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSShowActivityItemInfo > show_info_;
  ::google::protobuf::RepeatedPtrField< ::CSActivityCentreItemInfo > center_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class carmsg01 : public ::google::protobuf::Message {
 public:
  carmsg01();
  virtual ~carmsg01();
  
  carmsg01(const carmsg01& from);
  
  inline carmsg01& operator=(const carmsg01& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg01& default_instance();
  
  void Swap(carmsg01* other);
  
  // implements Message ----------------------------------------------
  
  carmsg01* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg01& from);
  void MergeFrom(const carmsg01& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg01)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg01* default_instance_;
};
// -------------------------------------------------------------------

class carmsg02 : public ::google::protobuf::Message {
 public:
  carmsg02();
  virtual ~carmsg02();
  
  carmsg02(const carmsg02& from);
  
  inline carmsg02& operator=(const carmsg02& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg02& default_instance();
  
  void Swap(carmsg02* other);
  
  // implements Message ----------------------------------------------
  
  carmsg02* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg02& from);
  void MergeFrom(const carmsg02& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg02)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg02* default_instance_;
};
// -------------------------------------------------------------------

class carmsg03 : public ::google::protobuf::Message {
 public:
  carmsg03();
  virtual ~carmsg03();
  
  carmsg03(const carmsg03& from);
  
  inline carmsg03& operator=(const carmsg03& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg03& default_instance();
  
  void Swap(carmsg03* other);
  
  // implements Message ----------------------------------------------
  
  carmsg03* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg03& from);
  void MergeFrom(const carmsg03& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg03)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg03* default_instance_;
};
// -------------------------------------------------------------------

class carmsg04 : public ::google::protobuf::Message {
 public:
  carmsg04();
  virtual ~carmsg04();
  
  carmsg04(const carmsg04& from);
  
  inline carmsg04& operator=(const carmsg04& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg04& default_instance();
  
  void Swap(carmsg04* other);
  
  // implements Message ----------------------------------------------
  
  carmsg04* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg04& from);
  void MergeFrom(const carmsg04& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg04)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg04* default_instance_;
};
// -------------------------------------------------------------------

class carmsg05 : public ::google::protobuf::Message {
 public:
  carmsg05();
  virtual ~carmsg05();
  
  carmsg05(const carmsg05& from);
  
  inline carmsg05& operator=(const carmsg05& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg05& default_instance();
  
  void Swap(carmsg05* other);
  
  // implements Message ----------------------------------------------
  
  carmsg05* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg05& from);
  void MergeFrom(const carmsg05& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg05)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg05* default_instance_;
};
// -------------------------------------------------------------------

class CSTargetListReq : public ::google::protobuf::Message {
 public:
  CSTargetListReq();
  virtual ~CSTargetListReq();
  
  CSTargetListReq(const CSTargetListReq& from);
  
  inline CSTargetListReq& operator=(const CSTargetListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTargetListReq& default_instance();
  
  void Swap(CSTargetListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTargetListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTargetListReq& from);
  void MergeFrom(const CSTargetListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTargetListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTargetListReq* default_instance_;
};
// -------------------------------------------------------------------

class Step_Rate : public ::google::protobuf::Message {
 public:
  Step_Rate();
  virtual ~Step_Rate();
  
  Step_Rate(const Step_Rate& from);
  
  inline Step_Rate& operator=(const Step_Rate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Step_Rate& default_instance();
  
  void Swap(Step_Rate* other);
  
  // implements Message ----------------------------------------------
  
  Step_Rate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Step_Rate& from);
  void MergeFrom(const Step_Rate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cur_rate = 1;
  inline bool has_cur_rate() const;
  inline void clear_cur_rate();
  static const int kCurRateFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_rate() const;
  inline void set_cur_rate(::google::protobuf::uint32 value);
  
  // required uint32 total_rate = 2;
  inline bool has_total_rate() const;
  inline void clear_total_rate();
  static const int kTotalRateFieldNumber = 2;
  inline ::google::protobuf::uint32 total_rate() const;
  inline void set_total_rate(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Step_Rate)
 private:
  inline void set_has_cur_rate();
  inline void clear_has_cur_rate();
  inline void set_has_total_rate();
  inline void clear_has_total_rate();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cur_rate_;
  ::google::protobuf::uint32 total_rate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Step_Rate* default_instance_;
};
// -------------------------------------------------------------------

class Target_Info : public ::google::protobuf::Message {
 public:
  Target_Info();
  virtual ~Target_Info();
  
  Target_Info(const Target_Info& from);
  
  inline Target_Info& operator=(const Target_Info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Target_Info& default_instance();
  
  void Swap(Target_Info* other);
  
  // implements Message ----------------------------------------------
  
  Target_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Target_Info& from);
  void MergeFrom(const Target_Info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 target_id = 1;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // repeated .Step_Rate rate = 2;
  inline int rate_size() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline const ::Step_Rate& rate(int index) const;
  inline ::Step_Rate* mutable_rate(int index);
  inline ::Step_Rate* add_rate();
  inline const ::google::protobuf::RepeatedPtrField< ::Step_Rate >&
      rate() const;
  inline ::google::protobuf::RepeatedPtrField< ::Step_Rate >*
      mutable_rate();
  
  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Target_Info)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Step_Rate > rate_;
  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Target_Info* default_instance_;
};
// -------------------------------------------------------------------

class CSTargetListRsp : public ::google::protobuf::Message {
 public:
  CSTargetListRsp();
  virtual ~CSTargetListRsp();
  
  CSTargetListRsp(const CSTargetListRsp& from);
  
  inline CSTargetListRsp& operator=(const CSTargetListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTargetListRsp& default_instance();
  
  void Swap(CSTargetListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTargetListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTargetListRsp& from);
  void MergeFrom(const CSTargetListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Target_Info targets = 1;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 1;
  inline const ::Target_Info& targets(int index) const;
  inline ::Target_Info* mutable_targets(int index);
  inline ::Target_Info* add_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::Target_Info >&
      targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Target_Info >*
      mutable_targets();
  
  // @@protoc_insertion_point(class_scope:CSTargetListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Target_Info > targets_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTargetListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetTargetRewardReq : public ::google::protobuf::Message {
 public:
  CSGetTargetRewardReq();
  virtual ~CSGetTargetRewardReq();
  
  CSGetTargetRewardReq(const CSGetTargetRewardReq& from);
  
  inline CSGetTargetRewardReq& operator=(const CSGetTargetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetTargetRewardReq& default_instance();
  
  void Swap(CSGetTargetRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetTargetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetTargetRewardReq& from);
  void MergeFrom(const CSGetTargetRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 target_id = 1;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSGetTargetRewardReq)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 target_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetTargetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetTargetRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetTargetRewardRsp();
  virtual ~CSGetTargetRewardRsp();
  
  CSGetTargetRewardRsp(const CSGetTargetRewardRsp& from);
  
  inline CSGetTargetRewardRsp& operator=(const CSGetTargetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetTargetRewardRsp& default_instance();
  
  void Swap(CSGetTargetRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetTargetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetTargetRewardRsp& from);
  void MergeFrom(const CSGetTargetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 target_id = 1;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // required bool is_succ = 2;
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // optional .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSGetTargetRewardRsp)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 target_id_;
  bool is_succ_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetTargetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUpdateTargetInfoRsp : public ::google::protobuf::Message {
 public:
  CSUpdateTargetInfoRsp();
  virtual ~CSUpdateTargetInfoRsp();
  
  CSUpdateTargetInfoRsp(const CSUpdateTargetInfoRsp& from);
  
  inline CSUpdateTargetInfoRsp& operator=(const CSUpdateTargetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUpdateTargetInfoRsp& default_instance();
  
  void Swap(CSUpdateTargetInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUpdateTargetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUpdateTargetInfoRsp& from);
  void MergeFrom(const CSUpdateTargetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Target_Info targets = 1;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 1;
  inline const ::Target_Info& targets(int index) const;
  inline ::Target_Info* mutable_targets(int index);
  inline ::Target_Info* add_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::Target_Info >&
      targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Target_Info >*
      mutable_targets();
  
  // @@protoc_insertion_point(class_scope:CSUpdateTargetInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Target_Info > targets_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUpdateTargetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelTargetfoRsp : public ::google::protobuf::Message {
 public:
  CSDelTargetfoRsp();
  virtual ~CSDelTargetfoRsp();
  
  CSDelTargetfoRsp(const CSDelTargetfoRsp& from);
  
  inline CSDelTargetfoRsp& operator=(const CSDelTargetfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelTargetfoRsp& default_instance();
  
  void Swap(CSDelTargetfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelTargetfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelTargetfoRsp& from);
  void MergeFrom(const CSDelTargetfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 target_ids = 1;
  inline int target_ids_size() const;
  inline void clear_target_ids();
  static const int kTargetIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 target_ids(int index) const;
  inline void set_target_ids(int index, ::google::protobuf::uint32 value);
  inline void add_target_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_ids();
  
  // @@protoc_insertion_point(class_scope:CSDelTargetfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelTargetfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterListReq : public ::google::protobuf::Message {
 public:
  CSExchangeParameterListReq();
  virtual ~CSExchangeParameterListReq();
  
  CSExchangeParameterListReq(const CSExchangeParameterListReq& from);
  
  inline CSExchangeParameterListReq& operator=(const CSExchangeParameterListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterListReq& default_instance();
  
  void Swap(CSExchangeParameterListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterListReq& from);
  void MergeFrom(const CSExchangeParameterListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterListRsp_ParameterList : public ::google::protobuf::Message {
 public:
  CSExchangeParameterListRsp_ParameterList();
  virtual ~CSExchangeParameterListRsp_ParameterList();
  
  CSExchangeParameterListRsp_ParameterList(const CSExchangeParameterListRsp_ParameterList& from);
  
  inline CSExchangeParameterListRsp_ParameterList& operator=(const CSExchangeParameterListRsp_ParameterList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterListRsp_ParameterList& default_instance();
  
  void Swap(CSExchangeParameterListRsp_ParameterList* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterListRsp_ParameterList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterListRsp_ParameterList& from);
  void MergeFrom(const CSExchangeParameterListRsp_ParameterList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterListRsp.ParameterList)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_price();
  inline void clear_has_price();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 price_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterListRsp_ParameterList* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterListRsp : public ::google::protobuf::Message {
 public:
  CSExchangeParameterListRsp();
  virtual ~CSExchangeParameterListRsp();
  
  CSExchangeParameterListRsp(const CSExchangeParameterListRsp& from);
  
  inline CSExchangeParameterListRsp& operator=(const CSExchangeParameterListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterListRsp& default_instance();
  
  void Swap(CSExchangeParameterListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterListRsp& from);
  void MergeFrom(const CSExchangeParameterListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSExchangeParameterListRsp_ParameterList ParameterList;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSExchangeParameterListRsp.ParameterList prices = 1;
  inline int prices_size() const;
  inline void clear_prices();
  static const int kPricesFieldNumber = 1;
  inline const ::CSExchangeParameterListRsp_ParameterList& prices(int index) const;
  inline ::CSExchangeParameterListRsp_ParameterList* mutable_prices(int index);
  inline ::CSExchangeParameterListRsp_ParameterList* add_prices();
  inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeParameterListRsp_ParameterList >&
      prices() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSExchangeParameterListRsp_ParameterList >*
      mutable_prices();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSExchangeParameterListRsp_ParameterList > prices_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTargetFinishedRsp : public ::google::protobuf::Message {
 public:
  CSTargetFinishedRsp();
  virtual ~CSTargetFinishedRsp();
  
  CSTargetFinishedRsp(const CSTargetFinishedRsp& from);
  
  inline CSTargetFinishedRsp& operator=(const CSTargetFinishedRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTargetFinishedRsp& default_instance();
  
  void Swap(CSTargetFinishedRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTargetFinishedRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTargetFinishedRsp& from);
  void MergeFrom(const CSTargetFinishedRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // @@protoc_insertion_point(class_scope:CSTargetFinishedRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTargetFinishedRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMcardInfoReq : public ::google::protobuf::Message {
 public:
  CSMcardInfoReq();
  virtual ~CSMcardInfoReq();
  
  CSMcardInfoReq(const CSMcardInfoReq& from);
  
  inline CSMcardInfoReq& operator=(const CSMcardInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMcardInfoReq& default_instance();
  
  void Swap(CSMcardInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMcardInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMcardInfoReq& from);
  void MergeFrom(const CSMcardInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSMcardInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMcardInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class McardInfo : public ::google::protobuf::Message {
 public:
  McardInfo();
  virtual ~McardInfo();
  
  McardInfo(const McardInfo& from);
  
  inline McardInfo& operator=(const McardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const McardInfo& default_instance();
  
  void Swap(McardInfo* other);
  
  // implements Message ----------------------------------------------
  
  McardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const McardInfo& from);
  void MergeFrom(const McardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 card_id = 1;
  inline bool has_card_id() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 card_id() const;
  inline void set_card_id(::google::protobuf::uint32 value);
  
  // required bool is_rev = 2;
  inline bool has_is_rev() const;
  inline void clear_is_rev();
  static const int kIsRevFieldNumber = 2;
  inline bool is_rev() const;
  inline void set_is_rev(bool value);
  
  // required uint32 day_cnt = 3;
  inline bool has_day_cnt() const;
  inline void clear_day_cnt();
  static const int kDayCntFieldNumber = 3;
  inline ::google::protobuf::uint32 day_cnt() const;
  inline void set_day_cnt(::google::protobuf::uint32 value);
  
  // required bool is_alarm = 4;
  inline bool has_is_alarm() const;
  inline void clear_is_alarm();
  static const int kIsAlarmFieldNumber = 4;
  inline bool is_alarm() const;
  inline void set_is_alarm(bool value);
  
  // required uint32 ret_diamond = 5;
  inline bool has_ret_diamond() const;
  inline void clear_ret_diamond();
  static const int kRetDiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 ret_diamond() const;
  inline void set_ret_diamond(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:McardInfo)
 private:
  inline void set_has_card_id();
  inline void clear_has_card_id();
  inline void set_has_is_rev();
  inline void clear_has_is_rev();
  inline void set_has_day_cnt();
  inline void clear_has_day_cnt();
  inline void set_has_is_alarm();
  inline void clear_has_is_alarm();
  inline void set_has_ret_diamond();
  inline void clear_has_ret_diamond();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 day_cnt_;
  bool is_rev_;
  bool is_alarm_;
  ::google::protobuf::uint32 ret_diamond_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static McardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMcardInfoRsp : public ::google::protobuf::Message {
 public:
  CSMcardInfoRsp();
  virtual ~CSMcardInfoRsp();
  
  CSMcardInfoRsp(const CSMcardInfoRsp& from);
  
  inline CSMcardInfoRsp& operator=(const CSMcardInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMcardInfoRsp& default_instance();
  
  void Swap(CSMcardInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMcardInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMcardInfoRsp& from);
  void MergeFrom(const CSMcardInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cnt = 1;
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 1;
  inline ::google::protobuf::uint32 cnt() const;
  inline void set_cnt(::google::protobuf::uint32 value);
  
  // repeated .McardInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::McardInfo& info(int index) const;
  inline ::McardInfo* mutable_info(int index);
  inline ::McardInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::McardInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::McardInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:CSMcardInfoRsp)
 private:
  inline void set_has_cnt();
  inline void clear_has_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::McardInfo > info_;
  ::google::protobuf::uint32 cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMcardInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMcardRewardReq : public ::google::protobuf::Message {
 public:
  CSMcardRewardReq();
  virtual ~CSMcardRewardReq();
  
  CSMcardRewardReq(const CSMcardRewardReq& from);
  
  inline CSMcardRewardReq& operator=(const CSMcardRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMcardRewardReq& default_instance();
  
  void Swap(CSMcardRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMcardRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMcardRewardReq& from);
  void MergeFrom(const CSMcardRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 card_id = 1;
  inline bool has_card_id() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 card_id() const;
  inline void set_card_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMcardRewardReq)
 private:
  inline void set_has_card_id();
  inline void clear_has_card_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 card_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMcardRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMcardRewardRsp : public ::google::protobuf::Message {
 public:
  CSMcardRewardRsp();
  virtual ~CSMcardRewardRsp();
  
  CSMcardRewardRsp(const CSMcardRewardRsp& from);
  
  inline CSMcardRewardRsp& operator=(const CSMcardRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMcardRewardRsp& default_instance();
  
  void Swap(CSMcardRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMcardRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMcardRewardRsp& from);
  void MergeFrom(const CSMcardRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool is_succ = 1;
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 1;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSMcardRewardRsp)
 private:
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMcardRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCreateGuildReq : public ::google::protobuf::Message {
 public:
  CSCreateGuildReq();
  virtual ~CSCreateGuildReq();
  
  CSCreateGuildReq(const CSCreateGuildReq& from);
  
  inline CSCreateGuildReq& operator=(const CSCreateGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCreateGuildReq& default_instance();
  
  void Swap(CSCreateGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCreateGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCreateGuildReq& from);
  void MergeFrom(const CSCreateGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:CSCreateGuildReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCreateGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCreateGuildRsp : public ::google::protobuf::Message {
 public:
  CSCreateGuildRsp();
  virtual ~CSCreateGuildRsp();
  
  CSCreateGuildRsp(const CSCreateGuildRsp& from);
  
  inline CSCreateGuildRsp& operator=(const CSCreateGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCreateGuildRsp& default_instance();
  
  void Swap(CSCreateGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCreateGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCreateGuildRsp& from);
  void MergeFrom(const CSCreateGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // required uint32 gid_high = 2;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 2;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // required uint32 gid_low = 3;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 3;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCreateGuildRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 res_;
  ::google::protobuf::uint32 gid_high_;
  ::google::protobuf::uint32 gid_low_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCreateGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSJoinGuildReq : public ::google::protobuf::Message {
 public:
  CSJoinGuildReq();
  virtual ~CSJoinGuildReq();
  
  CSJoinGuildReq(const CSJoinGuildReq& from);
  
  inline CSJoinGuildReq& operator=(const CSJoinGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSJoinGuildReq& default_instance();
  
  void Swap(CSJoinGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSJoinGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSJoinGuildReq& from);
  void MergeFrom(const CSJoinGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 gid_high = 1;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 1;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // required uint32 gid_low = 2;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 2;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSJoinGuildReq)
 private:
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gid_high_;
  ::google::protobuf::uint32 gid_low_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSJoinGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSJoinGuildRsp : public ::google::protobuf::Message {
 public:
  CSJoinGuildRsp();
  virtual ~CSJoinGuildRsp();
  
  CSJoinGuildRsp(const CSJoinGuildRsp& from);
  
  inline CSJoinGuildRsp& operator=(const CSJoinGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSJoinGuildRsp& default_instance();
  
  void Swap(CSJoinGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSJoinGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSJoinGuildRsp& from);
  void MergeFrom(const CSJoinGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // optional uint32 gid_high = 2;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 2;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // optional uint32 gid_low = 3;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 3;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSJoinGuildRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 res_;
  ::google::protobuf::uint32 gid_high_;
  ::google::protobuf::uint32 gid_low_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSJoinGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDropGuildReq : public ::google::protobuf::Message {
 public:
  CSDropGuildReq();
  virtual ~CSDropGuildReq();
  
  CSDropGuildReq(const CSDropGuildReq& from);
  
  inline CSDropGuildReq& operator=(const CSDropGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDropGuildReq& default_instance();
  
  void Swap(CSDropGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDropGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDropGuildReq& from);
  void MergeFrom(const CSDropGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSDropGuildReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDropGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDropGuildRsp : public ::google::protobuf::Message {
 public:
  CSDropGuildRsp();
  virtual ~CSDropGuildRsp();
  
  CSDropGuildRsp(const CSDropGuildRsp& from);
  
  inline CSDropGuildRsp& operator=(const CSDropGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDropGuildRsp& default_instance();
  
  void Swap(CSDropGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDropGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDropGuildRsp& from);
  void MergeFrom(const CSDropGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDropGuildRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDropGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQuitGuildReq : public ::google::protobuf::Message {
 public:
  CSQuitGuildReq();
  virtual ~CSQuitGuildReq();
  
  CSQuitGuildReq(const CSQuitGuildReq& from);
  
  inline CSQuitGuildReq& operator=(const CSQuitGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQuitGuildReq& default_instance();
  
  void Swap(CSQuitGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQuitGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQuitGuildReq& from);
  void MergeFrom(const CSQuitGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSQuitGuildReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQuitGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQuitGuildRsp : public ::google::protobuf::Message {
 public:
  CSQuitGuildRsp();
  virtual ~CSQuitGuildRsp();
  
  CSQuitGuildRsp(const CSQuitGuildRsp& from);
  
  inline CSQuitGuildRsp& operator=(const CSQuitGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQuitGuildRsp& default_instance();
  
  void Swap(CSQuitGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQuitGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQuitGuildRsp& from);
  void MergeFrom(const CSQuitGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // @@protoc_insertion_point(class_scope:CSQuitGuildRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQuitGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildInfo : public ::google::protobuf::Message {
 public:
  CSGuildInfo();
  virtual ~CSGuildInfo();
  
  CSGuildInfo(const CSGuildInfo& from);
  
  inline CSGuildInfo& operator=(const CSGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildInfo& default_instance();
  
  void Swap(CSGuildInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildInfo& from);
  void MergeFrom(const CSGuildInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 gid_high = 1;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 1;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // required uint32 gid_low = 2;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 2;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // required uint32 contribute = 4;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 4;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // required uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 fightcondition = 6;
  inline bool has_fightcondition() const;
  inline void clear_fightcondition();
  static const int kFightconditionFieldNumber = 6;
  inline ::google::protobuf::uint32 fightcondition() const;
  inline void set_fightcondition(::google::protobuf::uint32 value);
  
  // required bytes gname = 7;
  inline bool has_gname() const;
  inline void clear_gname();
  static const int kGnameFieldNumber = 7;
  inline const ::std::string& gname() const;
  inline void set_gname(const ::std::string& value);
  inline void set_gname(const char* value);
  inline void set_gname(const void* value, size_t size);
  inline ::std::string* mutable_gname();
  inline ::std::string* release_gname();
  
  // required bytes oname = 8;
  inline bool has_oname() const;
  inline void clear_oname();
  static const int kOnameFieldNumber = 8;
  inline const ::std::string& oname() const;
  inline void set_oname(const ::std::string& value);
  inline void set_oname(const char* value);
  inline void set_oname(const void* value, size_t size);
  inline ::std::string* mutable_oname();
  inline ::std::string* release_oname();
  
  // required bytes note = 9;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 9;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const void* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  
  // required uint32 member_num = 10;
  inline bool has_member_num() const;
  inline void clear_member_num();
  static const int kMemberNumFieldNumber = 10;
  inline ::google::protobuf::uint32 member_num() const;
  inline void set_member_num(::google::protobuf::uint32 value);
  
  // required uint32 power_score = 11;
  inline bool has_power_score() const;
  inline void clear_power_score();
  static const int kPowerScoreFieldNumber = 11;
  inline ::google::protobuf::uint32 power_score() const;
  inline void set_power_score(::google::protobuf::uint32 value);
  
  // required uint32 exp_limit = 12;
  inline bool has_exp_limit() const;
  inline void clear_exp_limit();
  static const int kExpLimitFieldNumber = 12;
  inline ::google::protobuf::uint32 exp_limit() const;
  inline void set_exp_limit(::google::protobuf::uint32 value);
  
  // required uint32 member_num_limit = 13;
  inline bool has_member_num_limit() const;
  inline void clear_member_num_limit();
  static const int kMemberNumLimitFieldNumber = 13;
  inline ::google::protobuf::uint32 member_num_limit() const;
  inline void set_member_num_limit(::google::protobuf::uint32 value);
  
  // required bytes notice = 14;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 14;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const void* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  
  // required uint32 join_type = 15;
  inline bool has_join_type() const;
  inline void clear_join_type();
  static const int kJoinTypeFieldNumber = 15;
  inline ::google::protobuf::uint32 join_type() const;
  inline void set_join_type(::google::protobuf::uint32 value);
  
  // optional bool isrequired = 16 [default = false];
  inline bool has_isrequired() const;
  inline void clear_isrequired();
  static const int kIsrequiredFieldNumber = 16;
  inline bool isrequired() const;
  inline void set_isrequired(bool value);
  
  // optional uint32 ouserid = 17;
  inline bool has_ouserid() const;
  inline void clear_ouserid();
  static const int kOuseridFieldNumber = 17;
  inline ::google::protobuf::uint32 ouserid() const;
  inline void set_ouserid(::google::protobuf::uint32 value);
  
  // optional uint32 oreg_tm = 18;
  inline bool has_oreg_tm() const;
  inline void clear_oreg_tm();
  static const int kOregTmFieldNumber = 18;
  inline ::google::protobuf::uint32 oreg_tm() const;
  inline void set_oreg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 ochannel_id = 19;
  inline bool has_ochannel_id() const;
  inline void clear_ochannel_id();
  static const int kOchannelIdFieldNumber = 19;
  inline ::google::protobuf::uint32 ochannel_id() const;
  inline void set_ochannel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildInfo)
 private:
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_contribute();
  inline void clear_has_contribute();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_fightcondition();
  inline void clear_has_fightcondition();
  inline void set_has_gname();
  inline void clear_has_gname();
  inline void set_has_oname();
  inline void clear_has_oname();
  inline void set_has_note();
  inline void clear_has_note();
  inline void set_has_member_num();
  inline void clear_has_member_num();
  inline void set_has_power_score();
  inline void clear_has_power_score();
  inline void set_has_exp_limit();
  inline void clear_has_exp_limit();
  inline void set_has_member_num_limit();
  inline void clear_has_member_num_limit();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_join_type();
  inline void clear_has_join_type();
  inline void set_has_isrequired();
  inline void clear_has_isrequired();
  inline void set_has_ouserid();
  inline void clear_has_ouserid();
  inline void set_has_oreg_tm();
  inline void clear_has_oreg_tm();
  inline void set_has_ochannel_id();
  inline void clear_has_ochannel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gid_high_;
  ::google::protobuf::uint32 gid_low_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 fightcondition_;
  ::std::string* gname_;
  ::std::string* oname_;
  ::std::string* note_;
  ::google::protobuf::uint32 member_num_;
  ::google::protobuf::uint32 power_score_;
  ::google::protobuf::uint32 exp_limit_;
  ::google::protobuf::uint32 member_num_limit_;
  ::std::string* notice_;
  ::google::protobuf::uint32 join_type_;
  bool isrequired_;
  ::google::protobuf::uint32 ouserid_;
  ::google::protobuf::uint32 oreg_tm_;
  ::google::protobuf::uint32 ochannel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSListGuildReq : public ::google::protobuf::Message {
 public:
  CSListGuildReq();
  virtual ~CSListGuildReq();
  
  CSListGuildReq(const CSListGuildReq& from);
  
  inline CSListGuildReq& operator=(const CSListGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSListGuildReq& default_instance();
  
  void Swap(CSListGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSListGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSListGuildReq& from);
  void MergeFrom(const CSListGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::uint32 begin() const;
  inline void set_begin(::google::protobuf::uint32 value);
  
  // required uint32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSListGuildReq)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 begin_;
  ::google::protobuf::uint32 end_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSListGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSListGuildRsp : public ::google::protobuf::Message {
 public:
  CSListGuildRsp();
  virtual ~CSListGuildRsp();
  
  CSListGuildRsp(const CSListGuildRsp& from);
  
  inline CSListGuildRsp& operator=(const CSListGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSListGuildRsp& default_instance();
  
  void Swap(CSListGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSListGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSListGuildRsp& from);
  void MergeFrom(const CSListGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::uint32 begin() const;
  inline void set_begin(::google::protobuf::uint32 value);
  
  // repeated .CSGuildInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CSGuildInfo& infos(int index) const;
  inline ::CSGuildInfo* mutable_infos(int index);
  inline ::CSGuildInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >*
      mutable_infos();
  
  // required uint32 guild_num = 3;
  inline bool has_guild_num() const;
  inline void clear_guild_num();
  static const int kGuildNumFieldNumber = 3;
  inline ::google::protobuf::uint32 guild_num() const;
  inline void set_guild_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSListGuildRsp)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_guild_num();
  inline void clear_has_guild_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGuildInfo > infos_;
  ::google::protobuf::uint32 begin_;
  ::google::protobuf::uint32 guild_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSListGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchGuildReq : public ::google::protobuf::Message {
 public:
  CSSearchGuildReq();
  virtual ~CSSearchGuildReq();
  
  CSSearchGuildReq(const CSSearchGuildReq& from);
  
  inline CSSearchGuildReq& operator=(const CSSearchGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchGuildReq& default_instance();
  
  void Swap(CSSearchGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchGuildReq& from);
  void MergeFrom(const CSSearchGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:CSSearchGuildReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchGuildRsp : public ::google::protobuf::Message {
 public:
  CSSearchGuildRsp();
  virtual ~CSSearchGuildRsp();
  
  CSSearchGuildRsp(const CSSearchGuildRsp& from);
  
  inline CSSearchGuildRsp& operator=(const CSSearchGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchGuildRsp& default_instance();
  
  void Swap(CSSearchGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchGuildRsp& from);
  void MergeFrom(const CSSearchGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGuildInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::CSGuildInfo& infos(int index) const;
  inline ::CSGuildInfo* mutable_infos(int index);
  inline ::CSGuildInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSSearchGuildRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGuildInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSListPlayerGuildReq : public ::google::protobuf::Message {
 public:
  CSListPlayerGuildReq();
  virtual ~CSListPlayerGuildReq();
  
  CSListPlayerGuildReq(const CSListPlayerGuildReq& from);
  
  inline CSListPlayerGuildReq& operator=(const CSListPlayerGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSListPlayerGuildReq& default_instance();
  
  void Swap(CSListPlayerGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSListPlayerGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSListPlayerGuildReq& from);
  void MergeFrom(const CSListPlayerGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gid_high = 1;
  inline bool has_gid_high() const;
  inline void clear_gid_high();
  static const int kGidHighFieldNumber = 1;
  inline ::google::protobuf::uint32 gid_high() const;
  inline void set_gid_high(::google::protobuf::uint32 value);
  
  // optional uint32 gid_low = 2;
  inline bool has_gid_low() const;
  inline void clear_gid_low();
  static const int kGidLowFieldNumber = 2;
  inline ::google::protobuf::uint32 gid_low() const;
  inline void set_gid_low(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSListPlayerGuildReq)
 private:
  inline void set_has_gid_high();
  inline void clear_has_gid_high();
  inline void set_has_gid_low();
  inline void clear_has_gid_low();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gid_high_;
  ::google::protobuf::uint32 gid_low_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSListPlayerGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPlayerGuildInfo_Item : public ::google::protobuf::Message {
 public:
  CSPlayerGuildInfo_Item();
  virtual ~CSPlayerGuildInfo_Item();
  
  CSPlayerGuildInfo_Item(const CSPlayerGuildInfo_Item& from);
  
  inline CSPlayerGuildInfo_Item& operator=(const CSPlayerGuildInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPlayerGuildInfo_Item& default_instance();
  
  void Swap(CSPlayerGuildInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSPlayerGuildInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPlayerGuildInfo_Item& from);
  void MergeFrom(const CSPlayerGuildInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPlayerGuildInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPlayerGuildInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSPlayerGuildInfo : public ::google::protobuf::Message {
 public:
  CSPlayerGuildInfo();
  virtual ~CSPlayerGuildInfo();
  
  CSPlayerGuildInfo(const CSPlayerGuildInfo& from);
  
  inline CSPlayerGuildInfo& operator=(const CSPlayerGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPlayerGuildInfo& default_instance();
  
  void Swap(CSPlayerGuildInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSPlayerGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPlayerGuildInfo& from);
  void MergeFrom(const CSPlayerGuildInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSPlayerGuildInfo_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 contribute = 6;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 6;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // required uint32 power_score = 7;
  inline bool has_power_score() const;
  inline void clear_power_score();
  static const int kPowerScoreFieldNumber = 7;
  inline ::google::protobuf::uint32 power_score() const;
  inline void set_power_score(::google::protobuf::uint32 value);
  
  // required uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // required uint32 total_contribute = 9;
  inline bool has_total_contribute() const;
  inline void clear_total_contribute();
  static const int kTotalContributeFieldNumber = 9;
  inline ::google::protobuf::uint32 total_contribute() const;
  inline void set_total_contribute(::google::protobuf::uint32 value);
  
  // optional uint32 online = 10;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 10;
  inline ::google::protobuf::uint32 online() const;
  inline void set_online(::google::protobuf::uint32 value);
  
  // optional uint32 type = 11;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // repeated .CSPlayerGuildInfo.Item cost = 12;
  inline int cost_size() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 12;
  inline const ::CSPlayerGuildInfo_Item& cost(int index) const;
  inline ::CSPlayerGuildInfo_Item* mutable_cost(int index);
  inline ::CSPlayerGuildInfo_Item* add_cost();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo_Item >&
      cost() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo_Item >*
      mutable_cost();
  
  // @@protoc_insertion_point(class_scope:CSPlayerGuildInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_contribute();
  inline void clear_has_contribute();
  inline void set_has_power_score();
  inline void clear_has_power_score();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_total_contribute();
  inline void clear_has_total_contribute();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 power_score_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 total_contribute_;
  ::google::protobuf::uint32 online_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo_Item > cost_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPlayerGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSListPlayerGuildRsp : public ::google::protobuf::Message {
 public:
  CSListPlayerGuildRsp();
  virtual ~CSListPlayerGuildRsp();
  
  CSListPlayerGuildRsp(const CSListPlayerGuildRsp& from);
  
  inline CSListPlayerGuildRsp& operator=(const CSListPlayerGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSListPlayerGuildRsp& default_instance();
  
  void Swap(CSListPlayerGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSListPlayerGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSListPlayerGuildRsp& from);
  void MergeFrom(const CSListPlayerGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSPlayerGuildInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::CSPlayerGuildInfo& infos(int index) const;
  inline ::CSPlayerGuildInfo* mutable_infos(int index);
  inline ::CSPlayerGuildInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSListPlayerGuildRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSListPlayerGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerGuild : public ::google::protobuf::Message {
 public:
  PlayerGuild();
  virtual ~PlayerGuild();
  
  PlayerGuild(const PlayerGuild& from);
  
  inline PlayerGuild& operator=(const PlayerGuild& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGuild& default_instance();
  
  void Swap(PlayerGuild* other);
  
  // implements Message ----------------------------------------------
  
  PlayerGuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerGuild& from);
  void MergeFrom(const PlayerGuild& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PlayerGuild)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerGuild* default_instance_;
};
// -------------------------------------------------------------------

class CSChangeOtherPlayerGuildStatusReq : public ::google::protobuf::Message {
 public:
  CSChangeOtherPlayerGuildStatusReq();
  virtual ~CSChangeOtherPlayerGuildStatusReq();
  
  CSChangeOtherPlayerGuildStatusReq(const CSChangeOtherPlayerGuildStatusReq& from);
  
  inline CSChangeOtherPlayerGuildStatusReq& operator=(const CSChangeOtherPlayerGuildStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChangeOtherPlayerGuildStatusReq& default_instance();
  
  void Swap(CSChangeOtherPlayerGuildStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSChangeOtherPlayerGuildStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChangeOtherPlayerGuildStatusReq& from);
  void MergeFrom(const CSChangeOtherPlayerGuildStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PlayerGuild keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::PlayerGuild& keys(int index) const;
  inline ::PlayerGuild* mutable_keys(int index);
  inline ::PlayerGuild* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerGuild >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerGuild >*
      mutable_keys();
  
  // @@protoc_insertion_point(class_scope:CSChangeOtherPlayerGuildStatusReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PlayerGuild > keys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChangeOtherPlayerGuildStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSChangePlayerGuildStatusRsp : public ::google::protobuf::Message {
 public:
  CSChangePlayerGuildStatusRsp();
  virtual ~CSChangePlayerGuildStatusRsp();
  
  CSChangePlayerGuildStatusRsp(const CSChangePlayerGuildStatusRsp& from);
  
  inline CSChangePlayerGuildStatusRsp& operator=(const CSChangePlayerGuildStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChangePlayerGuildStatusRsp& default_instance();
  
  void Swap(CSChangePlayerGuildStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSChangePlayerGuildStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChangePlayerGuildStatusRsp& from);
  void MergeFrom(const CSChangePlayerGuildStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // repeated .PlayerGuild info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PlayerGuild& info(int index) const;
  inline ::PlayerGuild* mutable_info(int index);
  inline ::PlayerGuild* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerGuild >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerGuild >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:CSChangePlayerGuildStatusRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PlayerGuild > info_;
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChangePlayerGuildStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetGuildNoticeReq : public ::google::protobuf::Message {
 public:
  CSSetGuildNoticeReq();
  virtual ~CSSetGuildNoticeReq();
  
  CSSetGuildNoticeReq(const CSSetGuildNoticeReq& from);
  
  inline CSSetGuildNoticeReq& operator=(const CSSetGuildNoticeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetGuildNoticeReq& default_instance();
  
  void Swap(CSSetGuildNoticeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetGuildNoticeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetGuildNoticeReq& from);
  void MergeFrom(const CSSetGuildNoticeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes guild_notice = 1;
  inline bool has_guild_notice() const;
  inline void clear_guild_notice();
  static const int kGuildNoticeFieldNumber = 1;
  inline const ::std::string& guild_notice() const;
  inline void set_guild_notice(const ::std::string& value);
  inline void set_guild_notice(const char* value);
  inline void set_guild_notice(const void* value, size_t size);
  inline ::std::string* mutable_guild_notice();
  inline ::std::string* release_guild_notice();
  
  // optional bytes guild_note = 2;
  inline bool has_guild_note() const;
  inline void clear_guild_note();
  static const int kGuildNoteFieldNumber = 2;
  inline const ::std::string& guild_note() const;
  inline void set_guild_note(const ::std::string& value);
  inline void set_guild_note(const char* value);
  inline void set_guild_note(const void* value, size_t size);
  inline ::std::string* mutable_guild_note();
  inline ::std::string* release_guild_note();
  
  // @@protoc_insertion_point(class_scope:CSSetGuildNoticeReq)
 private:
  inline void set_has_guild_notice();
  inline void clear_has_guild_notice();
  inline void set_has_guild_note();
  inline void clear_has_guild_note();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guild_notice_;
  ::std::string* guild_note_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetGuildNoticeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetGuildNoticeRsp : public ::google::protobuf::Message {
 public:
  CSSetGuildNoticeRsp();
  virtual ~CSSetGuildNoticeRsp();
  
  CSSetGuildNoticeRsp(const CSSetGuildNoticeRsp& from);
  
  inline CSSetGuildNoticeRsp& operator=(const CSSetGuildNoticeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetGuildNoticeRsp& default_instance();
  
  void Swap(CSSetGuildNoticeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetGuildNoticeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetGuildNoticeRsp& from);
  void MergeFrom(const CSSetGuildNoticeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // @@protoc_insertion_point(class_scope:CSSetGuildNoticeRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetGuildNoticeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetRecruitMemberReq : public ::google::protobuf::Message {
 public:
  CSGetRecruitMemberReq();
  virtual ~CSGetRecruitMemberReq();
  
  CSGetRecruitMemberReq(const CSGetRecruitMemberReq& from);
  
  inline CSGetRecruitMemberReq& operator=(const CSGetRecruitMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetRecruitMemberReq& default_instance();
  
  void Swap(CSGetRecruitMemberReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetRecruitMemberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetRecruitMemberReq& from);
  void MergeFrom(const CSGetRecruitMemberReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetRecruitMemberReq)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetRecruitMemberReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetRecruitMemberRsp : public ::google::protobuf::Message {
 public:
  CSGetRecruitMemberRsp();
  virtual ~CSGetRecruitMemberRsp();
  
  CSGetRecruitMemberRsp(const CSGetRecruitMemberRsp& from);
  
  inline CSGetRecruitMemberRsp& operator=(const CSGetRecruitMemberRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetRecruitMemberRsp& default_instance();
  
  void Swap(CSGetRecruitMemberRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetRecruitMemberRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetRecruitMemberRsp& from);
  void MergeFrom(const CSGetRecruitMemberRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSPlayerGuildInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::CSPlayerGuildInfo& infos(int index) const;
  inline ::CSPlayerGuildInfo* mutable_infos(int index);
  inline ::CSPlayerGuildInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSGetRecruitMemberRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetRecruitMemberRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAI3Req : public ::google::protobuf::Message {
 public:
  CSPVAI3Req();
  virtual ~CSPVAI3Req();
  
  CSPVAI3Req(const CSPVAI3Req& from);
  
  inline CSPVAI3Req& operator=(const CSPVAI3Req& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAI3Req& default_instance();
  
  void Swap(CSPVAI3Req* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAI3Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAI3Req& from);
  void MergeFrom(const CSPVAI3Req& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // optional .CSPlayerGuildInfo infos = 2;
  inline bool has_infos() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CSPlayerGuildInfo& infos() const;
  inline ::CSPlayerGuildInfo* mutable_infos();
  inline ::CSPlayerGuildInfo* release_infos();
  
  // @@protoc_insertion_point(class_scope:CSPVAI3Req)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_infos();
  inline void clear_has_infos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSPlayerGuildInfo* infos_;
  ::google::protobuf::uint32 instance_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAI3Req* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryNewDowerReq : public ::google::protobuf::Message {
 public:
  CSQueryNewDowerReq();
  virtual ~CSQueryNewDowerReq();
  
  CSQueryNewDowerReq(const CSQueryNewDowerReq& from);
  
  inline CSQueryNewDowerReq& operator=(const CSQueryNewDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryNewDowerReq& default_instance();
  
  void Swap(CSQueryNewDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryNewDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryNewDowerReq& from);
  void MergeFrom(const CSQueryNewDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSQueryNewDowerReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryNewDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryNewDowerRsp : public ::google::protobuf::Message {
 public:
  CSQueryNewDowerRsp();
  virtual ~CSQueryNewDowerRsp();
  
  CSQueryNewDowerRsp(const CSQueryNewDowerRsp& from);
  
  inline CSQueryNewDowerRsp& operator=(const CSQueryNewDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryNewDowerRsp& default_instance();
  
  void Swap(CSQueryNewDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryNewDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryNewDowerRsp& from);
  void MergeFrom(const CSQueryNewDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 next_title_light = 2;
  inline bool has_next_title_light() const;
  inline void clear_next_title_light();
  static const int kNextTitleLightFieldNumber = 2;
  inline ::google::protobuf::uint32 next_title_light() const;
  inline void set_next_title_light(::google::protobuf::uint32 value);
  
  // required uint32 physical_attack = 11;
  inline bool has_physical_attack() const;
  inline void clear_physical_attack();
  static const int kPhysicalAttackFieldNumber = 11;
  inline ::google::protobuf::uint32 physical_attack() const;
  inline void set_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 magic_attack = 12;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 12;
  inline ::google::protobuf::uint32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 skill_attack = 13;
  inline bool has_skill_attack() const;
  inline void clear_skill_attack();
  static const int kSkillAttackFieldNumber = 13;
  inline ::google::protobuf::uint32 skill_attack() const;
  inline void set_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 physical_defence = 14;
  inline bool has_physical_defence() const;
  inline void clear_physical_defence();
  static const int kPhysicalDefenceFieldNumber = 14;
  inline ::google::protobuf::uint32 physical_defence() const;
  inline void set_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 magic_defence = 15;
  inline bool has_magic_defence() const;
  inline void clear_magic_defence();
  static const int kMagicDefenceFieldNumber = 15;
  inline ::google::protobuf::uint32 magic_defence() const;
  inline void set_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 skill_defence = 16;
  inline bool has_skill_defence() const;
  inline void clear_skill_defence();
  static const int kSkillDefenceFieldNumber = 16;
  inline ::google::protobuf::uint32 skill_defence() const;
  inline void set_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 health_point = 17;
  inline bool has_health_point() const;
  inline void clear_health_point();
  static const int kHealthPointFieldNumber = 17;
  inline ::google::protobuf::uint32 health_point() const;
  inline void set_health_point(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryNewDowerRsp)
 private:
  inline void set_has_next_title_light();
  inline void clear_has_next_title_light();
  inline void set_has_physical_attack();
  inline void clear_has_physical_attack();
  inline void set_has_magic_attack();
  inline void clear_has_magic_attack();
  inline void set_has_skill_attack();
  inline void clear_has_skill_attack();
  inline void set_has_physical_defence();
  inline void clear_has_physical_defence();
  inline void set_has_magic_defence();
  inline void clear_has_magic_defence();
  inline void set_has_skill_defence();
  inline void clear_has_skill_defence();
  inline void set_has_health_point();
  inline void clear_has_health_point();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 next_title_light_;
  ::google::protobuf::uint32 physical_attack_;
  ::google::protobuf::uint32 magic_attack_;
  ::google::protobuf::uint32 skill_attack_;
  ::google::protobuf::uint32 physical_defence_;
  ::google::protobuf::uint32 magic_defence_;
  ::google::protobuf::uint32 skill_defence_;
  ::google::protobuf::uint32 health_point_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryNewDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNewDowerReq : public ::google::protobuf::Message {
 public:
  CSNewDowerReq();
  virtual ~CSNewDowerReq();
  
  CSNewDowerReq(const CSNewDowerReq& from);
  
  inline CSNewDowerReq& operator=(const CSNewDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewDowerReq& default_instance();
  
  void Swap(CSNewDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNewDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewDowerReq& from);
  void MergeFrom(const CSNewDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNewDowerReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNewDowerRsp : public ::google::protobuf::Message {
 public:
  CSNewDowerRsp();
  virtual ~CSNewDowerRsp();
  
  CSNewDowerRsp(const CSNewDowerRsp& from);
  
  inline CSNewDowerRsp& operator=(const CSNewDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewDowerRsp& default_instance();
  
  void Swap(CSNewDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNewDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewDowerRsp& from);
  void MergeFrom(const CSNewDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNewDowerRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNewDowerOneKeyReq : public ::google::protobuf::Message {
 public:
  CSNewDowerOneKeyReq();
  virtual ~CSNewDowerOneKeyReq();
  
  CSNewDowerOneKeyReq(const CSNewDowerOneKeyReq& from);
  
  inline CSNewDowerOneKeyReq& operator=(const CSNewDowerOneKeyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewDowerOneKeyReq& default_instance();
  
  void Swap(CSNewDowerOneKeyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNewDowerOneKeyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewDowerOneKeyReq& from);
  void MergeFrom(const CSNewDowerOneKeyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNewDowerOneKeyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewDowerOneKeyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNewDowerOneKeyRsp : public ::google::protobuf::Message {
 public:
  CSNewDowerOneKeyRsp();
  virtual ~CSNewDowerOneKeyRsp();
  
  CSNewDowerOneKeyRsp(const CSNewDowerOneKeyRsp& from);
  
  inline CSNewDowerOneKeyRsp& operator=(const CSNewDowerOneKeyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewDowerOneKeyRsp& default_instance();
  
  void Swap(CSNewDowerOneKeyRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNewDowerOneKeyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewDowerOneKeyRsp& from);
  void MergeFrom(const CSNewDowerOneKeyRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNewDowerOneKeyRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewDowerOneKeyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleReq : public ::google::protobuf::Message {
 public:
  CSTitleReq();
  virtual ~CSTitleReq();
  
  CSTitleReq(const CSTitleReq& from);
  
  inline CSTitleReq& operator=(const CSTitleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleReq& default_instance();
  
  void Swap(CSTitleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleReq& from);
  void MergeFrom(const CSTitleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTitleReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleReq* default_instance_;
};
// -------------------------------------------------------------------

class TitleInfo : public ::google::protobuf::Message {
 public:
  TitleInfo();
  virtual ~TitleInfo();
  
  TitleInfo(const TitleInfo& from);
  
  inline TitleInfo& operator=(const TitleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfo& default_instance();
  
  void Swap(TitleInfo* other);
  
  // implements Message ----------------------------------------------
  
  TitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfo& from);
  void MergeFrom(const TitleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 title_id = 1;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 title_id() const;
  inline void set_title_id(::google::protobuf::uint32 value);
  
  // optional uint32 dead_tm = 2 [default = 2147483647];
  inline bool has_dead_tm() const;
  inline void clear_dead_tm();
  static const int kDeadTmFieldNumber = 2;
  inline ::google::protobuf::uint32 dead_tm() const;
  inline void set_dead_tm(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:TitleInfo)
 private:
  inline void set_has_title_id();
  inline void clear_has_title_id();
  inline void set_has_dead_tm();
  inline void clear_has_dead_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 title_id_;
  ::google::protobuf::uint32 dead_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static TitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleRsp : public ::google::protobuf::Message {
 public:
  CSTitleRsp();
  virtual ~CSTitleRsp();
  
  CSTitleRsp(const CSTitleRsp& from);
  
  inline CSTitleRsp& operator=(const CSTitleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleRsp& default_instance();
  
  void Swap(CSTitleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleRsp& from);
  void MergeFrom(const CSTitleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .TitleInfo wear_title = 1;
  inline bool has_wear_title() const;
  inline void clear_wear_title();
  static const int kWearTitleFieldNumber = 1;
  inline const ::TitleInfo& wear_title() const;
  inline ::TitleInfo* mutable_wear_title();
  inline ::TitleInfo* release_wear_title();
  
  // repeated .TitleInfo unlock_titles = 2;
  inline int unlock_titles_size() const;
  inline void clear_unlock_titles();
  static const int kUnlockTitlesFieldNumber = 2;
  inline const ::TitleInfo& unlock_titles(int index) const;
  inline ::TitleInfo* mutable_unlock_titles(int index);
  inline ::TitleInfo* add_unlock_titles();
  inline const ::google::protobuf::RepeatedPtrField< ::TitleInfo >&
      unlock_titles() const;
  inline ::google::protobuf::RepeatedPtrField< ::TitleInfo >*
      mutable_unlock_titles();
  
  // repeated .TitleInfo learn_titles = 3;
  inline int learn_titles_size() const;
  inline void clear_learn_titles();
  static const int kLearnTitlesFieldNumber = 3;
  inline const ::TitleInfo& learn_titles(int index) const;
  inline ::TitleInfo* mutable_learn_titles(int index);
  inline ::TitleInfo* add_learn_titles();
  inline const ::google::protobuf::RepeatedPtrField< ::TitleInfo >&
      learn_titles() const;
  inline ::google::protobuf::RepeatedPtrField< ::TitleInfo >*
      mutable_learn_titles();
  
  // @@protoc_insertion_point(class_scope:CSTitleRsp)
 private:
  inline void set_has_wear_title();
  inline void clear_has_wear_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::TitleInfo* wear_title_;
  ::google::protobuf::RepeatedPtrField< ::TitleInfo > unlock_titles_;
  ::google::protobuf::RepeatedPtrField< ::TitleInfo > learn_titles_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleLearnReq : public ::google::protobuf::Message {
 public:
  CSTitleLearnReq();
  virtual ~CSTitleLearnReq();
  
  CSTitleLearnReq(const CSTitleLearnReq& from);
  
  inline CSTitleLearnReq& operator=(const CSTitleLearnReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleLearnReq& default_instance();
  
  void Swap(CSTitleLearnReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleLearnReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleLearnReq& from);
  void MergeFrom(const CSTitleLearnReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 title_id = 1;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 title_id() const;
  inline void set_title_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTitleLearnReq)
 private:
  inline void set_has_title_id();
  inline void clear_has_title_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 title_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleLearnReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleLearnRsp : public ::google::protobuf::Message {
 public:
  CSTitleLearnRsp();
  virtual ~CSTitleLearnRsp();
  
  CSTitleLearnRsp(const CSTitleLearnRsp& from);
  
  inline CSTitleLearnRsp& operator=(const CSTitleLearnRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleLearnRsp& default_instance();
  
  void Swap(CSTitleLearnRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleLearnRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleLearnRsp& from);
  void MergeFrom(const CSTitleLearnRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTitleLearnRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleLearnRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleWearReq : public ::google::protobuf::Message {
 public:
  CSTitleWearReq();
  virtual ~CSTitleWearReq();
  
  CSTitleWearReq(const CSTitleWearReq& from);
  
  inline CSTitleWearReq& operator=(const CSTitleWearReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleWearReq& default_instance();
  
  void Swap(CSTitleWearReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleWearReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleWearReq& from);
  void MergeFrom(const CSTitleWearReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 title_id = 1;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 title_id() const;
  inline void set_title_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTitleWearReq)
 private:
  inline void set_has_title_id();
  inline void clear_has_title_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 title_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleWearReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleWearRsp : public ::google::protobuf::Message {
 public:
  CSTitleWearRsp();
  virtual ~CSTitleWearRsp();
  
  CSTitleWearRsp(const CSTitleWearRsp& from);
  
  inline CSTitleWearRsp& operator=(const CSTitleWearRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleWearRsp& default_instance();
  
  void Swap(CSTitleWearRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleWearRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleWearRsp& from);
  void MergeFrom(const CSTitleWearRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTitleWearRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleWearRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTitleUnlockRsp : public ::google::protobuf::Message {
 public:
  CSTitleUnlockRsp();
  virtual ~CSTitleUnlockRsp();
  
  CSTitleUnlockRsp(const CSTitleUnlockRsp& from);
  
  inline CSTitleUnlockRsp& operator=(const CSTitleUnlockRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTitleUnlockRsp& default_instance();
  
  void Swap(CSTitleUnlockRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTitleUnlockRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTitleUnlockRsp& from);
  void MergeFrom(const CSTitleUnlockRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline ::google::protobuf::uint32 title() const;
  inline void set_title(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTitleUnlockRsp)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 title_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTitleUnlockRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPGSetAcceptInviteReq : public ::google::protobuf::Message {
 public:
  CSPGSetAcceptInviteReq();
  virtual ~CSPGSetAcceptInviteReq();
  
  CSPGSetAcceptInviteReq(const CSPGSetAcceptInviteReq& from);
  
  inline CSPGSetAcceptInviteReq& operator=(const CSPGSetAcceptInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPGSetAcceptInviteReq& default_instance();
  
  void Swap(CSPGSetAcceptInviteReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPGSetAcceptInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPGSetAcceptInviteReq& from);
  void MergeFrom(const CSPGSetAcceptInviteReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPGSetAcceptInviteReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPGSetAcceptInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPGSetAcceptInviteRsp : public ::google::protobuf::Message {
 public:
  CSPGSetAcceptInviteRsp();
  virtual ~CSPGSetAcceptInviteRsp();
  
  CSPGSetAcceptInviteRsp(const CSPGSetAcceptInviteRsp& from);
  
  inline CSPGSetAcceptInviteRsp& operator=(const CSPGSetAcceptInviteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPGSetAcceptInviteRsp& default_instance();
  
  void Swap(CSPGSetAcceptInviteRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPGSetAcceptInviteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPGSetAcceptInviteRsp& from);
  void MergeFrom(const CSPGSetAcceptInviteRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool is_set = 1;
  inline bool has_is_set() const;
  inline void clear_is_set();
  static const int kIsSetFieldNumber = 1;
  inline bool is_set() const;
  inline void set_is_set(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPGSetAcceptInviteRsp)
 private:
  inline void set_has_is_set();
  inline void clear_has_is_set();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_set_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPGSetAcceptInviteRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPGContributeToGuildReq : public ::google::protobuf::Message {
 public:
  CSPGContributeToGuildReq();
  virtual ~CSPGContributeToGuildReq();
  
  CSPGContributeToGuildReq(const CSPGContributeToGuildReq& from);
  
  inline CSPGContributeToGuildReq& operator=(const CSPGContributeToGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPGContributeToGuildReq& default_instance();
  
  void Swap(CSPGContributeToGuildReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPGContributeToGuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPGContributeToGuildReq& from);
  void MergeFrom(const CSPGContributeToGuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPGContributeToGuildReq)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPGContributeToGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPGContributeToGuildRsp : public ::google::protobuf::Message {
 public:
  CSPGContributeToGuildRsp();
  virtual ~CSPGContributeToGuildRsp();
  
  CSPGContributeToGuildRsp(const CSPGContributeToGuildRsp& from);
  
  inline CSPGContributeToGuildRsp& operator=(const CSPGContributeToGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPGContributeToGuildRsp& default_instance();
  
  void Swap(CSPGContributeToGuildRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPGContributeToGuildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPGContributeToGuildRsp& from);
  void MergeFrom(const CSPGContributeToGuildRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPGContributeToGuildRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPGContributeToGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelWaitingRsp : public ::google::protobuf::Message {
 public:
  CSCancelWaitingRsp();
  virtual ~CSCancelWaitingRsp();
  
  CSCancelWaitingRsp(const CSCancelWaitingRsp& from);
  
  inline CSCancelWaitingRsp& operator=(const CSCancelWaitingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelWaitingRsp& default_instance();
  
  void Swap(CSCancelWaitingRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCancelWaitingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelWaitingRsp& from);
  void MergeFrom(const CSCancelWaitingRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCancelWaitingRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCancelWaitingRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryPlayerGuildInfoReq : public ::google::protobuf::Message {
 public:
  CSQueryPlayerGuildInfoReq();
  virtual ~CSQueryPlayerGuildInfoReq();
  
  CSQueryPlayerGuildInfoReq(const CSQueryPlayerGuildInfoReq& from);
  
  inline CSQueryPlayerGuildInfoReq& operator=(const CSQueryPlayerGuildInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryPlayerGuildInfoReq& default_instance();
  
  void Swap(CSQueryPlayerGuildInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryPlayerGuildInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryPlayerGuildInfoReq& from);
  void MergeFrom(const CSQueryPlayerGuildInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSQueryPlayerGuildInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryPlayerGuildInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryPlayerGuildInfoRsp : public ::google::protobuf::Message {
 public:
  CSQueryPlayerGuildInfoRsp();
  virtual ~CSQueryPlayerGuildInfoRsp();
  
  CSQueryPlayerGuildInfoRsp(const CSQueryPlayerGuildInfoRsp& from);
  
  inline CSQueryPlayerGuildInfoRsp& operator=(const CSQueryPlayerGuildInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryPlayerGuildInfoRsp& default_instance();
  
  void Swap(CSQueryPlayerGuildInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryPlayerGuildInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryPlayerGuildInfoRsp& from);
  void MergeFrom(const CSQueryPlayerGuildInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CSGuildInfo guildinfo = 1;
  inline bool has_guildinfo() const;
  inline void clear_guildinfo();
  static const int kGuildinfoFieldNumber = 1;
  inline const ::CSGuildInfo& guildinfo() const;
  inline ::CSGuildInfo* mutable_guildinfo();
  inline ::CSGuildInfo* release_guildinfo();
  
  // optional .CSPlayerGuildInfo playerinfo = 2;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerinfoFieldNumber = 2;
  inline const ::CSPlayerGuildInfo& playerinfo() const;
  inline ::CSPlayerGuildInfo* mutable_playerinfo();
  inline ::CSPlayerGuildInfo* release_playerinfo();
  
  // @@protoc_insertion_point(class_scope:CSQueryPlayerGuildInfoRsp)
 private:
  inline void set_has_guildinfo();
  inline void clear_has_guildinfo();
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSGuildInfo* guildinfo_;
  ::CSPlayerGuildInfo* playerinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryPlayerGuildInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetPlayerGuildApplyConditionReq : public ::google::protobuf::Message {
 public:
  CSSetPlayerGuildApplyConditionReq();
  virtual ~CSSetPlayerGuildApplyConditionReq();
  
  CSSetPlayerGuildApplyConditionReq(const CSSetPlayerGuildApplyConditionReq& from);
  
  inline CSSetPlayerGuildApplyConditionReq& operator=(const CSSetPlayerGuildApplyConditionReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetPlayerGuildApplyConditionReq& default_instance();
  
  void Swap(CSSetPlayerGuildApplyConditionReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetPlayerGuildApplyConditionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetPlayerGuildApplyConditionReq& from);
  void MergeFrom(const CSSetPlayerGuildApplyConditionReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 fight = 2;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 2;
  inline ::google::protobuf::uint32 fight() const;
  inline void set_fight(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetPlayerGuildApplyConditionReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_fight();
  inline void clear_has_fight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 fight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetPlayerGuildApplyConditionReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetPlayerGuildApplyConditionRsp : public ::google::protobuf::Message {
 public:
  CSSetPlayerGuildApplyConditionRsp();
  virtual ~CSSetPlayerGuildApplyConditionRsp();
  
  CSSetPlayerGuildApplyConditionRsp(const CSSetPlayerGuildApplyConditionRsp& from);
  
  inline CSSetPlayerGuildApplyConditionRsp& operator=(const CSSetPlayerGuildApplyConditionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetPlayerGuildApplyConditionRsp& default_instance();
  
  void Swap(CSSetPlayerGuildApplyConditionRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetPlayerGuildApplyConditionRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetPlayerGuildApplyConditionRsp& from);
  void MergeFrom(const CSSetPlayerGuildApplyConditionRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetPlayerGuildApplyConditionRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetPlayerGuildApplyConditionRsp* default_instance_;
};
// -------------------------------------------------------------------

class GuildRecordInfo : public ::google::protobuf::Message {
 public:
  GuildRecordInfo();
  virtual ~GuildRecordInfo();
  
  GuildRecordInfo(const GuildRecordInfo& from);
  
  inline GuildRecordInfo& operator=(const GuildRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRecordInfo& default_instance();
  
  void Swap(GuildRecordInfo* other);
  
  // implements Message ----------------------------------------------
  
  GuildRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildRecordInfo& from);
  void MergeFrom(const GuildRecordInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 record_type = 1;
  inline bool has_record_type() const;
  inline void clear_record_type();
  static const int kRecordTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 record_type() const;
  inline void set_record_type(::google::protobuf::uint32 value);
  
  // required bytes log = 2;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 2;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const void* value, size_t size);
  inline ::std::string* mutable_log();
  inline ::std::string* release_log();
  
  // required uint32 modify_tm = 3;
  inline bool has_modify_tm() const;
  inline void clear_modify_tm();
  static const int kModifyTmFieldNumber = 3;
  inline ::google::protobuf::uint32 modify_tm() const;
  inline void set_modify_tm(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:GuildRecordInfo)
 private:
  inline void set_has_record_type();
  inline void clear_has_record_type();
  inline void set_has_log();
  inline void clear_has_log();
  inline void set_has_modify_tm();
  inline void clear_has_modify_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* log_;
  ::google::protobuf::uint32 record_type_;
  ::google::protobuf::uint32 modify_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static GuildRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRecordListReq : public ::google::protobuf::Message {
 public:
  CSGuildRecordListReq();
  virtual ~CSGuildRecordListReq();
  
  CSGuildRecordListReq(const CSGuildRecordListReq& from);
  
  inline CSGuildRecordListReq& operator=(const CSGuildRecordListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRecordListReq& default_instance();
  
  void Swap(CSGuildRecordListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRecordListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRecordListReq& from);
  void MergeFrom(const CSGuildRecordListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 zone_id = 1;
  inline bool has_zone_id() const;
  inline void clear_zone_id();
  static const int kZoneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 zone_id() const;
  inline void set_zone_id(::google::protobuf::uint32 value);
  
  // required uint32 guild_id_low = 2;
  inline bool has_guild_id_low() const;
  inline void clear_guild_id_low();
  static const int kGuildIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id_low() const;
  inline void set_guild_id_low(::google::protobuf::uint32 value);
  
  // required uint32 guild_id_high = 3;
  inline bool has_guild_id_high() const;
  inline void clear_guild_id_high();
  static const int kGuildIdHighFieldNumber = 3;
  inline ::google::protobuf::uint32 guild_id_high() const;
  inline void set_guild_id_high(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRecordListReq)
 private:
  inline void set_has_zone_id();
  inline void clear_has_zone_id();
  inline void set_has_guild_id_low();
  inline void clear_has_guild_id_low();
  inline void set_has_guild_id_high();
  inline void clear_has_guild_id_high();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 zone_id_;
  ::google::protobuf::uint32 guild_id_low_;
  ::google::protobuf::uint32 guild_id_high_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRecordListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRecordListRsp : public ::google::protobuf::Message {
 public:
  CSGuildRecordListRsp();
  virtual ~CSGuildRecordListRsp();
  
  CSGuildRecordListRsp(const CSGuildRecordListRsp& from);
  
  inline CSGuildRecordListRsp& operator=(const CSGuildRecordListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRecordListRsp& default_instance();
  
  void Swap(CSGuildRecordListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRecordListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRecordListRsp& from);
  void MergeFrom(const CSGuildRecordListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .GuildRecordInfo logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::GuildRecordInfo& logs(int index) const;
  inline ::GuildRecordInfo* mutable_logs(int index);
  inline ::GuildRecordInfo* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::GuildRecordInfo >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::GuildRecordInfo >*
      mutable_logs();
  
  // @@protoc_insertion_point(class_scope:CSGuildRecordListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::GuildRecordInfo > logs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRecordListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGoddessBlessReq : public ::google::protobuf::Message {
 public:
  CSGoddessBlessReq();
  virtual ~CSGoddessBlessReq();
  
  CSGoddessBlessReq(const CSGoddessBlessReq& from);
  
  inline CSGoddessBlessReq& operator=(const CSGoddessBlessReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoddessBlessReq& default_instance();
  
  void Swap(CSGoddessBlessReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGoddessBlessReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoddessBlessReq& from);
  void MergeFrom(const CSGoddessBlessReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool ischeck = 1;
  inline bool has_ischeck() const;
  inline void clear_ischeck();
  static const int kIscheckFieldNumber = 1;
  inline bool ischeck() const;
  inline void set_ischeck(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGoddessBlessReq)
 private:
  inline void set_has_ischeck();
  inline void clear_has_ischeck();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool ischeck_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoddessBlessReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGoddessBlessRsp_Item : public ::google::protobuf::Message {
 public:
  CSGoddessBlessRsp_Item();
  virtual ~CSGoddessBlessRsp_Item();
  
  CSGoddessBlessRsp_Item(const CSGoddessBlessRsp_Item& from);
  
  inline CSGoddessBlessRsp_Item& operator=(const CSGoddessBlessRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoddessBlessRsp_Item& default_instance();
  
  void Swap(CSGoddessBlessRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSGoddessBlessRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoddessBlessRsp_Item& from);
  void MergeFrom(const CSGoddessBlessRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGoddessBlessRsp.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoddessBlessRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSGoddessBlessRsp : public ::google::protobuf::Message {
 public:
  CSGoddessBlessRsp();
  virtual ~CSGoddessBlessRsp();
  
  CSGoddessBlessRsp(const CSGoddessBlessRsp& from);
  
  inline CSGoddessBlessRsp& operator=(const CSGoddessBlessRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGoddessBlessRsp& default_instance();
  
  void Swap(CSGoddessBlessRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGoddessBlessRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGoddessBlessRsp& from);
  void MergeFrom(const CSGoddessBlessRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSGoddessBlessRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // repeated .CSGoddessBlessRsp.Item from_item = 2;
  inline int from_item_size() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 2;
  inline const ::CSGoddessBlessRsp_Item& from_item(int index) const;
  inline ::CSGoddessBlessRsp_Item* mutable_from_item(int index);
  inline ::CSGoddessBlessRsp_Item* add_from_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
      from_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
      mutable_from_item();
  
  // repeated .CSGoddessBlessRsp.Item to_item = 3;
  inline int to_item_size() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 3;
  inline const ::CSGoddessBlessRsp_Item& to_item(int index) const;
  inline ::CSGoddessBlessRsp_Item* mutable_to_item(int index);
  inline ::CSGoddessBlessRsp_Item* add_to_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
      to_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
      mutable_to_item();
  
  // repeated .CSGoddessBlessRsp.Item next_to_item = 4;
  inline int next_to_item_size() const;
  inline void clear_next_to_item();
  static const int kNextToItemFieldNumber = 4;
  inline const ::CSGoddessBlessRsp_Item& next_to_item(int index) const;
  inline ::CSGoddessBlessRsp_Item* mutable_next_to_item(int index);
  inline ::CSGoddessBlessRsp_Item* add_next_to_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
      next_to_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
      mutable_next_to_item();
  
  // optional uint32 next_level = 5;
  inline bool has_next_level() const;
  inline void clear_next_level();
  static const int kNextLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 next_level() const;
  inline void set_next_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGoddessBlessRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_next_level();
  inline void clear_has_next_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item > from_item_;
  ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item > to_item_;
  ::google::protobuf::uint32 res_;
  ::google::protobuf::uint32 next_level_;
  ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item > next_to_item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGoddessBlessRsp* default_instance_;
};
// -------------------------------------------------------------------

class ShoppingItemInfo_Item : public ::google::protobuf::Message {
 public:
  ShoppingItemInfo_Item();
  virtual ~ShoppingItemInfo_Item();
  
  ShoppingItemInfo_Item(const ShoppingItemInfo_Item& from);
  
  inline ShoppingItemInfo_Item& operator=(const ShoppingItemInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShoppingItemInfo_Item& default_instance();
  
  void Swap(ShoppingItemInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  ShoppingItemInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShoppingItemInfo_Item& from);
  void MergeFrom(const ShoppingItemInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ShoppingItemInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShoppingItemInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class ShoppingItemInfo : public ::google::protobuf::Message {
 public:
  ShoppingItemInfo();
  virtual ~ShoppingItemInfo();
  
  ShoppingItemInfo(const ShoppingItemInfo& from);
  
  inline ShoppingItemInfo& operator=(const ShoppingItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShoppingItemInfo& default_instance();
  
  void Swap(ShoppingItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  ShoppingItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShoppingItemInfo& from);
  void MergeFrom(const ShoppingItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ShoppingItemInfo_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required .ShoppingItemInfo.Item from_item = 2;
  inline bool has_from_item() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 2;
  inline const ::ShoppingItemInfo_Item& from_item() const;
  inline ::ShoppingItemInfo_Item* mutable_from_item();
  inline ::ShoppingItemInfo_Item* release_from_item();
  
  // required .ShoppingItemInfo.Item to_item = 3;
  inline bool has_to_item() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 3;
  inline const ::ShoppingItemInfo_Item& to_item() const;
  inline ::ShoppingItemInfo_Item* mutable_to_item();
  inline ::ShoppingItemInfo_Item* release_to_item();
  
  // required uint32 buytimes = 4;
  inline bool has_buytimes() const;
  inline void clear_buytimes();
  static const int kBuytimesFieldNumber = 4;
  inline ::google::protobuf::uint32 buytimes() const;
  inline void set_buytimes(::google::protobuf::uint32 value);
  
  // optional uint32 limit = 5;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);
  
  // optional uint32 times = 6;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ShoppingItemInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_from_item();
  inline void clear_has_from_item();
  inline void set_has_to_item();
  inline void clear_has_to_item();
  inline void set_has_buytimes();
  inline void clear_has_buytimes();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_times();
  inline void clear_has_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ShoppingItemInfo_Item* from_item_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 buytimes_;
  ::ShoppingItemInfo_Item* to_item_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShoppingItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShoppingItemsReq : public ::google::protobuf::Message {
 public:
  CSGetShoppingItemsReq();
  virtual ~CSGetShoppingItemsReq();
  
  CSGetShoppingItemsReq(const CSGetShoppingItemsReq& from);
  
  inline CSGetShoppingItemsReq& operator=(const CSGetShoppingItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShoppingItemsReq& default_instance();
  
  void Swap(CSGetShoppingItemsReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShoppingItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShoppingItemsReq& from);
  void MergeFrom(const CSGetShoppingItemsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::uint32 value);
  inline void add_type(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_type();
  
  // @@protoc_insertion_point(class_scope:CSGetShoppingItemsReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShoppingItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShoppingItemsRsp : public ::google::protobuf::Message {
 public:
  CSGetShoppingItemsRsp();
  virtual ~CSGetShoppingItemsRsp();
  
  CSGetShoppingItemsRsp(const CSGetShoppingItemsRsp& from);
  
  inline CSGetShoppingItemsRsp& operator=(const CSGetShoppingItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShoppingItemsRsp& default_instance();
  
  void Swap(CSGetShoppingItemsRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShoppingItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShoppingItemsRsp& from);
  void MergeFrom(const CSGetShoppingItemsRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ShoppingItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ShoppingItemInfo& items(int index) const;
  inline ::ShoppingItemInfo* mutable_items(int index);
  inline ::ShoppingItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ShoppingItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShoppingItemInfo >*
      mutable_items();
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSGetShoppingItemsRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ShoppingItemInfo > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShoppingItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeItemInfoReq : public ::google::protobuf::Message {
 public:
  CSExchangeItemInfoReq();
  virtual ~CSExchangeItemInfoReq();
  
  CSExchangeItemInfoReq(const CSExchangeItemInfoReq& from);
  
  inline CSExchangeItemInfoReq& operator=(const CSExchangeItemInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeItemInfoReq& default_instance();
  
  void Swap(CSExchangeItemInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeItemInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeItemInfoReq& from);
  void MergeFrom(const CSExchangeItemInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 params = 1;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeItemInfoReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeItemInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeItemInfoRsp_Item : public ::google::protobuf::Message {
 public:
  CSExchangeItemInfoRsp_Item();
  virtual ~CSExchangeItemInfoRsp_Item();
  
  CSExchangeItemInfoRsp_Item(const CSExchangeItemInfoRsp_Item& from);
  
  inline CSExchangeItemInfoRsp_Item& operator=(const CSExchangeItemInfoRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeItemInfoRsp_Item& default_instance();
  
  void Swap(CSExchangeItemInfoRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeItemInfoRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeItemInfoRsp_Item& from);
  void MergeFrom(const CSExchangeItemInfoRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeItemInfoRsp.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeItemInfoRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeItemInfoRsp_ItemInfo : public ::google::protobuf::Message {
 public:
  CSExchangeItemInfoRsp_ItemInfo();
  virtual ~CSExchangeItemInfoRsp_ItemInfo();
  
  CSExchangeItemInfoRsp_ItemInfo(const CSExchangeItemInfoRsp_ItemInfo& from);
  
  inline CSExchangeItemInfoRsp_ItemInfo& operator=(const CSExchangeItemInfoRsp_ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeItemInfoRsp_ItemInfo& default_instance();
  
  void Swap(CSExchangeItemInfoRsp_ItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeItemInfoRsp_ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeItemInfoRsp_ItemInfo& from);
  void MergeFrom(const CSExchangeItemInfoRsp_ItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSExchangeItemInfoRsp.Item from_item = 1;
  inline int from_item_size() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 1;
  inline const ::CSExchangeItemInfoRsp_Item& from_item(int index) const;
  inline ::CSExchangeItemInfoRsp_Item* mutable_from_item(int index);
  inline ::CSExchangeItemInfoRsp_Item* add_from_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >&
      from_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >*
      mutable_from_item();
  
  // repeated .CSExchangeItemInfoRsp.Item to_item = 2;
  inline int to_item_size() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 2;
  inline const ::CSExchangeItemInfoRsp_Item& to_item(int index) const;
  inline ::CSExchangeItemInfoRsp_Item* mutable_to_item(int index);
  inline ::CSExchangeItemInfoRsp_Item* add_to_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >&
      to_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >*
      mutable_to_item();
  
  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeItemInfoRsp.ItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item > from_item_;
  ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item > to_item_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeItemInfoRsp_ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeItemInfoRsp : public ::google::protobuf::Message {
 public:
  CSExchangeItemInfoRsp();
  virtual ~CSExchangeItemInfoRsp();
  
  CSExchangeItemInfoRsp(const CSExchangeItemInfoRsp& from);
  
  inline CSExchangeItemInfoRsp& operator=(const CSExchangeItemInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeItemInfoRsp& default_instance();
  
  void Swap(CSExchangeItemInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeItemInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeItemInfoRsp& from);
  void MergeFrom(const CSExchangeItemInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSExchangeItemInfoRsp_Item Item;
  typedef CSExchangeItemInfoRsp_ItemInfo ItemInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSExchangeItemInfoRsp.ItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CSExchangeItemInfoRsp_ItemInfo& items(int index) const;
  inline ::CSExchangeItemInfoRsp_ItemInfo* mutable_items(int index);
  inline ::CSExchangeItemInfoRsp_ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_ItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSExchangeItemInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_ItemInfo > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeItemInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildNoteRsp : public ::google::protobuf::Message {
 public:
  CSGuildNoteRsp();
  virtual ~CSGuildNoteRsp();
  
  CSGuildNoteRsp(const CSGuildNoteRsp& from);
  
  inline CSGuildNoteRsp& operator=(const CSGuildNoteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildNoteRsp& default_instance();
  
  void Swap(CSGuildNoteRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildNoteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildNoteRsp& from);
  void MergeFrom(const CSGuildNoteRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:CSGuildNoteRsp)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildNoteRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketKey : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketKey();
  virtual ~CSGuildRedPacketKey();
  
  CSGuildRedPacketKey(const CSGuildRedPacketKey& from);
  
  inline CSGuildRedPacketKey& operator=(const CSGuildRedPacketKey& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketKey& default_instance();
  
  void Swap(CSGuildRedPacketKey* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketKey& from);
  void MergeFrom(const CSGuildRedPacketKey& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 3;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 3;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 zone_id = 4;
  inline bool has_zone_id() const;
  inline void clear_zone_id();
  static const int kZoneIdFieldNumber = 4;
  inline ::google::protobuf::uint32 zone_id() const;
  inline void set_zone_id(::google::protobuf::uint32 value);
  
  // required uint32 send_tm = 5;
  inline bool has_send_tm() const;
  inline void clear_send_tm();
  static const int kSendTmFieldNumber = 5;
  inline ::google::protobuf::uint32 send_tm() const;
  inline void set_send_tm(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketKey)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_zone_id();
  inline void clear_has_zone_id();
  inline void set_has_send_tm();
  inline void clear_has_send_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 zone_id_;
  ::google::protobuf::uint32 send_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketKey* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketInfo : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketInfo();
  virtual ~CSGuildRedPacketInfo();
  
  CSGuildRedPacketInfo(const CSGuildRedPacketInfo& from);
  
  inline CSGuildRedPacketInfo& operator=(const CSGuildRedPacketInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketInfo& default_instance();
  
  void Swap(CSGuildRedPacketInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketInfo& from);
  void MergeFrom(const CSGuildRedPacketInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSGuildRedPacketKey key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::CSGuildRedPacketKey& key() const;
  inline ::CSGuildRedPacketKey* mutable_key();
  inline ::CSGuildRedPacketKey* release_key();
  
  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 packet_type = 3;
  inline bool has_packet_type() const;
  inline void clear_packet_type();
  static const int kPacketTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 packet_type() const;
  inline void set_packet_type(::google::protobuf::uint32 value);
  
  // required uint32 packet_id = 4;
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 4;
  inline ::google::protobuf::uint32 packet_id() const;
  inline void set_packet_id(::google::protobuf::uint32 value);
  
  // required uint32 surplus_nu = 5;
  inline bool has_surplus_nu() const;
  inline void clear_surplus_nu();
  static const int kSurplusNuFieldNumber = 5;
  inline ::google::protobuf::uint32 surplus_nu() const;
  inline void set_surplus_nu(::google::protobuf::uint32 value);
  
  // optional bool is_draw = 6 [default = false];
  inline bool has_is_draw() const;
  inline void clear_is_draw();
  static const int kIsDrawFieldNumber = 6;
  inline bool is_draw() const;
  inline void set_is_draw(bool value);
  
  // optional uint32 real_diamond = 7 [default = 1000];
  inline bool has_real_diamond() const;
  inline void clear_real_diamond();
  static const int kRealDiamondFieldNumber = 7;
  inline ::google::protobuf::uint32 real_diamond() const;
  inline void set_real_diamond(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketInfo)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_packet_type();
  inline void clear_has_packet_type();
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_surplus_nu();
  inline void clear_has_surplus_nu();
  inline void set_has_is_draw();
  inline void clear_has_is_draw();
  inline void set_has_real_diamond();
  inline void clear_has_real_diamond();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSGuildRedPacketKey* key_;
  ::std::string* name_;
  ::google::protobuf::uint32 packet_type_;
  ::google::protobuf::uint32 packet_id_;
  ::google::protobuf::uint32 surplus_nu_;
  bool is_draw_;
  ::google::protobuf::uint32 real_diamond_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketQueryReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketQueryReq();
  virtual ~CSGuildRedPacketQueryReq();
  
  CSGuildRedPacketQueryReq(const CSGuildRedPacketQueryReq& from);
  
  inline CSGuildRedPacketQueryReq& operator=(const CSGuildRedPacketQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketQueryReq& default_instance();
  
  void Swap(CSGuildRedPacketQueryReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketQueryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketQueryReq& from);
  void MergeFrom(const CSGuildRedPacketQueryReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketQueryReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketQueryRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketQueryRsp();
  virtual ~CSGuildRedPacketQueryRsp();
  
  CSGuildRedPacketQueryRsp(const CSGuildRedPacketQueryRsp& from);
  
  inline CSGuildRedPacketQueryRsp& operator=(const CSGuildRedPacketQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketQueryRsp& default_instance();
  
  void Swap(CSGuildRedPacketQueryRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketQueryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketQueryRsp& from);
  void MergeFrom(const CSGuildRedPacketQueryRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGuildRedPacketInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::CSGuildRedPacketInfo& infos(int index) const;
  inline ::CSGuildRedPacketInfo* mutable_infos(int index);
  inline ::CSGuildRedPacketInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketQueryRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketQueryRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketSendReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketSendReq();
  virtual ~CSGuildRedPacketSendReq();
  
  CSGuildRedPacketSendReq(const CSGuildRedPacketSendReq& from);
  
  inline CSGuildRedPacketSendReq& operator=(const CSGuildRedPacketSendReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketSendReq& default_instance();
  
  void Swap(CSGuildRedPacketSendReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketSendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketSendReq& from);
  void MergeFrom(const CSGuildRedPacketSendReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 packet_id = 1;
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::google::protobuf::uint32 packet_id() const;
  inline void set_packet_id(::google::protobuf::uint32 value);
  
  // required uint32 packet_type = 2;
  inline bool has_packet_type() const;
  inline void clear_packet_type();
  static const int kPacketTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 packet_type() const;
  inline void set_packet_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketSendReq)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_packet_type();
  inline void clear_has_packet_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 packet_id_;
  ::google::protobuf::uint32 packet_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketSendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketSendRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketSendRsp();
  virtual ~CSGuildRedPacketSendRsp();
  
  CSGuildRedPacketSendRsp(const CSGuildRedPacketSendRsp& from);
  
  inline CSGuildRedPacketSendRsp& operator=(const CSGuildRedPacketSendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketSendRsp& default_instance();
  
  void Swap(CSGuildRedPacketSendRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketSendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketSendRsp& from);
  void MergeFrom(const CSGuildRedPacketSendRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool suc = 1;
  inline bool has_suc() const;
  inline void clear_suc();
  static const int kSucFieldNumber = 1;
  inline bool suc() const;
  inline void set_suc(bool value);
  
  // required uint32 packet_id = 2;
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 2;
  inline ::google::protobuf::uint32 packet_id() const;
  inline void set_packet_id(::google::protobuf::uint32 value);
  
  // required uint32 packet_type = 3;
  inline bool has_packet_type() const;
  inline void clear_packet_type();
  static const int kPacketTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 packet_type() const;
  inline void set_packet_type(::google::protobuf::uint32 value);
  
  // required uint32 acc_packet_diamond = 4;
  inline bool has_acc_packet_diamond() const;
  inline void clear_acc_packet_diamond();
  static const int kAccPacketDiamondFieldNumber = 4;
  inline ::google::protobuf::uint32 acc_packet_diamond() const;
  inline void set_acc_packet_diamond(::google::protobuf::uint32 value);
  
  // required uint32 real_diamond = 5;
  inline bool has_real_diamond() const;
  inline void clear_real_diamond();
  static const int kRealDiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 real_diamond() const;
  inline void set_real_diamond(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketSendRsp)
 private:
  inline void set_has_suc();
  inline void clear_has_suc();
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_packet_type();
  inline void clear_has_packet_type();
  inline void set_has_acc_packet_diamond();
  inline void clear_has_acc_packet_diamond();
  inline void set_has_real_diamond();
  inline void clear_has_real_diamond();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool suc_;
  ::google::protobuf::uint32 packet_id_;
  ::google::protobuf::uint32 packet_type_;
  ::google::protobuf::uint32 acc_packet_diamond_;
  ::google::protobuf::uint32 real_diamond_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketSendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketGetAwardReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketGetAwardReq();
  virtual ~CSGuildRedPacketGetAwardReq();
  
  CSGuildRedPacketGetAwardReq(const CSGuildRedPacketGetAwardReq& from);
  
  inline CSGuildRedPacketGetAwardReq& operator=(const CSGuildRedPacketGetAwardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketGetAwardReq& default_instance();
  
  void Swap(CSGuildRedPacketGetAwardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketGetAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketGetAwardReq& from);
  void MergeFrom(const CSGuildRedPacketGetAwardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSGuildRedPacketKey key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::CSGuildRedPacketKey& key() const;
  inline ::CSGuildRedPacketKey* mutable_key();
  inline ::CSGuildRedPacketKey* release_key();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketGetAwardReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSGuildRedPacketKey* key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketGetAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketAward : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketAward();
  virtual ~CSGuildRedPacketAward();
  
  CSGuildRedPacketAward(const CSGuildRedPacketAward& from);
  
  inline CSGuildRedPacketAward& operator=(const CSGuildRedPacketAward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketAward& default_instance();
  
  void Swap(CSGuildRedPacketAward* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketAward& from);
  void MergeFrom(const CSGuildRedPacketAward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_count = 2;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 2;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketAward)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketAward* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketGetAwardRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketGetAwardRsp();
  virtual ~CSGuildRedPacketGetAwardRsp();
  
  CSGuildRedPacketGetAwardRsp(const CSGuildRedPacketGetAwardRsp& from);
  
  inline CSGuildRedPacketGetAwardRsp& operator=(const CSGuildRedPacketGetAwardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketGetAwardRsp& default_instance();
  
  void Swap(CSGuildRedPacketGetAwardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketGetAwardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketGetAwardRsp& from);
  void MergeFrom(const CSGuildRedPacketGetAwardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool suc = 1;
  inline bool has_suc() const;
  inline void clear_suc();
  static const int kSucFieldNumber = 1;
  inline bool suc() const;
  inline void set_suc(bool value);
  
  // required uint32 diamond_count = 2;
  inline bool has_diamond_count() const;
  inline void clear_diamond_count();
  static const int kDiamondCountFieldNumber = 2;
  inline ::google::protobuf::uint32 diamond_count() const;
  inline void set_diamond_count(::google::protobuf::uint32 value);
  
  // repeated .CSGuildRedPacketAward awards = 3;
  inline int awards_size() const;
  inline void clear_awards();
  static const int kAwardsFieldNumber = 3;
  inline const ::CSGuildRedPacketAward& awards(int index) const;
  inline ::CSGuildRedPacketAward* mutable_awards(int index);
  inline ::CSGuildRedPacketAward* add_awards();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketAward >&
      awards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketAward >*
      mutable_awards();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketGetAwardRsp)
 private:
  inline void set_has_suc();
  inline void clear_has_suc();
  inline void set_has_diamond_count();
  inline void clear_has_diamond_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool suc_;
  ::google::protobuf::uint32 diamond_count_;
  ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketAward > awards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketGetAwardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketRecordReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketRecordReq();
  virtual ~CSGuildRedPacketRecordReq();
  
  CSGuildRedPacketRecordReq(const CSGuildRedPacketRecordReq& from);
  
  inline CSGuildRedPacketRecordReq& operator=(const CSGuildRedPacketRecordReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketRecordReq& default_instance();
  
  void Swap(CSGuildRedPacketRecordReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketRecordReq& from);
  void MergeFrom(const CSGuildRedPacketRecordReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSGuildRedPacketKey key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::CSGuildRedPacketKey& key() const;
  inline ::CSGuildRedPacketKey* mutable_key();
  inline ::CSGuildRedPacketKey* release_key();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketRecordReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSGuildRedPacketKey* key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRedPacketRecordInfo : public ::google::protobuf::Message {
 public:
  CSRedPacketRecordInfo();
  virtual ~CSRedPacketRecordInfo();
  
  CSRedPacketRecordInfo(const CSRedPacketRecordInfo& from);
  
  inline CSRedPacketRecordInfo& operator=(const CSRedPacketRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRedPacketRecordInfo& default_instance();
  
  void Swap(CSRedPacketRecordInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSRedPacketRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRedPacketRecordInfo& from);
  void MergeFrom(const CSRedPacketRecordInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes log = 1;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 1;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const void* value, size_t size);
  inline ::std::string* mutable_log();
  inline ::std::string* release_log();
  
  // required uint32 modify_tm = 2;
  inline bool has_modify_tm() const;
  inline void clear_modify_tm();
  static const int kModifyTmFieldNumber = 2;
  inline ::google::protobuf::uint32 modify_tm() const;
  inline void set_modify_tm(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRedPacketRecordInfo)
 private:
  inline void set_has_log();
  inline void clear_has_log();
  inline void set_has_modify_tm();
  inline void clear_has_modify_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* log_;
  ::google::protobuf::uint32 modify_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRedPacketRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketRecordRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketRecordRsp();
  virtual ~CSGuildRedPacketRecordRsp();
  
  CSGuildRedPacketRecordRsp(const CSGuildRedPacketRecordRsp& from);
  
  inline CSGuildRedPacketRecordRsp& operator=(const CSGuildRedPacketRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketRecordRsp& default_instance();
  
  void Swap(CSGuildRedPacketRecordRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketRecordRsp& from);
  void MergeFrom(const CSGuildRedPacketRecordRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSRedPacketRecordInfo logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::CSRedPacketRecordInfo& logs(int index) const;
  inline ::CSRedPacketRecordInfo* mutable_logs(int index);
  inline ::CSRedPacketRecordInfo* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSRedPacketRecordInfo >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSRedPacketRecordInfo >*
      mutable_logs();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketRecordRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSRedPacketRecordInfo > logs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketFirstCheckReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketFirstCheckReq();
  virtual ~CSGuildRedPacketFirstCheckReq();
  
  CSGuildRedPacketFirstCheckReq(const CSGuildRedPacketFirstCheckReq& from);
  
  inline CSGuildRedPacketFirstCheckReq& operator=(const CSGuildRedPacketFirstCheckReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketFirstCheckReq& default_instance();
  
  void Swap(CSGuildRedPacketFirstCheckReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketFirstCheckReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketFirstCheckReq& from);
  void MergeFrom(const CSGuildRedPacketFirstCheckReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 packet_id = 1;
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::google::protobuf::uint32 packet_id() const;
  inline void set_packet_id(::google::protobuf::uint32 value);
  
  // required uint32 packet_type = 2;
  inline bool has_packet_type() const;
  inline void clear_packet_type();
  static const int kPacketTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 packet_type() const;
  inline void set_packet_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketFirstCheckReq)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_packet_type();
  inline void clear_has_packet_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 packet_id_;
  ::google::protobuf::uint32 packet_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketFirstCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketFirstCheckRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketFirstCheckRsp();
  virtual ~CSGuildRedPacketFirstCheckRsp();
  
  CSGuildRedPacketFirstCheckRsp(const CSGuildRedPacketFirstCheckRsp& from);
  
  inline CSGuildRedPacketFirstCheckRsp& operator=(const CSGuildRedPacketFirstCheckRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketFirstCheckRsp& default_instance();
  
  void Swap(CSGuildRedPacketFirstCheckRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketFirstCheckRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketFirstCheckRsp& from);
  void MergeFrom(const CSGuildRedPacketFirstCheckRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 acc_packet_diamond = 1;
  inline bool has_acc_packet_diamond() const;
  inline void clear_acc_packet_diamond();
  static const int kAccPacketDiamondFieldNumber = 1;
  inline ::google::protobuf::uint32 acc_packet_diamond() const;
  inline void set_acc_packet_diamond(::google::protobuf::uint32 value);
  
  // optional bool is_succ = 2 [default = false];
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketFirstCheckRsp)
 private:
  inline void set_has_acc_packet_diamond();
  inline void clear_has_acc_packet_diamond();
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 acc_packet_diamond_;
  bool is_succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketFirstCheckRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketConfigInfo : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketConfigInfo();
  virtual ~CSGuildRedPacketConfigInfo();
  
  CSGuildRedPacketConfigInfo(const CSGuildRedPacketConfigInfo& from);
  
  inline CSGuildRedPacketConfigInfo& operator=(const CSGuildRedPacketConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketConfigInfo& default_instance();
  
  void Swap(CSGuildRedPacketConfigInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketConfigInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketConfigInfo& from);
  void MergeFrom(const CSGuildRedPacketConfigInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 envelopeid = 1;
  inline bool has_envelopeid() const;
  inline void clear_envelopeid();
  static const int kEnvelopeidFieldNumber = 1;
  inline ::google::protobuf::uint32 envelopeid() const;
  inline void set_envelopeid(::google::protobuf::uint32 value);
  
  // required uint32 envelope_type = 2;
  inline bool has_envelope_type() const;
  inline void clear_envelope_type();
  static const int kEnvelopeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 envelope_type() const;
  inline void set_envelope_type(::google::protobuf::uint32 value);
  
  // required uint32 time_type = 3;
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 time_type() const;
  inline void set_time_type(::google::protobuf::uint32 value);
  
  // required string activity_date = 4;
  inline bool has_activity_date() const;
  inline void clear_activity_date();
  static const int kActivityDateFieldNumber = 4;
  inline const ::std::string& activity_date() const;
  inline void set_activity_date(const ::std::string& value);
  inline void set_activity_date(const char* value);
  inline void set_activity_date(const char* value, size_t size);
  inline ::std::string* mutable_activity_date();
  inline ::std::string* release_activity_date();
  
  // required string activity_time = 5;
  inline bool has_activity_time() const;
  inline void clear_activity_time();
  static const int kActivityTimeFieldNumber = 5;
  inline const ::std::string& activity_time() const;
  inline void set_activity_time(const ::std::string& value);
  inline void set_activity_time(const char* value);
  inline void set_activity_time(const char* value, size_t size);
  inline ::std::string* mutable_activity_time();
  inline ::std::string* release_activity_time();
  
  // required string activity_qualification = 6;
  inline bool has_activity_qualification() const;
  inline void clear_activity_qualification();
  static const int kActivityQualificationFieldNumber = 6;
  inline const ::std::string& activity_qualification() const;
  inline void set_activity_qualification(const ::std::string& value);
  inline void set_activity_qualification(const char* value);
  inline void set_activity_qualification(const char* value, size_t size);
  inline ::std::string* mutable_activity_qualification();
  inline ::std::string* release_activity_qualification();
  
  // required uint32 random_multiples = 7;
  inline bool has_random_multiples() const;
  inline void clear_random_multiples();
  static const int kRandomMultiplesFieldNumber = 7;
  inline ::google::protobuf::uint32 random_multiples() const;
  inline void set_random_multiples(::google::protobuf::uint32 value);
  
  // required string award1 = 8;
  inline bool has_award1() const;
  inline void clear_award1();
  static const int kAward1FieldNumber = 8;
  inline const ::std::string& award1() const;
  inline void set_award1(const ::std::string& value);
  inline void set_award1(const char* value);
  inline void set_award1(const char* value, size_t size);
  inline ::std::string* mutable_award1();
  inline ::std::string* release_award1();
  
  // required string award2 = 9;
  inline bool has_award2() const;
  inline void clear_award2();
  static const int kAward2FieldNumber = 9;
  inline const ::std::string& award2() const;
  inline void set_award2(const ::std::string& value);
  inline void set_award2(const char* value);
  inline void set_award2(const char* value, size_t size);
  inline ::std::string* mutable_award2();
  inline ::std::string* release_award2();
  
  // required string award3 = 10;
  inline bool has_award3() const;
  inline void clear_award3();
  static const int kAward3FieldNumber = 10;
  inline const ::std::string& award3() const;
  inline void set_award3(const ::std::string& value);
  inline void set_award3(const char* value);
  inline void set_award3(const char* value, size_t size);
  inline ::std::string* mutable_award3();
  inline ::std::string* release_award3();
  
  // required string extent = 11;
  inline bool has_extent() const;
  inline void clear_extent();
  static const int kExtentFieldNumber = 11;
  inline const ::std::string& extent() const;
  inline void set_extent(const ::std::string& value);
  inline void set_extent(const char* value);
  inline void set_extent(const char* value, size_t size);
  inline ::std::string* mutable_extent();
  inline ::std::string* release_extent();
  
  // optional uint32 remain_times = 12 [default = 0];
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 12;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketConfigInfo)
 private:
  inline void set_has_envelopeid();
  inline void clear_has_envelopeid();
  inline void set_has_envelope_type();
  inline void clear_has_envelope_type();
  inline void set_has_time_type();
  inline void clear_has_time_type();
  inline void set_has_activity_date();
  inline void clear_has_activity_date();
  inline void set_has_activity_time();
  inline void clear_has_activity_time();
  inline void set_has_activity_qualification();
  inline void clear_has_activity_qualification();
  inline void set_has_random_multiples();
  inline void clear_has_random_multiples();
  inline void set_has_award1();
  inline void clear_has_award1();
  inline void set_has_award2();
  inline void clear_has_award2();
  inline void set_has_award3();
  inline void clear_has_award3();
  inline void set_has_extent();
  inline void clear_has_extent();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 envelopeid_;
  ::google::protobuf::uint32 envelope_type_;
  ::std::string* activity_date_;
  ::std::string* activity_time_;
  ::google::protobuf::uint32 time_type_;
  ::google::protobuf::uint32 random_multiples_;
  ::std::string* activity_qualification_;
  ::std::string* award1_;
  ::std::string* award2_;
  ::std::string* award3_;
  ::std::string* extent_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketConfigInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketConfigReq : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketConfigReq();
  virtual ~CSGuildRedPacketConfigReq();
  
  CSGuildRedPacketConfigReq(const CSGuildRedPacketConfigReq& from);
  
  inline CSGuildRedPacketConfigReq& operator=(const CSGuildRedPacketConfigReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketConfigReq& default_instance();
  
  void Swap(CSGuildRedPacketConfigReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketConfigReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketConfigReq& from);
  void MergeFrom(const CSGuildRedPacketConfigReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketConfigReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketConfigReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRedPacketConfigRsp : public ::google::protobuf::Message {
 public:
  CSGuildRedPacketConfigRsp();
  virtual ~CSGuildRedPacketConfigRsp();
  
  CSGuildRedPacketConfigRsp(const CSGuildRedPacketConfigRsp& from);
  
  inline CSGuildRedPacketConfigRsp& operator=(const CSGuildRedPacketConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGuildRedPacketConfigRsp& default_instance();
  
  void Swap(CSGuildRedPacketConfigRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGuildRedPacketConfigRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGuildRedPacketConfigRsp& from);
  void MergeFrom(const CSGuildRedPacketConfigRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGuildRedPacketConfigInfo configs = 1;
  inline int configs_size() const;
  inline void clear_configs();
  static const int kConfigsFieldNumber = 1;
  inline const ::CSGuildRedPacketConfigInfo& configs(int index) const;
  inline ::CSGuildRedPacketConfigInfo* mutable_configs(int index);
  inline ::CSGuildRedPacketConfigInfo* add_configs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketConfigInfo >&
      configs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketConfigInfo >*
      mutable_configs();
  
  // @@protoc_insertion_point(class_scope:CSGuildRedPacketConfigRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketConfigInfo > configs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGuildRedPacketConfigRsp* default_instance_;
};
// -------------------------------------------------------------------

class UnionInfo : public ::google::protobuf::Message {
 public:
  UnionInfo();
  virtual ~UnionInfo();
  
  UnionInfo(const UnionInfo& from);
  
  inline UnionInfo& operator=(const UnionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnionInfo& default_instance();
  
  void Swap(UnionInfo* other);
  
  // implements Message ----------------------------------------------
  
  UnionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnionInfo& from);
  void MergeFrom(const UnionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 people_num = 3;
  inline bool has_people_num() const;
  inline void clear_people_num();
  static const int kPeopleNumFieldNumber = 3;
  inline ::google::protobuf::uint32 people_num() const;
  inline void set_people_num(::google::protobuf::uint32 value);
  
  // optional uint32 chairman_num = 4;
  inline bool has_chairman_num() const;
  inline void clear_chairman_num();
  static const int kChairmanNumFieldNumber = 4;
  inline ::google::protobuf::uint32 chairman_num() const;
  inline void set_chairman_num(::google::protobuf::uint32 value);
  
  // optional uint32 elite_num = 5;
  inline bool has_elite_num() const;
  inline void clear_elite_num();
  static const int kEliteNumFieldNumber = 5;
  inline ::google::protobuf::uint32 elite_num() const;
  inline void set_elite_num(::google::protobuf::uint32 value);
  
  // optional uint32 donate = 6;
  inline bool has_donate() const;
  inline void clear_donate();
  static const int kDonateFieldNumber = 6;
  inline ::google::protobuf::uint32 donate() const;
  inline void set_donate(::google::protobuf::uint32 value);
  
  // optional uint32 benedition = 9;
  inline bool has_benedition() const;
  inline void clear_benedition();
  static const int kBeneditionFieldNumber = 9;
  inline ::google::protobuf::uint32 benedition() const;
  inline void set_benedition(::google::protobuf::uint32 value);
  
  // optional uint32 shop = 10;
  inline bool has_shop() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 10;
  inline ::google::protobuf::uint32 shop() const;
  inline void set_shop(::google::protobuf::uint32 value);
  
  // optional uint32 transcript = 11;
  inline bool has_transcript() const;
  inline void clear_transcript();
  static const int kTranscriptFieldNumber = 11;
  inline ::google::protobuf::uint32 transcript() const;
  inline void set_transcript(::google::protobuf::uint32 value);
  
  // optional uint32 target = 12;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 12;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);
  
  // optional uint32 boss = 13;
  inline bool has_boss() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 13;
  inline ::google::protobuf::uint32 boss() const;
  inline void set_boss(::google::protobuf::uint32 value);
  
  // optional uint32 melee = 14;
  inline bool has_melee() const;
  inline void clear_melee();
  static const int kMeleeFieldNumber = 14;
  inline ::google::protobuf::uint32 melee() const;
  inline void set_melee(::google::protobuf::uint32 value);
  
  // optional uint32 scramble = 15;
  inline bool has_scramble() const;
  inline void clear_scramble();
  static const int kScrambleFieldNumber = 15;
  inline ::google::protobuf::uint32 scramble() const;
  inline void set_scramble(::google::protobuf::uint32 value);
  
  // optional uint32 redenvelope = 16;
  inline bool has_redenvelope() const;
  inline void clear_redenvelope();
  static const int kRedenvelopeFieldNumber = 16;
  inline ::google::protobuf::uint32 redenvelope() const;
  inline void set_redenvelope(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:UnionInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_people_num();
  inline void clear_has_people_num();
  inline void set_has_chairman_num();
  inline void clear_has_chairman_num();
  inline void set_has_elite_num();
  inline void clear_has_elite_num();
  inline void set_has_donate();
  inline void clear_has_donate();
  inline void set_has_benedition();
  inline void clear_has_benedition();
  inline void set_has_shop();
  inline void clear_has_shop();
  inline void set_has_transcript();
  inline void clear_has_transcript();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_boss();
  inline void clear_has_boss();
  inline void set_has_melee();
  inline void clear_has_melee();
  inline void set_has_scramble();
  inline void clear_has_scramble();
  inline void set_has_redenvelope();
  inline void clear_has_redenvelope();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 people_num_;
  ::google::protobuf::uint32 chairman_num_;
  ::google::protobuf::uint32 elite_num_;
  ::google::protobuf::uint32 donate_;
  ::google::protobuf::uint32 benedition_;
  ::google::protobuf::uint32 shop_;
  ::google::protobuf::uint32 transcript_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 boss_;
  ::google::protobuf::uint32 melee_;
  ::google::protobuf::uint32 scramble_;
  ::google::protobuf::uint32 redenvelope_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static UnionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSUnionInfoReq : public ::google::protobuf::Message {
 public:
  CSUnionInfoReq();
  virtual ~CSUnionInfoReq();
  
  CSUnionInfoReq(const CSUnionInfoReq& from);
  
  inline CSUnionInfoReq& operator=(const CSUnionInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUnionInfoReq& default_instance();
  
  void Swap(CSUnionInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSUnionInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUnionInfoReq& from);
  void MergeFrom(const CSUnionInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSUnionInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUnionInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSUnionInfoRsp : public ::google::protobuf::Message {
 public:
  CSUnionInfoRsp();
  virtual ~CSUnionInfoRsp();
  
  CSUnionInfoRsp(const CSUnionInfoRsp& from);
  
  inline CSUnionInfoRsp& operator=(const CSUnionInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUnionInfoRsp& default_instance();
  
  void Swap(CSUnionInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUnionInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUnionInfoRsp& from);
  void MergeFrom(const CSUnionInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .UnionInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::UnionInfo& infos(int index) const;
  inline ::UnionInfo* mutable_infos(int index);
  inline ::UnionInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::UnionInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::UnionInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSUnionInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::UnionInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUnionInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSChangeNameReq : public ::google::protobuf::Message {
 public:
  CSChangeNameReq();
  virtual ~CSChangeNameReq();
  
  CSChangeNameReq(const CSChangeNameReq& from);
  
  inline CSChangeNameReq& operator=(const CSChangeNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChangeNameReq& default_instance();
  
  void Swap(CSChangeNameReq* other);
  
  // implements Message ----------------------------------------------
  
  CSChangeNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChangeNameReq& from);
  void MergeFrom(const CSChangeNameReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes nick_name = 1;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  
  // @@protoc_insertion_point(class_scope:CSChangeNameReq)
 private:
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nick_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChangeNameReq* default_instance_;
};
// -------------------------------------------------------------------

class CSChangeNameRsp : public ::google::protobuf::Message {
 public:
  CSChangeNameRsp();
  virtual ~CSChangeNameRsp();
  
  CSChangeNameRsp(const CSChangeNameRsp& from);
  
  inline CSChangeNameRsp& operator=(const CSChangeNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChangeNameRsp& default_instance();
  
  void Swap(CSChangeNameRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSChangeNameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChangeNameRsp& from);
  void MergeFrom(const CSChangeNameRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline bool res() const;
  inline void set_res(bool value);
  
  // required bytes nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  
  // @@protoc_insertion_point(class_scope:CSChangeNameRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nick_name_;
  bool res_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSChangeNameRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyItemExploreRewardRsp_Item : public ::google::protobuf::Message {
 public:
  CSNotifyItemExploreRewardRsp_Item();
  virtual ~CSNotifyItemExploreRewardRsp_Item();
  
  CSNotifyItemExploreRewardRsp_Item(const CSNotifyItemExploreRewardRsp_Item& from);
  
  inline CSNotifyItemExploreRewardRsp_Item& operator=(const CSNotifyItemExploreRewardRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyItemExploreRewardRsp_Item& default_instance();
  
  void Swap(CSNotifyItemExploreRewardRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyItemExploreRewardRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyItemExploreRewardRsp_Item& from);
  void MergeFrom(const CSNotifyItemExploreRewardRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyItemExploreRewardRsp.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyItemExploreRewardRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyItemExploreRewardRsp : public ::google::protobuf::Message {
 public:
  CSNotifyItemExploreRewardRsp();
  virtual ~CSNotifyItemExploreRewardRsp();
  
  CSNotifyItemExploreRewardRsp(const CSNotifyItemExploreRewardRsp& from);
  
  inline CSNotifyItemExploreRewardRsp& operator=(const CSNotifyItemExploreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyItemExploreRewardRsp& default_instance();
  
  void Swap(CSNotifyItemExploreRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyItemExploreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyItemExploreRewardRsp& from);
  void MergeFrom(const CSNotifyItemExploreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSNotifyItemExploreRewardRsp_Item Item;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSNotifyItemExploreRewardRsp.Item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CSNotifyItemExploreRewardRsp_Item& items(int index) const;
  inline ::CSNotifyItemExploreRewardRsp_Item* mutable_items(int index);
  inline ::CSNotifyItemExploreRewardRsp_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyItemExploreRewardRsp_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSNotifyItemExploreRewardRsp_Item >*
      mutable_items();
  
  // optional bool isfresh = 2 [default = true];
  inline bool has_isfresh() const;
  inline void clear_isfresh();
  static const int kIsfreshFieldNumber = 2;
  inline bool isfresh() const;
  inline void set_isfresh(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyItemExploreRewardRsp)
 private:
  inline void set_has_isfresh();
  inline void clear_has_isfresh();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSNotifyItemExploreRewardRsp_Item > items_;
  bool isfresh_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyItemExploreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreRestRsp : public ::google::protobuf::Message {
 public:
  CSExploreRestRsp();
  virtual ~CSExploreRestRsp();
  
  CSExploreRestRsp(const CSExploreRestRsp& from);
  
  inline CSExploreRestRsp& operator=(const CSExploreRestRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreRestRsp& default_instance();
  
  void Swap(CSExploreRestRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreRestRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreRestRsp& from);
  void MergeFrom(const CSExploreRestRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSExploreRestRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreRestRsp* default_instance_;
};
// -------------------------------------------------------------------

class carmsg07 : public ::google::protobuf::Message {
 public:
  carmsg07();
  virtual ~carmsg07();
  
  carmsg07(const carmsg07& from);
  
  inline carmsg07& operator=(const carmsg07& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg07& default_instance();
  
  void Swap(carmsg07* other);
  
  // implements Message ----------------------------------------------
  
  carmsg07* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg07& from);
  void MergeFrom(const carmsg07& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg07)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg07* default_instance_;
};
// -------------------------------------------------------------------

class carmsg08 : public ::google::protobuf::Message {
 public:
  carmsg08();
  virtual ~carmsg08();
  
  carmsg08(const carmsg08& from);
  
  inline carmsg08& operator=(const carmsg08& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg08& default_instance();
  
  void Swap(carmsg08* other);
  
  // implements Message ----------------------------------------------
  
  carmsg08* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg08& from);
  void MergeFrom(const carmsg08& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg08)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg08* default_instance_;
};
// -------------------------------------------------------------------

class carmsg09 : public ::google::protobuf::Message {
 public:
  carmsg09();
  virtual ~carmsg09();
  
  carmsg09(const carmsg09& from);
  
  inline carmsg09& operator=(const carmsg09& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg09& default_instance();
  
  void Swap(carmsg09* other);
  
  // implements Message ----------------------------------------------
  
  carmsg09* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg09& from);
  void MergeFrom(const carmsg09& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg09)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg09* default_instance_;
};
// -------------------------------------------------------------------

class carmsg10 : public ::google::protobuf::Message {
 public:
  carmsg10();
  virtual ~carmsg10();
  
  carmsg10(const carmsg10& from);
  
  inline carmsg10& operator=(const carmsg10& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg10& default_instance();
  
  void Swap(carmsg10* other);
  
  // implements Message ----------------------------------------------
  
  carmsg10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg10& from);
  void MergeFrom(const carmsg10& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg10)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg10* default_instance_;
};
// -------------------------------------------------------------------

class CSRankRewardListReq : public ::google::protobuf::Message {
 public:
  CSRankRewardListReq();
  virtual ~CSRankRewardListReq();
  
  CSRankRewardListReq(const CSRankRewardListReq& from);
  
  inline CSRankRewardListReq& operator=(const CSRankRewardListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankRewardListReq& default_instance();
  
  void Swap(CSRankRewardListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRankRewardListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankRewardListReq& from);
  void MergeFrom(const CSRankRewardListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // required uint32 rank_start = 3;
  inline bool has_rank_start() const;
  inline void clear_rank_start();
  static const int kRankStartFieldNumber = 3;
  inline ::google::protobuf::uint32 rank_start() const;
  inline void set_rank_start(::google::protobuf::uint32 value);
  
  // required uint32 rank_size = 4;
  inline bool has_rank_size() const;
  inline void clear_rank_size();
  static const int kRankSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 rank_size() const;
  inline void set_rank_size(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRankRewardListReq)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_rank_start();
  inline void clear_has_rank_start();
  inline void set_has_rank_size();
  inline void clear_has_rank_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 rank_start_;
  ::google::protobuf::uint32 rank_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRankRewardListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRankRewardListRsp_Item : public ::google::protobuf::Message {
 public:
  CSRankRewardListRsp_Item();
  virtual ~CSRankRewardListRsp_Item();
  
  CSRankRewardListRsp_Item(const CSRankRewardListRsp_Item& from);
  
  inline CSRankRewardListRsp_Item& operator=(const CSRankRewardListRsp_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankRewardListRsp_Item& default_instance();
  
  void Swap(CSRankRewardListRsp_Item* other);
  
  // implements Message ----------------------------------------------
  
  CSRankRewardListRsp_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankRewardListRsp_Item& from);
  void MergeFrom(const CSRankRewardListRsp_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRankRewardListRsp.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRankRewardListRsp_Item* default_instance_;
};
// -------------------------------------------------------------------

class CSRankRewardListRsp_RankReward : public ::google::protobuf::Message {
 public:
  CSRankRewardListRsp_RankReward();
  virtual ~CSRankRewardListRsp_RankReward();
  
  CSRankRewardListRsp_RankReward(const CSRankRewardListRsp_RankReward& from);
  
  inline CSRankRewardListRsp_RankReward& operator=(const CSRankRewardListRsp_RankReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankRewardListRsp_RankReward& default_instance();
  
  void Swap(CSRankRewardListRsp_RankReward* other);
  
  // implements Message ----------------------------------------------
  
  CSRankRewardListRsp_RankReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankRewardListRsp_RankReward& from);
  void MergeFrom(const CSRankRewardListRsp_RankReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_start = 1;
  inline bool has_rank_start() const;
  inline void clear_rank_start();
  static const int kRankStartFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_start() const;
  inline void set_rank_start(::google::protobuf::uint32 value);
  
  // required uint32 rank_end = 2;
  inline bool has_rank_end() const;
  inline void clear_rank_end();
  static const int kRankEndFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_end() const;
  inline void set_rank_end(::google::protobuf::uint32 value);
  
  // repeated .CSRankRewardListRsp.Item items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::CSRankRewardListRsp_Item& items(int index) const;
  inline ::CSRankRewardListRsp_Item* mutable_items(int index);
  inline ::CSRankRewardListRsp_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_Item >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSRankRewardListRsp.RankReward)
 private:
  inline void set_has_rank_start();
  inline void clear_has_rank_start();
  inline void set_has_rank_end();
  inline void clear_has_rank_end();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_start_;
  ::google::protobuf::uint32 rank_end_;
  ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_Item > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRankRewardListRsp_RankReward* default_instance_;
};
// -------------------------------------------------------------------

class CSRankRewardListRsp : public ::google::protobuf::Message {
 public:
  CSRankRewardListRsp();
  virtual ~CSRankRewardListRsp();
  
  CSRankRewardListRsp(const CSRankRewardListRsp& from);
  
  inline CSRankRewardListRsp& operator=(const CSRankRewardListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRankRewardListRsp& default_instance();
  
  void Swap(CSRankRewardListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRankRewardListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRankRewardListRsp& from);
  void MergeFrom(const CSRankRewardListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSRankRewardListRsp_Item Item;
  typedef CSRankRewardListRsp_RankReward RankReward;
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank_name = 1;
  inline bool has_rank_name() const;
  inline void clear_rank_name();
  static const int kRankNameFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_name() const;
  inline void set_rank_name(::google::protobuf::uint32 value);
  
  // required uint32 rank_type = 2;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // required uint32 rank_start = 3;
  inline bool has_rank_start() const;
  inline void clear_rank_start();
  static const int kRankStartFieldNumber = 3;
  inline ::google::protobuf::uint32 rank_start() const;
  inline void set_rank_start(::google::protobuf::uint32 value);
  
  // required uint32 rank_size = 4;
  inline bool has_rank_size() const;
  inline void clear_rank_size();
  static const int kRankSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 rank_size() const;
  inline void set_rank_size(::google::protobuf::uint32 value);
  
  // repeated .CSRankRewardListRsp.RankReward items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::CSRankRewardListRsp_RankReward& items(int index) const;
  inline ::CSRankRewardListRsp_RankReward* mutable_items(int index);
  inline ::CSRankRewardListRsp_RankReward* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_RankReward >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_RankReward >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSRankRewardListRsp)
 private:
  inline void set_has_rank_name();
  inline void clear_has_rank_name();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_rank_start();
  inline void clear_has_rank_start();
  inline void set_has_rank_size();
  inline void clear_has_rank_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rank_name_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 rank_start_;
  ::google::protobuf::uint32 rank_size_;
  ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_RankReward > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRankRewardListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitCommitReq : public ::google::protobuf::Message {
 public:
  CSRecruitCommitReq();
  virtual ~CSRecruitCommitReq();
  
  CSRecruitCommitReq(const CSRecruitCommitReq& from);
  
  inline CSRecruitCommitReq& operator=(const CSRecruitCommitReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitCommitReq& default_instance();
  
  void Swap(CSRecruitCommitReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitCommitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitCommitReq& from);
  void MergeFrom(const CSRecruitCommitReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint64 code() const;
  inline void set_code(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CSRecruitCommitReq)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitCommitReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitCommitRsp : public ::google::protobuf::Message {
 public:
  CSRecruitCommitRsp();
  virtual ~CSRecruitCommitRsp();
  
  CSRecruitCommitRsp(const CSRecruitCommitRsp& from);
  
  inline CSRecruitCommitRsp& operator=(const CSRecruitCommitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitCommitRsp& default_instance();
  
  void Swap(CSRecruitCommitRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitCommitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitCommitRsp& from);
  void MergeFrom(const CSRecruitCommitRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint64 code() const;
  inline void set_code(::google::protobuf::uint64 value);
  
  // required .RecruitCommitResult result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline RecruitCommitResult result() const;
  inline void set_result(RecruitCommitResult value);
  
  // @@protoc_insertion_point(class_scope:CSRecruitCommitRsp)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 code_;
  int result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitCommitRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitAwardReq : public ::google::protobuf::Message {
 public:
  CSRecruitAwardReq();
  virtual ~CSRecruitAwardReq();
  
  CSRecruitAwardReq(const CSRecruitAwardReq& from);
  
  inline CSRecruitAwardReq& operator=(const CSRecruitAwardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitAwardReq& default_instance();
  
  void Swap(CSRecruitAwardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitAwardReq& from);
  void MergeFrom(const CSRecruitAwardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRecruitAwardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitAwardRsp : public ::google::protobuf::Message {
 public:
  CSRecruitAwardRsp();
  virtual ~CSRecruitAwardRsp();
  
  CSRecruitAwardRsp(const CSRecruitAwardRsp& from);
  
  inline CSRecruitAwardRsp& operator=(const CSRecruitAwardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitAwardRsp& default_instance();
  
  void Swap(CSRecruitAwardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitAwardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitAwardRsp& from);
  void MergeFrom(const CSRecruitAwardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required .RecruitAwardResult result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline RecruitAwardResult result() const;
  inline void set_result(RecruitAwardResult value);
  
  // @@protoc_insertion_point(class_scope:CSRecruitAwardRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  int result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitAwardRsp* default_instance_;
};
// -------------------------------------------------------------------

class RecruitInfo : public ::google::protobuf::Message {
 public:
  RecruitInfo();
  virtual ~RecruitInfo();
  
  RecruitInfo(const RecruitInfo& from);
  
  inline RecruitInfo& operator=(const RecruitInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecruitInfo& default_instance();
  
  void Swap(RecruitInfo* other);
  
  // implements Message ----------------------------------------------
  
  RecruitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecruitInfo& from);
  void MergeFrom(const RecruitInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:RecruitInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static RecruitInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitListReq : public ::google::protobuf::Message {
 public:
  CSRecruitListReq();
  virtual ~CSRecruitListReq();
  
  CSRecruitListReq(const CSRecruitListReq& from);
  
  inline CSRecruitListReq& operator=(const CSRecruitListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitListReq& default_instance();
  
  void Swap(CSRecruitListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitListReq& from);
  void MergeFrom(const CSRecruitListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSRecruitListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRecruitListRsp : public ::google::protobuf::Message {
 public:
  CSRecruitListRsp();
  virtual ~CSRecruitListRsp();
  
  CSRecruitListRsp(const CSRecruitListRsp& from);
  
  inline CSRecruitListRsp& operator=(const CSRecruitListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRecruitListRsp& default_instance();
  
  void Swap(CSRecruitListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRecruitListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRecruitListRsp& from);
  void MergeFrom(const CSRecruitListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 my_code = 1;
  inline bool has_my_code() const;
  inline void clear_my_code();
  static const int kMyCodeFieldNumber = 1;
  inline ::google::protobuf::uint64 my_code() const;
  inline void set_my_code(::google::protobuf::uint64 value);
  
  // repeated .RecruitInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::RecruitInfo& info(int index) const;
  inline ::RecruitInfo* mutable_info(int index);
  inline ::RecruitInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::RecruitInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::RecruitInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:CSRecruitListRsp)
 private:
  inline void set_has_my_code();
  inline void clear_has_my_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 my_code_;
  ::google::protobuf::RepeatedPtrField< ::RecruitInfo > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRecruitListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeHighQualityReq : public ::google::protobuf::Message {
 public:
  CSExchangeHighQualityReq();
  virtual ~CSExchangeHighQualityReq();
  
  CSExchangeHighQualityReq(const CSExchangeHighQualityReq& from);
  
  inline CSExchangeHighQualityReq& operator=(const CSExchangeHighQualityReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeHighQualityReq& default_instance();
  
  void Swap(CSExchangeHighQualityReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeHighQualityReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeHighQualityReq& from);
  void MergeFrom(const CSExchangeHighQualityReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 exid = 1;
  inline bool has_exid() const;
  inline void clear_exid();
  static const int kExidFieldNumber = 1;
  inline ::google::protobuf::uint32 exid() const;
  inline void set_exid(::google::protobuf::uint32 value);
  
  // repeated uint32 params = 2;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();
  
  // @@protoc_insertion_point(class_scope:CSExchangeHighQualityReq)
 private:
  inline void set_has_exid();
  inline void clear_has_exid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::google::protobuf::uint32 exid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeHighQualityReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeHighQualityRsp : public ::google::protobuf::Message {
 public:
  CSExchangeHighQualityRsp();
  virtual ~CSExchangeHighQualityRsp();
  
  CSExchangeHighQualityRsp(const CSExchangeHighQualityRsp& from);
  
  inline CSExchangeHighQualityRsp& operator=(const CSExchangeHighQualityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeHighQualityRsp& default_instance();
  
  void Swap(CSExchangeHighQualityRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeHighQualityRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeHighQualityRsp& from);
  void MergeFrom(const CSExchangeHighQualityRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool is_succ = 1;
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 1;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // required uint32 exid = 2;
  inline bool has_exid() const;
  inline void clear_exid();
  static const int kExidFieldNumber = 2;
  inline ::google::protobuf::uint32 exid() const;
  inline void set_exid(::google::protobuf::uint32 value);
  
  // optional .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSExchangeHighQualityRsp)
 private:
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  inline void set_has_exid();
  inline void clear_has_exid();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_succ_;
  ::google::protobuf::uint32 exid_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeHighQualityRsp* default_instance_;
};
// -------------------------------------------------------------------

class carmsg30 : public ::google::protobuf::Message {
 public:
  carmsg30();
  virtual ~carmsg30();
  
  carmsg30(const carmsg30& from);
  
  inline carmsg30& operator=(const carmsg30& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg30& default_instance();
  
  void Swap(carmsg30* other);
  
  // implements Message ----------------------------------------------
  
  carmsg30* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg30& from);
  void MergeFrom(const carmsg30& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg30)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg30* default_instance_;
};
// -------------------------------------------------------------------

class carmsg31 : public ::google::protobuf::Message {
 public:
  carmsg31();
  virtual ~carmsg31();
  
  carmsg31(const carmsg31& from);
  
  inline carmsg31& operator=(const carmsg31& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const carmsg31& default_instance();
  
  void Swap(carmsg31* other);
  
  // implements Message ----------------------------------------------
  
  carmsg31* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const carmsg31& from);
  void MergeFrom(const carmsg31& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:carmsg31)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static carmsg31* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeVocationInfoReq : public ::google::protobuf::Message {
 public:
  CSExchangeVocationInfoReq();
  virtual ~CSExchangeVocationInfoReq();
  
  CSExchangeVocationInfoReq(const CSExchangeVocationInfoReq& from);
  
  inline CSExchangeVocationInfoReq& operator=(const CSExchangeVocationInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeVocationInfoReq& default_instance();
  
  void Swap(CSExchangeVocationInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeVocationInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeVocationInfoReq& from);
  void MergeFrom(const CSExchangeVocationInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 params = 1;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();
  
  // @@protoc_insertion_point(class_scope:CSExchangeVocationInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeVocationInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class VocationInfo_Item : public ::google::protobuf::Message {
 public:
  VocationInfo_Item();
  virtual ~VocationInfo_Item();
  
  VocationInfo_Item(const VocationInfo_Item& from);
  
  inline VocationInfo_Item& operator=(const VocationInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VocationInfo_Item& default_instance();
  
  void Swap(VocationInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  VocationInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VocationInfo_Item& from);
  void MergeFrom(const VocationInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:VocationInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static VocationInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class VocationInfo : public ::google::protobuf::Message {
 public:
  VocationInfo();
  virtual ~VocationInfo();
  
  VocationInfo(const VocationInfo& from);
  
  inline VocationInfo& operator=(const VocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VocationInfo& default_instance();
  
  void Swap(VocationInfo* other);
  
  // implements Message ----------------------------------------------
  
  VocationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VocationInfo& from);
  void MergeFrom(const VocationInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef VocationInfo_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 vocation = 2;
  inline bool has_vocation() const;
  inline void clear_vocation();
  static const int kVocationFieldNumber = 2;
  inline ::google::protobuf::uint32 vocation() const;
  inline void set_vocation(::google::protobuf::uint32 value);
  
  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated .VocationInfo.Item reward_items = 4;
  inline int reward_items_size() const;
  inline void clear_reward_items();
  static const int kRewardItemsFieldNumber = 4;
  inline const ::VocationInfo_Item& reward_items(int index) const;
  inline ::VocationInfo_Item* mutable_reward_items(int index);
  inline ::VocationInfo_Item* add_reward_items();
  inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >&
      reward_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >*
      mutable_reward_items();
  
  // repeated .VocationInfo.Item cost_items = 5;
  inline int cost_items_size() const;
  inline void clear_cost_items();
  static const int kCostItemsFieldNumber = 5;
  inline const ::VocationInfo_Item& cost_items(int index) const;
  inline ::VocationInfo_Item* mutable_cost_items(int index);
  inline ::VocationInfo_Item* add_cost_items();
  inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >&
      cost_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >*
      mutable_cost_items();
  
  // required uint32 physical_attack = 6;
  inline bool has_physical_attack() const;
  inline void clear_physical_attack();
  static const int kPhysicalAttackFieldNumber = 6;
  inline ::google::protobuf::uint32 physical_attack() const;
  inline void set_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 magic_attack = 7;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 7;
  inline ::google::protobuf::uint32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 skill_attack = 8;
  inline bool has_skill_attack() const;
  inline void clear_skill_attack();
  static const int kSkillAttackFieldNumber = 8;
  inline ::google::protobuf::uint32 skill_attack() const;
  inline void set_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 physical_defence = 9;
  inline bool has_physical_defence() const;
  inline void clear_physical_defence();
  static const int kPhysicalDefenceFieldNumber = 9;
  inline ::google::protobuf::uint32 physical_defence() const;
  inline void set_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 magic_defence = 10;
  inline bool has_magic_defence() const;
  inline void clear_magic_defence();
  static const int kMagicDefenceFieldNumber = 10;
  inline ::google::protobuf::uint32 magic_defence() const;
  inline void set_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 skill_defence = 11;
  inline bool has_skill_defence() const;
  inline void clear_skill_defence();
  static const int kSkillDefenceFieldNumber = 11;
  inline ::google::protobuf::uint32 skill_defence() const;
  inline void set_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 health_point = 12;
  inline bool has_health_point() const;
  inline void clear_health_point();
  static const int kHealthPointFieldNumber = 12;
  inline ::google::protobuf::uint32 health_point() const;
  inline void set_health_point(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:VocationInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_vocation();
  inline void clear_has_vocation();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_physical_attack();
  inline void clear_has_physical_attack();
  inline void set_has_magic_attack();
  inline void clear_has_magic_attack();
  inline void set_has_skill_attack();
  inline void clear_has_skill_attack();
  inline void set_has_physical_defence();
  inline void clear_has_physical_defence();
  inline void set_has_magic_defence();
  inline void clear_has_magic_defence();
  inline void set_has_skill_defence();
  inline void clear_has_skill_defence();
  inline void set_has_health_point();
  inline void clear_has_health_point();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 vocation_;
  ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item > reward_items_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 physical_attack_;
  ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item > cost_items_;
  ::google::protobuf::uint32 magic_attack_;
  ::google::protobuf::uint32 skill_attack_;
  ::google::protobuf::uint32 physical_defence_;
  ::google::protobuf::uint32 magic_defence_;
  ::google::protobuf::uint32 skill_defence_;
  ::google::protobuf::uint32 health_point_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static VocationInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeVocationInfoRsp : public ::google::protobuf::Message {
 public:
  CSExchangeVocationInfoRsp();
  virtual ~CSExchangeVocationInfoRsp();
  
  CSExchangeVocationInfoRsp(const CSExchangeVocationInfoRsp& from);
  
  inline CSExchangeVocationInfoRsp& operator=(const CSExchangeVocationInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeVocationInfoRsp& default_instance();
  
  void Swap(CSExchangeVocationInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeVocationInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeVocationInfoRsp& from);
  void MergeFrom(const CSExchangeVocationInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .VocationInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::VocationInfo& infos(int index) const;
  inline ::VocationInfo* mutable_infos(int index);
  inline ::VocationInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::VocationInfo >*
      mutable_infos();
  
  // @@protoc_insertion_point(class_scope:CSExchangeVocationInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::VocationInfo > infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeVocationInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeVocationReq : public ::google::protobuf::Message {
 public:
  CSExchangeVocationReq();
  virtual ~CSExchangeVocationReq();
  
  CSExchangeVocationReq(const CSExchangeVocationReq& from);
  
  inline CSExchangeVocationReq& operator=(const CSExchangeVocationReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeVocationReq& default_instance();
  
  void Swap(CSExchangeVocationReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeVocationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeVocationReq& from);
  void MergeFrom(const CSExchangeVocationReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeVocationReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeVocationReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeVocationRsp : public ::google::protobuf::Message {
 public:
  CSExchangeVocationRsp();
  virtual ~CSExchangeVocationRsp();
  
  CSExchangeVocationRsp(const CSExchangeVocationRsp& from);
  
  inline CSExchangeVocationRsp& operator=(const CSExchangeVocationRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeVocationRsp& default_instance();
  
  void Swap(CSExchangeVocationRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeVocationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeVocationRsp& from);
  void MergeFrom(const CSExchangeVocationRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExchangeVocationRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeVocationRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// BasicUserBattleInfo

// required uint32 physical_attack = 1;
inline bool BasicUserBattleInfo::has_physical_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserBattleInfo::clear_has_physical_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserBattleInfo::clear_physical_attack() {
  physical_attack_ = 0u;
  clear_has_physical_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_attack() const {
  return physical_attack_;
}
inline void BasicUserBattleInfo::set_physical_attack(::google::protobuf::uint32 value) {
  set_has_physical_attack();
  physical_attack_ = value;
}

// required uint32 magic_attack = 2;
inline bool BasicUserBattleInfo::has_magic_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserBattleInfo::clear_has_magic_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserBattleInfo::clear_magic_attack() {
  magic_attack_ = 0u;
  clear_has_magic_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_attack() const {
  return magic_attack_;
}
inline void BasicUserBattleInfo::set_magic_attack(::google::protobuf::uint32 value) {
  set_has_magic_attack();
  magic_attack_ = value;
}

// required uint32 skill_attack = 3;
inline bool BasicUserBattleInfo::has_skill_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserBattleInfo::clear_has_skill_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserBattleInfo::clear_skill_attack() {
  skill_attack_ = 0u;
  clear_has_skill_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_attack() const {
  return skill_attack_;
}
inline void BasicUserBattleInfo::set_skill_attack(::google::protobuf::uint32 value) {
  set_has_skill_attack();
  skill_attack_ = value;
}

// required uint32 physical_defence = 4;
inline bool BasicUserBattleInfo::has_physical_defence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_defence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserBattleInfo::clear_has_physical_defence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserBattleInfo::clear_physical_defence() {
  physical_defence_ = 0u;
  clear_has_physical_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_defence() const {
  return physical_defence_;
}
inline void BasicUserBattleInfo::set_physical_defence(::google::protobuf::uint32 value) {
  set_has_physical_defence();
  physical_defence_ = value;
}

// required uint32 magic_defence = 5;
inline bool BasicUserBattleInfo::has_magic_defence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_defence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserBattleInfo::clear_has_magic_defence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserBattleInfo::clear_magic_defence() {
  magic_defence_ = 0u;
  clear_has_magic_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_defence() const {
  return magic_defence_;
}
inline void BasicUserBattleInfo::set_magic_defence(::google::protobuf::uint32 value) {
  set_has_magic_defence();
  magic_defence_ = value;
}

// required uint32 skill_defence = 6;
inline bool BasicUserBattleInfo::has_skill_defence() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_defence() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserBattleInfo::clear_has_skill_defence() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserBattleInfo::clear_skill_defence() {
  skill_defence_ = 0u;
  clear_has_skill_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_defence() const {
  return skill_defence_;
}
inline void BasicUserBattleInfo::set_skill_defence(::google::protobuf::uint32 value) {
  set_has_skill_defence();
  skill_defence_ = value;
}

// required uint32 health_point = 7;
inline bool BasicUserBattleInfo::has_health_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserBattleInfo::set_has_health_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserBattleInfo::clear_has_health_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserBattleInfo::clear_health_point() {
  health_point_ = 0u;
  clear_has_health_point();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::health_point() const {
  return health_point_;
}
inline void BasicUserBattleInfo::set_health_point(::google::protobuf::uint32 value) {
  set_has_health_point();
  health_point_ = value;
}

// required uint32 accurate = 8;
inline bool BasicUserBattleInfo::has_accurate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserBattleInfo::set_has_accurate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserBattleInfo::clear_has_accurate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserBattleInfo::clear_accurate() {
  accurate_ = 0u;
  clear_has_accurate();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::accurate() const {
  return accurate_;
}
inline void BasicUserBattleInfo::set_accurate(::google::protobuf::uint32 value) {
  set_has_accurate();
  accurate_ = value;
}

// required uint32 dodge = 9;
inline bool BasicUserBattleInfo::has_dodge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserBattleInfo::set_has_dodge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserBattleInfo::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserBattleInfo::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::dodge() const {
  return dodge_;
}
inline void BasicUserBattleInfo::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// required uint32 wreck = 10;
inline bool BasicUserBattleInfo::has_wreck() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserBattleInfo::set_has_wreck() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserBattleInfo::clear_has_wreck() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserBattleInfo::clear_wreck() {
  wreck_ = 0u;
  clear_has_wreck();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::wreck() const {
  return wreck_;
}
inline void BasicUserBattleInfo::set_wreck(::google::protobuf::uint32 value) {
  set_has_wreck();
  wreck_ = value;
}

// required uint32 parry = 11;
inline bool BasicUserBattleInfo::has_parry() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserBattleInfo::set_has_parry() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserBattleInfo::clear_has_parry() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserBattleInfo::clear_parry() {
  parry_ = 0u;
  clear_has_parry();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::parry() const {
  return parry_;
}
inline void BasicUserBattleInfo::set_parry(::google::protobuf::uint32 value) {
  set_has_parry();
  parry_ = value;
}

// required uint32 critical_strike = 12;
inline bool BasicUserBattleInfo::has_critical_strike() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicUserBattleInfo::set_has_critical_strike() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicUserBattleInfo::clear_has_critical_strike() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicUserBattleInfo::clear_critical_strike() {
  critical_strike_ = 0u;
  clear_has_critical_strike();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::critical_strike() const {
  return critical_strike_;
}
inline void BasicUserBattleInfo::set_critical_strike(::google::protobuf::uint32 value) {
  set_has_critical_strike();
  critical_strike_ = value;
}

// required uint32 tenacity = 13;
inline bool BasicUserBattleInfo::has_tenacity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicUserBattleInfo::set_has_tenacity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicUserBattleInfo::clear_has_tenacity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicUserBattleInfo::clear_tenacity() {
  tenacity_ = 0u;
  clear_has_tenacity();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::tenacity() const {
  return tenacity_;
}
inline void BasicUserBattleInfo::set_tenacity(::google::protobuf::uint32 value) {
  set_has_tenacity();
  tenacity_ = value;
}

// required uint32 slay = 14;
inline bool BasicUserBattleInfo::has_slay() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BasicUserBattleInfo::set_has_slay() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BasicUserBattleInfo::clear_has_slay() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BasicUserBattleInfo::clear_slay() {
  slay_ = 0u;
  clear_has_slay();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::slay() const {
  return slay_;
}
inline void BasicUserBattleInfo::set_slay(::google::protobuf::uint32 value) {
  set_has_slay();
  slay_ = value;
}

// required uint32 courage = 15;
inline bool BasicUserBattleInfo::has_courage() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BasicUserBattleInfo::set_has_courage() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BasicUserBattleInfo::clear_has_courage() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BasicUserBattleInfo::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::courage() const {
  return courage_;
}
inline void BasicUserBattleInfo::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 16;
inline bool BasicUserBattleInfo::has_charm() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BasicUserBattleInfo::set_has_charm() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BasicUserBattleInfo::clear_has_charm() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BasicUserBattleInfo::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::charm() const {
  return charm_;
}
inline void BasicUserBattleInfo::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 17;
inline bool BasicUserBattleInfo::has_trick() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BasicUserBattleInfo::set_has_trick() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BasicUserBattleInfo::clear_has_trick() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BasicUserBattleInfo::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::trick() const {
  return trick_;
}
inline void BasicUserBattleInfo::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// required uint32 speed = 18;
inline bool BasicUserBattleInfo::has_speed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BasicUserBattleInfo::set_has_speed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BasicUserBattleInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BasicUserBattleInfo::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::speed() const {
  return speed_;
}
inline void BasicUserBattleInfo::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// required uint32 proficiency = 19;
inline bool BasicUserBattleInfo::has_proficiency() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BasicUserBattleInfo::set_has_proficiency() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BasicUserBattleInfo::clear_has_proficiency() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BasicUserBattleInfo::clear_proficiency() {
  proficiency_ = 0u;
  clear_has_proficiency();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::proficiency() const {
  return proficiency_;
}
inline void BasicUserBattleInfo::set_proficiency(::google::protobuf::uint32 value) {
  set_has_proficiency();
  proficiency_ = value;
}

// optional uint32 current_hp = 20;
inline bool BasicUserBattleInfo::has_current_hp() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BasicUserBattleInfo::set_has_current_hp() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BasicUserBattleInfo::clear_has_current_hp() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BasicUserBattleInfo::clear_current_hp() {
  current_hp_ = 0u;
  clear_has_current_hp();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::current_hp() const {
  return current_hp_;
}
inline void BasicUserBattleInfo::set_current_hp(::google::protobuf::uint32 value) {
  set_has_current_hp();
  current_hp_ = value;
}

// -------------------------------------------------------------------

// UserSkillPart

// required uint32 part = 1;
inline bool UserSkillPart::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillPart::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillPart::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillPart::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 UserSkillPart::part() const {
  return part_;
}
inline void UserSkillPart::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required .BasicUserBattleInfo exp_battle_info = 2;
inline bool UserSkillPart::has_exp_battle_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillPart::set_has_exp_battle_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillPart::clear_has_exp_battle_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillPart::clear_exp_battle_info() {
  if (exp_battle_info_ != NULL) exp_battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_exp_battle_info();
}
inline const ::BasicUserBattleInfo& UserSkillPart::exp_battle_info() const {
  return exp_battle_info_ != NULL ? *exp_battle_info_ : *default_instance_->exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::mutable_exp_battle_info() {
  set_has_exp_battle_info();
  if (exp_battle_info_ == NULL) exp_battle_info_ = new ::BasicUserBattleInfo;
  return exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::release_exp_battle_info() {
  clear_has_exp_battle_info();
  ::BasicUserBattleInfo* temp = exp_battle_info_;
  exp_battle_info_ = NULL;
  return temp;
}

// required float continue_time = 5;
inline bool UserSkillPart::has_continue_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillPart::set_has_continue_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillPart::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillPart::clear_continue_time() {
  continue_time_ = 0;
  clear_has_continue_time();
}
inline float UserSkillPart::continue_time() const {
  return continue_time_;
}
inline void UserSkillPart::set_continue_time(float value) {
  set_has_continue_time();
  continue_time_ = value;
}

// required uint32 can_attack_number = 6;
inline bool UserSkillPart::has_can_attack_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillPart::set_has_can_attack_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillPart::clear_has_can_attack_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillPart::clear_can_attack_number() {
  can_attack_number_ = 0u;
  clear_has_can_attack_number();
}
inline ::google::protobuf::uint32 UserSkillPart::can_attack_number() const {
  return can_attack_number_;
}
inline void UserSkillPart::set_can_attack_number(::google::protobuf::uint32 value) {
  set_has_can_attack_number();
  can_attack_number_ = value;
}

// required uint32 hurt = 7;
inline bool UserSkillPart::has_hurt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillPart::set_has_hurt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillPart::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillPart::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 UserSkillPart::hurt() const {
  return hurt_;
}
inline void UserSkillPart::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
}

// required float continue_time2 = 8;
inline bool UserSkillPart::has_continue_time2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSkillPart::set_has_continue_time2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSkillPart::clear_has_continue_time2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSkillPart::clear_continue_time2() {
  continue_time2_ = 0;
  clear_has_continue_time2();
}
inline float UserSkillPart::continue_time2() const {
  return continue_time2_;
}
inline void UserSkillPart::set_continue_time2(float value) {
  set_has_continue_time2();
  continue_time2_ = value;
}

// -------------------------------------------------------------------

// UserSkillInfo

// required uint32 skill_id = 1;
inline bool UserSkillInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillInfo::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_id() const {
  return skill_id_;
}
inline void UserSkillInfo::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 level = 2;
inline bool UserSkillInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::level() const {
  return level_;
}
inline void UserSkillInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 part = 3;
inline bool UserSkillInfo::has_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillInfo::set_has_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillInfo::clear_has_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillInfo::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 UserSkillInfo::part() const {
  return part_;
}
inline void UserSkillInfo::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required uint32 skill_level = 4;
inline bool UserSkillInfo::has_skill_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillInfo::set_has_skill_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillInfo::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillInfo::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_level() const {
  return skill_level_;
}
inline void UserSkillInfo::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// required uint32 money = 5;
inline bool UserSkillInfo::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillInfo::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillInfo::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 UserSkillInfo::money() const {
  return money_;
}
inline void UserSkillInfo::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// required uint32 exploit = 6;
inline bool UserSkillInfo::has_exploit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSkillInfo::set_has_exploit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSkillInfo::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSkillInfo::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 UserSkillInfo::exploit() const {
  return exploit_;
}
inline void UserSkillInfo::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// required float own_cd = 7;
inline bool UserSkillInfo::has_own_cd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserSkillInfo::set_has_own_cd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserSkillInfo::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserSkillInfo::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline float UserSkillInfo::own_cd() const {
  return own_cd_;
}
inline void UserSkillInfo::set_own_cd(float value) {
  set_has_own_cd();
  own_cd_ = value;
}

// required float share_cd = 8;
inline bool UserSkillInfo::has_share_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserSkillInfo::set_has_share_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserSkillInfo::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserSkillInfo::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline float UserSkillInfo::share_cd() const {
  return share_cd_;
}
inline void UserSkillInfo::set_share_cd(float value) {
  set_has_share_cd();
  share_cd_ = value;
}

// repeated .UserSkillPart parts = 9;
inline int UserSkillInfo::parts_size() const {
  return parts_.size();
}
inline void UserSkillInfo::clear_parts() {
  parts_.Clear();
}
inline const ::UserSkillPart& UserSkillInfo::parts(int index) const {
  return parts_.Get(index);
}
inline ::UserSkillPart* UserSkillInfo::mutable_parts(int index) {
  return parts_.Mutable(index);
}
inline ::UserSkillPart* UserSkillInfo::add_parts() {
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
UserSkillInfo::parts() const {
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
UserSkillInfo::mutable_parts() {
  return &parts_;
}

// required uint32 max_level = 10;
inline bool UserSkillInfo::has_max_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserSkillInfo::set_has_max_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserSkillInfo::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserSkillInfo::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::max_level() const {
  return max_level_;
}
inline void UserSkillInfo::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// BasicUserInfo

// required uint32 uid = 1;
inline bool BasicUserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BasicUserInfo::uid() const {
  return uid_;
}
inline void BasicUserInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool BasicUserInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 BasicUserInfo::reg_time() const {
  return reg_time_;
}
inline void BasicUserInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool BasicUserInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 BasicUserInfo::channel_id() const {
  return channel_id_;
}
inline void BasicUserInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool BasicUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BasicUserInfo::name() const {
  return *name_;
}
inline void BasicUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BasicUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BasicUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 type = 5;
inline bool BasicUserInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BasicUserInfo::type() const {
  return type_;
}
inline void BasicUserInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 gender = 6;
inline bool BasicUserInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserInfo::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 BasicUserInfo::gender() const {
  return gender_;
}
inline void BasicUserInfo::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// required uint32 lv = 7;
inline bool BasicUserInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::lv() const {
  return lv_;
}
inline void BasicUserInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 xpos = 8;
inline bool BasicUserInfo::has_xpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserInfo::set_has_xpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserInfo::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserInfo::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 BasicUserInfo::xpos() const {
  return xpos_;
}
inline void BasicUserInfo::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 9;
inline bool BasicUserInfo::has_ypos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserInfo::set_has_ypos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserInfo::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserInfo::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 BasicUserInfo::ypos() const {
  return ypos_;
}
inline void BasicUserInfo::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 10;
inline bool BasicUserInfo::has_orient() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserInfo::set_has_orient() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserInfo::clear_has_orient() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserInfo::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 BasicUserInfo::orient() const {
  return orient_;
}
inline void BasicUserInfo::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// optional uint32 battle_side = 11;
inline bool BasicUserInfo::has_battle_side() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserInfo::set_has_battle_side() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserInfo::clear_has_battle_side() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserInfo::clear_battle_side() {
  battle_side_ = 0u;
  clear_has_battle_side();
}
inline ::google::protobuf::uint32 BasicUserInfo::battle_side() const {
  return battle_side_;
}
inline void BasicUserInfo::set_battle_side(::google::protobuf::uint32 value) {
  set_has_battle_side();
  battle_side_ = value;
}

// optional .BasicUserBattleInfo battle_info = 12;
inline bool BasicUserInfo::has_battle_info() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicUserInfo::set_has_battle_info() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicUserInfo::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicUserInfo::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& BasicUserInfo::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// required uint32 next_lv = 13;
inline bool BasicUserInfo::has_next_lv() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicUserInfo::set_has_next_lv() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicUserInfo::clear_has_next_lv() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicUserInfo::clear_next_lv() {
  next_lv_ = 0u;
  clear_has_next_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::next_lv() const {
  return next_lv_;
}
inline void BasicUserInfo::set_next_lv(::google::protobuf::uint32 value) {
  set_has_next_lv();
  next_lv_ = value;
}

// optional uint32 vip_lv = 14;
inline bool BasicUserInfo::has_vip_lv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BasicUserInfo::set_has_vip_lv() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BasicUserInfo::clear_has_vip_lv() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BasicUserInfo::clear_vip_lv() {
  vip_lv_ = 0u;
  clear_has_vip_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::vip_lv() const {
  return vip_lv_;
}
inline void BasicUserInfo::set_vip_lv(::google::protobuf::uint32 value) {
  set_has_vip_lv();
  vip_lv_ = value;
}

// optional bool red_name = 15;
inline bool BasicUserInfo::has_red_name() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BasicUserInfo::set_has_red_name() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BasicUserInfo::clear_has_red_name() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BasicUserInfo::clear_red_name() {
  red_name_ = false;
  clear_has_red_name();
}
inline bool BasicUserInfo::red_name() const {
  return red_name_;
}
inline void BasicUserInfo::set_red_name(bool value) {
  set_has_red_name();
  red_name_ = value;
}

// optional uint32 effectiveness = 16;
inline bool BasicUserInfo::has_effectiveness() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BasicUserInfo::set_has_effectiveness() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BasicUserInfo::clear_has_effectiveness() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BasicUserInfo::clear_effectiveness() {
  effectiveness_ = 0u;
  clear_has_effectiveness();
}
inline ::google::protobuf::uint32 BasicUserInfo::effectiveness() const {
  return effectiveness_;
}
inline void BasicUserInfo::set_effectiveness(::google::protobuf::uint32 value) {
  set_has_effectiveness();
  effectiveness_ = value;
}

// optional uint32 globalid = 17;
inline bool BasicUserInfo::has_globalid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BasicUserInfo::set_has_globalid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BasicUserInfo::clear_has_globalid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BasicUserInfo::clear_globalid() {
  globalid_ = 0u;
  clear_has_globalid();
}
inline ::google::protobuf::uint32 BasicUserInfo::globalid() const {
  return globalid_;
}
inline void BasicUserInfo::set_globalid(::google::protobuf::uint32 value) {
  set_has_globalid();
  globalid_ = value;
}

// optional uint32 gid_high = 18;
inline bool BasicUserInfo::has_gid_high() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BasicUserInfo::set_has_gid_high() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BasicUserInfo::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BasicUserInfo::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 BasicUserInfo::gid_high() const {
  return gid_high_;
}
inline void BasicUserInfo::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// optional uint32 gid_low = 19;
inline bool BasicUserInfo::has_gid_low() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BasicUserInfo::set_has_gid_low() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BasicUserInfo::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BasicUserInfo::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 BasicUserInfo::gid_low() const {
  return gid_low_;
}
inline void BasicUserInfo::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// optional bytes gname = 20;
inline bool BasicUserInfo::has_gname() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BasicUserInfo::set_has_gname() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BasicUserInfo::clear_has_gname() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BasicUserInfo::clear_gname() {
  if (gname_ != &::google::protobuf::internal::kEmptyString) {
    gname_->clear();
  }
  clear_has_gname();
}
inline const ::std::string& BasicUserInfo::gname() const {
  return *gname_;
}
inline void BasicUserInfo::set_gname(const ::std::string& value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void BasicUserInfo::set_gname(const char* value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void BasicUserInfo::set_gname(const void* value, size_t size) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BasicUserInfo::mutable_gname() {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  return gname_;
}
inline ::std::string* BasicUserInfo::release_gname() {
  clear_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gname_;
    gname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 gstatus = 21;
inline bool BasicUserInfo::has_gstatus() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BasicUserInfo::set_has_gstatus() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BasicUserInfo::clear_has_gstatus() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BasicUserInfo::clear_gstatus() {
  gstatus_ = 0u;
  clear_has_gstatus();
}
inline ::google::protobuf::uint32 BasicUserInfo::gstatus() const {
  return gstatus_;
}
inline void BasicUserInfo::set_gstatus(::google::protobuf::uint32 value) {
  set_has_gstatus();
  gstatus_ = value;
}

// optional uint32 current_title = 22;
inline bool BasicUserInfo::has_current_title() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BasicUserInfo::set_has_current_title() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BasicUserInfo::clear_has_current_title() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BasicUserInfo::clear_current_title() {
  current_title_ = 0u;
  clear_has_current_title();
}
inline ::google::protobuf::uint32 BasicUserInfo::current_title() const {
  return current_title_;
}
inline void BasicUserInfo::set_current_title(::google::protobuf::uint32 value) {
  set_has_current_title();
  current_title_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapReq

// required uint32 mapid = 1;
inline bool CSEnterMapReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapReq::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapReq::mapid() const {
  return mapid_;
}
inline void CSEnterMapReq::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 xpos = 2;
inline bool CSEnterMapReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::xpos() const {
  return xpos_;
}
inline void CSEnterMapReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 3;
inline bool CSEnterMapReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEnterMapReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEnterMapReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEnterMapReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::ypos() const {
  return ypos_;
}
inline void CSEnterMapReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 4;
inline bool CSEnterMapReq::has_orient() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEnterMapReq::set_has_orient() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEnterMapReq::clear_has_orient() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEnterMapReq::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 CSEnterMapReq::orient() const {
  return orient_;
}
inline void CSEnterMapReq::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapRsp

// required uint32 mapid = 1;
inline bool CSEnterMapRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapRsp::mapid() const {
  return mapid_;
}
inline void CSEnterMapRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .BasicUserInfo userinfo = 2;
inline bool CSEnterMapRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSEnterMapRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSLeaveMapRsp

// required uint32 uid = 1;
inline bool CSLeaveMapRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLeaveMapRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLeaveMapRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLeaveMapRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::uid() const {
  return uid_;
}
inline void CSLeaveMapRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSLeaveMapRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSLeaveMapRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSLeaveMapRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSLeaveMapRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::reg_time() const {
  return reg_time_;
}
inline void CSLeaveMapRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSLeaveMapRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSLeaveMapRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSLeaveMapRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSLeaveMapRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::channel_id() const {
  return channel_id_;
}
inline void CSLeaveMapRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetMapUsersReq

// -------------------------------------------------------------------

// CSGetMapUsersRsp

// repeated .BasicUserInfo userinfo = 1;
inline int CSGetMapUsersRsp::userinfo_size() const {
  return userinfo_.size();
}
inline void CSGetMapUsersRsp::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::BasicUserInfo& CSGetMapUsersRsp::userinfo(int index) const {
  return userinfo_.Get(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::mutable_userinfo(int index) {
  return userinfo_.Mutable(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::add_userinfo() {
  return userinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
CSGetMapUsersRsp::userinfo() const {
  return userinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
CSGetMapUsersRsp::mutable_userinfo() {
  return &userinfo_;
}

// -------------------------------------------------------------------

// CSGetUserSkillReq

// required uint32 userid = 1;
inline bool CSGetUserSkillReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::userid() const {
  return userid_;
}
inline void CSGetUserSkillReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserSkillReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserSkillReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserSkillReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserSkillReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserSkillReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserSkillReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserSkillReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserSkillReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserSkillReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserSkillReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserSkillRsp

// required uint32 userid = 1;
inline bool CSGetUserSkillRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::userid() const {
  return userid_;
}
inline void CSGetUserSkillRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserSkillRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserSkillRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserSkillRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserSkillRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserSkillRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserSkillRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserSkillRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserSkillRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserSkillRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserSkillRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .UserSkillInfo userskills = 4;
inline int CSGetUserSkillRsp::userskills_size() const {
  return userskills_.size();
}
inline void CSGetUserSkillRsp::clear_userskills() {
  userskills_.Clear();
}
inline const ::UserSkillInfo& CSGetUserSkillRsp::userskills(int index) const {
  return userskills_.Get(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::mutable_userskills(int index) {
  return userskills_.Mutable(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::add_userskills() {
  return userskills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
CSGetUserSkillRsp::userskills() const {
  return userskills_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
CSGetUserSkillRsp::mutable_userskills() {
  return &userskills_;
}

// repeated uint32 ready = 5;
inline int CSGetUserSkillRsp::ready_size() const {
  return ready_.size();
}
inline void CSGetUserSkillRsp::clear_ready() {
  ready_.Clear();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::ready(int index) const {
  return ready_.Get(index);
}
inline void CSGetUserSkillRsp::set_ready(int index, ::google::protobuf::uint32 value) {
  ready_.Set(index, value);
}
inline void CSGetUserSkillRsp::add_ready(::google::protobuf::uint32 value) {
  ready_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetUserSkillRsp::ready() const {
  return ready_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetUserSkillRsp::mutable_ready() {
  return &ready_;
}

// -------------------------------------------------------------------

// CSGetUserInfoReq

// required uint32 userid = 1;
inline bool CSGetUserInfoReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::userid() const {
  return userid_;
}
inline void CSGetUserInfoReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserInfoReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserInfoReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserInfoReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserInfoReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserInfoReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserInfoReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserInfoReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserInfoReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserInfoReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserInfoReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserInfoRsp

// required uint32 userid = 1;
inline bool CSGetUserInfoRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::userid() const {
  return userid_;
}
inline void CSGetUserInfoRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserInfoRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserInfoRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserInfoRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserInfoRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserInfoRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserInfoRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserInfoRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserInfoRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserInfoRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserInfoRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .BasicUserInfo userinfo = 4;
inline bool CSGetUserInfoRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetUserInfoRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetUserInfoRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSGetUserInfoRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAddUserSkillReq

// required uint32 skill_id = 1;
inline bool CSAddUserSkillReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSAddUserSkillRsp

// required uint32 skill_id = 1;
inline bool CSAddUserSkillRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// required uint32 max_level = 3;
inline bool CSAddUserSkillRsp::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAddUserSkillRsp::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAddUserSkillRsp::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAddUserSkillRsp::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::max_level() const {
  return max_level_;
}
inline void CSAddUserSkillRsp::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffReq

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffRsp

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// optional uint32 money = 3;
inline bool CSUserSkillDiffRsp::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::money() const {
  return money_;
}
inline void CSUserSkillDiffRsp::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// optional uint32 exploit = 4;
inline bool CSUserSkillDiffRsp::has_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::exploit() const {
  return exploit_;
}
inline void CSUserSkillDiffRsp::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// optional uint32 lv = 5;
inline bool CSUserSkillDiffRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::lv() const {
  return lv_;
}
inline void CSUserSkillDiffRsp::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional .BasicUserBattleInfo battle_info = 6;
inline bool CSUserSkillDiffRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSUserSkillDiffRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// optional int32 own_cd = 7;
inline bool CSUserSkillDiffRsp::has_own_cd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_own_cd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::own_cd() const {
  return own_cd_;
}
inline void CSUserSkillDiffRsp::set_own_cd(::google::protobuf::int32 value) {
  set_has_own_cd();
  own_cd_ = value;
}

// optional int32 share_cd = 8;
inline bool CSUserSkillDiffRsp::has_share_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_share_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::share_cd() const {
  return share_cd_;
}
inline void CSUserSkillDiffRsp::set_share_cd(::google::protobuf::int32 value) {
  set_has_share_cd();
  share_cd_ = value;
}

// optional int32 hurt = 9;
inline bool CSUserSkillDiffRsp::has_hurt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_hurt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::hurt() const {
  return hurt_;
}
inline void CSUserSkillDiffRsp::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
}

// optional uint32 continue_time = 10;
inline bool CSUserSkillDiffRsp::has_continue_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_continue_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_continue_time() {
  continue_time_ = 0u;
  clear_has_continue_time();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::continue_time() const {
  return continue_time_;
}
inline void CSUserSkillDiffRsp::set_continue_time(::google::protobuf::uint32 value) {
  set_has_continue_time();
  continue_time_ = value;
}

// -------------------------------------------------------------------

// CSSkillUpdateValidRsq

// required bool valid = 1;
inline bool CSSkillUpdateValidRsq::has_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSkillUpdateValidRsq::set_has_valid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSkillUpdateValidRsq::clear_has_valid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSkillUpdateValidRsq::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool CSSkillUpdateValidRsq::valid() const {
  return valid_;
}
inline void CSSkillUpdateValidRsq::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
}

// -------------------------------------------------------------------

// CSWalkReq

// required uint32 xpos = 1;
inline bool CSWalkReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkReq::xpos() const {
  return xpos_;
}
inline void CSWalkReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 2;
inline bool CSWalkReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkReq::ypos() const {
  return ypos_;
}
inline void CSWalkReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 3;
inline bool CSWalkReq::has_animid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkReq::set_has_animid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkReq::clear_has_animid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkReq::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkReq::animid() const {
  return animid_;
}
inline void CSWalkReq::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 4;
inline bool CSWalkReq::has_flip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkReq::set_has_flip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkReq::clear_has_flip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkReq::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkReq::flip() const {
  return flip_;
}
inline void CSWalkReq::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSWalkRsp

// required uint32 uid = 1;
inline bool CSWalkRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSWalkRsp::uid() const {
  return uid_;
}
inline void CSWalkRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSWalkRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSWalkRsp::reg_time() const {
  return reg_time_;
}
inline void CSWalkRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSWalkRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSWalkRsp::channel_id() const {
  return channel_id_;
}
inline void CSWalkRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 xpos = 4;
inline bool CSWalkRsp::has_xpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkRsp::set_has_xpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkRsp::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkRsp::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkRsp::xpos() const {
  return xpos_;
}
inline void CSWalkRsp::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 5;
inline bool CSWalkRsp::has_ypos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSWalkRsp::set_has_ypos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSWalkRsp::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSWalkRsp::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkRsp::ypos() const {
  return ypos_;
}
inline void CSWalkRsp::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 6;
inline bool CSWalkRsp::has_animid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSWalkRsp::set_has_animid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSWalkRsp::clear_has_animid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSWalkRsp::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkRsp::animid() const {
  return animid_;
}
inline void CSWalkRsp::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 7;
inline bool CSWalkRsp::has_flip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSWalkRsp::set_has_flip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSWalkRsp::clear_has_flip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSWalkRsp::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkRsp::flip() const {
  return flip_;
}
inline void CSWalkRsp::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSItemAttr

// required uint32 attr_key = 1;
inline bool CSItemAttr::has_attr_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemAttr::set_has_attr_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemAttr::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemAttr::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_key() const {
  return attr_key_;
}
inline void CSItemAttr::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_basic_value = 2;
inline bool CSItemAttr::has_attr_basic_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemAttr::set_has_attr_basic_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemAttr::clear_has_attr_basic_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemAttr::clear_attr_basic_value() {
  attr_basic_value_ = 0u;
  clear_has_attr_basic_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_basic_value() const {
  return attr_basic_value_;
}
inline void CSItemAttr::set_attr_basic_value(::google::protobuf::uint32 value) {
  set_has_attr_basic_value();
  attr_basic_value_ = value;
}

// optional uint32 attr_intensify_value = 3;
inline bool CSItemAttr::has_attr_intensify_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemAttr::set_has_attr_intensify_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemAttr::clear_has_attr_intensify_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemAttr::clear_attr_intensify_value() {
  attr_intensify_value_ = 0u;
  clear_has_attr_intensify_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_intensify_value() const {
  return attr_intensify_value_;
}
inline void CSItemAttr::set_attr_intensify_value(::google::protobuf::uint32 value) {
  set_has_attr_intensify_value();
  attr_intensify_value_ = value;
}

// optional uint32 attr_gem_value = 4;
inline bool CSItemAttr::has_attr_gem_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemAttr::set_has_attr_gem_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemAttr::clear_has_attr_gem_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemAttr::clear_attr_gem_value() {
  attr_gem_value_ = 0u;
  clear_has_attr_gem_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_gem_value() const {
  return attr_gem_value_;
}
inline void CSItemAttr::set_attr_gem_value(::google::protobuf::uint32 value) {
  set_has_attr_gem_value();
  attr_gem_value_ = value;
}

// -------------------------------------------------------------------

// CSEquipHole

// required uint32 hole_index = 1;
inline bool CSEquipHole::has_hole_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipHole::set_has_hole_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipHole::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipHole::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipHole::hole_index() const {
  return hole_index_;
}
inline void CSEquipHole::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// required uint32 item_gem_id = 2;
inline bool CSEquipHole::has_item_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipHole::set_has_item_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipHole::clear_has_item_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipHole::clear_item_gem_id() {
  item_gem_id_ = 0u;
  clear_has_item_gem_id();
}
inline ::google::protobuf::uint32 CSEquipHole::item_gem_id() const {
  return item_gem_id_;
}
inline void CSEquipHole::set_item_gem_id(::google::protobuf::uint32 value) {
  set_has_item_gem_id();
  item_gem_id_ = value;
}

// required uint32 attr_key = 3;
inline bool CSEquipHole::has_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipHole::set_has_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipHole::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipHole::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_key() const {
  return attr_key_;
}
inline void CSEquipHole::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_value = 4;
inline bool CSEquipHole::has_attr_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEquipHole::set_has_attr_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEquipHole::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEquipHole::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_value() const {
  return attr_value_;
}
inline void CSEquipHole::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
}

// optional uint32 attr_min_v = 5;
inline bool CSEquipHole::has_attr_min_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSEquipHole::set_has_attr_min_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSEquipHole::clear_has_attr_min_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSEquipHole::clear_attr_min_v() {
  attr_min_v_ = 0u;
  clear_has_attr_min_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_min_v() const {
  return attr_min_v_;
}
inline void CSEquipHole::set_attr_min_v(::google::protobuf::uint32 value) {
  set_has_attr_min_v();
  attr_min_v_ = value;
}

// optional uint32 attr_max_v = 6;
inline bool CSEquipHole::has_attr_max_v() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSEquipHole::set_has_attr_max_v() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSEquipHole::clear_has_attr_max_v() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSEquipHole::clear_attr_max_v() {
  attr_max_v_ = 0u;
  clear_has_attr_max_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_max_v() const {
  return attr_max_v_;
}
inline void CSEquipHole::set_attr_max_v(::google::protobuf::uint32 value) {
  set_has_attr_max_v();
  attr_max_v_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase_Item_Attr

// required uint32 key = 1;
inline bool EquipmentBase_Item_Attr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::key() const {
  return key_;
}
inline void EquipmentBase_Item_Attr::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool EquipmentBase_Item_Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::value() const {
  return value_;
}
inline void EquipmentBase_Item_Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase

// required uint32 cost_levelup = 1;
inline bool EquipmentBase::has_cost_levelup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase::set_has_cost_levelup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase::clear_has_cost_levelup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase::clear_cost_levelup() {
  cost_levelup_ = 0u;
  clear_has_cost_levelup();
}
inline ::google::protobuf::uint32 EquipmentBase::cost_levelup() const {
  return cost_levelup_;
}
inline void EquipmentBase::set_cost_levelup(::google::protobuf::uint32 value) {
  set_has_cost_levelup();
  cost_levelup_ = value;
}

// repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
inline int EquipmentBase::incr_attr_next_lv_size() const {
  return incr_attr_next_lv_.size();
}
inline void EquipmentBase::clear_incr_attr_next_lv() {
  incr_attr_next_lv_.Clear();
}
inline const ::EquipmentBase_Item_Attr& EquipmentBase::incr_attr_next_lv(int index) const {
  return incr_attr_next_lv_.Get(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::mutable_incr_attr_next_lv(int index) {
  return incr_attr_next_lv_.Mutable(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::add_incr_attr_next_lv() {
  return incr_attr_next_lv_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
EquipmentBase::incr_attr_next_lv() const {
  return incr_attr_next_lv_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
EquipmentBase::mutable_incr_attr_next_lv() {
  return &incr_attr_next_lv_;
}

// repeated .CSEquipHole equip_holes = 3;
inline int EquipmentBase::equip_holes_size() const {
  return equip_holes_.size();
}
inline void EquipmentBase::clear_equip_holes() {
  equip_holes_.Clear();
}
inline const ::CSEquipHole& EquipmentBase::equip_holes(int index) const {
  return equip_holes_.Get(index);
}
inline ::CSEquipHole* EquipmentBase::mutable_equip_holes(int index) {
  return equip_holes_.Mutable(index);
}
inline ::CSEquipHole* EquipmentBase::add_equip_holes() {
  return equip_holes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
EquipmentBase::equip_holes() const {
  return equip_holes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
EquipmentBase::mutable_equip_holes() {
  return &equip_holes_;
}

// repeated uint32 rel_ids = 4;
inline int EquipmentBase::rel_ids_size() const {
  return rel_ids_.size();
}
inline void EquipmentBase::clear_rel_ids() {
  rel_ids_.Clear();
}
inline ::google::protobuf::uint32 EquipmentBase::rel_ids(int index) const {
  return rel_ids_.Get(index);
}
inline void EquipmentBase::set_rel_ids(int index, ::google::protobuf::uint32 value) {
  rel_ids_.Set(index, value);
}
inline void EquipmentBase::add_rel_ids(::google::protobuf::uint32 value) {
  rel_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EquipmentBase::rel_ids() const {
  return rel_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EquipmentBase::mutable_rel_ids() {
  return &rel_ids_;
}

// -------------------------------------------------------------------

// SpiritStoneBase

// required uint32 consume = 1;
inline bool SpiritStoneBase::has_consume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritStoneBase::set_has_consume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritStoneBase::clear_has_consume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritStoneBase::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 SpiritStoneBase::consume() const {
  return consume_;
}
inline void SpiritStoneBase::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 2;
inline bool SpiritStoneBase::has_convert() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritStoneBase::set_has_convert() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritStoneBase::clear_has_convert() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritStoneBase::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 SpiritStoneBase::convert() const {
  return convert_;
}
inline void SpiritStoneBase::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// -------------------------------------------------------------------

// ManorBase

// required uint32 hunt_gain_coin = 1;
inline bool ManorBase::has_hunt_gain_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorBase::set_has_hunt_gain_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorBase::clear_has_hunt_gain_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorBase::clear_hunt_gain_coin() {
  hunt_gain_coin_ = 0u;
  clear_has_hunt_gain_coin();
}
inline ::google::protobuf::uint32 ManorBase::hunt_gain_coin() const {
  return hunt_gain_coin_;
}
inline void ManorBase::set_hunt_gain_coin(::google::protobuf::uint32 value) {
  set_has_hunt_gain_coin();
  hunt_gain_coin_ = value;
}

// required uint32 pick_gain_exp = 2;
inline bool ManorBase::has_pick_gain_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorBase::set_has_pick_gain_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorBase::clear_has_pick_gain_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorBase::clear_pick_gain_exp() {
  pick_gain_exp_ = 0u;
  clear_has_pick_gain_exp();
}
inline ::google::protobuf::uint32 ManorBase::pick_gain_exp() const {
  return pick_gain_exp_;
}
inline void ManorBase::set_pick_gain_exp(::google::protobuf::uint32 value) {
  set_has_pick_gain_exp();
  pick_gain_exp_ = value;
}

// -------------------------------------------------------------------

// CSItemInfo

// required uint32 pos = 1;
inline bool CSItemInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemInfo::pos() const {
  return pos_;
}
inline void CSItemInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemInfo::item_id() const {
  return item_id_;
}
inline void CSItemInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 3;
inline bool CSItemInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSItemInfo::item_num() const {
  return item_num_;
}
inline void CSItemInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 item_level = 4;
inline bool CSItemInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSItemInfo::item_level() const {
  return item_level_;
}
inline void CSItemInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// repeated .CSItemAttr item_attrs = 5;
inline int CSItemInfo::item_attrs_size() const {
  return item_attrs_.size();
}
inline void CSItemInfo::clear_item_attrs() {
  item_attrs_.Clear();
}
inline const ::CSItemAttr& CSItemInfo::item_attrs(int index) const {
  return item_attrs_.Get(index);
}
inline ::CSItemAttr* CSItemInfo::mutable_item_attrs(int index) {
  return item_attrs_.Mutable(index);
}
inline ::CSItemAttr* CSItemInfo::add_item_attrs() {
  return item_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
CSItemInfo::item_attrs() const {
  return item_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
CSItemInfo::mutable_item_attrs() {
  return &item_attrs_;
}

// optional .EquipmentBase equip_info = 6;
inline bool CSItemInfo::has_equip_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSItemInfo::set_has_equip_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSItemInfo::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSItemInfo::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::EquipmentBase::Clear();
  clear_has_equip_info();
}
inline const ::EquipmentBase& CSItemInfo::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::EquipmentBase* CSItemInfo::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::EquipmentBase;
  return equip_info_;
}
inline ::EquipmentBase* CSItemInfo::release_equip_info() {
  clear_has_equip_info();
  ::EquipmentBase* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}

// optional .SpiritStoneBase ss_info = 7;
inline bool CSItemInfo::has_ss_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSItemInfo::set_has_ss_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSItemInfo::clear_has_ss_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSItemInfo::clear_ss_info() {
  if (ss_info_ != NULL) ss_info_->::SpiritStoneBase::Clear();
  clear_has_ss_info();
}
inline const ::SpiritStoneBase& CSItemInfo::ss_info() const {
  return ss_info_ != NULL ? *ss_info_ : *default_instance_->ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::mutable_ss_info() {
  set_has_ss_info();
  if (ss_info_ == NULL) ss_info_ = new ::SpiritStoneBase;
  return ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::release_ss_info() {
  clear_has_ss_info();
  ::SpiritStoneBase* temp = ss_info_;
  ss_info_ = NULL;
  return temp;
}

// optional .ManorBase manor_info = 8;
inline bool CSItemInfo::has_manor_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSItemInfo::set_has_manor_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSItemInfo::clear_has_manor_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSItemInfo::clear_manor_info() {
  if (manor_info_ != NULL) manor_info_->::ManorBase::Clear();
  clear_has_manor_info();
}
inline const ::ManorBase& CSItemInfo::manor_info() const {
  return manor_info_ != NULL ? *manor_info_ : *default_instance_->manor_info_;
}
inline ::ManorBase* CSItemInfo::mutable_manor_info() {
  set_has_manor_info();
  if (manor_info_ == NULL) manor_info_ = new ::ManorBase;
  return manor_info_;
}
inline ::ManorBase* CSItemInfo::release_manor_info() {
  clear_has_manor_info();
  ::ManorBase* temp = manor_info_;
  manor_info_ = NULL;
  return temp;
}

// optional uint32 item_dead_tm = 9 [default = 2147483647];
inline bool CSItemInfo::has_item_dead_tm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSItemInfo::set_has_item_dead_tm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSItemInfo::clear_has_item_dead_tm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSItemInfo::clear_item_dead_tm() {
  item_dead_tm_ = 2147483647u;
  clear_has_item_dead_tm();
}
inline ::google::protobuf::uint32 CSItemInfo::item_dead_tm() const {
  return item_dead_tm_;
}
inline void CSItemInfo::set_item_dead_tm(::google::protobuf::uint32 value) {
  set_has_item_dead_tm();
  item_dead_tm_ = value;
}

// optional uint32 item_op_flag = 10 [default = 100];
inline bool CSItemInfo::has_item_op_flag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSItemInfo::set_has_item_op_flag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSItemInfo::clear_has_item_op_flag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSItemInfo::clear_item_op_flag() {
  item_op_flag_ = 100u;
  clear_has_item_op_flag();
}
inline ::google::protobuf::uint32 CSItemInfo::item_op_flag() const {
  return item_op_flag_;
}
inline void CSItemInfo::set_item_op_flag(::google::protobuf::uint32 value) {
  set_has_item_op_flag();
  item_op_flag_ = value;
}

// -------------------------------------------------------------------

// CSAllItemsReq

// -------------------------------------------------------------------

// CSAllItemsRsp

// required uint32 def_bag_size = 1;
inline bool CSAllItemsRsp::has_def_bag_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAllItemsRsp::set_has_def_bag_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAllItemsRsp::clear_has_def_bag_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAllItemsRsp::clear_def_bag_size() {
  def_bag_size_ = 0u;
  clear_has_def_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_bag_size() const {
  return def_bag_size_;
}
inline void CSAllItemsRsp::set_def_bag_size(::google::protobuf::uint32 value) {
  set_has_def_bag_size();
  def_bag_size_ = value;
}

// required uint32 def_store_size = 2;
inline bool CSAllItemsRsp::has_def_store_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAllItemsRsp::set_has_def_store_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAllItemsRsp::clear_has_def_store_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAllItemsRsp::clear_def_store_size() {
  def_store_size_ = 0u;
  clear_has_def_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_store_size() const {
  return def_store_size_;
}
inline void CSAllItemsRsp::set_def_store_size(::google::protobuf::uint32 value) {
  set_has_def_store_size();
  def_store_size_ = value;
}

// required uint32 def_ss_bag_size = 3;
inline bool CSAllItemsRsp::has_def_ss_bag_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_bag_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAllItemsRsp::clear_has_def_ss_bag_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAllItemsRsp::clear_def_ss_bag_size() {
  def_ss_bag_size_ = 0u;
  clear_has_def_ss_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_bag_size() const {
  return def_ss_bag_size_;
}
inline void CSAllItemsRsp::set_def_ss_bag_size(::google::protobuf::uint32 value) {
  set_has_def_ss_bag_size();
  def_ss_bag_size_ = value;
}

// required uint32 def_ss_store_size = 4;
inline bool CSAllItemsRsp::has_def_ss_store_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_store_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSAllItemsRsp::clear_has_def_ss_store_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSAllItemsRsp::clear_def_ss_store_size() {
  def_ss_store_size_ = 0u;
  clear_has_def_ss_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_store_size() const {
  return def_ss_store_size_;
}
inline void CSAllItemsRsp::set_def_ss_store_size(::google::protobuf::uint32 value) {
  set_has_def_ss_store_size();
  def_ss_store_size_ = value;
}

// required uint32 def_equip_lvup_max_cd_time = 5;
inline bool CSAllItemsRsp::has_def_equip_lvup_max_cd_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSAllItemsRsp::set_has_def_equip_lvup_max_cd_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSAllItemsRsp::clear_has_def_equip_lvup_max_cd_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSAllItemsRsp::clear_def_equip_lvup_max_cd_time() {
  def_equip_lvup_max_cd_time_ = 0u;
  clear_has_def_equip_lvup_max_cd_time();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_equip_lvup_max_cd_time() const {
  return def_equip_lvup_max_cd_time_;
}
inline void CSAllItemsRsp::set_def_equip_lvup_max_cd_time(::google::protobuf::uint32 value) {
  set_has_def_equip_lvup_max_cd_time();
  def_equip_lvup_max_cd_time_ = value;
}

// repeated .CSItemInfo items = 15;
inline int CSAllItemsRsp::items_size() const {
  return items_.size();
}
inline void CSAllItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSAllItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSAllItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSAllItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSAllItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSAllItemsRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemAddRsp

// repeated .CSItemInfo items = 1;
inline int CSItemAddRsp::items_size() const {
  return items_.size();
}
inline void CSItemAddRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSItemAddRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSItemAddRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSItemAddRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemAddRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemAddRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemRemoveReq

// required uint32 pos = 1;
inline bool CSItemRemoveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::pos() const {
  return pos_;
}
inline void CSItemRemoveReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::item_id() const {
  return item_id_;
}
inline void CSItemRemoveReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemRemoveRsp

// required uint32 pos = 1;
inline bool CSItemRemoveRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::pos() const {
  return pos_;
}
inline void CSItemRemoveRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::item_id() const {
  return item_id_;
}
inline void CSItemRemoveRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemUseReq

// required uint32 pos = 1;
inline bool CSItemUseReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemUseReq::pos() const {
  return pos_;
}
inline void CSItemUseReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemUseReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemUseReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemUseReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemUseReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemUseReq::item_id() const {
  return item_id_;
}
inline void CSItemUseReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 num = 3 [default = 1];
inline bool CSItemUseReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemUseReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemUseReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemUseReq::clear_num() {
  num_ = 1u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSItemUseReq::num() const {
  return num_;
}
inline void CSItemUseReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSItemUseRsp_Item

// required uint32 id = 1;
inline bool CSItemUseRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSItemUseRsp_Item::id() const {
  return id_;
}
inline void CSItemUseRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSItemUseRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemUseRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemUseRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemUseRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSItemUseRsp_Item::num() const {
  return num_;
}
inline void CSItemUseRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSItemUseRsp

// required uint32 item_id = 1;
inline bool CSItemUseRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemUseRsp::item_id() const {
  return item_id_;
}
inline void CSItemUseRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// repeated .CSItemUseRsp.Item to_items = 2;
inline int CSItemUseRsp::to_items_size() const {
  return to_items_.size();
}
inline void CSItemUseRsp::clear_to_items() {
  to_items_.Clear();
}
inline const ::CSItemUseRsp_Item& CSItemUseRsp::to_items(int index) const {
  return to_items_.Get(index);
}
inline ::CSItemUseRsp_Item* CSItemUseRsp::mutable_to_items(int index) {
  return to_items_.Mutable(index);
}
inline ::CSItemUseRsp_Item* CSItemUseRsp::add_to_items() {
  return to_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemUseRsp_Item >&
CSItemUseRsp::to_items() const {
  return to_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemUseRsp_Item >*
CSItemUseRsp::mutable_to_items() {
  return &to_items_;
}

// -------------------------------------------------------------------

// CSItemMoveReq

// required uint32 pos_from = 1;
inline bool CSItemMoveReq::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveReq::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveReq::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveReq::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveReq::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveReq::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveReq::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveReq::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveReq::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveReq::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveRsp

// required uint32 pos_from = 1;
inline bool CSItemMoveRsp::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveRsp::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveRsp::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveRsp::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveRsp::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveRsp::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveRsp::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveRsp::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemUpdateRsp

// repeated .CSItemInfo item = 1;
inline int CSItemUpdateRsp::item_size() const {
  return item_.size();
}
inline void CSItemUpdateRsp::clear_item() {
  item_.Clear();
}
inline const ::CSItemInfo& CSItemUpdateRsp::item(int index) const {
  return item_.Get(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemUpdateRsp::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemUpdateRsp::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// CSItemOrderReq

// required uint32 target = 1;
inline bool CSItemOrderReq::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemOrderReq::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemOrderReq::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemOrderReq::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 CSItemOrderReq::target() const {
  return target_;
}
inline void CSItemOrderReq::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveToRecycleBinReq

// required uint32 pos = 1;
inline bool CSItemMoveToRecycleBinReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveToRecycleBinReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveToRecycleBinReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveToRecycleBinReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemMoveToRecycleBinReq::pos() const {
  return pos_;
}
inline void CSItemMoveToRecycleBinReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveToRecycleBinRsp

// required uint32 coin = 1;
inline bool CSItemMoveToRecycleBinRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveToRecycleBinRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveToRecycleBinRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveToRecycleBinRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSItemMoveToRecycleBinRsp::coin() const {
  return coin_;
}
inline void CSItemMoveToRecycleBinRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// CSRepoRecycleBinItemReq

// required uint32 pos = 1;
inline bool CSRepoRecycleBinItemReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRepoRecycleBinItemReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRepoRecycleBinItemReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRepoRecycleBinItemReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSRepoRecycleBinItemReq::pos() const {
  return pos_;
}
inline void CSRepoRecycleBinItemReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSRepoRecycleBinItemRsp

// required uint32 coin = 1;
inline bool CSRepoRecycleBinItemRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRepoRecycleBinItemRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRepoRecycleBinItemRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRepoRecycleBinItemRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSRepoRecycleBinItemRsp::coin() const {
  return coin_;
}
inline void CSRepoRecycleBinItemRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// CSInstanceInfo

// required uint32 instance_id = 1;
inline bool CSInstanceInfo::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceInfo::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceInfo::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceInfo::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSInstanceInfo::instance_id() const {
  return instance_id_;
}
inline void CSInstanceInfo::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// required uint32 star = 2;
inline bool CSInstanceInfo::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceInfo::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 CSInstanceInfo::star() const {
  return star_;
}
inline void CSInstanceInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// required bool can_enter_flag = 3;
inline bool CSInstanceInfo::has_can_enter_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstanceInfo::set_has_can_enter_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstanceInfo::clear_has_can_enter_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstanceInfo::clear_can_enter_flag() {
  can_enter_flag_ = false;
  clear_has_can_enter_flag();
}
inline bool CSInstanceInfo::can_enter_flag() const {
  return can_enter_flag_;
}
inline void CSInstanceInfo::set_can_enter_flag(bool value) {
  set_has_can_enter_flag();
  can_enter_flag_ = value;
}

// required uint32 refresh_times = 4;
inline bool CSInstanceInfo::has_refresh_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSInstanceInfo::set_has_refresh_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSInstanceInfo::clear_has_refresh_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSInstanceInfo::clear_refresh_times() {
  refresh_times_ = 0u;
  clear_has_refresh_times();
}
inline ::google::protobuf::uint32 CSInstanceInfo::refresh_times() const {
  return refresh_times_;
}
inline void CSInstanceInfo::set_refresh_times(::google::protobuf::uint32 value) {
  set_has_refresh_times();
  refresh_times_ = value;
}

// optional uint32 btl_times = 5;
inline bool CSInstanceInfo::has_btl_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSInstanceInfo::set_has_btl_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSInstanceInfo::clear_has_btl_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSInstanceInfo::clear_btl_times() {
  btl_times_ = 0u;
  clear_has_btl_times();
}
inline ::google::protobuf::uint32 CSInstanceInfo::btl_times() const {
  return btl_times_;
}
inline void CSInstanceInfo::set_btl_times(::google::protobuf::uint32 value) {
  set_has_btl_times();
  btl_times_ = value;
}

// -------------------------------------------------------------------

// CSInstanceReq

// required uint32 start = 1;
inline bool CSInstanceReq::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceReq::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceReq::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceReq::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 CSInstanceReq::start() const {
  return start_;
}
inline void CSInstanceReq::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
}

// required uint32 end = 2;
inline bool CSInstanceReq::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceReq::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceReq::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceReq::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 CSInstanceReq::end() const {
  return end_;
}
inline void CSInstanceReq::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// CSInstanceRsp

// repeated .CSInstanceInfo new_instances = 1;
inline int CSInstanceRsp::new_instances_size() const {
  return new_instances_.size();
}
inline void CSInstanceRsp::clear_new_instances() {
  new_instances_.Clear();
}
inline const ::CSInstanceInfo& CSInstanceRsp::new_instances(int index) const {
  return new_instances_.Get(index);
}
inline ::CSInstanceInfo* CSInstanceRsp::mutable_new_instances(int index) {
  return new_instances_.Mutable(index);
}
inline ::CSInstanceInfo* CSInstanceRsp::add_new_instances() {
  return new_instances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >&
CSInstanceRsp::new_instances() const {
  return new_instances_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >*
CSInstanceRsp::mutable_new_instances() {
  return &new_instances_;
}

// -------------------------------------------------------------------

// CSGetUGCityBoxRewardReq

// required uint32 index = 1;
inline bool CSGetUGCityBoxRewardReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUGCityBoxRewardReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUGCityBoxRewardReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUGCityBoxRewardReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSGetUGCityBoxRewardReq::index() const {
  return index_;
}
inline void CSGetUGCityBoxRewardReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSGetUGCityBoxRewardRsp

// required bool succ = 1;
inline bool CSGetUGCityBoxRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUGCityBoxRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetUGCityBoxRewardRsp::succ() const {
  return succ_;
}
inline void CSGetUGCityBoxRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 index = 2;
inline bool CSGetUGCityBoxRewardRsp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUGCityBoxRewardRsp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSGetUGCityBoxRewardRsp::index() const {
  return index_;
}
inline void CSGetUGCityBoxRewardRsp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional .CSReward reward = 3;
inline bool CSGetUGCityBoxRewardRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUGCityBoxRewardRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSGetUGCityBoxRewardRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSGetUGCityBoxRewardRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSGetUGCityBoxRewardRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSReward_RewardInfo

// required uint32 item_id = 1;
inline bool CSReward_RewardInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSReward_RewardInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSReward_RewardInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_id() const {
  return item_id_;
}
inline void CSReward_RewardInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_level = 2;
inline bool CSReward_RewardInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward_RewardInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward_RewardInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_level() const {
  return item_level_;
}
inline void CSReward_RewardInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// required uint32 item_num = 3;
inline bool CSReward_RewardInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward_RewardInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward_RewardInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_num() const {
  return item_num_;
}
inline void CSReward_RewardInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSReward

// repeated .CSReward.RewardInfo rewards = 1;
inline int CSReward::rewards_size() const {
  return rewards_.size();
}
inline void CSReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::CSReward_RewardInfo& CSReward::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::CSReward_RewardInfo* CSReward::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::CSReward_RewardInfo* CSReward::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
CSReward::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
CSReward::mutable_rewards() {
  return &rewards_;
}

// optional uint32 add_coin = 2;
inline bool CSReward::has_add_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward::set_has_add_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward::clear_has_add_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward::clear_add_coin() {
  add_coin_ = 0u;
  clear_has_add_coin();
}
inline ::google::protobuf::uint32 CSReward::add_coin() const {
  return add_coin_;
}
inline void CSReward::set_add_coin(::google::protobuf::uint32 value) {
  set_has_add_coin();
  add_coin_ = value;
}

// optional uint32 add_exp = 3;
inline bool CSReward::has_add_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward::set_has_add_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward::clear_add_exp() {
  add_exp_ = 0u;
  clear_has_add_exp();
}
inline ::google::protobuf::uint32 CSReward::add_exp() const {
  return add_exp_;
}
inline void CSReward::set_add_exp(::google::protobuf::uint32 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// optional uint32 add_exploit = 4;
inline bool CSReward::has_add_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSReward::set_has_add_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSReward::clear_has_add_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSReward::clear_add_exploit() {
  add_exploit_ = 0u;
  clear_has_add_exploit();
}
inline ::google::protobuf::uint32 CSReward::add_exploit() const {
  return add_exploit_;
}
inline void CSReward::set_add_exploit(::google::protobuf::uint32 value) {
  set_has_add_exploit();
  add_exploit_ = value;
}

// optional uint32 add_diamond = 5;
inline bool CSReward::has_add_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSReward::set_has_add_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSReward::clear_has_add_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSReward::clear_add_diamond() {
  add_diamond_ = 0u;
  clear_has_add_diamond();
}
inline ::google::protobuf::uint32 CSReward::add_diamond() const {
  return add_diamond_;
}
inline void CSReward::set_add_diamond(::google::protobuf::uint32 value) {
  set_has_add_diamond();
  add_diamond_ = value;
}

// optional uint32 add_phase_exp = 6;
inline bool CSReward::has_add_phase_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSReward::set_has_add_phase_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSReward::clear_has_add_phase_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSReward::clear_add_phase_exp() {
  add_phase_exp_ = 0u;
  clear_has_add_phase_exp();
}
inline ::google::protobuf::uint32 CSReward::add_phase_exp() const {
  return add_phase_exp_;
}
inline void CSReward::set_add_phase_exp(::google::protobuf::uint32 value) {
  set_has_add_phase_exp();
  add_phase_exp_ = value;
}

// -------------------------------------------------------------------

// CSLevelUpRsp

// required uint32 level = 1;
inline bool CSLevelUpRsp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLevelUpRsp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLevelUpRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLevelUpRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSLevelUpRsp::level() const {
  return level_;
}
inline void CSLevelUpRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSBasicUserBattleInfoRsp

// required uint32 id = 1;
inline bool CSBasicUserBattleInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::id() const {
  return id_;
}
inline void CSBasicUserBattleInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 reg_time = 2;
inline bool CSBasicUserBattleInfoRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBasicUserBattleInfoRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::reg_time() const {
  return reg_time_;
}
inline void CSBasicUserBattleInfoRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSBasicUserBattleInfoRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSBasicUserBattleInfoRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::channel_id() const {
  return channel_id_;
}
inline void CSBasicUserBattleInfoRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .BasicUserBattleInfo battle_info = 4;
inline bool CSBasicUserBattleInfoRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSBasicUserBattleInfoRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSBasicUserBattleInfoRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSSearchSpiritStoneReq

// -------------------------------------------------------------------

// CSSearchSpiritStoneRsp

// required uint32 ret = 1;
inline bool CSSearchSpiritStoneRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::ret() const {
  return ret_;
}
inline void CSSearchSpiritStoneRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 cost_coin = 2;
inline bool CSSearchSpiritStoneRsp::has_cost_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_cost_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_has_cost_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_cost_coin() {
  cost_coin_ = 0u;
  clear_has_cost_coin();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::cost_coin() const {
  return cost_coin_;
}
inline void CSSearchSpiritStoneRsp::set_cost_coin(::google::protobuf::uint32 value) {
  set_has_cost_coin();
  cost_coin_ = value;
}

// optional uint32 mon_id = 3;
inline bool CSSearchSpiritStoneRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::mon_id() const {
  return mon_id_;
}
inline void CSSearchSpiritStoneRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CSSearchSpiritStoneRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::item_id() const {
  return item_id_;
}
inline void CSSearchSpiritStoneRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagReq

// required uint32 pos = 1;
inline bool CSSpiritStoneMoveBagReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneMoveBagReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneMoveBagRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneMoveBagRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpReq

// required uint32 pos = 1;
inline bool CSSpiritStoneLevelUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneLevelUpRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneLevelUpRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint32 pos = 2;
inline bool CSSpiritStoneLevelUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 cost_sp = 3;
inline bool CSSpiritStoneLevelUpRsp::has_cost_sp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_cost_sp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_cost_sp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_cost_sp() {
  cost_sp_ = 0u;
  clear_has_cost_sp();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::cost_sp() const {
  return cost_sp_;
}
inline void CSSpiritStoneLevelUpRsp::set_cost_sp(::google::protobuf::uint32 value) {
  set_has_cost_sp();
  cost_sp_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPReq

// required uint32 pos = 1;
inline bool CSSpiritStoneToSPReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneToSPReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneToSPRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneToSPRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 sp_key = 2;
inline bool CSSpiritStoneToSPRsp::has_sp_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_key() {
  sp_key_ = 0u;
  clear_has_sp_key();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_key() const {
  return sp_key_;
}
inline void CSSpiritStoneToSPRsp::set_sp_key(::google::protobuf::uint32 value) {
  set_has_sp_key();
  sp_key_ = value;
}

// optional uint32 sp_value = 3;
inline bool CSSpiritStoneToSPRsp::has_sp_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_value() {
  sp_value_ = 0u;
  clear_has_sp_value();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_value() const {
  return sp_value_;
}
inline void CSSpiritStoneToSPRsp::set_sp_value(::google::protobuf::uint32 value) {
  set_has_sp_value();
  sp_value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoReq

// -------------------------------------------------------------------

// ExchangeSSInfo

// required uint32 ss_id = 1;
inline bool ExchangeSSInfo::has_ss_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeSSInfo::set_has_ss_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeSSInfo::clear_has_ss_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeSSInfo::clear_ss_id() {
  ss_id_ = 0u;
  clear_has_ss_id();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::ss_id() const {
  return ss_id_;
}
inline void ExchangeSSInfo::set_ss_id(::google::protobuf::uint32 value) {
  set_has_ss_id();
  ss_id_ = value;
}

// required uint32 consume = 2;
inline bool ExchangeSSInfo::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeSSInfo::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeSSInfo::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeSSInfo::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::consume() const {
  return consume_;
}
inline void ExchangeSSInfo::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 3;
inline bool ExchangeSSInfo::has_convert() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeSSInfo::set_has_convert() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeSSInfo::clear_has_convert() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeSSInfo::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::convert() const {
  return convert_;
}
inline void ExchangeSSInfo::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// required uint32 need_chip = 4;
inline bool ExchangeSSInfo::has_need_chip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeSSInfo::set_has_need_chip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeSSInfo::clear_has_need_chip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeSSInfo::clear_need_chip() {
  need_chip_ = 0u;
  clear_has_need_chip();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::need_chip() const {
  return need_chip_;
}
inline void ExchangeSSInfo::set_need_chip(::google::protobuf::uint32 value) {
  set_has_need_chip();
  need_chip_ = value;
}

// required uint32 key = 5;
inline bool ExchangeSSInfo::has_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeSSInfo::set_has_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeSSInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeSSInfo::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::key() const {
  return key_;
}
inline void ExchangeSSInfo::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 6;
inline bool ExchangeSSInfo::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExchangeSSInfo::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExchangeSSInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExchangeSSInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::value() const {
  return value_;
}
inline void ExchangeSSInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoRsp

// repeated .ExchangeSSInfo ss_list = 1;
inline int CSGetExchangeSSInfoRsp::ss_list_size() const {
  return ss_list_.size();
}
inline void CSGetExchangeSSInfoRsp::clear_ss_list() {
  ss_list_.Clear();
}
inline const ::ExchangeSSInfo& CSGetExchangeSSInfoRsp::ss_list(int index) const {
  return ss_list_.Get(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::mutable_ss_list(int index) {
  return ss_list_.Mutable(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::add_ss_list() {
  return ss_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
CSGetExchangeSSInfoRsp::ss_list() const {
  return ss_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
CSGetExchangeSSInfoRsp::mutable_ss_list() {
  return &ss_list_;
}

// -------------------------------------------------------------------

// CSAddManorReq

// required uint32 manor_id = 1;
inline bool CSAddManorReq::has_manor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorReq::set_has_manor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorReq::clear_has_manor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorReq::clear_manor_id() {
  manor_id_ = 0u;
  clear_has_manor_id();
}
inline ::google::protobuf::uint32 CSAddManorReq::manor_id() const {
  return manor_id_;
}
inline void CSAddManorReq::set_manor_id(::google::protobuf::uint32 value) {
  set_has_manor_id();
  manor_id_ = value;
}

// -------------------------------------------------------------------

// CSAddManorRsp

// required uint32 pos = 1;
inline bool CSAddManorRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSAddManorRsp::pos() const {
  return pos_;
}
inline void CSAddManorRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpReq

// required uint32 pos = 1;
inline bool CSWarmSportLvUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpReq::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional bool to_max_lv = 2 [default = false];
inline bool CSWarmSportLvUpReq::has_to_max_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_to_max_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_has_to_max_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_to_max_lv() {
  to_max_lv_ = false;
  clear_has_to_max_lv();
}
inline bool CSWarmSportLvUpReq::to_max_lv() const {
  return to_max_lv_;
}
inline void CSWarmSportLvUpReq::set_to_max_lv(bool value) {
  set_has_to_max_lv();
  to_max_lv_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpRsp

// required uint32 pos = 1;
inline bool CSWarmSportLvUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpRsp::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSManorOptReq

// required uint32 pos = 1;
inline bool CSManorOptReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptReq::pos() const {
  return pos_;
}
inline void CSManorOptReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptReq::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptReq::opt() const {
  return opt_;
}
inline void CSManorOptReq::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSManorOptRsp

// required uint32 pos = 1;
inline bool CSManorOptRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptRsp::pos() const {
  return pos_;
}
inline void CSManorOptRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptRsp::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptRsp::opt() const {
  return opt_;
}
inline void CSManorOptRsp::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSMonListReq

// required uint32 uid = 1;
inline bool CSMonListReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListReq::uid() const {
  return uid_;
}
inline void CSMonListReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSMonListReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSMonListReq::reg_time() const {
  return reg_time_;
}
inline void CSMonListReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSMonListReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMonListReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMonListReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMonListReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSMonListReq::channel_id() const {
  return channel_id_;
}
inline void CSMonListReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// MonInfo

// required uint32 mon_id = 1;
inline bool MonInfo::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonInfo::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonInfo::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonInfo::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 MonInfo::mon_id() const {
  return mon_id_;
}
inline void MonInfo::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool MonInfo::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonInfo::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonInfo::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonInfo::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 MonInfo::mon_status() const {
  return mon_status_;
}
inline void MonInfo::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// optional uint32 pos = 3;
inline bool MonInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 MonInfo::pos() const {
  return pos_;
}
inline void MonInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional uint32 grade = 4;
inline bool MonInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonInfo::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 MonInfo::grade() const {
  return grade_;
}
inline void MonInfo::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// -------------------------------------------------------------------

// CSMonListRsp

// required uint32 uid = 1;
inline bool CSMonListRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListRsp::uid() const {
  return uid_;
}
inline void CSMonListRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSMonListRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSMonListRsp::reg_time() const {
  return reg_time_;
}
inline void CSMonListRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSMonListRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMonListRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMonListRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMonListRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSMonListRsp::channel_id() const {
  return channel_id_;
}
inline void CSMonListRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .MonInfo mon_info = 4;
inline int CSMonListRsp::mon_info_size() const {
  return mon_info_.size();
}
inline void CSMonListRsp::clear_mon_info() {
  mon_info_.Clear();
}
inline const ::MonInfo& CSMonListRsp::mon_info(int index) const {
  return mon_info_.Get(index);
}
inline ::MonInfo* CSMonListRsp::mutable_mon_info(int index) {
  return mon_info_.Mutable(index);
}
inline ::MonInfo* CSMonListRsp::add_mon_info() {
  return mon_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
CSMonListRsp::mon_info() const {
  return mon_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
CSMonListRsp::mutable_mon_info() {
  return &mon_info_;
}

// -------------------------------------------------------------------

// CSSetMonStatusReq

// required uint32 mon_id = 1;
inline bool CSSetMonStatusReq::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusReq::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusReq::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusReq::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool CSSetMonStatusReq::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusReq::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusReq::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusReq::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSSetMonStatusRsp

// required uint32 ret = 1;
inline bool CSSetMonStatusRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::ret() const {
  return ret_;
}
inline void CSSetMonStatusRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 mon_id = 2;
inline bool CSSetMonStatusRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 mon_status = 3;
inline bool CSSetMonStatusRsp::has_mon_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetMonStatusRsp::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetMonStatusRsp::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusRsp::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomReq

// -------------------------------------------------------------------

// PVPRoomBase

// required uint32 room_id = 1;
inline bool PVPRoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPRoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPRoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPRoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVPRoomBase::room_id() const {
  return room_id_;
}
inline void PVPRoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVPRoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPRoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPRoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPRoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVPRoomBase::top_level() const {
  return top_level_;
}
inline void PVPRoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVPRoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPRoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPRoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPRoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::current_online() const {
  return current_online_;
}
inline void PVPRoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVPRoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPRoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPRoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPRoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::max_online() const {
  return max_online_;
}
inline void PVPRoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomRsp

// repeated .PVPRoomBase rooms = 1;
inline int CSPVPQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVPQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVPRoomBase& CSPVPQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
CSPVPQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
CSPVPQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVPBaseInfoRsp

// required uint32 winning = 1;
inline bool CSPVPBaseInfoRsp::has_winning() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_winning() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_has_winning() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_winning() {
  winning_ = 0u;
  clear_has_winning();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::winning() const {
  return winning_;
}
inline void CSPVPBaseInfoRsp::set_winning(::google::protobuf::uint32 value) {
  set_has_winning();
  winning_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVPBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVPBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVPCreateRoomReq

// required uint32 type = 1;
inline bool CSPVPCreateRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::type() const {
  return type_;
}
inline void CSPVPCreateRoomReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVPCreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVPCreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// PVPSeatBase

// required uint32 id = 1;
inline bool PVPSeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPSeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPSeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPSeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVPSeatBase::id() const {
  return id_;
}
inline void PVPSeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVPSeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPSeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPSeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPSeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVPSeatBase::avatar() const {
  return avatar_;
}
inline void PVPSeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool PVPSeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPSeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPSeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPSeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVPSeatBase::name() const {
  return *name_;
}
inline void PVPSeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPSeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVPSeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool PVPSeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPSeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPSeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPSeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVPSeatBase::level() const {
  return level_;
}
inline void PVPSeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVPSeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVPSeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVPSeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVPSeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVPSeatBase::ready() const {
  return ready_;
}
inline void PVPSeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 type = 2;
inline bool CSPVPJoinRoomRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::type() const {
  return type_;
}
inline void CSPVPJoinRoomRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 3;
inline bool CSPVPJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVPJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVPSeatBase seats = 4;
inline int CSPVPJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVPJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVPSeatBase& CSPVPJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
CSPVPJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
CSPVPJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVPExitRoomReq

// -------------------------------------------------------------------

// CSPVPExitRoomRsp

// -------------------------------------------------------------------

// CSPVPCloseRoomRsp

// -------------------------------------------------------------------

// CSPVPChangeSeatReq

// required uint32 seat = 1;
inline bool CSPVPChangeSeatReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPChangeSeatReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPChangeSeatReq::seat() const {
  return seat_;
}
inline void CSPVPChangeSeatReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPReadyReq

// -------------------------------------------------------------------

// CSPVPCancelReadyReq

// -------------------------------------------------------------------

// CSPVPKickoffReq

// required uint32 seat = 1;
inline bool CSPVPKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPKickoffReq::seat() const {
  return seat_;
}
inline void CSPVPKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPKickoffRsp

// -------------------------------------------------------------------

// CSPVPStartReq

// -------------------------------------------------------------------

// CSPVPStartRsp

// required uint32 mapid = 1;
inline bool CSPVPStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVPStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVPStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPPVEBattleReq

// -------------------------------------------------------------------

// CSPPVEBattleRsp

// repeated uint32 ids = 1;
inline int CSPPVEBattleRsp::ids_size() const {
  return ids_.size();
}
inline void CSPPVEBattleRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 CSPPVEBattleRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void CSPPVEBattleRsp::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void CSPPVEBattleRsp::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSPPVEBattleRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSPPVEBattleRsp::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomReq

// -------------------------------------------------------------------

// PVERoomBase

// required uint32 room_id = 1;
inline bool PVERoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVERoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVERoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVERoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVERoomBase::room_id() const {
  return room_id_;
}
inline void PVERoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVERoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVERoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVERoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVERoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVERoomBase::top_level() const {
  return top_level_;
}
inline void PVERoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVERoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVERoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVERoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVERoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVERoomBase::current_online() const {
  return current_online_;
}
inline void PVERoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVERoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVERoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVERoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVERoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVERoomBase::max_online() const {
  return max_online_;
}
inline void PVERoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomRsp

// repeated .PVERoomBase rooms = 1;
inline int CSPVEQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVEQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVERoomBase& CSPVEQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
CSPVEQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
CSPVEQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVEBaseInfoRsp

// required uint32 countdown = 1;
inline bool CSPVEBaseInfoRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::countdown() const {
  return countdown_;
}
inline void CSPVEBaseInfoRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVEBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVEBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVECreateRoomReq

// required uint32 top_level = 1;
inline bool CSPVECreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVECreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVECreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVECreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVECreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 battle_id = 2;
inline bool CSPVECreateRoomReq::has_battle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVECreateRoomReq::set_has_battle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVECreateRoomReq::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVECreateRoomReq::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::battle_id() const {
  return battle_id_;
}
inline void CSPVECreateRoomReq::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomFailureRsp

// required uint32 errcode = 1;
inline bool CSPVEJoinRoomFailureRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomFailureRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomFailureRsp::errcode() const {
  return errcode_;
}
inline void CSPVEJoinRoomFailureRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// PVESeatBase

// required uint32 id = 1;
inline bool PVESeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVESeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVESeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVESeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVESeatBase::id() const {
  return id_;
}
inline void PVESeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVESeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVESeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVESeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVESeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVESeatBase::avatar() const {
  return avatar_;
}
inline void PVESeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool PVESeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVESeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVESeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVESeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVESeatBase::name() const {
  return *name_;
}
inline void PVESeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVESeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVESeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool PVESeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVESeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVESeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVESeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVESeatBase::level() const {
  return level_;
}
inline void PVESeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVESeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVESeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVESeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVESeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVESeatBase::ready() const {
  return ready_;
}
inline void PVESeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// optional uint32 userid = 6 [default = 0];
inline bool PVESeatBase::has_userid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PVESeatBase::set_has_userid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PVESeatBase::clear_has_userid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PVESeatBase::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PVESeatBase::userid() const {
  return userid_;
}
inline void PVESeatBase::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_time = 7 [default = 0];
inline bool PVESeatBase::has_reg_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PVESeatBase::set_has_reg_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PVESeatBase::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PVESeatBase::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 PVESeatBase::reg_time() const {
  return reg_time_;
}
inline void PVESeatBase::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// optional uint32 channel_id = 8 [default = 0];
inline bool PVESeatBase::has_channel_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PVESeatBase::set_has_channel_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PVESeatBase::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PVESeatBase::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 PVESeatBase::channel_id() const {
  return channel_id_;
}
inline void PVESeatBase::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bytes kakao_url = 9 [default = ""];
inline bool PVESeatBase::has_kakao_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PVESeatBase::set_has_kakao_url() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PVESeatBase::clear_has_kakao_url() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PVESeatBase::clear_kakao_url() {
  if (kakao_url_ != &::google::protobuf::internal::kEmptyString) {
    kakao_url_->clear();
  }
  clear_has_kakao_url();
}
inline const ::std::string& PVESeatBase::kakao_url() const {
  return *kakao_url_;
}
inline void PVESeatBase::set_kakao_url(const ::std::string& value) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(value);
}
inline void PVESeatBase::set_kakao_url(const char* value) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(value);
}
inline void PVESeatBase::set_kakao_url(const void* value, size_t size) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVESeatBase::mutable_kakao_url() {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  return kakao_url_;
}
inline ::std::string* PVESeatBase::release_kakao_url() {
  clear_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = kakao_url_;
    kakao_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 effective = 10 [default = 0];
inline bool PVESeatBase::has_effective() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PVESeatBase::set_has_effective() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PVESeatBase::clear_has_effective() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PVESeatBase::clear_effective() {
  effective_ = 0u;
  clear_has_effective();
}
inline ::google::protobuf::uint32 PVESeatBase::effective() const {
  return effective_;
}
inline void PVESeatBase::set_effective(::google::protobuf::uint32 value) {
  set_has_effective();
  effective_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVEJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVEJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVESeatBase seats = 3;
inline int CSPVEJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVEJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVESeatBase& CSPVEJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
CSPVEJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
CSPVEJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVEExitRoomReq

// -------------------------------------------------------------------

// CSPVEExitRoomRsp

// -------------------------------------------------------------------

// CSPVECloseRoomRsp

// -------------------------------------------------------------------

// CSPVEReadyReq

// -------------------------------------------------------------------

// CSPVECancelReadyReq

// -------------------------------------------------------------------

// CSPVEKickoffReq

// required uint32 seat = 1;
inline bool CSPVEKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVEKickoffReq::seat() const {
  return seat_;
}
inline void CSPVEKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVEKickoffRsp

// -------------------------------------------------------------------

// CSPVEStartReq

// -------------------------------------------------------------------

// CSPVEStartRsp

// required uint32 mapid = 1;
inline bool CSPVEStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVEStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVEStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPVAIReq

// required uint32 userid = 1;
inline bool CSPVAIReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIReq::userid() const {
  return userid_;
}
inline void CSPVAIReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVAIReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVAIReq::reg_time() const {
  return reg_time_;
}
inline void CSPVAIReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVAIReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVAIReq::channel_id() const {
  return channel_id_;
}
inline void CSPVAIReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional .PB_INSTANCE_TYPE_T type = 4 [default = PB_INSTANCE_TYPE_PVAI];
inline bool CSPVAIReq::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVAIReq::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVAIReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVAIReq::clear_type() {
  type_ = 4;
  clear_has_type();
}
inline PB_INSTANCE_TYPE_T CSPVAIReq::type() const {
  return static_cast< PB_INSTANCE_TYPE_T >(type_);
}
inline void CSPVAIReq::set_type(PB_INSTANCE_TYPE_T value) {
  GOOGLE_DCHECK(PB_INSTANCE_TYPE_T_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoReq

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAIInfo

// required uint32 userid = 1;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::userid() const {
  return userid_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::reg_time() const {
  return reg_time_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::channel_id() const {
  return channel_id_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 rank = 4;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required bytes name = 5;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAIInfo::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 type = 6;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::type() const {
  return type_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 lv = 7;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::lv() const {
  return lv_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional .AI_STATUS_T ai_status = 8;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_ai_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_ai_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_ai_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_ai_status() {
  ai_status_ = 1;
  clear_has_ai_status();
}
inline AI_STATUS_T CSPVAIInfoRsq_CSPVAIInfo::ai_status() const {
  return static_cast< AI_STATUS_T >(ai_status_);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_ai_status(AI_STATUS_T value) {
  GOOGLE_DCHECK(AI_STATUS_T_IsValid(value));
  set_has_ai_status();
  ai_status_ = value;
}

// repeated uint32 fairys = 9;
inline int CSPVAIInfoRsq_CSPVAIInfo::fairys_size() const {
  return fairys_.size();
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_fairys() {
  fairys_.Clear();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::fairys(int index) const {
  return fairys_.Get(index);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_fairys(int index, ::google::protobuf::uint32 value) {
  fairys_.Set(index, value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::add_fairys(::google::protobuf::uint32 value) {
  fairys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSPVAIInfoRsq_CSPVAIInfo::fairys() const {
  return fairys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSPVAIInfoRsq_CSPVAIInfo::mutable_fairys() {
  return &fairys_;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAILog

// required bytes name = 1;
inline bool CSPVAIInfoRsq_CSPVAILog::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAILog::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool direct = 2;
inline bool CSPVAIInfoRsq_CSPVAILog::has_direct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_direct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_direct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_direct() {
  direct_ = false;
  clear_has_direct();
}
inline bool CSPVAIInfoRsq_CSPVAILog::direct() const {
  return direct_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_direct(bool value) {
  set_has_direct();
  direct_ = value;
}

// required bool win = 3;
inline bool CSPVAIInfoRsq_CSPVAILog::has_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_win() {
  win_ = false;
  clear_has_win();
}
inline bool CSPVAIInfoRsq_CSPVAILog::win() const {
  return win_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_win(bool value) {
  set_has_win();
  win_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq

// required uint32 rank = 1;
inline bool CSPVAIInfoRsq::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
inline int CSPVAIInfoRsq::infos_size() const {
  return infos_.size();
}
inline void CSPVAIInfoRsq::clear_infos() {
  infos_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAIInfo& CSPVAIInfoRsq::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
CSPVAIInfoRsq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
CSPVAIInfoRsq::mutable_infos() {
  return &infos_;
}

// repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
inline int CSPVAIInfoRsq::logs_size() const {
  return logs_.size();
}
inline void CSPVAIInfoRsq::clear_logs() {
  logs_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAILog& CSPVAIInfoRsq::logs(int index) const {
  return logs_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
CSPVAIInfoRsq::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
CSPVAIInfoRsq::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// CSGetInstanceInfoReq

// required uint32 instance_id = 1;
inline bool CSGetInstanceInfoReq::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetInstanceInfoReq::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetInstanceInfoReq::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetInstanceInfoReq::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSGetInstanceInfoReq::instance_id() const {
  return instance_id_;
}
inline void CSGetInstanceInfoReq::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// -------------------------------------------------------------------

// CSGetInstanceInfoRsp

// required uint32 instance_id = 1;
inline bool CSGetInstanceInfoRsp::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetInstanceInfoRsp::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetInstanceInfoRsp::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetInstanceInfoRsp::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSGetInstanceInfoRsp::instance_id() const {
  return instance_id_;
}
inline void CSGetInstanceInfoRsp::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// required uint32 effectiveness = 2;
inline bool CSGetInstanceInfoRsp::has_effectiveness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetInstanceInfoRsp::set_has_effectiveness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetInstanceInfoRsp::clear_has_effectiveness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetInstanceInfoRsp::clear_effectiveness() {
  effectiveness_ = 0u;
  clear_has_effectiveness();
}
inline ::google::protobuf::uint32 CSGetInstanceInfoRsp::effectiveness() const {
  return effectiveness_;
}
inline void CSGetInstanceInfoRsp::set_effectiveness(::google::protobuf::uint32 value) {
  set_has_effectiveness();
  effectiveness_ = value;
}

// required .CSReward reward = 3;
inline bool CSGetInstanceInfoRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetInstanceInfoRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetInstanceInfoRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetInstanceInfoRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSGetInstanceInfoRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSGetInstanceInfoRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSGetInstanceInfoRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSPVXRewardRsp

// required bool is_win = 1;
inline bool CSPVXRewardRsp::has_is_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVXRewardRsp::set_has_is_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVXRewardRsp::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVXRewardRsp::clear_is_win() {
  is_win_ = false;
  clear_has_is_win();
}
inline bool CSPVXRewardRsp::is_win() const {
  return is_win_;
}
inline void CSPVXRewardRsp::set_is_win(bool value) {
  set_has_is_win();
  is_win_ = value;
}

// required uint32 pvx_type = 2;
inline bool CSPVXRewardRsp::has_pvx_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVXRewardRsp::set_has_pvx_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVXRewardRsp::clear_has_pvx_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVXRewardRsp::clear_pvx_type() {
  pvx_type_ = 0u;
  clear_has_pvx_type();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::pvx_type() const {
  return pvx_type_;
}
inline void CSPVXRewardRsp::set_pvx_type(::google::protobuf::uint32 value) {
  set_has_pvx_type();
  pvx_type_ = value;
}

// required uint32 coin = 3;
inline bool CSPVXRewardRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVXRewardRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVXRewardRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVXRewardRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::coin() const {
  return coin_;
}
inline void CSPVXRewardRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required uint32 reputation = 4;
inline bool CSPVXRewardRsp::has_reputation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVXRewardRsp::set_has_reputation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVXRewardRsp::clear_has_reputation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVXRewardRsp::clear_reputation() {
  reputation_ = 0u;
  clear_has_reputation();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::reputation() const {
  return reputation_;
}
inline void CSPVXRewardRsp::set_reputation(::google::protobuf::uint32 value) {
  set_has_reputation();
  reputation_ = value;
}

// optional .CSReward reward = 5;
inline bool CSPVXRewardRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVXRewardRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVXRewardRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVXRewardRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSPVXRewardRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSPVXRewardRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSPVXRewardRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSEquipInlayGemReq

// required uint32 equip_pos = 1;
inline bool CSEquipInlayGemReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::equip_pos() const {
  return equip_pos_;
}
inline void CSEquipInlayGemReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// required uint32 gem_id = 2;
inline bool CSEquipInlayGemReq::has_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipInlayGemReq::set_has_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipInlayGemReq::clear_has_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipInlayGemReq::clear_gem_id() {
  gem_id_ = 0u;
  clear_has_gem_id();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::gem_id() const {
  return gem_id_;
}
inline void CSEquipInlayGemReq::set_gem_id(::google::protobuf::uint32 value) {
  set_has_gem_id();
  gem_id_ = value;
}

// required uint32 hole_index = 3;
inline bool CSEquipInlayGemReq::has_hole_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipInlayGemReq::set_has_hole_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipInlayGemReq::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipInlayGemReq::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::hole_index() const {
  return hole_index_;
}
inline void CSEquipInlayGemReq::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// -------------------------------------------------------------------

// CSEquipInlayGemRsp

// required uint32 ret = 1;
inline bool CSEquipInlayGemRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSEquipInlayGemRsp::ret() const {
  return ret_;
}
inline void CSEquipInlayGemRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrReq

// required uint32 equip_pos = 1;
inline bool CSResetGemAttrReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::equip_pos() const {
  return equip_pos_;
}
inline void CSResetGemAttrReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// repeated uint32 holes_index = 2;
inline int CSResetGemAttrReq::holes_index_size() const {
  return holes_index_.size();
}
inline void CSResetGemAttrReq::clear_holes_index() {
  holes_index_.Clear();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::holes_index(int index) const {
  return holes_index_.Get(index);
}
inline void CSResetGemAttrReq::set_holes_index(int index, ::google::protobuf::uint32 value) {
  holes_index_.Set(index, value);
}
inline void CSResetGemAttrReq::add_holes_index(::google::protobuf::uint32 value) {
  holes_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSResetGemAttrReq::holes_index() const {
  return holes_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSResetGemAttrReq::mutable_holes_index() {
  return &holes_index_;
}

// optional uint32 cost_attr_key = 3;
inline bool CSResetGemAttrReq::has_cost_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSResetGemAttrReq::set_has_cost_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSResetGemAttrReq::clear_has_cost_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSResetGemAttrReq::clear_cost_attr_key() {
  cost_attr_key_ = 0u;
  clear_has_cost_attr_key();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::cost_attr_key() const {
  return cost_attr_key_;
}
inline void CSResetGemAttrReq::set_cost_attr_key(::google::protobuf::uint32 value) {
  set_has_cost_attr_key();
  cost_attr_key_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrRsp

// required uint32 ret = 1;
inline bool CSResetGemAttrRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSResetGemAttrRsp::ret() const {
  return ret_;
}
inline void CSResetGemAttrRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthReq

// required uint32 pos = 1;
inline bool CSEquipmentStrengthReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthReq::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required bool direct = 2;
inline bool CSEquipmentStrengthReq::has_direct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentStrengthReq::set_has_direct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentStrengthReq::clear_has_direct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentStrengthReq::clear_direct() {
  direct_ = false;
  clear_has_direct();
}
inline bool CSEquipmentStrengthReq::direct() const {
  return direct_;
}
inline void CSEquipmentStrengthReq::set_direct(bool value) {
  set_has_direct();
  direct_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthRsp

// required uint32 result = 1;
inline bool CSEquipmentStrengthRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::result() const {
  return result_;
}
inline void CSEquipmentStrengthRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint32 pos = 2;
inline bool CSEquipmentStrengthRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional uint32 level = 3;
inline bool CSEquipmentStrengthRsp::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipmentStrengthRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipmentStrengthRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::level() const {
  return level_;
}
inline void CSEquipmentStrengthRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeReq

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeReq::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeReq::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeReq::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeReq::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeReq::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// repeated uint32 from_item_pos = 2;
inline int CSEquipmentComposeReq::from_item_pos_size() const {
  return from_item_pos_.size();
}
inline void CSEquipmentComposeReq::clear_from_item_pos() {
  from_item_pos_.Clear();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::from_item_pos(int index) const {
  return from_item_pos_.Get(index);
}
inline void CSEquipmentComposeReq::set_from_item_pos(int index, ::google::protobuf::uint32 value) {
  from_item_pos_.Set(index, value);
}
inline void CSEquipmentComposeReq::add_from_item_pos(::google::protobuf::uint32 value) {
  from_item_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSEquipmentComposeReq::from_item_pos() const {
  return from_item_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSEquipmentComposeReq::mutable_from_item_pos() {
  return &from_item_pos_;
}

// optional uint32 multi = 3 [default = 1];
inline bool CSEquipmentComposeReq::has_multi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipmentComposeReq::set_has_multi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipmentComposeReq::clear_has_multi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipmentComposeReq::clear_multi() {
  multi_ = 1u;
  clear_has_multi();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::multi() const {
  return multi_;
}
inline void CSEquipmentComposeReq::set_multi(::google::protobuf::uint32 value) {
  set_has_multi();
  multi_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeRsp_Item

// required uint32 id = 1;
inline bool CSEquipmentComposeRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp_Item::id() const {
  return id_;
}
inline void CSEquipmentComposeRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSEquipmentComposeRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentComposeRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentComposeRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentComposeRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp_Item::num() const {
  return num_;
}
inline void CSEquipmentComposeRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeRsp

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeRsp::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeRsp::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// required uint32 result = 2;
inline bool CSEquipmentComposeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::result() const {
  return result_;
}
inline void CSEquipmentComposeRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .CSEquipmentComposeRsp.Item items = 3;
inline int CSEquipmentComposeRsp::items_size() const {
  return items_.size();
}
inline void CSEquipmentComposeRsp::clear_items() {
  items_.Clear();
}
inline const ::CSEquipmentComposeRsp_Item& CSEquipmentComposeRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSEquipmentComposeRsp_Item* CSEquipmentComposeRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSEquipmentComposeRsp_Item* CSEquipmentComposeRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentComposeRsp_Item >&
CSEquipmentComposeRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentComposeRsp_Item >*
CSEquipmentComposeRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeQueryReq

// required uint32 pos = 1;
inline bool CSEquipmentDecomposeQueryReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeQueryReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeQueryReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeQueryReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeQueryReq::pos() const {
  return pos_;
}
inline void CSEquipmentDecomposeQueryReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeQueryRsp_Item

// required uint32 id = 1;
inline bool CSEquipmentDecomposeQueryRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeQueryRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeQueryRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeQueryRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeQueryRsp_Item::id() const {
  return id_;
}
inline void CSEquipmentDecomposeQueryRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSEquipmentDecomposeQueryRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentDecomposeQueryRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentDecomposeQueryRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentDecomposeQueryRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeQueryRsp_Item::num() const {
  return num_;
}
inline void CSEquipmentDecomposeQueryRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeQueryRsp

// required uint32 money = 1;
inline bool CSEquipmentDecomposeQueryRsp::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeQueryRsp::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeQueryRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeQueryRsp::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeQueryRsp::money() const {
  return money_;
}
inline void CSEquipmentDecomposeQueryRsp::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// repeated .CSEquipmentDecomposeQueryRsp.Item items = 2;
inline int CSEquipmentDecomposeQueryRsp::items_size() const {
  return items_.size();
}
inline void CSEquipmentDecomposeQueryRsp::clear_items() {
  items_.Clear();
}
inline const ::CSEquipmentDecomposeQueryRsp_Item& CSEquipmentDecomposeQueryRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSEquipmentDecomposeQueryRsp_Item* CSEquipmentDecomposeQueryRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSEquipmentDecomposeQueryRsp_Item* CSEquipmentDecomposeQueryRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeQueryRsp_Item >&
CSEquipmentDecomposeQueryRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeQueryRsp_Item >*
CSEquipmentDecomposeQueryRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeReq

// required uint32 pos = 1;
inline bool CSEquipmentDecomposeReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeReq::pos() const {
  return pos_;
}
inline void CSEquipmentDecomposeReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeRsp_Item

// required uint32 id = 1;
inline bool CSEquipmentDecomposeRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeRsp_Item::id() const {
  return id_;
}
inline void CSEquipmentDecomposeRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSEquipmentDecomposeRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentDecomposeRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentDecomposeRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentDecomposeRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeRsp_Item::num() const {
  return num_;
}
inline void CSEquipmentDecomposeRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentDecomposeRsp

// required uint32 money = 1;
inline bool CSEquipmentDecomposeRsp::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentDecomposeRsp::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentDecomposeRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentDecomposeRsp::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CSEquipmentDecomposeRsp::money() const {
  return money_;
}
inline void CSEquipmentDecomposeRsp::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// repeated .CSEquipmentDecomposeRsp.Item items = 2;
inline int CSEquipmentDecomposeRsp::items_size() const {
  return items_.size();
}
inline void CSEquipmentDecomposeRsp::clear_items() {
  items_.Clear();
}
inline const ::CSEquipmentDecomposeRsp_Item& CSEquipmentDecomposeRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSEquipmentDecomposeRsp_Item* CSEquipmentDecomposeRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSEquipmentDecomposeRsp_Item* CSEquipmentDecomposeRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeRsp_Item >&
CSEquipmentDecomposeRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipmentDecomposeRsp_Item >*
CSEquipmentDecomposeRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSTaskInfoReq

// optional uint32 check_gg = 1 [default = 0];
inline bool CSTaskInfoReq::has_check_gg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskInfoReq::set_has_check_gg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskInfoReq::clear_has_check_gg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskInfoReq::clear_check_gg() {
  check_gg_ = 0u;
  clear_has_check_gg();
}
inline ::google::protobuf::uint32 CSTaskInfoReq::check_gg() const {
  return check_gg_;
}
inline void CSTaskInfoReq::set_check_gg(::google::protobuf::uint32 value) {
  set_has_check_gg();
  check_gg_ = value;
}

// -------------------------------------------------------------------

// TaskInfo

// required uint32 task_id = 1;
inline bool TaskInfo::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfo::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfo::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfo::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 TaskInfo::task_id() const {
  return task_id_;
}
inline void TaskInfo::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool TaskInfo::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfo::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfo::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfo::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 TaskInfo::step_id() const {
  return step_id_;
}
inline void TaskInfo::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool TaskInfo::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfo::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfo::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfo::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 TaskInfo::step_value() const {
  return step_value_;
}
inline void TaskInfo::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskInfoRsp

// repeated uint32 acceptable_tasks = 1;
inline int CSTaskInfoRsp::acceptable_tasks_size() const {
  return acceptable_tasks_.size();
}
inline void CSTaskInfoRsp::clear_acceptable_tasks() {
  acceptable_tasks_.Clear();
}
inline ::google::protobuf::uint32 CSTaskInfoRsp::acceptable_tasks(int index) const {
  return acceptable_tasks_.Get(index);
}
inline void CSTaskInfoRsp::set_acceptable_tasks(int index, ::google::protobuf::uint32 value) {
  acceptable_tasks_.Set(index, value);
}
inline void CSTaskInfoRsp::add_acceptable_tasks(::google::protobuf::uint32 value) {
  acceptable_tasks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSTaskInfoRsp::acceptable_tasks() const {
  return acceptable_tasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSTaskInfoRsp::mutable_acceptable_tasks() {
  return &acceptable_tasks_;
}

// repeated .TaskInfo accept_tasks = 2;
inline int CSTaskInfoRsp::accept_tasks_size() const {
  return accept_tasks_.size();
}
inline void CSTaskInfoRsp::clear_accept_tasks() {
  accept_tasks_.Clear();
}
inline const ::TaskInfo& CSTaskInfoRsp::accept_tasks(int index) const {
  return accept_tasks_.Get(index);
}
inline ::TaskInfo* CSTaskInfoRsp::mutable_accept_tasks(int index) {
  return accept_tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskInfoRsp::add_accept_tasks() {
  return accept_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskInfoRsp::accept_tasks() const {
  return accept_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskInfoRsp::mutable_accept_tasks() {
  return &accept_tasks_;
}

// -------------------------------------------------------------------

// CSTaskDoStepReq

// required uint32 task_id = 1;
inline bool CSTaskDoStepReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepReq::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepReq::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepReq::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepReq::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepReq::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepReq::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepReq::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepReq::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepReq::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepReq::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskDoStepRsp

// required uint32 task_id = 1;
inline bool CSTaskDoStepRsp::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepRsp::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepRsp::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepRsp::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepRsp::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepRsp::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepRsp::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepRsp::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepRsp::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepRsp::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepRsp::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepRsp::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepRsp::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskLogReq

// -------------------------------------------------------------------

// CSTaskLogRsp

// repeated .TaskInfo tasks = 1;
inline int CSTaskLogRsp::tasks_size() const {
  return tasks_.size();
}
inline void CSTaskLogRsp::clear_tasks() {
  tasks_.Clear();
}
inline const ::TaskInfo& CSTaskLogRsp::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::TaskInfo* CSTaskLogRsp::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskLogRsp::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskLogRsp::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskLogRsp::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// CSTaskStatusReq

// required uint32 task_id = 1;
inline bool CSTaskStatusReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskStatusReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskStatusReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskStatusReq::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskStatusReq::task_id() const {
  return task_id_;
}
inline void CSTaskStatusReq::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// CSTaskStatusRsp

// required uint32 task_id = 1;
inline bool CSTaskStatusRsp::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskStatusRsp::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskStatusRsp::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskStatusRsp::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskStatusRsp::task_id() const {
  return task_id_;
}
inline void CSTaskStatusRsp::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required .PB_TASK_STATUS_T status = 2;
inline bool CSTaskStatusRsp::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskStatusRsp::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskStatusRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskStatusRsp::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline PB_TASK_STATUS_T CSTaskStatusRsp::status() const {
  return static_cast< PB_TASK_STATUS_T >(status_);
}
inline void CSTaskStatusRsp::set_status(PB_TASK_STATUS_T value) {
  GOOGLE_DCHECK(PB_TASK_STATUS_T_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyTaskInfo

// required uint32 daily_task_id = 1;
inline bool DailyTaskInfo::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskInfo::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskInfo::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  return daily_task_id_;
}
inline void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// required int32 daily_task_status = 2;
inline bool DailyTaskInfo::has_daily_task_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskInfo::set_has_daily_task_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskInfo::clear_has_daily_task_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskInfo::clear_daily_task_status() {
  daily_task_status_ = 0;
  clear_has_daily_task_status();
}
inline ::google::protobuf::int32 DailyTaskInfo::daily_task_status() const {
  return daily_task_status_;
}
inline void DailyTaskInfo::set_daily_task_status(::google::protobuf::int32 value) {
  set_has_daily_task_status();
  daily_task_status_ = value;
}

// -------------------------------------------------------------------

// CSDailyTaskInfoReq

// -------------------------------------------------------------------

// CSDailyTaskInfoRsp

// repeated .DailyTaskInfo daily_tasks = 1;
inline int CSDailyTaskInfoRsp::daily_tasks_size() const {
  return daily_tasks_.size();
}
inline void CSDailyTaskInfoRsp::clear_daily_tasks() {
  daily_tasks_.Clear();
}
inline const ::DailyTaskInfo& CSDailyTaskInfoRsp::daily_tasks(int index) const {
  return daily_tasks_.Get(index);
}
inline ::DailyTaskInfo* CSDailyTaskInfoRsp::mutable_daily_tasks(int index) {
  return daily_tasks_.Mutable(index);
}
inline ::DailyTaskInfo* CSDailyTaskInfoRsp::add_daily_tasks() {
  return daily_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
CSDailyTaskInfoRsp::daily_tasks() const {
  return daily_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
CSDailyTaskInfoRsp::mutable_daily_tasks() {
  return &daily_tasks_;
}

// -------------------------------------------------------------------

// CSAcceptDailyTaskReq

// required uint32 daily_task_id = 1;
inline bool CSAcceptDailyTaskReq::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAcceptDailyTaskReq::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAcceptDailyTaskReq::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAcceptDailyTaskReq::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSAcceptDailyTaskReq::daily_task_id() const {
  return daily_task_id_;
}
inline void CSAcceptDailyTaskReq::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSAcceptDailyTaskRsp

// required bool succ = 1;
inline bool CSAcceptDailyTaskRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAcceptDailyTaskRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAcceptDailyTaskRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAcceptDailyTaskRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSAcceptDailyTaskRsp::succ() const {
  return succ_;
}
inline void CSAcceptDailyTaskRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 daily_task_id = 2;
inline bool CSAcceptDailyTaskRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAcceptDailyTaskRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAcceptDailyTaskRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAcceptDailyTaskRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSAcceptDailyTaskRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSAcceptDailyTaskRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSGiveUpDailyTaskReq

// -------------------------------------------------------------------

// CSGiveUpDailyTaskRsp

// required bool succ = 1;
inline bool CSGiveUpDailyTaskRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGiveUpDailyTaskRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGiveUpDailyTaskRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGiveUpDailyTaskRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGiveUpDailyTaskRsp::succ() const {
  return succ_;
}
inline void CSGiveUpDailyTaskRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional uint32 daily_task_id = 2;
inline bool CSGiveUpDailyTaskRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGiveUpDailyTaskRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGiveUpDailyTaskRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGiveUpDailyTaskRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSGiveUpDailyTaskRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSGiveUpDailyTaskRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyTaskRewardReq

// -------------------------------------------------------------------

// CSGetDailyTaskRewardRsp

// required bool succ = 1;
inline bool CSGetDailyTaskRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyTaskRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyTaskRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyTaskRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyTaskRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyTaskRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional uint32 daily_task_id = 2;
inline bool CSGetDailyTaskRewardRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetDailyTaskRewardRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetDailyTaskRewardRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetDailyTaskRewardRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSGetDailyTaskRewardRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSGetDailyTaskRewardRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSNotifyUpdateDailyTaskInfoRsp

// repeated .DailyTaskInfo update_daily_tasks = 1;
inline int CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks_size() const {
  return update_daily_tasks_.size();
}
inline void CSNotifyUpdateDailyTaskInfoRsp::clear_update_daily_tasks() {
  update_daily_tasks_.Clear();
}
inline const ::DailyTaskInfo& CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks(int index) const {
  return update_daily_tasks_.Get(index);
}
inline ::DailyTaskInfo* CSNotifyUpdateDailyTaskInfoRsp::mutable_update_daily_tasks(int index) {
  return update_daily_tasks_.Mutable(index);
}
inline ::DailyTaskInfo* CSNotifyUpdateDailyTaskInfoRsp::add_update_daily_tasks() {
  return update_daily_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks() const {
  return update_daily_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
CSNotifyUpdateDailyTaskInfoRsp::mutable_update_daily_tasks() {
  return &update_daily_tasks_;
}

// -------------------------------------------------------------------

// CSGetDailyGoalRewardReq

// -------------------------------------------------------------------

// CSGetDailyGoalRewardRsp

// required bool succ = 1;
inline bool CSGetDailyGoalRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyGoalRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyGoalRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyGoalRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyGoalRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyGoalRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyRewardReq

// required uint32 key = 1;
inline bool CSGetDailyRewardReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyRewardReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyRewardReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyRewardReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSGetDailyRewardReq::key() const {
  return key_;
}
inline void CSGetDailyRewardReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyRewardRsp

// required bool succ = 1;
inline bool CSGetDailyRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 key = 2;
inline bool CSGetDailyRewardRsp::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetDailyRewardRsp::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetDailyRewardRsp::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetDailyRewardRsp::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSGetDailyRewardRsp::key() const {
  return key_;
}
inline void CSGetDailyRewardRsp::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// CSGetLoginRewardReq

// required uint32 someday = 1;
inline bool CSGetLoginRewardReq::has_someday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetLoginRewardReq::set_has_someday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetLoginRewardReq::clear_has_someday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetLoginRewardReq::clear_someday() {
  someday_ = 0u;
  clear_has_someday();
}
inline ::google::protobuf::uint32 CSGetLoginRewardReq::someday() const {
  return someday_;
}
inline void CSGetLoginRewardReq::set_someday(::google::protobuf::uint32 value) {
  set_has_someday();
  someday_ = value;
}

// -------------------------------------------------------------------

// CSGetLoginRewardRsp

// required bool succ = 1;
inline bool CSGetLoginRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetLoginRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetLoginRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetLoginRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetLoginRewardRsp::succ() const {
  return succ_;
}
inline void CSGetLoginRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSSelectPVAIACCURewardReq

// -------------------------------------------------------------------

// CSSelectPVAIACCURewardRsp

// required uint32 accu_coin = 1;
inline bool CSSelectPVAIACCURewardRsp::has_accu_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_accu_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_accu_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSelectPVAIACCURewardRsp::clear_accu_coin() {
  accu_coin_ = 0u;
  clear_has_accu_coin();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::accu_coin() const {
  return accu_coin_;
}
inline void CSSelectPVAIACCURewardRsp::set_accu_coin(::google::protobuf::uint32 value) {
  set_has_accu_coin();
  accu_coin_ = value;
}

// required uint32 accu_reputation = 2;
inline bool CSSelectPVAIACCURewardRsp::has_accu_reputation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_accu_reputation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_accu_reputation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSelectPVAIACCURewardRsp::clear_accu_reputation() {
  accu_reputation_ = 0u;
  clear_has_accu_reputation();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::accu_reputation() const {
  return accu_reputation_;
}
inline void CSSelectPVAIACCURewardRsp::set_accu_reputation(::google::protobuf::uint32 value) {
  set_has_accu_reputation();
  accu_reputation_ = value;
}

// required uint32 one_hour_coin = 3;
inline bool CSSelectPVAIACCURewardRsp::has_one_hour_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_one_hour_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_one_hour_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSelectPVAIACCURewardRsp::clear_one_hour_coin() {
  one_hour_coin_ = 0u;
  clear_has_one_hour_coin();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::one_hour_coin() const {
  return one_hour_coin_;
}
inline void CSSelectPVAIACCURewardRsp::set_one_hour_coin(::google::protobuf::uint32 value) {
  set_has_one_hour_coin();
  one_hour_coin_ = value;
}

// required uint32 one_hour_reputation = 4;
inline bool CSSelectPVAIACCURewardRsp::has_one_hour_reputation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_one_hour_reputation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_one_hour_reputation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSelectPVAIACCURewardRsp::clear_one_hour_reputation() {
  one_hour_reputation_ = 0u;
  clear_has_one_hour_reputation();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::one_hour_reputation() const {
  return one_hour_reputation_;
}
inline void CSSelectPVAIACCURewardRsp::set_one_hour_reputation(::google::protobuf::uint32 value) {
  set_has_one_hour_reputation();
  one_hour_reputation_ = value;
}

// -------------------------------------------------------------------

// CSAttributesSetReq

// required uint32 key = 1;
inline bool CSAttributesSetReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesSetReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesSetReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesSetReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::key() const {
  return key_;
}
inline void CSAttributesSetReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesSetReq::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesSetReq::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesSetReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesSetReq::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::value() const {
  return value_;
}
inline void CSAttributesSetReq::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesReq

// repeated uint32 keys = 1;
inline int CSAttributesReq::keys_size() const {
  return keys_.size();
}
inline void CSAttributesReq::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 CSAttributesReq::keys(int index) const {
  return keys_.Get(index);
}
inline void CSAttributesReq::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
}
inline void CSAttributesReq::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSAttributesReq::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSAttributesReq::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CSAttributesRsp_KeyValue

// required uint32 key = 1;
inline bool CSAttributesRsp_KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::key() const {
  return key_;
}
inline void CSAttributesRsp_KeyValue::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesRsp_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::value() const {
  return value_;
}
inline void CSAttributesRsp_KeyValue::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesRsp

// repeated .CSAttributesRsp.KeyValue values = 1;
inline int CSAttributesRsp::values_size() const {
  return values_.size();
}
inline void CSAttributesRsp::clear_values() {
  values_.Clear();
}
inline const ::CSAttributesRsp_KeyValue& CSAttributesRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
CSAttributesRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
CSAttributesRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSOnceSetReq

// required uint32 index = 1;
inline bool CSOnceSetReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceSetReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceSetReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceSetReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceSetReq::index() const {
  return index_;
}
inline void CSOnceSetReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSOnceReq

// repeated uint32 indexs = 1;
inline int CSOnceReq::indexs_size() const {
  return indexs_.size();
}
inline void CSOnceReq::clear_indexs() {
  indexs_.Clear();
}
inline ::google::protobuf::uint32 CSOnceReq::indexs(int index) const {
  return indexs_.Get(index);
}
inline void CSOnceReq::set_indexs(int index, ::google::protobuf::uint32 value) {
  indexs_.Set(index, value);
}
inline void CSOnceReq::add_indexs(::google::protobuf::uint32 value) {
  indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOnceReq::indexs() const {
  return indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOnceReq::mutable_indexs() {
  return &indexs_;
}

// -------------------------------------------------------------------

// CSOnceRsp_Once

// required uint32 index = 1;
inline bool CSOnceRsp_Once::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceRsp_Once::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceRsp_Once::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceRsp_Once::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceRsp_Once::index() const {
  return index_;
}
inline void CSOnceRsp_Once::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool is_set = 2;
inline bool CSOnceRsp_Once::has_is_set() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOnceRsp_Once::set_has_is_set() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOnceRsp_Once::clear_has_is_set() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOnceRsp_Once::clear_is_set() {
  is_set_ = false;
  clear_has_is_set();
}
inline bool CSOnceRsp_Once::is_set() const {
  return is_set_;
}
inline void CSOnceRsp_Once::set_is_set(bool value) {
  set_has_is_set();
  is_set_ = value;
}

// -------------------------------------------------------------------

// CSOnceRsp

// repeated .CSOnceRsp.Once values = 1;
inline int CSOnceRsp::values_size() const {
  return values_.size();
}
inline void CSOnceRsp::clear_values() {
  values_.Clear();
}
inline const ::CSOnceRsp_Once& CSOnceRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
CSOnceRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
CSOnceRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSTrainInfoReq

// -------------------------------------------------------------------

// CSTrainInfoRsp

// required uint32 potential = 1;
inline bool CSTrainInfoRsp::has_potential() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainInfoRsp::set_has_potential() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainInfoRsp::clear_has_potential() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainInfoRsp::clear_potential() {
  potential_ = 0u;
  clear_has_potential();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::potential() const {
  return potential_;
}
inline void CSTrainInfoRsp::set_potential(::google::protobuf::uint32 value) {
  set_has_potential();
  potential_ = value;
}

// required uint32 courage = 2;
inline bool CSTrainInfoRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainInfoRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainInfoRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainInfoRsp::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::courage() const {
  return courage_;
}
inline void CSTrainInfoRsp::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 3;
inline bool CSTrainInfoRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainInfoRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainInfoRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainInfoRsp::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::charm() const {
  return charm_;
}
inline void CSTrainInfoRsp::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 4;
inline bool CSTrainInfoRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainInfoRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainInfoRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainInfoRsp::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::trick() const {
  return trick_;
}
inline void CSTrainInfoRsp::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// -------------------------------------------------------------------

// CSTrainReq

// required uint32 type = 1;
inline bool CSTrainReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSTrainReq::type() const {
  return type_;
}
inline void CSTrainReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSTrainRsp

// required int32 courage = 1;
inline bool CSTrainRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainRsp::clear_courage() {
  courage_ = 0;
  clear_has_courage();
}
inline ::google::protobuf::int32 CSTrainRsp::courage() const {
  return courage_;
}
inline void CSTrainRsp::set_courage(::google::protobuf::int32 value) {
  set_has_courage();
  courage_ = value;
}

// required int32 charm = 2;
inline bool CSTrainRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainRsp::clear_charm() {
  charm_ = 0;
  clear_has_charm();
}
inline ::google::protobuf::int32 CSTrainRsp::charm() const {
  return charm_;
}
inline void CSTrainRsp::set_charm(::google::protobuf::int32 value) {
  set_has_charm();
  charm_ = value;
}

// required int32 trick = 3;
inline bool CSTrainRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainRsp::clear_trick() {
  trick_ = 0;
  clear_has_trick();
}
inline ::google::protobuf::int32 CSTrainRsp::trick() const {
  return trick_;
}
inline void CSTrainRsp::set_trick(::google::protobuf::int32 value) {
  set_has_trick();
  trick_ = value;
}

// required bool succ = 4;
inline bool CSTrainRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSTrainRsp::succ() const {
  return succ_;
}
inline void CSTrainRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSTrainDetermineReq

// -------------------------------------------------------------------

// CSTrainDetermineRsp

// -------------------------------------------------------------------

// CSExploreReq

// required uint32 option = 1;
inline bool CSExploreReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreReq::option() const {
  return option_;
}
inline void CSExploreReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreRsp

// required uint32 option = 1;
inline bool CSExploreRsp::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreRsp::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreRsp::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreRsp::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreRsp::option() const {
  return option_;
}
inline void CSExploreRsp::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// required uint32 map_id = 2;
inline bool CSExploreRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreRsp::map_id() const {
  return map_id_;
}
inline void CSExploreRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineReq

// required uint32 option = 1;
inline bool CSExploreDetermineReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreDetermineReq::option() const {
  return option_;
}
inline void CSExploreDetermineReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineRsp

// required uint32 map_id = 1;
inline bool CSExploreDetermineRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreDetermineRsp::map_id() const {
  return map_id_;
}
inline void CSExploreDetermineRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional .CSReward rewards = 2;
inline bool CSExploreDetermineRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreDetermineRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreDetermineRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreDetermineRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSExploreDetermineRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSQueryDowerReq

// -------------------------------------------------------------------

// CSQueryDowerRsp_Dower

// required uint32 id = 1;
inline bool CSQueryDowerRsp_Dower::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::id() const {
  return id_;
}
inline void CSQueryDowerRsp_Dower::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSQueryDowerRsp_Dower::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::level() const {
  return level_;
}
inline void CSQueryDowerRsp_Dower::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 max_level = 3;
inline bool CSQueryDowerRsp_Dower::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::max_level() const {
  return max_level_;
}
inline void CSQueryDowerRsp_Dower::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// required uint32 plus = 4;
inline bool CSQueryDowerRsp_Dower::has_plus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_plus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_has_plus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::plus() const {
  return plus_;
}
inline void CSQueryDowerRsp_Dower::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 each_plus = 5;
inline bool CSQueryDowerRsp_Dower::has_each_plus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_each_plus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_has_each_plus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_each_plus() {
  each_plus_ = 0u;
  clear_has_each_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::each_plus() const {
  return each_plus_;
}
inline void CSQueryDowerRsp_Dower::set_each_plus(::google::protobuf::uint32 value) {
  set_has_each_plus();
  each_plus_ = value;
}

// -------------------------------------------------------------------

// CSQueryDowerRsp

// repeated .CSQueryDowerRsp.Dower dower = 1;
inline int CSQueryDowerRsp::dower_size() const {
  return dower_.size();
}
inline void CSQueryDowerRsp::clear_dower() {
  dower_.Clear();
}
inline const ::CSQueryDowerRsp_Dower& CSQueryDowerRsp::dower(int index) const {
  return dower_.Get(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::mutable_dower(int index) {
  return dower_.Mutable(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::add_dower() {
  return dower_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
CSQueryDowerRsp::dower() const {
  return dower_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
CSQueryDowerRsp::mutable_dower() {
  return &dower_;
}

// optional uint32 timeout = 2;
inline bool CSQueryDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp::timeout() const {
  return timeout_;
}
inline void CSQueryDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoReq

// required uint32 id = 1;
inline bool CSDowerInfoReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::id() const {
  return id_;
}
inline void CSDowerInfoReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoReq::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoReq::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::level() const {
  return level_;
}
inline void CSDowerInfoReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoRsp

// required uint32 id = 1;
inline bool CSDowerInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::id() const {
  return id_;
}
inline void CSDowerInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::level() const {
  return level_;
}
inline void CSDowerInfoRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 next_exploit = 3;
inline bool CSDowerInfoRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerInfoRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerInfoRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerInfoRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// required uint32 next_time = 4;
inline bool CSDowerInfoRsp::has_next_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerInfoRsp::clear_has_next_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerInfoRsp::clear_next_time() {
  next_time_ = 0u;
  clear_has_next_time();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_time() const {
  return next_time_;
}
inline void CSDowerInfoRsp::set_next_time(::google::protobuf::uint32 value) {
  set_has_next_time();
  next_time_ = value;
}

// required uint32 diff_physical_attack = 5;
inline bool CSDowerInfoRsp::has_diff_physical_attack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_attack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_attack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSDowerInfoRsp::clear_diff_physical_attack() {
  diff_physical_attack_ = 0u;
  clear_has_diff_physical_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_attack() const {
  return diff_physical_attack_;
}
inline void CSDowerInfoRsp::set_diff_physical_attack(::google::protobuf::uint32 value) {
  set_has_diff_physical_attack();
  diff_physical_attack_ = value;
}

// required uint32 diff_magic_attack = 6;
inline bool CSDowerInfoRsp::has_diff_magic_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSDowerInfoRsp::clear_diff_magic_attack() {
  diff_magic_attack_ = 0u;
  clear_has_diff_magic_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_attack() const {
  return diff_magic_attack_;
}
inline void CSDowerInfoRsp::set_diff_magic_attack(::google::protobuf::uint32 value) {
  set_has_diff_magic_attack();
  diff_magic_attack_ = value;
}

// required uint32 diff_skill_attack = 7;
inline bool CSDowerInfoRsp::has_diff_skill_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSDowerInfoRsp::clear_diff_skill_attack() {
  diff_skill_attack_ = 0u;
  clear_has_diff_skill_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_attack() const {
  return diff_skill_attack_;
}
inline void CSDowerInfoRsp::set_diff_skill_attack(::google::protobuf::uint32 value) {
  set_has_diff_skill_attack();
  diff_skill_attack_ = value;
}

// required uint32 diff_physical_defence = 8;
inline bool CSDowerInfoRsp::has_diff_physical_defence() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_defence() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_defence() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSDowerInfoRsp::clear_diff_physical_defence() {
  diff_physical_defence_ = 0u;
  clear_has_diff_physical_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_defence() const {
  return diff_physical_defence_;
}
inline void CSDowerInfoRsp::set_diff_physical_defence(::google::protobuf::uint32 value) {
  set_has_diff_physical_defence();
  diff_physical_defence_ = value;
}

// required uint32 diff_magic_defence = 9;
inline bool CSDowerInfoRsp::has_diff_magic_defence() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_defence() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_defence() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSDowerInfoRsp::clear_diff_magic_defence() {
  diff_magic_defence_ = 0u;
  clear_has_diff_magic_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_defence() const {
  return diff_magic_defence_;
}
inline void CSDowerInfoRsp::set_diff_magic_defence(::google::protobuf::uint32 value) {
  set_has_diff_magic_defence();
  diff_magic_defence_ = value;
}

// required uint32 diff_skill_defence = 10;
inline bool CSDowerInfoRsp::has_diff_skill_defence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_defence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_defence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSDowerInfoRsp::clear_diff_skill_defence() {
  diff_skill_defence_ = 0u;
  clear_has_diff_skill_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_defence() const {
  return diff_skill_defence_;
}
inline void CSDowerInfoRsp::set_diff_skill_defence(::google::protobuf::uint32 value) {
  set_has_diff_skill_defence();
  diff_skill_defence_ = value;
}

// required uint32 diff_hp = 11;
inline bool CSDowerInfoRsp::has_diff_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSDowerInfoRsp::clear_has_diff_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSDowerInfoRsp::clear_diff_hp() {
  diff_hp_ = 0u;
  clear_has_diff_hp();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_hp() const {
  return diff_hp_;
}
inline void CSDowerInfoRsp::set_diff_hp(::google::protobuf::uint32 value) {
  set_has_diff_hp();
  diff_hp_ = value;
}

// required uint32 plus = 12;
inline bool CSDowerInfoRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSDowerInfoRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSDowerInfoRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSDowerInfoRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::plus() const {
  return plus_;
}
inline void CSDowerInfoRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// -------------------------------------------------------------------

// CSDowerReq

// required uint32 id = 1;
inline bool CSDowerReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerReq::id() const {
  return id_;
}
inline void CSDowerReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSDowerRsp

// required uint32 timeout = 1;
inline bool CSDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSDowerRsp::timeout() const {
  return timeout_;
}
inline void CSDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// required uint32 level = 2;
inline bool CSDowerRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerRsp::level() const {
  return level_;
}
inline void CSDowerRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 plus = 3;
inline bool CSDowerRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerRsp::plus() const {
  return plus_;
}
inline void CSDowerRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 next_exploit = 4;
inline bool CSDowerRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterReq

// required uint32 id = 1;
inline bool CSABMonsterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABMonsterReq::id() const {
  return id_;
}
inline void CSABMonsterReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 instance_type = 2 [default = 1];
inline bool CSABMonsterReq::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterReq::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterReq::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterReq::clear_instance_type() {
  instance_type_ = 1u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABMonsterReq::instance_type() const {
  return instance_type_;
}
inline void CSABMonsterReq::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterRsp_MonInfo

// required uint32 mon_id = 1;
inline bool CSABMonsterRsp_MonInfo::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterRsp_MonInfo::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterRsp_MonInfo::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterRsp_MonInfo::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSABMonsterRsp_MonInfo::mon_id() const {
  return mon_id_;
}
inline void CSABMonsterRsp_MonInfo::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_num = 2;
inline bool CSABMonsterRsp_MonInfo::has_mon_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterRsp_MonInfo::set_has_mon_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterRsp_MonInfo::clear_has_mon_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterRsp_MonInfo::clear_mon_num() {
  mon_num_ = 0u;
  clear_has_mon_num();
}
inline ::google::protobuf::uint32 CSABMonsterRsp_MonInfo::mon_num() const {
  return mon_num_;
}
inline void CSABMonsterRsp_MonInfo::set_mon_num(::google::protobuf::uint32 value) {
  set_has_mon_num();
  mon_num_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterRsp

// required uint32 id = 1;
inline bool CSABMonsterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABMonsterRsp::id() const {
  return id_;
}
inline void CSABMonsterRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 instance_type = 2;
inline bool CSABMonsterRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABMonsterRsp::instance_type() const {
  return instance_type_;
}
inline void CSABMonsterRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// repeated .CSABMonsterRsp.MonInfo mon_infos = 3;
inline int CSABMonsterRsp::mon_infos_size() const {
  return mon_infos_.size();
}
inline void CSABMonsterRsp::clear_mon_infos() {
  mon_infos_.Clear();
}
inline const ::CSABMonsterRsp_MonInfo& CSABMonsterRsp::mon_infos(int index) const {
  return mon_infos_.Get(index);
}
inline ::CSABMonsterRsp_MonInfo* CSABMonsterRsp::mutable_mon_infos(int index) {
  return mon_infos_.Mutable(index);
}
inline ::CSABMonsterRsp_MonInfo* CSABMonsterRsp::add_mon_infos() {
  return mon_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >&
CSABMonsterRsp::mon_infos() const {
  return mon_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >*
CSABMonsterRsp::mutable_mon_infos() {
  return &mon_infos_;
}

// -------------------------------------------------------------------

// CSAutoBattleReq

// required uint32 id = 1;
inline bool CSAutoBattleReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAutoBattleReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAutoBattleReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAutoBattleReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSAutoBattleReq::id() const {
  return id_;
}
inline void CSAutoBattleReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 param = 2;
inline bool CSAutoBattleReq::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAutoBattleReq::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAutoBattleReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAutoBattleReq::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CSAutoBattleReq::param() const {
  return param_;
}
inline void CSAutoBattleReq::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// CSAutoBattleRsp

// required uint32 ret = 1;
inline bool CSAutoBattleRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAutoBattleRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAutoBattleRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAutoBattleRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::ret() const {
  return ret_;
}
inline void CSAutoBattleRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint32 id = 2;
inline bool CSAutoBattleRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAutoBattleRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAutoBattleRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAutoBattleRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::id() const {
  return id_;
}
inline void CSAutoBattleRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 instance_type = 3;
inline bool CSAutoBattleRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAutoBattleRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAutoBattleRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAutoBattleRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::instance_type() const {
  return instance_type_;
}
inline void CSAutoBattleRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// -------------------------------------------------------------------

// CSABRewardRsp

// required uint32 id = 1;
inline bool CSABRewardRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABRewardRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABRewardRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABRewardRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABRewardRsp::id() const {
  return id_;
}
inline void CSABRewardRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 instance_type = 2;
inline bool CSABRewardRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABRewardRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABRewardRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABRewardRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABRewardRsp::instance_type() const {
  return instance_type_;
}
inline void CSABRewardRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// required .CSReward rewards = 3;
inline bool CSABRewardRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSABRewardRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSABRewardRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSABRewardRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSABRewardRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSABRewardRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSABRewardRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSCancelAutoBattleReq

// -------------------------------------------------------------------

// CSCancelAutoBattleRsp

// -------------------------------------------------------------------

// CSExchangeParameterReq

// required uint32 id = 1;
inline bool CSExchangeParameterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::id() const {
  return id_;
}
inline void CSExchangeParameterReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 param = 2;
inline int CSExchangeParameterReq::param_size() const {
  return param_.size();
}
inline void CSExchangeParameterReq::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::param(int index) const {
  return param_.Get(index);
}
inline void CSExchangeParameterReq::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSExchangeParameterReq::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeParameterReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeParameterReq::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSExchangeParameterRsp

// required bool succ = 1;
inline bool CSExchangeParameterRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSExchangeParameterRsp::succ() const {
  return succ_;
}
inline void CSExchangeParameterRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 id = 2;
inline bool CSExchangeParameterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeParameterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeParameterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeParameterRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::id() const {
  return id_;
}
inline void CSExchangeParameterRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 param = 3;
inline int CSExchangeParameterRsp::param_size() const {
  return param_.size();
}
inline void CSExchangeParameterRsp::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::param(int index) const {
  return param_.Get(index);
}
inline void CSExchangeParameterRsp::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSExchangeParameterRsp::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeParameterRsp::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeParameterRsp::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// ShopItemInfo_Item

// required uint32 item_id = 1;
inline bool ShopItemInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_id() const {
  return item_id_;
}
inline void ShopItemInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool ShopItemInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_num() const {
  return item_num_;
}
inline void ShopItemInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ShopItemInfo

// required uint32 index = 1;
inline bool ShopItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ShopItemInfo::index() const {
  return index_;
}
inline void ShopItemInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .ShopItemInfo.Item from_item = 2;
inline bool ShopItemInfo::has_from_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo::set_has_from_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo::clear_has_from_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo::clear_from_item() {
  if (from_item_ != NULL) from_item_->::ShopItemInfo_Item::Clear();
  clear_has_from_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::from_item() const {
  return from_item_ != NULL ? *from_item_ : *default_instance_->from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_from_item() {
  set_has_from_item();
  if (from_item_ == NULL) from_item_ = new ::ShopItemInfo_Item;
  return from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_from_item() {
  clear_has_from_item();
  ::ShopItemInfo_Item* temp = from_item_;
  from_item_ = NULL;
  return temp;
}

// required .ShopItemInfo.Item to_item = 3;
inline bool ShopItemInfo::has_to_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopItemInfo::set_has_to_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopItemInfo::clear_has_to_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopItemInfo::clear_to_item() {
  if (to_item_ != NULL) to_item_->::ShopItemInfo_Item::Clear();
  clear_has_to_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::to_item() const {
  return to_item_ != NULL ? *to_item_ : *default_instance_->to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_to_item() {
  set_has_to_item();
  if (to_item_ == NULL) to_item_ = new ::ShopItemInfo_Item;
  return to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_to_item() {
  clear_has_to_item();
  ::ShopItemInfo_Item* temp = to_item_;
  to_item_ = NULL;
  return temp;
}

// required bool is_buy = 4;
inline bool ShopItemInfo::has_is_buy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopItemInfo::set_has_is_buy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopItemInfo::clear_has_is_buy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopItemInfo::clear_is_buy() {
  is_buy_ = false;
  clear_has_is_buy();
}
inline bool ShopItemInfo::is_buy() const {
  return is_buy_;
}
inline void ShopItemInfo::set_is_buy(bool value) {
  set_has_is_buy();
  is_buy_ = value;
}

// -------------------------------------------------------------------

// CSGetShopItemsReq

// -------------------------------------------------------------------

// CSGetShopItemsRsp

// repeated .ShopItemInfo items = 1;
inline int CSGetShopItemsRsp::items_size() const {
  return items_.size();
}
inline void CSGetShopItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::ShopItemInfo& CSGetShopItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
CSGetShopItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
CSGetShopItemsRsp::mutable_items() {
  return &items_;
}

// optional uint32 rtimes = 2;
inline bool CSGetShopItemsRsp::has_rtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetShopItemsRsp::set_has_rtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetShopItemsRsp::clear_has_rtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetShopItemsRsp::clear_rtimes() {
  rtimes_ = 0u;
  clear_has_rtimes();
}
inline ::google::protobuf::uint32 CSGetShopItemsRsp::rtimes() const {
  return rtimes_;
}
inline void CSGetShopItemsRsp::set_rtimes(::google::protobuf::uint32 value) {
  set_has_rtimes();
  rtimes_ = value;
}

// -------------------------------------------------------------------

// CSBuyShopItemReq

// required uint32 index = 1;
inline bool CSBuyShopItemReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemReq::index() const {
  return index_;
}
inline void CSBuyShopItemReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSBuyShopItemRsp

// required uint32 index = 1;
inline bool CSBuyShopItemRsp::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemRsp::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemRsp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemRsp::index() const {
  return index_;
}
inline void CSBuyShopItemRsp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool succ = 2;
inline bool CSBuyShopItemRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBuyShopItemRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBuyShopItemRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBuyShopItemRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSBuyShopItemRsp::succ() const {
  return succ_;
}
inline void CSBuyShopItemRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemReq

// required uint32 userid = 1;
inline bool CSGetUserItemReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::userid() const {
  return userid_;
}
inline void CSGetUserItemReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserItemReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserItemReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserItemReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserItemReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserItemReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserItemReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserItemReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserItemReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserItemReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserItemReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemRsp

// required uint32 userid = 1;
inline bool CSGetUserItemRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::userid() const {
  return userid_;
}
inline void CSGetUserItemRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserItemRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserItemRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserItemRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserItemRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserItemRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserItemRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserItemRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserItemRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserItemRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserItemRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .CSItemInfo items = 4;
inline int CSGetUserItemRsp::items_size() const {
  return items_.size();
}
inline void CSGetUserItemRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSGetUserItemRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSGetUserItemRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSGetUserItemRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSGetUserAttributesReq

// required uint32 userid = 1;
inline bool CSGetUserAttributesReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::userid() const {
  return userid_;
}
inline void CSGetUserAttributesReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserAttributesReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserAttributesReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserAttributesReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserAttributesReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserAttributesReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserAttributesReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserAttributesReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserAttributesReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserAttributesReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserAttributesReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserAttributesRsp

// required uint32 userid = 1;
inline bool CSGetUserAttributesRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::userid() const {
  return userid_;
}
inline void CSGetUserAttributesRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserAttributesRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserAttributesRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserAttributesRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserAttributesRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserAttributesRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserAttributesRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .CSAttributesRsp attributes = 4;
inline bool CSGetUserAttributesRsp::has_attributes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_attributes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetUserAttributesRsp::clear_has_attributes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetUserAttributesRsp::clear_attributes() {
  if (attributes_ != NULL) attributes_->::CSAttributesRsp::Clear();
  clear_has_attributes();
}
inline const ::CSAttributesRsp& CSGetUserAttributesRsp::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::mutable_attributes() {
  set_has_attributes();
  if (attributes_ == NULL) attributes_ = new ::CSAttributesRsp;
  return attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::release_attributes() {
  clear_has_attributes();
  ::CSAttributesRsp* temp = attributes_;
  attributes_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSNotifyMoneyConfInfoRsp

// required uint32 pay = 1;
inline bool CSNotifyMoneyConfInfoRsp::has_pay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_pay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_pay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_pay() {
  pay_ = 0u;
  clear_has_pay();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::pay() const {
  return pay_;
}
inline void CSNotifyMoneyConfInfoRsp::set_pay(::google::protobuf::uint32 value) {
  set_has_pay();
  pay_ = value;
}

// required uint32 diamond = 2;
inline bool CSNotifyMoneyConfInfoRsp::has_diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::diamond() const {
  return diamond_;
}
inline void CSNotifyMoneyConfInfoRsp::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// required uint32 explore = 3;
inline bool CSNotifyMoneyConfInfoRsp::has_explore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_explore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_explore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_explore() {
  explore_ = 0u;
  clear_has_explore();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::explore() const {
  return explore_;
}
inline void CSNotifyMoneyConfInfoRsp::set_explore(::google::protobuf::uint32 value) {
  set_has_explore();
  explore_ = value;
}

// required uint32 train = 4;
inline bool CSNotifyMoneyConfInfoRsp::has_train() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_train() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_train() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_train() {
  train_ = 0u;
  clear_has_train();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::train() const {
  return train_;
}
inline void CSNotifyMoneyConfInfoRsp::set_train(::google::protobuf::uint32 value) {
  set_has_train();
  train_ = value;
}

// required uint32 hold_on_line_max_exp = 20;
inline bool CSNotifyMoneyConfInfoRsp::has_hold_on_line_max_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_hold_on_line_max_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_hold_on_line_max_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_hold_on_line_max_exp() {
  hold_on_line_max_exp_ = 0u;
  clear_has_hold_on_line_max_exp();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::hold_on_line_max_exp() const {
  return hold_on_line_max_exp_;
}
inline void CSNotifyMoneyConfInfoRsp::set_hold_on_line_max_exp(::google::protobuf::uint32 value) {
  set_has_hold_on_line_max_exp();
  hold_on_line_max_exp_ = value;
}

// -------------------------------------------------------------------

// CSNotifyLevelConfInfoRsp

// required uint32 pay_money = 1;
inline bool CSNotifyLevelConfInfoRsp::has_pay_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_pay_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_pay_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyLevelConfInfoRsp::clear_pay_money() {
  pay_money_ = 0u;
  clear_has_pay_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::pay_money() const {
  return pay_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_pay_money(::google::protobuf::uint32 value) {
  set_has_pay_money();
  pay_money_ = value;
}

// required uint32 mine_money = 2;
inline bool CSNotifyLevelConfInfoRsp::has_mine_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_mine_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_mine_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyLevelConfInfoRsp::clear_mine_money() {
  mine_money_ = 0u;
  clear_has_mine_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::mine_money() const {
  return mine_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_mine_money(::google::protobuf::uint32 value) {
  set_has_mine_money();
  mine_money_ = value;
}

// required uint32 train_money = 3;
inline bool CSNotifyLevelConfInfoRsp::has_train_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_train_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_train_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyLevelConfInfoRsp::clear_train_money() {
  train_money_ = 0u;
  clear_has_train_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::train_money() const {
  return train_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_train_money(::google::protobuf::uint32 value) {
  set_has_train_money();
  train_money_ = value;
}

// required uint32 suspend_limit_exp = 4;
inline bool CSNotifyLevelConfInfoRsp::has_suspend_limit_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_suspend_limit_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_suspend_limit_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNotifyLevelConfInfoRsp::clear_suspend_limit_exp() {
  suspend_limit_exp_ = 0u;
  clear_has_suspend_limit_exp();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::suspend_limit_exp() const {
  return suspend_limit_exp_;
}
inline void CSNotifyLevelConfInfoRsp::set_suspend_limit_exp(::google::protobuf::uint32 value) {
  set_has_suspend_limit_exp();
  suspend_limit_exp_ = value;
}

// -------------------------------------------------------------------

// CSNotifyVipConfInfoRsp

// required uint32 hold_on_line_max_time = 1;
inline bool CSNotifyVipConfInfoRsp::has_hold_on_line_max_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyVipConfInfoRsp::set_has_hold_on_line_max_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyVipConfInfoRsp::clear_has_hold_on_line_max_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyVipConfInfoRsp::clear_hold_on_line_max_time() {
  hold_on_line_max_time_ = 0u;
  clear_has_hold_on_line_max_time();
}
inline ::google::protobuf::uint32 CSNotifyVipConfInfoRsp::hold_on_line_max_time() const {
  return hold_on_line_max_time_;
}
inline void CSNotifyVipConfInfoRsp::set_hold_on_line_max_time(::google::protobuf::uint32 value) {
  set_has_hold_on_line_max_time();
  hold_on_line_max_time_ = value;
}

// -------------------------------------------------------------------

// CSNotifyCliSysFlagRsp_SysFlag

// required .CSNotifyCliSysFlagRsp.SysIndex sys_index = 1;
inline bool CSNotifyCliSysFlagRsp_SysFlag::has_sys_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_has_sys_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_has_sys_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_sys_index() {
  sys_index_ = 2;
  clear_has_sys_index();
}
inline ::CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysFlag::sys_index() const {
  return static_cast< ::CSNotifyCliSysFlagRsp_SysIndex >(sys_index_);
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_sys_index(::CSNotifyCliSysFlagRsp_SysIndex value) {
  GOOGLE_DCHECK(::CSNotifyCliSysFlagRsp_SysIndex_IsValid(value));
  set_has_sys_index();
  sys_index_ = value;
}

// required bool flag = 2;
inline bool CSNotifyCliSysFlagRsp_SysFlag::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool CSNotifyCliSysFlagRsp_SysFlag::flag() const {
  return flag_;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// CSNotifyCliSysFlagRsp

// repeated .CSNotifyCliSysFlagRsp.SysFlag sys_flags = 1;
inline int CSNotifyCliSysFlagRsp::sys_flags_size() const {
  return sys_flags_.size();
}
inline void CSNotifyCliSysFlagRsp::clear_sys_flags() {
  sys_flags_.Clear();
}
inline const ::CSNotifyCliSysFlagRsp_SysFlag& CSNotifyCliSysFlagRsp::sys_flags(int index) const {
  return sys_flags_.Get(index);
}
inline ::CSNotifyCliSysFlagRsp_SysFlag* CSNotifyCliSysFlagRsp::mutable_sys_flags(int index) {
  return sys_flags_.Mutable(index);
}
inline ::CSNotifyCliSysFlagRsp_SysFlag* CSNotifyCliSysFlagRsp::add_sys_flags() {
  return sys_flags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >&
CSNotifyCliSysFlagRsp::sys_flags() const {
  return sys_flags_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >*
CSNotifyCliSysFlagRsp::mutable_sys_flags() {
  return &sys_flags_;
}

// -------------------------------------------------------------------

// PartnerInfo

// required uint32 userid = 1;
inline bool PartnerInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PartnerInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PartnerInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PartnerInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PartnerInfo::userid() const {
  return userid_;
}
inline void PartnerInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool PartnerInfo::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PartnerInfo::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PartnerInfo::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PartnerInfo::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 PartnerInfo::reg_tm() const {
  return reg_tm_;
}
inline void PartnerInfo::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool PartnerInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PartnerInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PartnerInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PartnerInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 PartnerInfo::channel_id() const {
  return channel_id_;
}
inline void PartnerInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool PartnerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PartnerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PartnerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PartnerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PartnerInfo::name() const {
  return *name_;
}
inline void PartnerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PartnerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PartnerInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PartnerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PartnerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 lv = 5;
inline bool PartnerInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PartnerInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PartnerInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PartnerInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 PartnerInfo::lv() const {
  return lv_;
}
inline void PartnerInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 type = 6;
inline bool PartnerInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PartnerInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PartnerInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PartnerInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PartnerInfo::type() const {
  return type_;
}
inline void PartnerInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 prestige = 7;
inline bool PartnerInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PartnerInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PartnerInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PartnerInfo::clear_prestige() {
  prestige_ = 0u;
  clear_has_prestige();
}
inline ::google::protobuf::uint32 PartnerInfo::prestige() const {
  return prestige_;
}
inline void PartnerInfo::set_prestige(::google::protobuf::uint32 value) {
  set_has_prestige();
  prestige_ = value;
}

// required uint32 pvai_rank = 8;
inline bool PartnerInfo::has_pvai_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PartnerInfo::set_has_pvai_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PartnerInfo::clear_has_pvai_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PartnerInfo::clear_pvai_rank() {
  pvai_rank_ = 0u;
  clear_has_pvai_rank();
}
inline ::google::protobuf::uint32 PartnerInfo::pvai_rank() const {
  return pvai_rank_;
}
inline void PartnerInfo::set_pvai_rank(::google::protobuf::uint32 value) {
  set_has_pvai_rank();
  pvai_rank_ = value;
}

// optional uint32 time = 9 [default = 0];
inline bool PartnerInfo::has_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PartnerInfo::set_has_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PartnerInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PartnerInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PartnerInfo::time() const {
  return time_;
}
inline void PartnerInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 killed_times = 10 [default = 0];
inline bool PartnerInfo::has_killed_times() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PartnerInfo::set_has_killed_times() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PartnerInfo::clear_has_killed_times() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PartnerInfo::clear_killed_times() {
  killed_times_ = 0u;
  clear_has_killed_times();
}
inline ::google::protobuf::uint32 PartnerInfo::killed_times() const {
  return killed_times_;
}
inline void PartnerInfo::set_killed_times(::google::protobuf::uint32 value) {
  set_has_killed_times();
  killed_times_ = value;
}

// optional uint32 kill_punish = 11 [default = 0];
inline bool PartnerInfo::has_kill_punish() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PartnerInfo::set_has_kill_punish() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PartnerInfo::clear_has_kill_punish() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PartnerInfo::clear_kill_punish() {
  kill_punish_ = 0u;
  clear_has_kill_punish();
}
inline ::google::protobuf::uint32 PartnerInfo::kill_punish() const {
  return kill_punish_;
}
inline void PartnerInfo::set_kill_punish(::google::protobuf::uint32 value) {
  set_has_kill_punish();
  kill_punish_ = value;
}

// optional uint32 redname_lv = 12 [default = 0];
inline bool PartnerInfo::has_redname_lv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PartnerInfo::set_has_redname_lv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PartnerInfo::clear_has_redname_lv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PartnerInfo::clear_redname_lv() {
  redname_lv_ = 0u;
  clear_has_redname_lv();
}
inline ::google::protobuf::uint32 PartnerInfo::redname_lv() const {
  return redname_lv_;
}
inline void PartnerInfo::set_redname_lv(::google::protobuf::uint32 value) {
  set_has_redname_lv();
  redname_lv_ = value;
}

// optional uint32 kills = 13 [default = 0];
inline bool PartnerInfo::has_kills() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PartnerInfo::set_has_kills() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PartnerInfo::clear_has_kills() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PartnerInfo::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 PartnerInfo::kills() const {
  return kills_;
}
inline void PartnerInfo::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
}

// optional uint32 isol = 14 [default = 0];
inline bool PartnerInfo::has_isol() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PartnerInfo::set_has_isol() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PartnerInfo::clear_has_isol() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PartnerInfo::clear_isol() {
  isol_ = 0u;
  clear_has_isol();
}
inline ::google::protobuf::uint32 PartnerInfo::isol() const {
  return isol_;
}
inline void PartnerInfo::set_isol(::google::protobuf::uint32 value) {
  set_has_isol();
  isol_ = value;
}

// optional uint32 powerscore = 15 [default = 0];
inline bool PartnerInfo::has_powerscore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PartnerInfo::set_has_powerscore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PartnerInfo::clear_has_powerscore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PartnerInfo::clear_powerscore() {
  powerscore_ = 0u;
  clear_has_powerscore();
}
inline ::google::protobuf::uint32 PartnerInfo::powerscore() const {
  return powerscore_;
}
inline void PartnerInfo::set_powerscore(::google::protobuf::uint32 value) {
  set_has_powerscore();
  powerscore_ = value;
}

// optional uint32 left_pvped_times = 16 [default = 0];
inline bool PartnerInfo::has_left_pvped_times() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PartnerInfo::set_has_left_pvped_times() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PartnerInfo::clear_has_left_pvped_times() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PartnerInfo::clear_left_pvped_times() {
  left_pvped_times_ = 0u;
  clear_has_left_pvped_times();
}
inline ::google::protobuf::uint32 PartnerInfo::left_pvped_times() const {
  return left_pvped_times_;
}
inline void PartnerInfo::set_left_pvped_times(::google::protobuf::uint32 value) {
  set_has_left_pvped_times();
  left_pvped_times_ = value;
}

// optional bytes gname = 17 [default = ""];
inline bool PartnerInfo::has_gname() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PartnerInfo::set_has_gname() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PartnerInfo::clear_has_gname() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PartnerInfo::clear_gname() {
  if (gname_ != &::google::protobuf::internal::kEmptyString) {
    gname_->clear();
  }
  clear_has_gname();
}
inline const ::std::string& PartnerInfo::gname() const {
  return *gname_;
}
inline void PartnerInfo::set_gname(const ::std::string& value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void PartnerInfo::set_gname(const char* value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void PartnerInfo::set_gname(const void* value, size_t size) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PartnerInfo::mutable_gname() {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  return gname_;
}
inline ::std::string* PartnerInfo::release_gname() {
  clear_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gname_;
    gname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSNearByReq

// -------------------------------------------------------------------

// CSNearByRsp

// repeated .PartnerInfo nearby = 1;
inline int CSNearByRsp::nearby_size() const {
  return nearby_.size();
}
inline void CSNearByRsp::clear_nearby() {
  nearby_.Clear();
}
inline const ::PartnerInfo& CSNearByRsp::nearby(int index) const {
  return nearby_.Get(index);
}
inline ::PartnerInfo* CSNearByRsp::mutable_nearby(int index) {
  return nearby_.Mutable(index);
}
inline ::PartnerInfo* CSNearByRsp::add_nearby() {
  return nearby_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSNearByRsp::nearby() const {
  return nearby_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSNearByRsp::mutable_nearby() {
  return &nearby_;
}

// -------------------------------------------------------------------

// CSPartnerInfoReq

// -------------------------------------------------------------------

// CSAddPartnerReq

// required bytes name = 1;
inline bool CSAddPartnerReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddPartnerReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddPartnerReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddPartnerReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSAddPartnerReq::name() const {
  return *name_;
}
inline void CSAddPartnerReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSAddPartnerReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSAddPartnerReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSAddPartnerReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSAddPartnerReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSDelPartnerReq

// required uint32 userid = 1;
inline bool CSDelPartnerReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelPartnerReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelPartnerReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelPartnerReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::userid() const {
  return userid_;
}
inline void CSDelPartnerReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSDelPartnerReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDelPartnerReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDelPartnerReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDelPartnerReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::reg_tm() const {
  return reg_tm_;
}
inline void CSDelPartnerReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSDelPartnerReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDelPartnerReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDelPartnerReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDelPartnerReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::channel_id() const {
  return channel_id_;
}
inline void CSDelPartnerReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSPartnerInfoRsp

// repeated .PartnerInfo partner = 1;
inline int CSPartnerInfoRsp::partner_size() const {
  return partner_.size();
}
inline void CSPartnerInfoRsp::clear_partner() {
  partner_.Clear();
}
inline const ::PartnerInfo& CSPartnerInfoRsp::partner(int index) const {
  return partner_.Get(index);
}
inline ::PartnerInfo* CSPartnerInfoRsp::mutable_partner(int index) {
  return partner_.Mutable(index);
}
inline ::PartnerInfo* CSPartnerInfoRsp::add_partner() {
  return partner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSPartnerInfoRsp::partner() const {
  return partner_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSPartnerInfoRsp::mutable_partner() {
  return &partner_;
}

// -------------------------------------------------------------------

// CSAddPartnerRsp

// optional .CSAddPartnerRsp.AddPartnerType rsp = 1 [default = succ];
inline bool CSAddPartnerRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddPartnerRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddPartnerRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddPartnerRsp::clear_rsp() {
  rsp_ = 1;
  clear_has_rsp();
}
inline ::CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp::rsp() const {
  return static_cast< ::CSAddPartnerRsp_AddPartnerType >(rsp_);
}
inline void CSAddPartnerRsp::set_rsp(::CSAddPartnerRsp_AddPartnerType value) {
  GOOGLE_DCHECK(::CSAddPartnerRsp_AddPartnerType_IsValid(value));
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSDelPartnerRsp

// required bool succ = 1;
inline bool CSDelPartnerRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelPartnerRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelPartnerRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelPartnerRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSDelPartnerRsp::succ() const {
  return succ_;
}
inline void CSDelPartnerRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// DndInfo

// required uint32 userid = 1;
inline bool DndInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DndInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DndInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DndInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 DndInfo::userid() const {
  return userid_;
}
inline void DndInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool DndInfo::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DndInfo::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DndInfo::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DndInfo::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 DndInfo::reg_tm() const {
  return reg_tm_;
}
inline void DndInfo::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool DndInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DndInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DndInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DndInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 DndInfo::channel_id() const {
  return channel_id_;
}
inline void DndInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool DndInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DndInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DndInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DndInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DndInfo::name() const {
  return *name_;
}
inline void DndInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DndInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DndInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DndInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DndInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSAddDndReq

// required uint32 userid = 1;
inline bool CSAddDndReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddDndReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddDndReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddDndReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSAddDndReq::userid() const {
  return userid_;
}
inline void CSAddDndReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSAddDndReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddDndReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddDndReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddDndReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSAddDndReq::reg_tm() const {
  return reg_tm_;
}
inline void CSAddDndReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSAddDndReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAddDndReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAddDndReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAddDndReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSAddDndReq::channel_id() const {
  return channel_id_;
}
inline void CSAddDndReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSDndInfoReq

// -------------------------------------------------------------------

// CSDelDndReq

// required uint32 userid = 1;
inline bool CSDelDndReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelDndReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelDndReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelDndReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSDelDndReq::userid() const {
  return userid_;
}
inline void CSDelDndReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSDelDndReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDelDndReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDelDndReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDelDndReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSDelDndReq::reg_tm() const {
  return reg_tm_;
}
inline void CSDelDndReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSDelDndReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDelDndReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDelDndReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDelDndReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSDelDndReq::channel_id() const {
  return channel_id_;
}
inline void CSDelDndReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSDndInfoRsp

// repeated .DndInfo dnd = 1;
inline int CSDndInfoRsp::dnd_size() const {
  return dnd_.size();
}
inline void CSDndInfoRsp::clear_dnd() {
  dnd_.Clear();
}
inline const ::DndInfo& CSDndInfoRsp::dnd(int index) const {
  return dnd_.Get(index);
}
inline ::DndInfo* CSDndInfoRsp::mutable_dnd(int index) {
  return dnd_.Mutable(index);
}
inline ::DndInfo* CSDndInfoRsp::add_dnd() {
  return dnd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DndInfo >&
CSDndInfoRsp::dnd() const {
  return dnd_;
}
inline ::google::protobuf::RepeatedPtrField< ::DndInfo >*
CSDndInfoRsp::mutable_dnd() {
  return &dnd_;
}

// -------------------------------------------------------------------

// CSAddDndRsp

// required bool succ = 1;
inline bool CSAddDndRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddDndRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddDndRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddDndRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSAddDndRsp::succ() const {
  return succ_;
}
inline void CSAddDndRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSDelDndRsp

// required bool succ = 1;
inline bool CSDelDndRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelDndRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelDndRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelDndRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSDelDndRsp::succ() const {
  return succ_;
}
inline void CSDelDndRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSNoteReq

// required .NoteType type = 1;
inline bool CSNoteReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline NoteType CSNoteReq::type() const {
  return static_cast< NoteType >(type_);
}
inline void CSNoteReq::set_type(NoteType value) {
  GOOGLE_DCHECK(NoteType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required bytes content = 2;
inline bool CSNoteReq::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteReq::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteReq::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSNoteReq::content() const {
  return *content_;
}
inline void CSNoteReq::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteReq::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteReq::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteReq::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSNoteReq::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 seq = 3;
inline bool CSNoteReq::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNoteReq::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNoteReq::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNoteReq::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CSNoteReq::seq() const {
  return seq_;
}
inline void CSNoteReq::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// required bytes name = 4;
inline bool CSNoteReq::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNoteReq::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNoteReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNoteReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSNoteReq::name() const {
  return *name_;
}
inline void CSNoteReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSNoteReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 userid = 5 [default = 0];
inline bool CSNoteReq::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNoteReq::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNoteReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNoteReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSNoteReq::userid() const {
  return userid_;
}
inline void CSNoteReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_tm = 6 [default = 0];
inline bool CSNoteReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSNoteReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSNoteReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSNoteReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSNoteReq::reg_tm() const {
  return reg_tm_;
}
inline void CSNoteReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// optional uint32 channel_id = 7 [default = 0];
inline bool CSNoteReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSNoteReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSNoteReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSNoteReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSNoteReq::channel_id() const {
  return channel_id_;
}
inline void CSNoteReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bool dnd = 8 [default = true];
inline bool CSNoteReq::has_dnd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSNoteReq::set_has_dnd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSNoteReq::clear_has_dnd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSNoteReq::clear_dnd() {
  dnd_ = true;
  clear_has_dnd();
}
inline bool CSNoteReq::dnd() const {
  return dnd_;
}
inline void CSNoteReq::set_dnd(bool value) {
  set_has_dnd();
  dnd_ = value;
}

// -------------------------------------------------------------------

// CSNoteRsp

// required uint32 seq = 1;
inline bool CSNoteRsp::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteRsp::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteRsp::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteRsp::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CSNoteRsp::seq() const {
  return seq_;
}
inline void CSNoteRsp::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// required .NoteResult succ = 2;
inline bool CSNoteRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteRsp::clear_succ() {
  succ_ = 1;
  clear_has_succ();
}
inline NoteResult CSNoteRsp::succ() const {
  return static_cast< NoteResult >(succ_);
}
inline void CSNoteRsp::set_succ(NoteResult value) {
  GOOGLE_DCHECK(NoteResult_IsValid(value));
  set_has_succ();
  succ_ = value;
}

// optional uint32 dead = 3;
inline bool CSNoteRsp::has_dead() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNoteRsp::set_has_dead() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNoteRsp::clear_has_dead() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNoteRsp::clear_dead() {
  dead_ = 0u;
  clear_has_dead();
}
inline ::google::protobuf::uint32 CSNoteRsp::dead() const {
  return dead_;
}
inline void CSNoteRsp::set_dead(::google::protobuf::uint32 value) {
  set_has_dead();
  dead_ = value;
}

// -------------------------------------------------------------------

// CSNoteShow

// required .NoteType type = 1;
inline bool CSNoteShow::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteShow::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteShow::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteShow::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline NoteType CSNoteShow::type() const {
  return static_cast< NoteType >(type_);
}
inline void CSNoteShow::set_type(NoteType value) {
  GOOGLE_DCHECK(NoteType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required bytes content = 2;
inline bool CSNoteShow::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteShow::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteShow::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteShow::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSNoteShow::content() const {
  return *content_;
}
inline void CSNoteShow::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteShow::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteShow::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteShow::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSNoteShow::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes name = 3;
inline bool CSNoteShow::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNoteShow::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNoteShow::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNoteShow::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSNoteShow::name() const {
  return *name_;
}
inline void CSNoteShow::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteShow::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteShow::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteShow::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSNoteShow::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes tname = 4;
inline bool CSNoteShow::has_tname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNoteShow::set_has_tname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNoteShow::clear_has_tname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNoteShow::clear_tname() {
  if (tname_ != &::google::protobuf::internal::kEmptyString) {
    tname_->clear();
  }
  clear_has_tname();
}
inline const ::std::string& CSNoteShow::tname() const {
  return *tname_;
}
inline void CSNoteShow::set_tname(const ::std::string& value) {
  set_has_tname();
  if (tname_ == &::google::protobuf::internal::kEmptyString) {
    tname_ = new ::std::string;
  }
  tname_->assign(value);
}
inline void CSNoteShow::set_tname(const char* value) {
  set_has_tname();
  if (tname_ == &::google::protobuf::internal::kEmptyString) {
    tname_ = new ::std::string;
  }
  tname_->assign(value);
}
inline void CSNoteShow::set_tname(const void* value, size_t size) {
  set_has_tname();
  if (tname_ == &::google::protobuf::internal::kEmptyString) {
    tname_ = new ::std::string;
  }
  tname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteShow::mutable_tname() {
  set_has_tname();
  if (tname_ == &::google::protobuf::internal::kEmptyString) {
    tname_ = new ::std::string;
  }
  return tname_;
}
inline ::std::string* CSNoteShow::release_tname() {
  clear_has_tname();
  if (tname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tname_;
    tname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 userid = 5;
inline bool CSNoteShow::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNoteShow::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNoteShow::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNoteShow::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSNoteShow::userid() const {
  return userid_;
}
inline void CSNoteShow::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_tm = 6;
inline bool CSNoteShow::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSNoteShow::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSNoteShow::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSNoteShow::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSNoteShow::reg_tm() const {
  return reg_tm_;
}
inline void CSNoteShow::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// optional uint32 channel_id = 7;
inline bool CSNoteShow::has_channel_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSNoteShow::set_has_channel_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSNoteShow::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSNoteShow::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSNoteShow::channel_id() const {
  return channel_id_;
}
inline void CSNoteShow::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bool system = 8;
inline bool CSNoteShow::has_system() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSNoteShow::set_has_system() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSNoteShow::clear_has_system() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSNoteShow::clear_system() {
  system_ = false;
  clear_has_system();
}
inline bool CSNoteShow::system() const {
  return system_;
}
inline void CSNoteShow::set_system(bool value) {
  set_has_system();
  system_ = value;
}

// optional uint32 isgmuser = 9;
inline bool CSNoteShow::has_isgmuser() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSNoteShow::set_has_isgmuser() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSNoteShow::clear_has_isgmuser() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSNoteShow::clear_isgmuser() {
  isgmuser_ = 0u;
  clear_has_isgmuser();
}
inline ::google::protobuf::uint32 CSNoteShow::isgmuser() const {
  return isgmuser_;
}
inline void CSNoteShow::set_isgmuser(::google::protobuf::uint32 value) {
  set_has_isgmuser();
  isgmuser_ = value;
}

// -------------------------------------------------------------------

// CSMailReq

// required uint32 mailid = 1;
inline bool CSMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSMailReq::mailid() const {
  return mailid_;
}
inline void CSMailReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// AttachItem

// required uint32 id = 1;
inline bool AttachItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttachItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttachItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttachItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AttachItem::id() const {
  return id_;
}
inline void AttachItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool AttachItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttachItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttachItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttachItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AttachItem::num() const {
  return num_;
}
inline void AttachItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSMailRsp

// required uint32 mailid = 1;
inline bool CSMailRsp::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailRsp::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailRsp::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailRsp::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSMailRsp::mailid() const {
  return mailid_;
}
inline void CSMailRsp::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional bytes title = 2;
inline bool CSMailRsp::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailRsp::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailRsp::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailRsp::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CSMailRsp::title() const {
  return *title_;
}
inline void CSMailRsp::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailRsp::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailRsp::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CSMailRsp::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes from = 3;
inline bool CSMailRsp::has_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMailRsp::set_has_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMailRsp::clear_has_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMailRsp::clear_from() {
  if (from_ != &::google::protobuf::internal::kEmptyString) {
    from_->clear();
  }
  clear_has_from();
}
inline const ::std::string& CSMailRsp::from() const {
  return *from_;
}
inline void CSMailRsp::set_from(const ::std::string& value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailRsp::set_from(const char* value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailRsp::set_from(const void* value, size_t size) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_from() {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  return from_;
}
inline ::std::string* CSMailRsp::release_from() {
  clear_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_;
    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes content = 4;
inline bool CSMailRsp::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMailRsp::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMailRsp::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMailRsp::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSMailRsp::content() const {
  return *content_;
}
inline void CSMailRsp::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailRsp::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailRsp::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSMailRsp::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .AttachItem items = 5;
inline int CSMailRsp::items_size() const {
  return items_.size();
}
inline void CSMailRsp::clear_items() {
  items_.Clear();
}
inline const ::AttachItem& CSMailRsp::items(int index) const {
  return items_.Get(index);
}
inline ::AttachItem* CSMailRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::AttachItem* CSMailRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AttachItem >&
CSMailRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::AttachItem >*
CSMailRsp::mutable_items() {
  return &items_;
}

// required bool hasget = 6;
inline bool CSMailRsp::has_hasget() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMailRsp::set_has_hasget() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMailRsp::clear_has_hasget() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMailRsp::clear_hasget() {
  hasget_ = false;
  clear_has_hasget();
}
inline bool CSMailRsp::hasget() const {
  return hasget_;
}
inline void CSMailRsp::set_hasget(bool value) {
  set_has_hasget();
  hasget_ = value;
}

// required bytes from_tm = 7;
inline bool CSMailRsp::has_from_tm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMailRsp::set_has_from_tm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMailRsp::clear_has_from_tm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMailRsp::clear_from_tm() {
  if (from_tm_ != &::google::protobuf::internal::kEmptyString) {
    from_tm_->clear();
  }
  clear_has_from_tm();
}
inline const ::std::string& CSMailRsp::from_tm() const {
  return *from_tm_;
}
inline void CSMailRsp::set_from_tm(const ::std::string& value) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(value);
}
inline void CSMailRsp::set_from_tm(const char* value) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(value);
}
inline void CSMailRsp::set_from_tm(const void* value, size_t size) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_from_tm() {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  return from_tm_;
}
inline ::std::string* CSMailRsp::release_from_tm() {
  clear_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_tm_;
    from_tm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MailList

// required uint32 mailid = 1;
inline bool MailList::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailList::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailList::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailList::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailList::mailid() const {
  return mailid_;
}
inline void MailList::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional bytes title = 2;
inline bool MailList::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailList::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailList::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailList::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailList::title() const {
  return *title_;
}
inline void MailList::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailList::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailList::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailList::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MailList::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool hasread = 3;
inline bool MailList::has_hasread() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailList::set_has_hasread() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailList::clear_has_hasread() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailList::clear_hasread() {
  hasread_ = false;
  clear_has_hasread();
}
inline bool MailList::hasread() const {
  return hasread_;
}
inline void MailList::set_hasread(bool value) {
  set_has_hasread();
  hasread_ = value;
}

// required bool hasattach = 4;
inline bool MailList::has_hasattach() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailList::set_has_hasattach() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailList::clear_has_hasattach() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailList::clear_hasattach() {
  hasattach_ = false;
  clear_has_hasattach();
}
inline bool MailList::hasattach() const {
  return hasattach_;
}
inline void MailList::set_hasattach(bool value) {
  set_has_hasattach();
  hasattach_ = value;
}

// -------------------------------------------------------------------

// CSMailListReq

// -------------------------------------------------------------------

// CSMailListRsp

// repeated .MailList maillist = 1;
inline int CSMailListRsp::maillist_size() const {
  return maillist_.size();
}
inline void CSMailListRsp::clear_maillist() {
  maillist_.Clear();
}
inline const ::MailList& CSMailListRsp::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::MailList* CSMailListRsp::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::MailList* CSMailListRsp::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailList >&
CSMailListRsp::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailList >*
CSMailListRsp::mutable_maillist() {
  return &maillist_;
}

// optional .CSMailRsp mail = 2;
inline bool CSMailListRsp::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailListRsp::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailListRsp::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailListRsp::clear_mail() {
  if (mail_ != NULL) mail_->::CSMailRsp::Clear();
  clear_has_mail();
}
inline const ::CSMailRsp& CSMailListRsp::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::CSMailRsp* CSMailListRsp::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::CSMailRsp;
  return mail_;
}
inline ::CSMailRsp* CSMailListRsp::release_mail() {
  clear_has_mail();
  ::CSMailRsp* temp = mail_;
  mail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSDelMailReq

// required uint32 mailid = 1;
inline bool CSDelMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelMailReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSDelMailReq::mailid() const {
  return mailid_;
}
inline void CSDelMailReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// CSDelMailRsp

// required bool rsp = 1;
inline bool CSDelMailRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelMailRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelMailRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelMailRsp::clear_rsp() {
  rsp_ = false;
  clear_has_rsp();
}
inline bool CSDelMailRsp::rsp() const {
  return rsp_;
}
inline void CSDelMailRsp::set_rsp(bool value) {
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSGetAttachReq

// required uint32 mailid = 1;
inline bool CSGetAttachReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetAttachReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetAttachReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetAttachReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSGetAttachReq::mailid() const {
  return mailid_;
}
inline void CSGetAttachReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// CSGetAttachRsp

// required uint32 rsp = 1;
inline bool CSGetAttachRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetAttachRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetAttachRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetAttachRsp::clear_rsp() {
  rsp_ = 0u;
  clear_has_rsp();
}
inline ::google::protobuf::uint32 CSGetAttachRsp::rsp() const {
  return rsp_;
}
inline void CSGetAttachRsp::set_rsp(::google::protobuf::uint32 value) {
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSNewMailRsp

// -------------------------------------------------------------------

// CSActivityListReq

// -------------------------------------------------------------------

// Activity_Step

// required uint32 step_type = 1;
inline bool Activity_Step::has_step_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity_Step::set_has_step_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity_Step::clear_has_step_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity_Step::clear_step_type() {
  step_type_ = 0u;
  clear_has_step_type();
}
inline ::google::protobuf::uint32 Activity_Step::step_type() const {
  return step_type_;
}
inline void Activity_Step::set_step_type(::google::protobuf::uint32 value) {
  set_has_step_type();
  step_type_ = value;
}

// required uint32 step_id = 2;
inline bool Activity_Step::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity_Step::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity_Step::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity_Step::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 Activity_Step::step_id() const {
  return step_id_;
}
inline void Activity_Step::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool Activity_Step::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity_Step::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity_Step::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity_Step::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 Activity_Step::step_value() const {
  return step_value_;
}
inline void Activity_Step::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// required uint32 is_need_step = 4;
inline bool Activity_Step::has_is_need_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity_Step::set_has_is_need_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity_Step::clear_has_is_need_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity_Step::clear_is_need_step() {
  is_need_step_ = 0u;
  clear_has_is_need_step();
}
inline ::google::protobuf::uint32 Activity_Step::is_need_step() const {
  return is_need_step_;
}
inline void Activity_Step::set_is_need_step(::google::protobuf::uint32 value) {
  set_has_is_need_step();
  is_need_step_ = value;
}

// -------------------------------------------------------------------

// Activity_Info

// required uint32 activity_id = 1;
inline bool Activity_Info::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity_Info::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity_Info::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity_Info::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 Activity_Info::activity_id() const {
  return activity_id_;
}
inline void Activity_Info::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// repeated .Activity_Step activity_steps = 2;
inline int Activity_Info::activity_steps_size() const {
  return activity_steps_.size();
}
inline void Activity_Info::clear_activity_steps() {
  activity_steps_.Clear();
}
inline const ::Activity_Step& Activity_Info::activity_steps(int index) const {
  return activity_steps_.Get(index);
}
inline ::Activity_Step* Activity_Info::mutable_activity_steps(int index) {
  return activity_steps_.Mutable(index);
}
inline ::Activity_Step* Activity_Info::add_activity_steps() {
  return activity_steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Step >&
Activity_Info::activity_steps() const {
  return activity_steps_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Step >*
Activity_Info::mutable_activity_steps() {
  return &activity_steps_;
}

// required uint32 revc_reward_times = 3;
inline bool Activity_Info::has_revc_reward_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity_Info::set_has_revc_reward_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity_Info::clear_has_revc_reward_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity_Info::clear_revc_reward_times() {
  revc_reward_times_ = 0u;
  clear_has_revc_reward_times();
}
inline ::google::protobuf::uint32 Activity_Info::revc_reward_times() const {
  return revc_reward_times_;
}
inline void Activity_Info::set_revc_reward_times(::google::protobuf::uint32 value) {
  set_has_revc_reward_times();
  revc_reward_times_ = value;
}

// required uint32 status = 4;
inline bool Activity_Info::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity_Info::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity_Info::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity_Info::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 Activity_Info::status() const {
  return status_;
}
inline void Activity_Info::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 time_limit = 5;
inline bool Activity_Info::has_time_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Activity_Info::set_has_time_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Activity_Info::clear_has_time_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Activity_Info::clear_time_limit() {
  time_limit_ = 0u;
  clear_has_time_limit();
}
inline ::google::protobuf::uint32 Activity_Info::time_limit() const {
  return time_limit_;
}
inline void Activity_Info::set_time_limit(::google::protobuf::uint32 value) {
  set_has_time_limit();
  time_limit_ = value;
}

// -------------------------------------------------------------------

// CSActivityListRsp

// repeated .Activity_Info activitys = 1;
inline int CSActivityListRsp::activitys_size() const {
  return activitys_.size();
}
inline void CSActivityListRsp::clear_activitys() {
  activitys_.Clear();
}
inline const ::Activity_Info& CSActivityListRsp::activitys(int index) const {
  return activitys_.Get(index);
}
inline ::Activity_Info* CSActivityListRsp::mutable_activitys(int index) {
  return activitys_.Mutable(index);
}
inline ::Activity_Info* CSActivityListRsp::add_activitys() {
  return activitys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
CSActivityListRsp::activitys() const {
  return activitys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
CSActivityListRsp::mutable_activitys() {
  return &activitys_;
}

// -------------------------------------------------------------------

// CSGetActivityRewardReq

// required uint32 activity_id = 1;
inline bool CSGetActivityRewardReq::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRewardReq::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRewardReq::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRewardReq::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRewardReq::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRewardReq::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// repeated uint32 param = 2;
inline int CSGetActivityRewardReq::param_size() const {
  return param_.size();
}
inline void CSGetActivityRewardReq::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSGetActivityRewardReq::param(int index) const {
  return param_.Get(index);
}
inline void CSGetActivityRewardReq::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSGetActivityRewardReq::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetActivityRewardReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetActivityRewardReq::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSGetActivityRewardRsp

// required uint32 activity_id = 1;
inline bool CSGetActivityRewardRsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRewardRsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRewardRsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRewardRsp::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRewardRsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required bool is_succ = 2;
inline bool CSGetActivityRewardRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetActivityRewardRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetActivityRewardRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSGetActivityRewardRsp::is_succ() const {
  return is_succ_;
}
inline void CSGetActivityRewardRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// optional .CSReward rewards = 3;
inline bool CSGetActivityRewardRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetActivityRewardRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetActivityRewardRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSGetActivityRewardRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSGetActivityRewardRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSGetActivityRewardRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSUpdateActivityInfoRsp

// repeated .Activity_Info activitys = 1;
inline int CSUpdateActivityInfoRsp::activitys_size() const {
  return activitys_.size();
}
inline void CSUpdateActivityInfoRsp::clear_activitys() {
  activitys_.Clear();
}
inline const ::Activity_Info& CSUpdateActivityInfoRsp::activitys(int index) const {
  return activitys_.Get(index);
}
inline ::Activity_Info* CSUpdateActivityInfoRsp::mutable_activitys(int index) {
  return activitys_.Mutable(index);
}
inline ::Activity_Info* CSUpdateActivityInfoRsp::add_activitys() {
  return activitys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
CSUpdateActivityInfoRsp::activitys() const {
  return activitys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
CSUpdateActivityInfoRsp::mutable_activitys() {
  return &activitys_;
}

// -------------------------------------------------------------------

// CSDelActivityInfoRsp

// repeated uint32 activity_ids = 1;
inline int CSDelActivityInfoRsp::activity_ids_size() const {
  return activity_ids_.size();
}
inline void CSDelActivityInfoRsp::clear_activity_ids() {
  activity_ids_.Clear();
}
inline ::google::protobuf::uint32 CSDelActivityInfoRsp::activity_ids(int index) const {
  return activity_ids_.Get(index);
}
inline void CSDelActivityInfoRsp::set_activity_ids(int index, ::google::protobuf::uint32 value) {
  activity_ids_.Set(index, value);
}
inline void CSDelActivityInfoRsp::add_activity_ids(::google::protobuf::uint32 value) {
  activity_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSDelActivityInfoRsp::activity_ids() const {
  return activity_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSDelActivityInfoRsp::mutable_activity_ids() {
  return &activity_ids_;
}

// -------------------------------------------------------------------

// CSCDEFQueryRoomReq

// -------------------------------------------------------------------

// CDEFRoomBase

// required uint32 room_id = 1;
inline bool CDEFRoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDEFRoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDEFRoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDEFRoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CDEFRoomBase::room_id() const {
  return room_id_;
}
inline void CDEFRoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CDEFRoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDEFRoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDEFRoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDEFRoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CDEFRoomBase::top_level() const {
  return top_level_;
}
inline void CDEFRoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool CDEFRoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDEFRoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDEFRoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDEFRoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 CDEFRoomBase::current_online() const {
  return current_online_;
}
inline void CDEFRoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool CDEFRoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDEFRoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDEFRoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDEFRoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 CDEFRoomBase::max_online() const {
  return max_online_;
}
inline void CDEFRoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSCDEFQueryRoomRsp

// repeated .CDEFRoomBase rooms = 1;
inline int CSCDEFQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSCDEFQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::CDEFRoomBase& CSCDEFQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::CDEFRoomBase* CSCDEFQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::CDEFRoomBase* CSCDEFQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >&
CSCDEFQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >*
CSCDEFQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSCDEFBaseInfoRsp

// required uint32 countdown = 1;
inline bool CSCDEFBaseInfoRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFBaseInfoRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFBaseInfoRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFBaseInfoRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSCDEFBaseInfoRsp::countdown() const {
  return countdown_;
}
inline void CSCDEFBaseInfoRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// required uint32 remain_times = 2;
inline bool CSCDEFBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSCDEFBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSCDEFBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSCDEFCreateRoomReq

// required uint32 top_level = 1;
inline bool CSCDEFCreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFCreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFCreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFCreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSCDEFCreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSCDEFCreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 battle_id = 2;
inline bool CSCDEFCreateRoomReq::has_battle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFCreateRoomReq::set_has_battle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFCreateRoomReq::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFCreateRoomReq::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 CSCDEFCreateRoomReq::battle_id() const {
  return battle_id_;
}
inline void CSCDEFCreateRoomReq::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomReq

// required uint32 room_id = 1;
inline bool CSCDEFJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSCDEFJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomFailureRsp

// required uint32 errcode = 1;
inline bool CSCDEFJoinRoomFailureRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomFailureRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomFailureRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomFailureRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomFailureRsp::errcode() const {
  return errcode_;
}
inline void CSCDEFJoinRoomFailureRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// CDEFSeatBase

// required uint32 id = 1;
inline bool CDEFSeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDEFSeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDEFSeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDEFSeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CDEFSeatBase::id() const {
  return id_;
}
inline void CDEFSeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool CDEFSeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDEFSeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDEFSeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDEFSeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 CDEFSeatBase::avatar() const {
  return avatar_;
}
inline void CDEFSeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool CDEFSeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDEFSeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDEFSeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDEFSeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CDEFSeatBase::name() const {
  return *name_;
}
inline void CDEFSeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CDEFSeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CDEFSeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CDEFSeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CDEFSeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool CDEFSeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDEFSeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDEFSeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDEFSeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CDEFSeatBase::level() const {
  return level_;
}
inline void CDEFSeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool CDEFSeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDEFSeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDEFSeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDEFSeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool CDEFSeatBase::ready() const {
  return ready_;
}
inline void CDEFSeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// optional uint32 effective = 6;
inline bool CDEFSeatBase::has_effective() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDEFSeatBase::set_has_effective() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDEFSeatBase::clear_has_effective() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDEFSeatBase::clear_effective() {
  effective_ = 0u;
  clear_has_effective();
}
inline ::google::protobuf::uint32 CDEFSeatBase::effective() const {
  return effective_;
}
inline void CDEFSeatBase::set_effective(::google::protobuf::uint32 value) {
  set_has_effective();
  effective_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSCDEFJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSCDEFJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CSCDEFJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSCDEFJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .CDEFSeatBase seats = 3;
inline int CSCDEFJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSCDEFJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::CDEFSeatBase& CSCDEFJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::CDEFSeatBase* CSCDEFJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::CDEFSeatBase* CSCDEFJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >&
CSCDEFJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >*
CSCDEFJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSCDEFExitRoomReq

// -------------------------------------------------------------------

// CSCDEFCloseRoomRsp

// required uint32 room_id = 1;
inline bool CSCDEFCloseRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFCloseRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFCloseRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFCloseRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFCloseRoomRsp::room_id() const {
  return room_id_;
}
inline void CSCDEFCloseRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFReadyReq

// -------------------------------------------------------------------

// CSCDEFCancelReadyReq

// -------------------------------------------------------------------

// CSCDEFKickoffReq

// required uint32 seat = 1;
inline bool CSCDEFKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSCDEFKickoffReq::seat() const {
  return seat_;
}
inline void CSCDEFKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSCDEFKickoffRsp

// -------------------------------------------------------------------

// CSCDEFStartReq

// -------------------------------------------------------------------

// CSGetSpecActivityTimeReq

// -------------------------------------------------------------------

// CSGetSpecActivityTimeRsp_Time

// required uint32 enter_time = 1;
inline bool CSGetSpecActivityTimeRsp_Time::has_enter_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Time::set_has_enter_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_has_enter_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_enter_time() {
  enter_time_ = 0u;
  clear_has_enter_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Time::enter_time() const {
  return enter_time_;
}
inline void CSGetSpecActivityTimeRsp_Time::set_enter_time(::google::protobuf::uint32 value) {
  set_has_enter_time();
  enter_time_ = value;
}

// required uint32 start_time = 2;
inline bool CSGetSpecActivityTimeRsp_Time::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Time::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Time::start_time() const {
  return start_time_;
}
inline void CSGetSpecActivityTimeRsp_Time::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// required uint32 end_time = 3;
inline bool CSGetSpecActivityTimeRsp_Time::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Time::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetSpecActivityTimeRsp_Time::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Time::end_time() const {
  return end_time_;
}
inline void CSGetSpecActivityTimeRsp_Time::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// CSGetSpecActivityTimeRsp_Inter

// required uint32 id = 1;
inline bool CSGetSpecActivityTimeRsp_Inter::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Inter::id() const {
  return id_;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .CSGetSpecActivityTimeRsp.Time ac_time = 2;
inline int CSGetSpecActivityTimeRsp_Inter::ac_time_size() const {
  return ac_time_.size();
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_ac_time() {
  ac_time_.Clear();
}
inline const ::CSGetSpecActivityTimeRsp_Time& CSGetSpecActivityTimeRsp_Inter::ac_time(int index) const {
  return ac_time_.Get(index);
}
inline ::CSGetSpecActivityTimeRsp_Time* CSGetSpecActivityTimeRsp_Inter::mutable_ac_time(int index) {
  return ac_time_.Mutable(index);
}
inline ::CSGetSpecActivityTimeRsp_Time* CSGetSpecActivityTimeRsp_Inter::add_ac_time() {
  return ac_time_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Time >&
CSGetSpecActivityTimeRsp_Inter::ac_time() const {
  return ac_time_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Time >*
CSGetSpecActivityTimeRsp_Inter::mutable_ac_time() {
  return &ac_time_;
}

// -------------------------------------------------------------------

// CSGetSpecActivityTimeRsp

// repeated .CSGetSpecActivityTimeRsp.Inter interval = 1;
inline int CSGetSpecActivityTimeRsp::interval_size() const {
  return interval_.size();
}
inline void CSGetSpecActivityTimeRsp::clear_interval() {
  interval_.Clear();
}
inline const ::CSGetSpecActivityTimeRsp_Inter& CSGetSpecActivityTimeRsp::interval(int index) const {
  return interval_.Get(index);
}
inline ::CSGetSpecActivityTimeRsp_Inter* CSGetSpecActivityTimeRsp::mutable_interval(int index) {
  return interval_.Mutable(index);
}
inline ::CSGetSpecActivityTimeRsp_Inter* CSGetSpecActivityTimeRsp::add_interval() {
  return interval_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >&
CSGetSpecActivityTimeRsp::interval() const {
  return interval_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >*
CSGetSpecActivityTimeRsp::mutable_interval() {
  return &interval_;
}

// -------------------------------------------------------------------

// CSCDEFStartRsp

// required uint32 mapid = 1;
inline bool CSCDEFStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSCDEFStartRsp::mapid() const {
  return mapid_;
}
inline void CSCDEFStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// Announcement

// repeated .CSStyle context = 1;
inline int Announcement::context_size() const {
  return context_.size();
}
inline void Announcement::clear_context() {
  context_.Clear();
}
inline const ::CSStyle& Announcement::context(int index) const {
  return context_.Get(index);
}
inline ::CSStyle* Announcement::mutable_context(int index) {
  return context_.Mutable(index);
}
inline ::CSStyle* Announcement::add_context() {
  return context_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSStyle >&
Announcement::context() const {
  return context_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSStyle >*
Announcement::mutable_context() {
  return &context_;
}

// optional uint32 from = 2;
inline bool Announcement::has_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Announcement::set_has_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Announcement::clear_has_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Announcement::clear_from() {
  from_ = 0u;
  clear_has_from();
}
inline ::google::protobuf::uint32 Announcement::from() const {
  return from_;
}
inline void Announcement::set_from(::google::protobuf::uint32 value) {
  set_has_from();
  from_ = value;
}

// optional uint32 to = 3;
inline bool Announcement::has_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Announcement::set_has_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Announcement::clear_has_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Announcement::clear_to() {
  to_ = 0u;
  clear_has_to();
}
inline ::google::protobuf::uint32 Announcement::to() const {
  return to_;
}
inline void Announcement::set_to(::google::protobuf::uint32 value) {
  set_has_to();
  to_ = value;
}

// optional uint32 count = 4;
inline bool Announcement::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Announcement::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Announcement::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Announcement::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Announcement::count() const {
  return count_;
}
inline void Announcement::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required bytes title = 5;
inline bool Announcement::has_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Announcement::set_has_title() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Announcement::clear_has_title() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Announcement::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Announcement::title() const {
  return *title_;
}
inline void Announcement::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Announcement::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Announcement::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Announcement::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* Announcement::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSLoginAnnouncementRsp

// optional .Announcement content = 1;
inline bool CSLoginAnnouncementRsp::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLoginAnnouncementRsp::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLoginAnnouncementRsp::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLoginAnnouncementRsp::clear_content() {
  if (content_ != NULL) content_->::Announcement::Clear();
  clear_has_content();
}
inline const ::Announcement& CSLoginAnnouncementRsp::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::Announcement* CSLoginAnnouncementRsp::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::Announcement;
  return content_;
}
inline ::Announcement* CSLoginAnnouncementRsp::release_content() {
  clear_has_content();
  ::Announcement* temp = content_;
  content_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAnnouncementPreReq

// -------------------------------------------------------------------

// CSAnnouncementPreRsp

// -------------------------------------------------------------------

// CSAnnouncementReq

// -------------------------------------------------------------------

// CSAnnouncementRsp

// repeated .Announcement content = 1;
inline int CSAnnouncementRsp::content_size() const {
  return content_.size();
}
inline void CSAnnouncementRsp::clear_content() {
  content_.Clear();
}
inline const ::Announcement& CSAnnouncementRsp::content(int index) const {
  return content_.Get(index);
}
inline ::Announcement* CSAnnouncementRsp::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::Announcement* CSAnnouncementRsp::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Announcement >&
CSAnnouncementRsp::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::Announcement >*
CSAnnouncementRsp::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// CSMaAdvertisingRsp

// repeated .CSMaStyle content = 1;
inline int CSMaAdvertisingRsp::content_size() const {
  return content_.size();
}
inline void CSMaAdvertisingRsp::clear_content() {
  content_.Clear();
}
inline const ::CSMaStyle& CSMaAdvertisingRsp::content(int index) const {
  return content_.Get(index);
}
inline ::CSMaStyle* CSMaAdvertisingRsp::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::CSMaStyle* CSMaAdvertisingRsp::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMaStyle >&
CSMaAdvertisingRsp::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMaStyle >*
CSMaAdvertisingRsp::mutable_content() {
  return &content_;
}

// required uint32 opt = 2;
inline bool CSMaAdvertisingRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMaAdvertisingRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMaAdvertisingRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMaAdvertisingRsp::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSMaAdvertisingRsp::opt() const {
  return opt_;
}
inline void CSMaAdvertisingRsp::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSStyle

// required uint32 red = 1;
inline bool CSStyle::has_red() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSStyle::set_has_red() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSStyle::clear_has_red() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSStyle::clear_red() {
  red_ = 0u;
  clear_has_red();
}
inline ::google::protobuf::uint32 CSStyle::red() const {
  return red_;
}
inline void CSStyle::set_red(::google::protobuf::uint32 value) {
  set_has_red();
  red_ = value;
}

// required uint32 green = 2;
inline bool CSStyle::has_green() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSStyle::set_has_green() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSStyle::clear_has_green() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSStyle::clear_green() {
  green_ = 0u;
  clear_has_green();
}
inline ::google::protobuf::uint32 CSStyle::green() const {
  return green_;
}
inline void CSStyle::set_green(::google::protobuf::uint32 value) {
  set_has_green();
  green_ = value;
}

// required uint32 blue = 3;
inline bool CSStyle::has_blue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSStyle::set_has_blue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSStyle::clear_has_blue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSStyle::clear_blue() {
  blue_ = 0u;
  clear_has_blue();
}
inline ::google::protobuf::uint32 CSStyle::blue() const {
  return blue_;
}
inline void CSStyle::set_blue(::google::protobuf::uint32 value) {
  set_has_blue();
  blue_ = value;
}

// required bytes text = 4;
inline bool CSStyle::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSStyle::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSStyle::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSStyle::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSStyle::text() const {
  return *text_;
}
inline void CSStyle::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSStyle::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSStyle::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSStyle::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CSStyle::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 fontsize = 5;
inline bool CSStyle::has_fontsize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSStyle::set_has_fontsize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSStyle::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSStyle::clear_fontsize() {
  fontsize_ = 0u;
  clear_has_fontsize();
}
inline ::google::protobuf::uint32 CSStyle::fontsize() const {
  return fontsize_;
}
inline void CSStyle::set_fontsize(::google::protobuf::uint32 value) {
  set_has_fontsize();
  fontsize_ = value;
}

// -------------------------------------------------------------------

// CSMaStyle

// required uint32 red = 1;
inline bool CSMaStyle::has_red() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMaStyle::set_has_red() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMaStyle::clear_has_red() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMaStyle::clear_red() {
  red_ = 0u;
  clear_has_red();
}
inline ::google::protobuf::uint32 CSMaStyle::red() const {
  return red_;
}
inline void CSMaStyle::set_red(::google::protobuf::uint32 value) {
  set_has_red();
  red_ = value;
}

// required uint32 green = 2;
inline bool CSMaStyle::has_green() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMaStyle::set_has_green() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMaStyle::clear_has_green() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMaStyle::clear_green() {
  green_ = 0u;
  clear_has_green();
}
inline ::google::protobuf::uint32 CSMaStyle::green() const {
  return green_;
}
inline void CSMaStyle::set_green(::google::protobuf::uint32 value) {
  set_has_green();
  green_ = value;
}

// required uint32 blue = 3;
inline bool CSMaStyle::has_blue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMaStyle::set_has_blue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMaStyle::clear_has_blue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMaStyle::clear_blue() {
  blue_ = 0u;
  clear_has_blue();
}
inline ::google::protobuf::uint32 CSMaStyle::blue() const {
  return blue_;
}
inline void CSMaStyle::set_blue(::google::protobuf::uint32 value) {
  set_has_blue();
  blue_ = value;
}

// required bytes text = 4;
inline bool CSMaStyle::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMaStyle::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMaStyle::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMaStyle::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSMaStyle::text() const {
  return *text_;
}
inline void CSMaStyle::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSMaStyle::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSMaStyle::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMaStyle::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CSMaStyle::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSNotifyRewardToOtherRsp

// required bytes player_name = 1;
inline bool CSNotifyRewardToOtherRsp::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyRewardToOtherRsp::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyRewardToOtherRsp::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyRewardToOtherRsp::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CSNotifyRewardToOtherRsp::player_name() const {
  return *player_name_;
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const void* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNotifyRewardToOtherRsp::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* CSNotifyRewardToOtherRsp::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .CSReward reward = 2;
inline bool CSNotifyRewardToOtherRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyRewardToOtherRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyRewardToOtherRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyRewardToOtherRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSNotifyRewardToOtherRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSNotifyRewardToOtherRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSNotifyRewardToOtherRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// optional uint32 activity_id = 3;
inline bool CSNotifyRewardToOtherRsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyRewardToOtherRsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyRewardToOtherRsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyRewardToOtherRsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSNotifyRewardToOtherRsp::activity_id() const {
  return activity_id_;
}
inline void CSNotifyRewardToOtherRsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// -------------------------------------------------------------------

// LyleMsg1

// -------------------------------------------------------------------

// LyleMsg2

// -------------------------------------------------------------------

// LyleMsg3

// -------------------------------------------------------------------

// LyleMsg4

// -------------------------------------------------------------------

// CSGetChipComposeStatusReq

// required uint32 opt_target = 1;
inline bool CSGetChipComposeStatusReq::has_opt_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetChipComposeStatusReq::set_has_opt_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetChipComposeStatusReq::clear_has_opt_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetChipComposeStatusReq::clear_opt_target() {
  opt_target_ = 0u;
  clear_has_opt_target();
}
inline ::google::protobuf::uint32 CSGetChipComposeStatusReq::opt_target() const {
  return opt_target_;
}
inline void CSGetChipComposeStatusReq::set_opt_target(::google::protobuf::uint32 value) {
  set_has_opt_target();
  opt_target_ = value;
}

// -------------------------------------------------------------------

// CSGetChipComposeStatusRsp

// required uint32 opt_target = 1;
inline bool CSGetChipComposeStatusRsp::has_opt_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetChipComposeStatusRsp::set_has_opt_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetChipComposeStatusRsp::clear_has_opt_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetChipComposeStatusRsp::clear_opt_target() {
  opt_target_ = 0u;
  clear_has_opt_target();
}
inline ::google::protobuf::uint32 CSGetChipComposeStatusRsp::opt_target() const {
  return opt_target_;
}
inline void CSGetChipComposeStatusRsp::set_opt_target(::google::protobuf::uint32 value) {
  set_has_opt_target();
  opt_target_ = value;
}

// required bool can_compose = 2;
inline bool CSGetChipComposeStatusRsp::has_can_compose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetChipComposeStatusRsp::set_has_can_compose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetChipComposeStatusRsp::clear_has_can_compose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetChipComposeStatusRsp::clear_can_compose() {
  can_compose_ = false;
  clear_has_can_compose();
}
inline bool CSGetChipComposeStatusRsp::can_compose() const {
  return can_compose_;
}
inline void CSGetChipComposeStatusRsp::set_can_compose(bool value) {
  set_has_can_compose();
  can_compose_ = value;
}

// -------------------------------------------------------------------

// CSGetActivityRankReq

// required uint32 activity_id = 1;
inline bool CSGetActivityRankReq::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRankReq::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRankReq::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRankReq::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRankReq::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRankReq::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 query_type = 2;
inline bool CSGetActivityRankReq::has_query_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetActivityRankReq::set_has_query_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetActivityRankReq::clear_has_query_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetActivityRankReq::clear_query_type() {
  query_type_ = 0u;
  clear_has_query_type();
}
inline ::google::protobuf::uint32 CSGetActivityRankReq::query_type() const {
  return query_type_;
}
inline void CSGetActivityRankReq::set_query_type(::google::protobuf::uint32 value) {
  set_has_query_type();
  query_type_ = value;
}

// -------------------------------------------------------------------

// CSGetActivityRankRsp_RanKInfo

// required uint32 userid = 1;
inline bool CSGetActivityRankRsp_RanKInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp_RanKInfo::userid() const {
  return userid_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 channel_id = 2;
inline bool CSGetActivityRankRsp_RanKInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp_RanKInfo::channel_id() const {
  return channel_id_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 reg_time = 3;
inline bool CSGetActivityRankRsp_RanKInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp_RanKInfo::reg_time() const {
  return reg_time_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required bytes name = 4;
inline bool CSGetActivityRankRsp_RanKInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSGetActivityRankRsp_RanKInfo::name() const {
  return *name_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGetActivityRankRsp_RanKInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGetActivityRankRsp_RanKInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGetActivityRankRsp_RanKInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSGetActivityRankRsp_RanKInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 rank = 5;
inline bool CSGetActivityRankRsp_RanKInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp_RanKInfo::rank() const {
  return rank_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 score = 6;
inline bool CSGetActivityRankRsp_RanKInfo::has_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGetActivityRankRsp_RanKInfo::set_has_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGetActivityRankRsp_RanKInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp_RanKInfo::score() const {
  return score_;
}
inline void CSGetActivityRankRsp_RanKInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// CSGetActivityRankRsp

// required uint32 activity_id = 1;
inline bool CSGetActivityRankRsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRankRsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRankRsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRankRsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRankRsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 query_type = 2;
inline bool CSGetActivityRankRsp::has_query_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetActivityRankRsp::set_has_query_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetActivityRankRsp::clear_has_query_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetActivityRankRsp::clear_query_type() {
  query_type_ = 0u;
  clear_has_query_type();
}
inline ::google::protobuf::uint32 CSGetActivityRankRsp::query_type() const {
  return query_type_;
}
inline void CSGetActivityRankRsp::set_query_type(::google::protobuf::uint32 value) {
  set_has_query_type();
  query_type_ = value;
}

// repeated .CSGetActivityRankRsp.RanKInfo rank_infos = 3;
inline int CSGetActivityRankRsp::rank_infos_size() const {
  return rank_infos_.size();
}
inline void CSGetActivityRankRsp::clear_rank_infos() {
  rank_infos_.Clear();
}
inline const ::CSGetActivityRankRsp_RanKInfo& CSGetActivityRankRsp::rank_infos(int index) const {
  return rank_infos_.Get(index);
}
inline ::CSGetActivityRankRsp_RanKInfo* CSGetActivityRankRsp::mutable_rank_infos(int index) {
  return rank_infos_.Mutable(index);
}
inline ::CSGetActivityRankRsp_RanKInfo* CSGetActivityRankRsp::add_rank_infos() {
  return rank_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGetActivityRankRsp_RanKInfo >&
CSGetActivityRankRsp::rank_infos() const {
  return rank_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGetActivityRankRsp_RanKInfo >*
CSGetActivityRankRsp::mutable_rank_infos() {
  return &rank_infos_;
}

// -------------------------------------------------------------------

// CSAskOnlineGiftReq

// -------------------------------------------------------------------

// CSAskOnlineGiftRsp

// required uint32 award_id = 1;
inline bool CSAskOnlineGiftRsp::has_award_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAskOnlineGiftRsp::set_has_award_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAskOnlineGiftRsp::clear_has_award_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAskOnlineGiftRsp::clear_award_id() {
  award_id_ = 0u;
  clear_has_award_id();
}
inline ::google::protobuf::uint32 CSAskOnlineGiftRsp::award_id() const {
  return award_id_;
}
inline void CSAskOnlineGiftRsp::set_award_id(::google::protobuf::uint32 value) {
  set_has_award_id();
  award_id_ = value;
}

// required int32 time = 2;
inline bool CSAskOnlineGiftRsp::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAskOnlineGiftRsp::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAskOnlineGiftRsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAskOnlineGiftRsp::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 CSAskOnlineGiftRsp::time() const {
  return time_;
}
inline void CSAskOnlineGiftRsp::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CSGetOnlineGiftReq

// -------------------------------------------------------------------

// CSGetOnlineGiftRsp

// required uint32 res = 1;
inline bool CSGetOnlineGiftRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetOnlineGiftRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetOnlineGiftRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetOnlineGiftRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSGetOnlineGiftRsp::res() const {
  return res_;
}
inline void CSGetOnlineGiftRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSCheckTopupAwardReq

// -------------------------------------------------------------------

// CSCheckTopupAwardRsp

// required uint32 status = 1;
inline bool CSCheckTopupAwardRsp::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCheckTopupAwardRsp::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCheckTopupAwardRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCheckTopupAwardRsp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSCheckTopupAwardRsp::status() const {
  return status_;
}
inline void CSCheckTopupAwardRsp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 id = 2;
inline bool CSCheckTopupAwardRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCheckTopupAwardRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCheckTopupAwardRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCheckTopupAwardRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSCheckTopupAwardRsp::id() const {
  return id_;
}
inline void CSCheckTopupAwardRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSGetTopupAwardReq

// required uint32 id = 1;
inline bool CSGetTopupAwardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetTopupAwardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetTopupAwardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetTopupAwardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSGetTopupAwardReq::id() const {
  return id_;
}
inline void CSGetTopupAwardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSGetTopupAwardRsp

// required uint32 result = 1;
inline bool CSGetTopupAwardRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetTopupAwardRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetTopupAwardRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetTopupAwardRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSGetTopupAwardRsp::result() const {
  return result_;
}
inline void CSGetTopupAwardRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CSPVP2JoinReq

// -------------------------------------------------------------------

// CSPVP2JoinRsp

// required bool join_ret = 1;
inline bool CSPVP2JoinRsp::has_join_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVP2JoinRsp::set_has_join_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVP2JoinRsp::clear_has_join_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVP2JoinRsp::clear_join_ret() {
  join_ret_ = false;
  clear_has_join_ret();
}
inline bool CSPVP2JoinRsp::join_ret() const {
  return join_ret_;
}
inline void CSPVP2JoinRsp::set_join_ret(bool value) {
  set_has_join_ret();
  join_ret_ = value;
}

// optional uint32 start_btl_time = 2;
inline bool CSPVP2JoinRsp::has_start_btl_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVP2JoinRsp::set_has_start_btl_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVP2JoinRsp::clear_has_start_btl_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVP2JoinRsp::clear_start_btl_time() {
  start_btl_time_ = 0u;
  clear_has_start_btl_time();
}
inline ::google::protobuf::uint32 CSPVP2JoinRsp::start_btl_time() const {
  return start_btl_time_;
}
inline void CSPVP2JoinRsp::set_start_btl_time(::google::protobuf::uint32 value) {
  set_has_start_btl_time();
  start_btl_time_ = value;
}

// -------------------------------------------------------------------

// CSPVP2BtlCancelReq

// -------------------------------------------------------------------

// CSPVP2BtlCancelRsp

// -------------------------------------------------------------------

// CSPVP2RewardRsp

// required uint32 btl_ret = 1;
inline bool CSPVP2RewardRsp::has_btl_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVP2RewardRsp::set_has_btl_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVP2RewardRsp::clear_has_btl_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVP2RewardRsp::clear_btl_ret() {
  btl_ret_ = 0u;
  clear_has_btl_ret();
}
inline ::google::protobuf::uint32 CSPVP2RewardRsp::btl_ret() const {
  return btl_ret_;
}
inline void CSPVP2RewardRsp::set_btl_ret(::google::protobuf::uint32 value) {
  set_has_btl_ret();
  btl_ret_ = value;
}

// required uint32 bcoin = 2;
inline bool CSPVP2RewardRsp::has_bcoin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVP2RewardRsp::set_has_bcoin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVP2RewardRsp::clear_has_bcoin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVP2RewardRsp::clear_bcoin() {
  bcoin_ = 0u;
  clear_has_bcoin();
}
inline ::google::protobuf::uint32 CSPVP2RewardRsp::bcoin() const {
  return bcoin_;
}
inline void CSPVP2RewardRsp::set_bcoin(::google::protobuf::uint32 value) {
  set_has_bcoin();
  bcoin_ = value;
}

// required uint32 bpvp2_score = 3;
inline bool CSPVP2RewardRsp::has_bpvp2_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVP2RewardRsp::set_has_bpvp2_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVP2RewardRsp::clear_has_bpvp2_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVP2RewardRsp::clear_bpvp2_score() {
  bpvp2_score_ = 0u;
  clear_has_bpvp2_score();
}
inline ::google::protobuf::uint32 CSPVP2RewardRsp::bpvp2_score() const {
  return bpvp2_score_;
}
inline void CSPVP2RewardRsp::set_bpvp2_score(::google::protobuf::uint32 value) {
  set_has_bpvp2_score();
  bpvp2_score_ = value;
}

// optional uint32 ccoin = 4 [default = 0];
inline bool CSPVP2RewardRsp::has_ccoin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVP2RewardRsp::set_has_ccoin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVP2RewardRsp::clear_has_ccoin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVP2RewardRsp::clear_ccoin() {
  ccoin_ = 0u;
  clear_has_ccoin();
}
inline ::google::protobuf::uint32 CSPVP2RewardRsp::ccoin() const {
  return ccoin_;
}
inline void CSPVP2RewardRsp::set_ccoin(::google::protobuf::uint32 value) {
  set_has_ccoin();
  ccoin_ = value;
}

// optional uint32 cpvp2_score = 5 [default = 0];
inline bool CSPVP2RewardRsp::has_cpvp2_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVP2RewardRsp::set_has_cpvp2_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVP2RewardRsp::clear_has_cpvp2_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVP2RewardRsp::clear_cpvp2_score() {
  cpvp2_score_ = 0u;
  clear_has_cpvp2_score();
}
inline ::google::protobuf::uint32 CSPVP2RewardRsp::cpvp2_score() const {
  return cpvp2_score_;
}
inline void CSPVP2RewardRsp::set_cpvp2_score(::google::protobuf::uint32 value) {
  set_has_cpvp2_score();
  cpvp2_score_ = value;
}

// optional .CSReward reward = 6;
inline bool CSPVP2RewardRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVP2RewardRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVP2RewardRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVP2RewardRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSPVP2RewardRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSPVP2RewardRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSPVP2RewardRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// cs_fairy_info

// required bytes username = 1;
inline bool cs_fairy_info::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cs_fairy_info::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cs_fairy_info::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cs_fairy_info::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& cs_fairy_info::username() const {
  return *username_;
}
inline void cs_fairy_info::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void cs_fairy_info::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void cs_fairy_info::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* cs_fairy_info::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* cs_fairy_info::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 fairy_id = 2;
inline bool cs_fairy_info::has_fairy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cs_fairy_info::set_has_fairy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cs_fairy_info::clear_has_fairy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cs_fairy_info::clear_fairy_id() {
  fairy_id_ = 0u;
  clear_has_fairy_id();
}
inline ::google::protobuf::uint32 cs_fairy_info::fairy_id() const {
  return fairy_id_;
}
inline void cs_fairy_info::set_fairy_id(::google::protobuf::uint32 value) {
  set_has_fairy_id();
  fairy_id_ = value;
}

// required uint32 fairy_grade = 3;
inline bool cs_fairy_info::has_fairy_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cs_fairy_info::set_has_fairy_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cs_fairy_info::clear_has_fairy_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cs_fairy_info::clear_fairy_grade() {
  fairy_grade_ = 0u;
  clear_has_fairy_grade();
}
inline ::google::protobuf::uint32 cs_fairy_info::fairy_grade() const {
  return fairy_grade_;
}
inline void cs_fairy_info::set_fairy_grade(::google::protobuf::uint32 value) {
  set_has_fairy_grade();
  fairy_grade_ = value;
}

// -------------------------------------------------------------------

// CSQueryRankReq

// required uint32 rank_name = 1;
inline bool CSQueryRankReq::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryRankReq::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryRankReq::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryRankReq::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryRankReq::rank_name() const {
  return rank_name_;
}
inline void CSQueryRankReq::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSQueryRankReq::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryRankReq::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryRankReq::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryRankReq::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSQueryRankReq::rank_type() const {
  return rank_type_;
}
inline void CSQueryRankReq::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// required uint32 rank_start = 3;
inline bool CSQueryRankReq::has_rank_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryRankReq::set_has_rank_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryRankReq::clear_has_rank_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryRankReq::clear_rank_start() {
  rank_start_ = 0u;
  clear_has_rank_start();
}
inline ::google::protobuf::uint32 CSQueryRankReq::rank_start() const {
  return rank_start_;
}
inline void CSQueryRankReq::set_rank_start(::google::protobuf::uint32 value) {
  set_has_rank_start();
  rank_start_ = value;
}

// required uint32 rank_end = 4;
inline bool CSQueryRankReq::has_rank_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryRankReq::set_has_rank_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryRankReq::clear_has_rank_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryRankReq::clear_rank_end() {
  rank_end_ = 0u;
  clear_has_rank_end();
}
inline ::google::protobuf::uint32 CSQueryRankReq::rank_end() const {
  return rank_end_;
}
inline void CSQueryRankReq::set_rank_end(::google::protobuf::uint32 value) {
  set_has_rank_end();
  rank_end_ = value;
}

// -------------------------------------------------------------------

// CSQueryRankRsp_RankInfo

// required uint32 userid = 1;
inline bool CSQueryRankRsp_RankInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryRankRsp_RankInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::userid() const {
  return userid_;
}
inline void CSQueryRankRsp_RankInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSQueryRankRsp_RankInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryRankRsp_RankInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::reg_time() const {
  return reg_time_;
}
inline void CSQueryRankRsp_RankInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSQueryRankRsp_RankInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryRankRsp_RankInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::channel_id() const {
  return channel_id_;
}
inline void CSQueryRankRsp_RankInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool CSQueryRankRsp_RankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryRankRsp_RankInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSQueryRankRsp_RankInfo::name() const {
  return *name_;
}
inline void CSQueryRankRsp_RankInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSQueryRankRsp_RankInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSQueryRankRsp_RankInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSQueryRankRsp_RankInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSQueryRankRsp_RankInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint64 score = 5;
inline bool CSQueryRankRsp_RankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryRankRsp_RankInfo::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 CSQueryRankRsp_RankInfo::score() const {
  return score_;
}
inline void CSQueryRankRsp_RankInfo::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// required uint32 rank = 6;
inline bool CSQueryRankRsp_RankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSQueryRankRsp_RankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::rank() const {
  return rank_;
}
inline void CSQueryRankRsp_RankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 updown = 7;
inline bool CSQueryRankRsp_RankInfo::has_updown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_updown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_updown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSQueryRankRsp_RankInfo::clear_updown() {
  updown_ = 0u;
  clear_has_updown();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::updown() const {
  return updown_;
}
inline void CSQueryRankRsp_RankInfo::set_updown(::google::protobuf::uint32 value) {
  set_has_updown();
  updown_ = value;
}

// optional uint32 type = 8;
inline bool CSQueryRankRsp_RankInfo::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSQueryRankRsp_RankInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSQueryRankRsp_RankInfo::type() const {
  return type_;
}
inline void CSQueryRankRsp_RankInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes gname = 9;
inline bool CSQueryRankRsp_RankInfo::has_gname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSQueryRankRsp_RankInfo::set_has_gname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSQueryRankRsp_RankInfo::clear_has_gname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSQueryRankRsp_RankInfo::clear_gname() {
  if (gname_ != &::google::protobuf::internal::kEmptyString) {
    gname_->clear();
  }
  clear_has_gname();
}
inline const ::std::string& CSQueryRankRsp_RankInfo::gname() const {
  return *gname_;
}
inline void CSQueryRankRsp_RankInfo::set_gname(const ::std::string& value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void CSQueryRankRsp_RankInfo::set_gname(const char* value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void CSQueryRankRsp_RankInfo::set_gname(const void* value, size_t size) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSQueryRankRsp_RankInfo::mutable_gname() {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  return gname_;
}
inline ::std::string* CSQueryRankRsp_RankInfo::release_gname() {
  clear_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gname_;
    gname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSQueryRankRsp

// required uint32 rank_name = 1;
inline bool CSQueryRankRsp::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryRankRsp::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryRankRsp::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryRankRsp::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryRankRsp::rank_name() const {
  return rank_name_;
}
inline void CSQueryRankRsp::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSQueryRankRsp::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryRankRsp::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryRankRsp::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryRankRsp::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSQueryRankRsp::rank_type() const {
  return rank_type_;
}
inline void CSQueryRankRsp::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// repeated .CSQueryRankRsp.RankInfo rank_info = 3;
inline int CSQueryRankRsp::rank_info_size() const {
  return rank_info_.size();
}
inline void CSQueryRankRsp::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::CSQueryRankRsp_RankInfo& CSQueryRankRsp::rank_info(int index) const {
  return rank_info_.Get(index);
}
inline ::CSQueryRankRsp_RankInfo* CSQueryRankRsp::mutable_rank_info(int index) {
  return rank_info_.Mutable(index);
}
inline ::CSQueryRankRsp_RankInfo* CSQueryRankRsp::add_rank_info() {
  return rank_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSQueryRankRsp_RankInfo >&
CSQueryRankRsp::rank_info() const {
  return rank_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSQueryRankRsp_RankInfo >*
CSQueryRankRsp::mutable_rank_info() {
  return &rank_info_;
}

// -------------------------------------------------------------------

// CSQueryPlayerRankInfoReq

// required uint32 rank_name = 1;
inline bool CSQueryPlayerRankInfoReq::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryPlayerRankInfoReq::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryPlayerRankInfoReq::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryPlayerRankInfoReq::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoReq::rank_name() const {
  return rank_name_;
}
inline void CSQueryPlayerRankInfoReq::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 userid = 2;
inline bool CSQueryPlayerRankInfoReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryPlayerRankInfoReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryPlayerRankInfoReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryPlayerRankInfoReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoReq::userid() const {
  return userid_;
}
inline void CSQueryPlayerRankInfoReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 3;
inline bool CSQueryPlayerRankInfoReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryPlayerRankInfoReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryPlayerRankInfoReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryPlayerRankInfoReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoReq::reg_time() const {
  return reg_time_;
}
inline void CSQueryPlayerRankInfoReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 4;
inline bool CSQueryPlayerRankInfoReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryPlayerRankInfoReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryPlayerRankInfoReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryPlayerRankInfoReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoReq::channel_id() const {
  return channel_id_;
}
inline void CSQueryPlayerRankInfoReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSQueryPlayerRankInfoRsp_RankInfo

// required uint32 rank_type = 1;
inline bool CSQueryPlayerRankInfoRsp_RankInfo::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp_RankInfo::rank_type() const {
  return rank_type_;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// required uint64 score = 2;
inline bool CSQueryPlayerRankInfoRsp_RankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 CSQueryPlayerRankInfoRsp_RankInfo::score() const {
  return score_;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// required uint32 rank = 3;
inline bool CSQueryPlayerRankInfoRsp_RankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp_RankInfo::rank() const {
  return rank_;
}
inline void CSQueryPlayerRankInfoRsp_RankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// -------------------------------------------------------------------

// CSQueryPlayerRankInfoRsp

// required uint32 rank_name = 1;
inline bool CSQueryPlayerRankInfoRsp::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryPlayerRankInfoRsp::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::rank_name() const {
  return rank_name_;
}
inline void CSQueryPlayerRankInfoRsp::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 userid = 2;
inline bool CSQueryPlayerRankInfoRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryPlayerRankInfoRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::userid() const {
  return userid_;
}
inline void CSQueryPlayerRankInfoRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 3;
inline bool CSQueryPlayerRankInfoRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryPlayerRankInfoRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::reg_time() const {
  return reg_time_;
}
inline void CSQueryPlayerRankInfoRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 4;
inline bool CSQueryPlayerRankInfoRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryPlayerRankInfoRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::channel_id() const {
  return channel_id_;
}
inline void CSQueryPlayerRankInfoRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 5;
inline bool CSQueryPlayerRankInfoRsp::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryPlayerRankInfoRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSQueryPlayerRankInfoRsp::name() const {
  return *name_;
}
inline void CSQueryPlayerRankInfoRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSQueryPlayerRankInfoRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSQueryPlayerRankInfoRsp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSQueryPlayerRankInfoRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSQueryPlayerRankInfoRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CSQueryPlayerRankInfoRsp.RankInfo rank_info = 6;
inline int CSQueryPlayerRankInfoRsp::rank_info_size() const {
  return rank_info_.size();
}
inline void CSQueryPlayerRankInfoRsp::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::CSQueryPlayerRankInfoRsp_RankInfo& CSQueryPlayerRankInfoRsp::rank_info(int index) const {
  return rank_info_.Get(index);
}
inline ::CSQueryPlayerRankInfoRsp_RankInfo* CSQueryPlayerRankInfoRsp::mutable_rank_info(int index) {
  return rank_info_.Mutable(index);
}
inline ::CSQueryPlayerRankInfoRsp_RankInfo* CSQueryPlayerRankInfoRsp::add_rank_info() {
  return rank_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSQueryPlayerRankInfoRsp_RankInfo >&
CSQueryPlayerRankInfoRsp::rank_info() const {
  return rank_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSQueryPlayerRankInfoRsp_RankInfo >*
CSQueryPlayerRankInfoRsp::mutable_rank_info() {
  return &rank_info_;
}

// optional uint32 pvp2_daily_max_cwin_num = 7;
inline bool CSQueryPlayerRankInfoRsp::has_pvp2_daily_max_cwin_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_pvp2_daily_max_cwin_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_pvp2_daily_max_cwin_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSQueryPlayerRankInfoRsp::clear_pvp2_daily_max_cwin_num() {
  pvp2_daily_max_cwin_num_ = 0u;
  clear_has_pvp2_daily_max_cwin_num();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::pvp2_daily_max_cwin_num() const {
  return pvp2_daily_max_cwin_num_;
}
inline void CSQueryPlayerRankInfoRsp::set_pvp2_daily_max_cwin_num(::google::protobuf::uint32 value) {
  set_has_pvp2_daily_max_cwin_num();
  pvp2_daily_max_cwin_num_ = value;
}

// optional uint32 pvp2_daily_accu_coin = 8;
inline bool CSQueryPlayerRankInfoRsp::has_pvp2_daily_accu_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_pvp2_daily_accu_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_pvp2_daily_accu_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSQueryPlayerRankInfoRsp::clear_pvp2_daily_accu_coin() {
  pvp2_daily_accu_coin_ = 0u;
  clear_has_pvp2_daily_accu_coin();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::pvp2_daily_accu_coin() const {
  return pvp2_daily_accu_coin_;
}
inline void CSQueryPlayerRankInfoRsp::set_pvp2_daily_accu_coin(::google::protobuf::uint32 value) {
  set_has_pvp2_daily_accu_coin();
  pvp2_daily_accu_coin_ = value;
}

// optional uint32 pvp2_daily_accu_reputation = 9 [default = 0];
inline bool CSQueryPlayerRankInfoRsp::has_pvp2_daily_accu_reputation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_pvp2_daily_accu_reputation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_pvp2_daily_accu_reputation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSQueryPlayerRankInfoRsp::clear_pvp2_daily_accu_reputation() {
  pvp2_daily_accu_reputation_ = 0u;
  clear_has_pvp2_daily_accu_reputation();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::pvp2_daily_accu_reputation() const {
  return pvp2_daily_accu_reputation_;
}
inline void CSQueryPlayerRankInfoRsp::set_pvp2_daily_accu_reputation(::google::protobuf::uint32 value) {
  set_has_pvp2_daily_accu_reputation();
  pvp2_daily_accu_reputation_ = value;
}

// optional uint32 wb_daily_times = 10;
inline bool CSQueryPlayerRankInfoRsp::has_wb_daily_times() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSQueryPlayerRankInfoRsp::set_has_wb_daily_times() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSQueryPlayerRankInfoRsp::clear_has_wb_daily_times() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSQueryPlayerRankInfoRsp::clear_wb_daily_times() {
  wb_daily_times_ = 0u;
  clear_has_wb_daily_times();
}
inline ::google::protobuf::uint32 CSQueryPlayerRankInfoRsp::wb_daily_times() const {
  return wb_daily_times_;
}
inline void CSQueryPlayerRankInfoRsp::set_wb_daily_times(::google::protobuf::uint32 value) {
  set_has_wb_daily_times();
  wb_daily_times_ = value;
}

// -------------------------------------------------------------------

// CSQueryRankCountReq

// required uint32 rank_name = 1;
inline bool CSQueryRankCountReq::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryRankCountReq::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryRankCountReq::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryRankCountReq::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryRankCountReq::rank_name() const {
  return rank_name_;
}
inline void CSQueryRankCountReq::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSQueryRankCountReq::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryRankCountReq::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryRankCountReq::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryRankCountReq::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSQueryRankCountReq::rank_type() const {
  return rank_type_;
}
inline void CSQueryRankCountReq::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// -------------------------------------------------------------------

// CSQueryRankCountRsp

// required uint32 rank_name = 1;
inline bool CSQueryRankCountRsp::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryRankCountRsp::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryRankCountRsp::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryRankCountRsp::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSQueryRankCountRsp::rank_name() const {
  return rank_name_;
}
inline void CSQueryRankCountRsp::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSQueryRankCountRsp::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryRankCountRsp::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryRankCountRsp::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryRankCountRsp::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSQueryRankCountRsp::rank_type() const {
  return rank_type_;
}
inline void CSQueryRankCountRsp::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// required uint32 rank_count = 3;
inline bool CSQueryRankCountRsp::has_rank_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryRankCountRsp::set_has_rank_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryRankCountRsp::clear_has_rank_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryRankCountRsp::clear_rank_count() {
  rank_count_ = 0u;
  clear_has_rank_count();
}
inline ::google::protobuf::uint32 CSQueryRankCountRsp::rank_count() const {
  return rank_count_;
}
inline void CSQueryRankCountRsp::set_rank_count(::google::protobuf::uint32 value) {
  set_has_rank_count();
  rank_count_ = value;
}

// -------------------------------------------------------------------

// LyleMsg7

// -------------------------------------------------------------------

// LyleMsg8

// -------------------------------------------------------------------

// CSMailBasicInfo

// required uint32 mail_id_high = 1;
inline bool CSMailBasicInfo::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailBasicInfo::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailBasicInfo::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailBasicInfo::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSMailBasicInfo::mail_id_high() const {
  return mail_id_high_;
}
inline void CSMailBasicInfo::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSMailBasicInfo::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailBasicInfo::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailBasicInfo::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailBasicInfo::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSMailBasicInfo::mail_id_low() const {
  return mail_id_low_;
}
inline void CSMailBasicInfo::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required uint32 mail_status = 3;
inline bool CSMailBasicInfo::has_mail_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMailBasicInfo::set_has_mail_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMailBasicInfo::clear_has_mail_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMailBasicInfo::clear_mail_status() {
  mail_status_ = 0u;
  clear_has_mail_status();
}
inline ::google::protobuf::uint32 CSMailBasicInfo::mail_status() const {
  return mail_status_;
}
inline void CSMailBasicInfo::set_mail_status(::google::protobuf::uint32 value) {
  set_has_mail_status();
  mail_status_ = value;
}

// required bytes title = 4;
inline bool CSMailBasicInfo::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMailBasicInfo::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMailBasicInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMailBasicInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CSMailBasicInfo::title() const {
  return *title_;
}
inline void CSMailBasicInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailBasicInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailBasicInfo::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailBasicInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CSMailBasicInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool has_attach = 5;
inline bool CSMailBasicInfo::has_has_attach() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMailBasicInfo::set_has_has_attach() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMailBasicInfo::clear_has_has_attach() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMailBasicInfo::clear_has_attach() {
  has_attach_ = false;
  clear_has_has_attach();
}
inline bool CSMailBasicInfo::has_attach() const {
  return has_attach_;
}
inline void CSMailBasicInfo::set_has_attach(bool value) {
  set_has_has_attach();
  has_attach_ = value;
}

// required bool is_sys_mail = 6;
inline bool CSMailBasicInfo::has_is_sys_mail() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMailBasicInfo::set_has_is_sys_mail() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMailBasicInfo::clear_has_is_sys_mail() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMailBasicInfo::clear_is_sys_mail() {
  is_sys_mail_ = false;
  clear_has_is_sys_mail();
}
inline bool CSMailBasicInfo::is_sys_mail() const {
  return is_sys_mail_;
}
inline void CSMailBasicInfo::set_is_sys_mail(bool value) {
  set_has_is_sys_mail();
  is_sys_mail_ = value;
}

// -------------------------------------------------------------------

// CSMailInfo_AMItem

// required uint32 item_id = 1;
inline bool CSMailInfo_AMItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailInfo_AMItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailInfo_AMItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailInfo_AMItem::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSMailInfo_AMItem::item_id() const {
  return item_id_;
}
inline void CSMailInfo_AMItem::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSMailInfo_AMItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailInfo_AMItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailInfo_AMItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailInfo_AMItem::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSMailInfo_AMItem::item_num() const {
  return item_num_;
}
inline void CSMailInfo_AMItem::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSMailInfo

// required uint32 mail_id_high = 1;
inline bool CSMailInfo::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailInfo::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailInfo::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailInfo::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_id_high() const {
  return mail_id_high_;
}
inline void CSMailInfo::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSMailInfo::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailInfo::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailInfo::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailInfo::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_id_low() const {
  return mail_id_low_;
}
inline void CSMailInfo::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required bytes title = 3;
inline bool CSMailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMailInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CSMailInfo::title() const {
  return *title_;
}
inline void CSMailInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailInfo::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CSMailInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes from = 4;
inline bool CSMailInfo::has_from() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMailInfo::set_has_from() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMailInfo::clear_has_from() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMailInfo::clear_from() {
  if (from_ != &::google::protobuf::internal::kEmptyString) {
    from_->clear();
  }
  clear_has_from();
}
inline const ::std::string& CSMailInfo::from() const {
  return *from_;
}
inline void CSMailInfo::set_from(const ::std::string& value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailInfo::set_from(const char* value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailInfo::set_from(const void* value, size_t size) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_from() {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  return from_;
}
inline ::std::string* CSMailInfo::release_from() {
  clear_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_;
    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes content = 5;
inline bool CSMailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMailInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSMailInfo::content() const {
  return *content_;
}
inline void CSMailInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailInfo::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSMailInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CSMailInfo.AMItem items = 6;
inline int CSMailInfo::items_size() const {
  return items_.size();
}
inline void CSMailInfo::clear_items() {
  items_.Clear();
}
inline const ::CSMailInfo_AMItem& CSMailInfo::items(int index) const {
  return items_.Get(index);
}
inline ::CSMailInfo_AMItem* CSMailInfo::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSMailInfo_AMItem* CSMailInfo::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo_AMItem >&
CSMailInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo_AMItem >*
CSMailInfo::mutable_items() {
  return &items_;
}

// required uint32 mail_status = 7;
inline bool CSMailInfo::has_mail_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMailInfo::set_has_mail_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMailInfo::clear_has_mail_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMailInfo::clear_mail_status() {
  mail_status_ = 0u;
  clear_has_mail_status();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_status() const {
  return mail_status_;
}
inline void CSMailInfo::set_mail_status(::google::protobuf::uint32 value) {
  set_has_mail_status();
  mail_status_ = value;
}

// required bool is_sys_mail = 8;
inline bool CSMailInfo::has_is_sys_mail() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSMailInfo::set_has_is_sys_mail() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSMailInfo::clear_has_is_sys_mail() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSMailInfo::clear_is_sys_mail() {
  is_sys_mail_ = false;
  clear_has_is_sys_mail();
}
inline bool CSMailInfo::is_sys_mail() const {
  return is_sys_mail_;
}
inline void CSMailInfo::set_is_sys_mail(bool value) {
  set_has_is_sys_mail();
  is_sys_mail_ = value;
}

// -------------------------------------------------------------------

// CSGetMailListReq

// required uint32 index_start = 1;
inline bool CSGetMailListReq::has_index_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailListReq::set_has_index_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailListReq::clear_has_index_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailListReq::clear_index_start() {
  index_start_ = 0u;
  clear_has_index_start();
}
inline ::google::protobuf::uint32 CSGetMailListReq::index_start() const {
  return index_start_;
}
inline void CSGetMailListReq::set_index_start(::google::protobuf::uint32 value) {
  set_has_index_start();
  index_start_ = value;
}

// required uint32 index_over = 2;
inline bool CSGetMailListReq::has_index_over() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetMailListReq::set_has_index_over() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetMailListReq::clear_has_index_over() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetMailListReq::clear_index_over() {
  index_over_ = 0u;
  clear_has_index_over();
}
inline ::google::protobuf::uint32 CSGetMailListReq::index_over() const {
  return index_over_;
}
inline void CSGetMailListReq::set_index_over(::google::protobuf::uint32 value) {
  set_has_index_over();
  index_over_ = value;
}

// -------------------------------------------------------------------

// CSGetMailListRsp_MailBasic

// required .CSMailBasicInfo mail = 1;
inline bool CSGetMailListRsp_MailBasic::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailListRsp_MailBasic::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailListRsp_MailBasic::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailListRsp_MailBasic::clear_mail() {
  if (mail_ != NULL) mail_->::CSMailBasicInfo::Clear();
  clear_has_mail();
}
inline const ::CSMailBasicInfo& CSGetMailListRsp_MailBasic::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::CSMailBasicInfo* CSGetMailListRsp_MailBasic::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::CSMailBasicInfo;
  return mail_;
}
inline ::CSMailBasicInfo* CSGetMailListRsp_MailBasic::release_mail() {
  clear_has_mail();
  ::CSMailBasicInfo* temp = mail_;
  mail_ = NULL;
  return temp;
}

// required uint32 index = 2;
inline bool CSGetMailListRsp_MailBasic::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetMailListRsp_MailBasic::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetMailListRsp_MailBasic::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetMailListRsp_MailBasic::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSGetMailListRsp_MailBasic::index() const {
  return index_;
}
inline void CSGetMailListRsp_MailBasic::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSGetMailListRsp

// repeated .CSGetMailListRsp.MailBasic base_mails = 1;
inline int CSGetMailListRsp::base_mails_size() const {
  return base_mails_.size();
}
inline void CSGetMailListRsp::clear_base_mails() {
  base_mails_.Clear();
}
inline const ::CSGetMailListRsp_MailBasic& CSGetMailListRsp::base_mails(int index) const {
  return base_mails_.Get(index);
}
inline ::CSGetMailListRsp_MailBasic* CSGetMailListRsp::mutable_base_mails(int index) {
  return base_mails_.Mutable(index);
}
inline ::CSGetMailListRsp_MailBasic* CSGetMailListRsp::add_base_mails() {
  return base_mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGetMailListRsp_MailBasic >&
CSGetMailListRsp::base_mails() const {
  return base_mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGetMailListRsp_MailBasic >*
CSGetMailListRsp::mutable_base_mails() {
  return &base_mails_;
}

// -------------------------------------------------------------------

// CSGetMailInfoReq

// required uint32 mail_id_high = 1;
inline bool CSGetMailInfoReq::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailInfoReq::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailInfoReq::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailInfoReq::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSGetMailInfoReq::mail_id_high() const {
  return mail_id_high_;
}
inline void CSGetMailInfoReq::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSGetMailInfoReq::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetMailInfoReq::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetMailInfoReq::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetMailInfoReq::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSGetMailInfoReq::mail_id_low() const {
  return mail_id_low_;
}
inline void CSGetMailInfoReq::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// -------------------------------------------------------------------

// CSGetMailInfoRsp

// optional .CSMailInfo mail = 1;
inline bool CSGetMailInfoRsp::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailInfoRsp::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailInfoRsp::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailInfoRsp::clear_mail() {
  if (mail_ != NULL) mail_->::CSMailInfo::Clear();
  clear_has_mail();
}
inline const ::CSMailInfo& CSGetMailInfoRsp::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::CSMailInfo* CSGetMailInfoRsp::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::CSMailInfo;
  return mail_;
}
inline ::CSMailInfo* CSGetMailInfoRsp::release_mail() {
  clear_has_mail();
  ::CSMailInfo* temp = mail_;
  mail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MailStatus

// required uint32 mail_id_high = 1;
inline bool MailStatus::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailStatus::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailStatus::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailStatus::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 MailStatus::mail_id_high() const {
  return mail_id_high_;
}
inline void MailStatus::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool MailStatus::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailStatus::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailStatus::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailStatus::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 MailStatus::mail_id_low() const {
  return mail_id_low_;
}
inline void MailStatus::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required uint32 new_status = 3;
inline bool MailStatus::has_new_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailStatus::set_has_new_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailStatus::clear_has_new_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailStatus::clear_new_status() {
  new_status_ = 0u;
  clear_has_new_status();
}
inline ::google::protobuf::uint32 MailStatus::new_status() const {
  return new_status_;
}
inline void MailStatus::set_new_status(::google::protobuf::uint32 value) {
  set_has_new_status();
  new_status_ = value;
}

// -------------------------------------------------------------------

// CSSetMailStatusReq

// repeated .MailStatus mails = 1;
inline int CSSetMailStatusReq::mails_size() const {
  return mails_.size();
}
inline void CSSetMailStatusReq::clear_mails() {
  mails_.Clear();
}
inline const ::MailStatus& CSSetMailStatusReq::mails(int index) const {
  return mails_.Get(index);
}
inline ::MailStatus* CSSetMailStatusReq::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::MailStatus* CSSetMailStatusReq::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailStatus >&
CSSetMailStatusReq::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailStatus >*
CSSetMailStatusReq::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// CSSetMailStatusRsp

// repeated .MailStatus mails = 1;
inline int CSSetMailStatusRsp::mails_size() const {
  return mails_.size();
}
inline void CSSetMailStatusRsp::clear_mails() {
  mails_.Clear();
}
inline const ::MailStatus& CSSetMailStatusRsp::mails(int index) const {
  return mails_.Get(index);
}
inline ::MailStatus* CSSetMailStatusRsp::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::MailStatus* CSSetMailStatusRsp::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailStatus >&
CSSetMailStatusRsp::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailStatus >*
CSSetMailStatusRsp::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// CSNotifyMailNumInfoRsp

// required uint32 new_mail_num = 1;
inline bool CSNotifyMailNumInfoRsp::has_new_mail_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyMailNumInfoRsp::set_has_new_mail_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyMailNumInfoRsp::clear_has_new_mail_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyMailNumInfoRsp::clear_new_mail_num() {
  new_mail_num_ = 0u;
  clear_has_new_mail_num();
}
inline ::google::protobuf::uint32 CSNotifyMailNumInfoRsp::new_mail_num() const {
  return new_mail_num_;
}
inline void CSNotifyMailNumInfoRsp::set_new_mail_num(::google::protobuf::uint32 value) {
  set_has_new_mail_num();
  new_mail_num_ = value;
}

// required uint32 total_mail_num = 2;
inline bool CSNotifyMailNumInfoRsp::has_total_mail_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyMailNumInfoRsp::set_has_total_mail_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyMailNumInfoRsp::clear_has_total_mail_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyMailNumInfoRsp::clear_total_mail_num() {
  total_mail_num_ = 0u;
  clear_has_total_mail_num();
}
inline ::google::protobuf::uint32 CSNotifyMailNumInfoRsp::total_mail_num() const {
  return total_mail_num_;
}
inline void CSNotifyMailNumInfoRsp::set_total_mail_num(::google::protobuf::uint32 value) {
  set_has_total_mail_num();
  total_mail_num_ = value;
}

// required uint32 has_attach_num = 3;
inline bool CSNotifyMailNumInfoRsp::has_has_attach_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyMailNumInfoRsp::set_has_has_attach_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyMailNumInfoRsp::clear_has_has_attach_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyMailNumInfoRsp::clear_has_attach_num() {
  has_attach_num_ = 0u;
  clear_has_has_attach_num();
}
inline ::google::protobuf::uint32 CSNotifyMailNumInfoRsp::has_attach_num() const {
  return has_attach_num_;
}
inline void CSNotifyMailNumInfoRsp::set_has_attach_num(::google::protobuf::uint32 value) {
  set_has_has_attach_num();
  has_attach_num_ = value;
}

// -------------------------------------------------------------------

// CSMarqueeRsp

// required uint32 marquee_id = 1;
inline bool CSMarqueeRsp::has_marquee_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMarqueeRsp::set_has_marquee_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMarqueeRsp::clear_has_marquee_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMarqueeRsp::clear_marquee_id() {
  marquee_id_ = 0u;
  clear_has_marquee_id();
}
inline ::google::protobuf::uint32 CSMarqueeRsp::marquee_id() const {
  return marquee_id_;
}
inline void CSMarqueeRsp::set_marquee_id(::google::protobuf::uint32 value) {
  set_has_marquee_id();
  marquee_id_ = value;
}

// required uint32 priority = 2;
inline bool CSMarqueeRsp::has_priority() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMarqueeRsp::set_has_priority() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMarqueeRsp::clear_has_priority() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMarqueeRsp::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 CSMarqueeRsp::priority() const {
  return priority_;
}
inline void CSMarqueeRsp::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
}

// optional string player1 = 3;
inline bool CSMarqueeRsp::has_player1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMarqueeRsp::set_has_player1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMarqueeRsp::clear_has_player1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMarqueeRsp::clear_player1() {
  if (player1_ != &::google::protobuf::internal::kEmptyString) {
    player1_->clear();
  }
  clear_has_player1();
}
inline const ::std::string& CSMarqueeRsp::player1() const {
  return *player1_;
}
inline void CSMarqueeRsp::set_player1(const ::std::string& value) {
  set_has_player1();
  if (player1_ == &::google::protobuf::internal::kEmptyString) {
    player1_ = new ::std::string;
  }
  player1_->assign(value);
}
inline void CSMarqueeRsp::set_player1(const char* value) {
  set_has_player1();
  if (player1_ == &::google::protobuf::internal::kEmptyString) {
    player1_ = new ::std::string;
  }
  player1_->assign(value);
}
inline void CSMarqueeRsp::set_player1(const char* value, size_t size) {
  set_has_player1();
  if (player1_ == &::google::protobuf::internal::kEmptyString) {
    player1_ = new ::std::string;
  }
  player1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMarqueeRsp::mutable_player1() {
  set_has_player1();
  if (player1_ == &::google::protobuf::internal::kEmptyString) {
    player1_ = new ::std::string;
  }
  return player1_;
}
inline ::std::string* CSMarqueeRsp::release_player1() {
  clear_has_player1();
  if (player1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player1_;
    player1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string player2 = 4;
inline bool CSMarqueeRsp::has_player2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMarqueeRsp::set_has_player2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMarqueeRsp::clear_has_player2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMarqueeRsp::clear_player2() {
  if (player2_ != &::google::protobuf::internal::kEmptyString) {
    player2_->clear();
  }
  clear_has_player2();
}
inline const ::std::string& CSMarqueeRsp::player2() const {
  return *player2_;
}
inline void CSMarqueeRsp::set_player2(const ::std::string& value) {
  set_has_player2();
  if (player2_ == &::google::protobuf::internal::kEmptyString) {
    player2_ = new ::std::string;
  }
  player2_->assign(value);
}
inline void CSMarqueeRsp::set_player2(const char* value) {
  set_has_player2();
  if (player2_ == &::google::protobuf::internal::kEmptyString) {
    player2_ = new ::std::string;
  }
  player2_->assign(value);
}
inline void CSMarqueeRsp::set_player2(const char* value, size_t size) {
  set_has_player2();
  if (player2_ == &::google::protobuf::internal::kEmptyString) {
    player2_ = new ::std::string;
  }
  player2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMarqueeRsp::mutable_player2() {
  set_has_player2();
  if (player2_ == &::google::protobuf::internal::kEmptyString) {
    player2_ = new ::std::string;
  }
  return player2_;
}
inline ::std::string* CSMarqueeRsp::release_player2() {
  clear_has_player2();
  if (player2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player2_;
    player2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 item_id = 5;
inline bool CSMarqueeRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMarqueeRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMarqueeRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMarqueeRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSMarqueeRsp::item_id() const {
  return item_id_;
}
inline void CSMarqueeRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 number = 6;
inline bool CSMarqueeRsp::has_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMarqueeRsp::set_has_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMarqueeRsp::clear_has_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMarqueeRsp::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 CSMarqueeRsp::number() const {
  return number_;
}
inline void CSMarqueeRsp::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// CSMagicCardReq

// required bytes card_passwd = 1;
inline bool CSMagicCardReq::has_card_passwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMagicCardReq::set_has_card_passwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMagicCardReq::clear_has_card_passwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMagicCardReq::clear_card_passwd() {
  if (card_passwd_ != &::google::protobuf::internal::kEmptyString) {
    card_passwd_->clear();
  }
  clear_has_card_passwd();
}
inline const ::std::string& CSMagicCardReq::card_passwd() const {
  return *card_passwd_;
}
inline void CSMagicCardReq::set_card_passwd(const ::std::string& value) {
  set_has_card_passwd();
  if (card_passwd_ == &::google::protobuf::internal::kEmptyString) {
    card_passwd_ = new ::std::string;
  }
  card_passwd_->assign(value);
}
inline void CSMagicCardReq::set_card_passwd(const char* value) {
  set_has_card_passwd();
  if (card_passwd_ == &::google::protobuf::internal::kEmptyString) {
    card_passwd_ = new ::std::string;
  }
  card_passwd_->assign(value);
}
inline void CSMagicCardReq::set_card_passwd(const void* value, size_t size) {
  set_has_card_passwd();
  if (card_passwd_ == &::google::protobuf::internal::kEmptyString) {
    card_passwd_ = new ::std::string;
  }
  card_passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMagicCardReq::mutable_card_passwd() {
  set_has_card_passwd();
  if (card_passwd_ == &::google::protobuf::internal::kEmptyString) {
    card_passwd_ = new ::std::string;
  }
  return card_passwd_;
}
inline ::std::string* CSMagicCardReq::release_card_passwd() {
  clear_has_card_passwd();
  if (card_passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = card_passwd_;
    card_passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .CARDTYPE type = 2;
inline bool CSMagicCardReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMagicCardReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMagicCardReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMagicCardReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline CARDTYPE CSMagicCardReq::type() const {
  return static_cast< CARDTYPE >(type_);
}
inline void CSMagicCardReq::set_type(CARDTYPE value) {
  GOOGLE_DCHECK(CARDTYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 card_id = 3;
inline bool CSMagicCardReq::has_card_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMagicCardReq::set_has_card_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMagicCardReq::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMagicCardReq::clear_card_id() {
  card_id_ = 0u;
  clear_has_card_id();
}
inline ::google::protobuf::uint32 CSMagicCardReq::card_id() const {
  return card_id_;
}
inline void CSMagicCardReq::set_card_id(::google::protobuf::uint32 value) {
  set_has_card_id();
  card_id_ = value;
}

// -------------------------------------------------------------------

// CSMagicCardRsp

// required bool succ = 1;
inline bool CSMagicCardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMagicCardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMagicCardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMagicCardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSMagicCardRsp::succ() const {
  return succ_;
}
inline void CSMagicCardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSPVPSetOpeningReq

// required bool open = 1;
inline bool CSPVPSetOpeningReq::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPSetOpeningReq::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPSetOpeningReq::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPSetOpeningReq::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CSPVPSetOpeningReq::open() const {
  return open_;
}
inline void CSPVPSetOpeningReq::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// -------------------------------------------------------------------

// CSPVPSetOpeningRsp

// required bool open = 1;
inline bool CSPVPSetOpeningRsp::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPSetOpeningRsp::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPSetOpeningRsp::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPSetOpeningRsp::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CSPVPSetOpeningRsp::open() const {
  return open_;
}
inline void CSPVPSetOpeningRsp::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// -------------------------------------------------------------------

// CSPVESetOpeningReq

// required bool open = 1;
inline bool CSPVESetOpeningReq::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVESetOpeningReq::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVESetOpeningReq::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVESetOpeningReq::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CSPVESetOpeningReq::open() const {
  return open_;
}
inline void CSPVESetOpeningReq::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// -------------------------------------------------------------------

// CSPVESetOpeningRsp

// required bool open = 1;
inline bool CSPVESetOpeningRsp::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVESetOpeningRsp::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVESetOpeningRsp::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVESetOpeningRsp::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CSPVESetOpeningRsp::open() const {
  return open_;
}
inline void CSPVESetOpeningRsp::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// -------------------------------------------------------------------

// base_info

// required uint32 userid = 1;
inline bool base_info::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void base_info::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void base_info::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void base_info::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 base_info::userid() const {
  return userid_;
}
inline void base_info::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool base_info::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void base_info::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void base_info::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void base_info::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 base_info::reg_time() const {
  return reg_time_;
}
inline void base_info::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool base_info::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void base_info::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void base_info::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void base_info::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 base_info::channel_id() const {
  return channel_id_;
}
inline void base_info::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bytes name = 4;
inline bool base_info::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void base_info::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void base_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void base_info::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& base_info::name() const {
  return *name_;
}
inline void base_info::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void base_info::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void base_info::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* base_info::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* base_info::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// player_basic_info_t

// required uint32 userid = 1;
inline bool player_basic_info_t::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_basic_info_t::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_basic_info_t::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_basic_info_t::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 player_basic_info_t::userid() const {
  return userid_;
}
inline void player_basic_info_t::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool player_basic_info_t::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_basic_info_t::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_basic_info_t::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_basic_info_t::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 player_basic_info_t::reg_time() const {
  return reg_time_;
}
inline void player_basic_info_t::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool player_basic_info_t::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_basic_info_t::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_basic_info_t::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_basic_info_t::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 player_basic_info_t::channel_id() const {
  return channel_id_;
}
inline void player_basic_info_t::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bytes name = 4 [default = ""];
inline bool player_basic_info_t::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void player_basic_info_t::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void player_basic_info_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void player_basic_info_t::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& player_basic_info_t::name() const {
  return *name_;
}
inline void player_basic_info_t::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void player_basic_info_t::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void player_basic_info_t::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_basic_info_t::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* player_basic_info_t::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 type = 5 [default = 0];
inline bool player_basic_info_t::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void player_basic_info_t::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void player_basic_info_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void player_basic_info_t::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 player_basic_info_t::type() const {
  return type_;
}
inline void player_basic_info_t::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 gender = 6 [default = 0];
inline bool player_basic_info_t::has_gender() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void player_basic_info_t::set_has_gender() {
  _has_bits_[0] |= 0x00000020u;
}
inline void player_basic_info_t::clear_has_gender() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void player_basic_info_t::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 player_basic_info_t::gender() const {
  return gender_;
}
inline void player_basic_info_t::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// optional uint32 lv = 7 [default = 0];
inline bool player_basic_info_t::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void player_basic_info_t::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void player_basic_info_t::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void player_basic_info_t::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 player_basic_info_t::lv() const {
  return lv_;
}
inline void player_basic_info_t::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional uint32 time = 8 [default = 0];
inline bool player_basic_info_t::has_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void player_basic_info_t::set_has_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void player_basic_info_t::clear_has_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void player_basic_info_t::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 player_basic_info_t::time() const {
  return time_;
}
inline void player_basic_info_t::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CSInviteToBattleReq

// required uint32 time = 1;
inline bool CSInviteToBattleReq::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInviteToBattleReq::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInviteToBattleReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInviteToBattleReq::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CSInviteToBattleReq::time() const {
  return time_;
}
inline void CSInviteToBattleReq::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 scene_id = 2;
inline bool CSInviteToBattleReq::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInviteToBattleReq::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInviteToBattleReq::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInviteToBattleReq::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CSInviteToBattleReq::scene_id() const {
  return scene_id_;
}
inline void CSInviteToBattleReq::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required uint32 scene_type = 3;
inline bool CSInviteToBattleReq::has_scene_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInviteToBattleReq::set_has_scene_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInviteToBattleReq::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInviteToBattleReq::clear_scene_type() {
  scene_type_ = 0u;
  clear_has_scene_type();
}
inline ::google::protobuf::uint32 CSInviteToBattleReq::scene_type() const {
  return scene_type_;
}
inline void CSInviteToBattleReq::set_scene_type(::google::protobuf::uint32 value) {
  set_has_scene_type();
  scene_type_ = value;
}

// repeated .base_info invitee = 4;
inline int CSInviteToBattleReq::invitee_size() const {
  return invitee_.size();
}
inline void CSInviteToBattleReq::clear_invitee() {
  invitee_.Clear();
}
inline const ::base_info& CSInviteToBattleReq::invitee(int index) const {
  return invitee_.Get(index);
}
inline ::base_info* CSInviteToBattleReq::mutable_invitee(int index) {
  return invitee_.Mutable(index);
}
inline ::base_info* CSInviteToBattleReq::add_invitee() {
  return invitee_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::base_info >&
CSInviteToBattleReq::invitee() const {
  return invitee_;
}
inline ::google::protobuf::RepeatedPtrField< ::base_info >*
CSInviteToBattleReq::mutable_invitee() {
  return &invitee_;
}

// -------------------------------------------------------------------

// CSInviteToBattleRsp

// required uint32 time = 1;
inline bool CSInviteToBattleRsp::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInviteToBattleRsp::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInviteToBattleRsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInviteToBattleRsp::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CSInviteToBattleRsp::time() const {
  return time_;
}
inline void CSInviteToBattleRsp::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 scene_id = 2;
inline bool CSInviteToBattleRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInviteToBattleRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInviteToBattleRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInviteToBattleRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CSInviteToBattleRsp::scene_id() const {
  return scene_id_;
}
inline void CSInviteToBattleRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required uint32 scene_type = 3;
inline bool CSInviteToBattleRsp::has_scene_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInviteToBattleRsp::set_has_scene_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInviteToBattleRsp::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInviteToBattleRsp::clear_scene_type() {
  scene_type_ = 0u;
  clear_has_scene_type();
}
inline ::google::protobuf::uint32 CSInviteToBattleRsp::scene_type() const {
  return scene_type_;
}
inline void CSInviteToBattleRsp::set_scene_type(::google::protobuf::uint32 value) {
  set_has_scene_type();
  scene_type_ = value;
}

// required .base_info inviter = 4;
inline bool CSInviteToBattleRsp::has_inviter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSInviteToBattleRsp::set_has_inviter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSInviteToBattleRsp::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSInviteToBattleRsp::clear_inviter() {
  if (inviter_ != NULL) inviter_->::base_info::Clear();
  clear_has_inviter();
}
inline const ::base_info& CSInviteToBattleRsp::inviter() const {
  return inviter_ != NULL ? *inviter_ : *default_instance_->inviter_;
}
inline ::base_info* CSInviteToBattleRsp::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == NULL) inviter_ = new ::base_info;
  return inviter_;
}
inline ::base_info* CSInviteToBattleRsp::release_inviter() {
  clear_has_inviter();
  ::base_info* temp = inviter_;
  inviter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAnswerToBattleReq

// required bool accept = 1;
inline bool CSAnswerToBattleReq::has_accept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAnswerToBattleReq::set_has_accept() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAnswerToBattleReq::clear_has_accept() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAnswerToBattleReq::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool CSAnswerToBattleReq::accept() const {
  return accept_;
}
inline void CSAnswerToBattleReq::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// required .base_info inviter = 2;
inline bool CSAnswerToBattleReq::has_inviter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAnswerToBattleReq::set_has_inviter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAnswerToBattleReq::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAnswerToBattleReq::clear_inviter() {
  if (inviter_ != NULL) inviter_->::base_info::Clear();
  clear_has_inviter();
}
inline const ::base_info& CSAnswerToBattleReq::inviter() const {
  return inviter_ != NULL ? *inviter_ : *default_instance_->inviter_;
}
inline ::base_info* CSAnswerToBattleReq::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == NULL) inviter_ = new ::base_info;
  return inviter_;
}
inline ::base_info* CSAnswerToBattleReq::release_inviter() {
  clear_has_inviter();
  ::base_info* temp = inviter_;
  inviter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAnswerToBattleRsp

// required bool accept = 1;
inline bool CSAnswerToBattleRsp::has_accept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAnswerToBattleRsp::set_has_accept() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAnswerToBattleRsp::clear_has_accept() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAnswerToBattleRsp::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool CSAnswerToBattleRsp::accept() const {
  return accept_;
}
inline void CSAnswerToBattleRsp::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// required .base_info invitee = 2;
inline bool CSAnswerToBattleRsp::has_invitee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAnswerToBattleRsp::set_has_invitee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAnswerToBattleRsp::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAnswerToBattleRsp::clear_invitee() {
  if (invitee_ != NULL) invitee_->::base_info::Clear();
  clear_has_invitee();
}
inline const ::base_info& CSAnswerToBattleRsp::invitee() const {
  return invitee_ != NULL ? *invitee_ : *default_instance_->invitee_;
}
inline ::base_info* CSAnswerToBattleRsp::mutable_invitee() {
  set_has_invitee();
  if (invitee_ == NULL) invitee_ = new ::base_info;
  return invitee_;
}
inline ::base_info* CSAnswerToBattleRsp::release_invitee() {
  clear_has_invitee();
  ::base_info* temp = invitee_;
  invitee_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSLookupFriendListReq

// repeated .base_info friends = 1;
inline int CSLookupFriendListReq::friends_size() const {
  return friends_.size();
}
inline void CSLookupFriendListReq::clear_friends() {
  friends_.Clear();
}
inline const ::base_info& CSLookupFriendListReq::friends(int index) const {
  return friends_.Get(index);
}
inline ::base_info* CSLookupFriendListReq::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::base_info* CSLookupFriendListReq::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::base_info >&
CSLookupFriendListReq::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::base_info >*
CSLookupFriendListReq::mutable_friends() {
  return &friends_;
}

// -------------------------------------------------------------------

// CSLookupFriendListRsp

// repeated .player_basic_info_t friends = 1;
inline int CSLookupFriendListRsp::friends_size() const {
  return friends_.size();
}
inline void CSLookupFriendListRsp::clear_friends() {
  friends_.Clear();
}
inline const ::player_basic_info_t& CSLookupFriendListRsp::friends(int index) const {
  return friends_.Get(index);
}
inline ::player_basic_info_t* CSLookupFriendListRsp::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::player_basic_info_t* CSLookupFriendListRsp::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >&
CSLookupFriendListRsp::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >*
CSLookupFriendListRsp::mutable_friends() {
  return &friends_;
}

// repeated .player_basic_info_t off_friends = 2;
inline int CSLookupFriendListRsp::off_friends_size() const {
  return off_friends_.size();
}
inline void CSLookupFriendListRsp::clear_off_friends() {
  off_friends_.Clear();
}
inline const ::player_basic_info_t& CSLookupFriendListRsp::off_friends(int index) const {
  return off_friends_.Get(index);
}
inline ::player_basic_info_t* CSLookupFriendListRsp::mutable_off_friends(int index) {
  return off_friends_.Mutable(index);
}
inline ::player_basic_info_t* CSLookupFriendListRsp::add_off_friends() {
  return off_friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >&
CSLookupFriendListRsp::off_friends() const {
  return off_friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::player_basic_info_t >*
CSLookupFriendListRsp::mutable_off_friends() {
  return &off_friends_;
}

// -------------------------------------------------------------------

// FairyBasic

// required uint32 fairy_lv = 1;
inline bool FairyBasic::has_fairy_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairyBasic::set_has_fairy_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairyBasic::clear_has_fairy_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairyBasic::clear_fairy_lv() {
  fairy_lv_ = 0u;
  clear_has_fairy_lv();
}
inline ::google::protobuf::uint32 FairyBasic::fairy_lv() const {
  return fairy_lv_;
}
inline void FairyBasic::set_fairy_lv(::google::protobuf::uint32 value) {
  set_has_fairy_lv();
  fairy_lv_ = value;
}

// required uint32 fairy_grade = 2;
inline bool FairyBasic::has_fairy_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyBasic::set_has_fairy_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyBasic::clear_has_fairy_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyBasic::clear_fairy_grade() {
  fairy_grade_ = 0u;
  clear_has_fairy_grade();
}
inline ::google::protobuf::uint32 FairyBasic::fairy_grade() const {
  return fairy_grade_;
}
inline void FairyBasic::set_fairy_grade(::google::protobuf::uint32 value) {
  set_has_fairy_grade();
  fairy_grade_ = value;
}

// required uint32 fairy_exp = 4;
inline bool FairyBasic::has_fairy_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FairyBasic::set_has_fairy_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FairyBasic::clear_has_fairy_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FairyBasic::clear_fairy_exp() {
  fairy_exp_ = 0u;
  clear_has_fairy_exp();
}
inline ::google::protobuf::uint32 FairyBasic::fairy_exp() const {
  return fairy_exp_;
}
inline void FairyBasic::set_fairy_exp(::google::protobuf::uint32 value) {
  set_has_fairy_exp();
  fairy_exp_ = value;
}

// required uint32 next_lv_exp = 5;
inline bool FairyBasic::has_next_lv_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FairyBasic::set_has_next_lv_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FairyBasic::clear_has_next_lv_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FairyBasic::clear_next_lv_exp() {
  next_lv_exp_ = 0u;
  clear_has_next_lv_exp();
}
inline ::google::protobuf::uint32 FairyBasic::next_lv_exp() const {
  return next_lv_exp_;
}
inline void FairyBasic::set_next_lv_exp(::google::protobuf::uint32 value) {
  set_has_next_lv_exp();
  next_lv_exp_ = value;
}

// -------------------------------------------------------------------

// FairyAttr

// required uint32 key = 1;
inline bool FairyAttr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairyAttr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairyAttr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairyAttr::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 FairyAttr::key() const {
  return key_;
}
inline void FairyAttr::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool FairyAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyAttr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 FairyAttr::value() const {
  return value_;
}
inline void FairyAttr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// FairyTrainAttr

// required uint32 key = 1;
inline bool FairyTrainAttr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairyTrainAttr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairyTrainAttr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairyTrainAttr::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 FairyTrainAttr::key() const {
  return key_;
}
inline void FairyTrainAttr::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required int32 value = 2;
inline bool FairyTrainAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyTrainAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyTrainAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyTrainAttr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 FairyTrainAttr::value() const {
  return value_;
}
inline void FairyTrainAttr::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// FairyInfo

// required uint32 fairy_pos = 1;
inline bool FairyInfo::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairyInfo::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairyInfo::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairyInfo::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_pos() const {
  return fairy_pos_;
}
inline void FairyInfo::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// required uint32 fairy_id = 2;
inline bool FairyInfo::has_fairy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyInfo::set_has_fairy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyInfo::clear_has_fairy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyInfo::clear_fairy_id() {
  fairy_id_ = 0u;
  clear_has_fairy_id();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_id() const {
  return fairy_id_;
}
inline void FairyInfo::set_fairy_id(::google::protobuf::uint32 value) {
  set_has_fairy_id();
  fairy_id_ = value;
}

// required uint32 fairy_born_time = 3;
inline bool FairyInfo::has_fairy_born_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FairyInfo::set_has_fairy_born_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FairyInfo::clear_has_fairy_born_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FairyInfo::clear_fairy_born_time() {
  fairy_born_time_ = 0u;
  clear_has_fairy_born_time();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_born_time() const {
  return fairy_born_time_;
}
inline void FairyInfo::set_fairy_born_time(::google::protobuf::uint32 value) {
  set_has_fairy_born_time();
  fairy_born_time_ = value;
}

// required uint32 fairy_get_way = 4;
inline bool FairyInfo::has_fairy_get_way() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FairyInfo::set_has_fairy_get_way() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FairyInfo::clear_has_fairy_get_way() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FairyInfo::clear_fairy_get_way() {
  fairy_get_way_ = 0u;
  clear_has_fairy_get_way();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_get_way() const {
  return fairy_get_way_;
}
inline void FairyInfo::set_fairy_get_way(::google::protobuf::uint32 value) {
  set_has_fairy_get_way();
  fairy_get_way_ = value;
}

// required .FairyBasic fairy_basic = 5;
inline bool FairyInfo::has_fairy_basic() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FairyInfo::set_has_fairy_basic() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FairyInfo::clear_has_fairy_basic() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FairyInfo::clear_fairy_basic() {
  if (fairy_basic_ != NULL) fairy_basic_->::FairyBasic::Clear();
  clear_has_fairy_basic();
}
inline const ::FairyBasic& FairyInfo::fairy_basic() const {
  return fairy_basic_ != NULL ? *fairy_basic_ : *default_instance_->fairy_basic_;
}
inline ::FairyBasic* FairyInfo::mutable_fairy_basic() {
  set_has_fairy_basic();
  if (fairy_basic_ == NULL) fairy_basic_ = new ::FairyBasic;
  return fairy_basic_;
}
inline ::FairyBasic* FairyInfo::release_fairy_basic() {
  clear_has_fairy_basic();
  ::FairyBasic* temp = fairy_basic_;
  fairy_basic_ = NULL;
  return temp;
}

// repeated .FairyAttr fairy_attrs = 6;
inline int FairyInfo::fairy_attrs_size() const {
  return fairy_attrs_.size();
}
inline void FairyInfo::clear_fairy_attrs() {
  fairy_attrs_.Clear();
}
inline const ::FairyAttr& FairyInfo::fairy_attrs(int index) const {
  return fairy_attrs_.Get(index);
}
inline ::FairyAttr* FairyInfo::mutable_fairy_attrs(int index) {
  return fairy_attrs_.Mutable(index);
}
inline ::FairyAttr* FairyInfo::add_fairy_attrs() {
  return fairy_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyAttr >&
FairyInfo::fairy_attrs() const {
  return fairy_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyAttr >*
FairyInfo::mutable_fairy_attrs() {
  return &fairy_attrs_;
}

// repeated .FairyTrainAttr fairy_train_attrs = 7;
inline int FairyInfo::fairy_train_attrs_size() const {
  return fairy_train_attrs_.size();
}
inline void FairyInfo::clear_fairy_train_attrs() {
  fairy_train_attrs_.Clear();
}
inline const ::FairyTrainAttr& FairyInfo::fairy_train_attrs(int index) const {
  return fairy_train_attrs_.Get(index);
}
inline ::FairyTrainAttr* FairyInfo::mutable_fairy_train_attrs(int index) {
  return fairy_train_attrs_.Mutable(index);
}
inline ::FairyTrainAttr* FairyInfo::add_fairy_train_attrs() {
  return fairy_train_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
FairyInfo::fairy_train_attrs() const {
  return fairy_train_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
FairyInfo::mutable_fairy_train_attrs() {
  return &fairy_train_attrs_;
}

// repeated uint32 fairy_rel_ids = 8;
inline int FairyInfo::fairy_rel_ids_size() const {
  return fairy_rel_ids_.size();
}
inline void FairyInfo::clear_fairy_rel_ids() {
  fairy_rel_ids_.Clear();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_rel_ids(int index) const {
  return fairy_rel_ids_.Get(index);
}
inline void FairyInfo::set_fairy_rel_ids(int index, ::google::protobuf::uint32 value) {
  fairy_rel_ids_.Set(index, value);
}
inline void FairyInfo::add_fairy_rel_ids(::google::protobuf::uint32 value) {
  fairy_rel_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FairyInfo::fairy_rel_ids() const {
  return fairy_rel_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FairyInfo::mutable_fairy_rel_ids() {
  return &fairy_rel_ids_;
}

// required uint32 fairy_effectiveness = 9;
inline bool FairyInfo::has_fairy_effectiveness() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FairyInfo::set_has_fairy_effectiveness() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FairyInfo::clear_has_fairy_effectiveness() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FairyInfo::clear_fairy_effectiveness() {
  fairy_effectiveness_ = 0u;
  clear_has_fairy_effectiveness();
}
inline ::google::protobuf::uint32 FairyInfo::fairy_effectiveness() const {
  return fairy_effectiveness_;
}
inline void FairyInfo::set_fairy_effectiveness(::google::protobuf::uint32 value) {
  set_has_fairy_effectiveness();
  fairy_effectiveness_ = value;
}

// -------------------------------------------------------------------

// CSGetFairyListReq

// required uint32 userid = 1;
inline bool CSGetFairyListReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetFairyListReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetFairyListReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetFairyListReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetFairyListReq::userid() const {
  return userid_;
}
inline void CSGetFairyListReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetFairyListReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetFairyListReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetFairyListReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetFairyListReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetFairyListReq::reg_time() const {
  return reg_time_;
}
inline void CSGetFairyListReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetFairyListReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetFairyListReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetFairyListReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetFairyListReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetFairyListReq::channel_id() const {
  return channel_id_;
}
inline void CSGetFairyListReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bool req_btl_fairy = 4;
inline bool CSGetFairyListReq::has_req_btl_fairy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetFairyListReq::set_has_req_btl_fairy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetFairyListReq::clear_has_req_btl_fairy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetFairyListReq::clear_req_btl_fairy() {
  req_btl_fairy_ = false;
  clear_has_req_btl_fairy();
}
inline bool CSGetFairyListReq::req_btl_fairy() const {
  return req_btl_fairy_;
}
inline void CSGetFairyListReq::set_req_btl_fairy(bool value) {
  set_has_req_btl_fairy();
  req_btl_fairy_ = value;
}

// -------------------------------------------------------------------

// CSGetFairyListRsp

// required uint32 userid = 1;
inline bool CSGetFairyListRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetFairyListRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetFairyListRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetFairyListRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetFairyListRsp::userid() const {
  return userid_;
}
inline void CSGetFairyListRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetFairyListRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetFairyListRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetFairyListRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetFairyListRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetFairyListRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetFairyListRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetFairyListRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetFairyListRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetFairyListRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetFairyListRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetFairyListRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetFairyListRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .FairyInfo fairy_infos = 4;
inline int CSGetFairyListRsp::fairy_infos_size() const {
  return fairy_infos_.size();
}
inline void CSGetFairyListRsp::clear_fairy_infos() {
  fairy_infos_.Clear();
}
inline const ::FairyInfo& CSGetFairyListRsp::fairy_infos(int index) const {
  return fairy_infos_.Get(index);
}
inline ::FairyInfo* CSGetFairyListRsp::mutable_fairy_infos(int index) {
  return fairy_infos_.Mutable(index);
}
inline ::FairyInfo* CSGetFairyListRsp::add_fairy_infos() {
  return fairy_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyInfo >&
CSGetFairyListRsp::fairy_infos() const {
  return fairy_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyInfo >*
CSGetFairyListRsp::mutable_fairy_infos() {
  return &fairy_infos_;
}

// -------------------------------------------------------------------

// CSMoveFairyPosReq

// required uint32 from_pos = 1;
inline bool CSMoveFairyPosReq::has_from_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMoveFairyPosReq::set_has_from_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMoveFairyPosReq::clear_has_from_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMoveFairyPosReq::clear_from_pos() {
  from_pos_ = 0u;
  clear_has_from_pos();
}
inline ::google::protobuf::uint32 CSMoveFairyPosReq::from_pos() const {
  return from_pos_;
}
inline void CSMoveFairyPosReq::set_from_pos(::google::protobuf::uint32 value) {
  set_has_from_pos();
  from_pos_ = value;
}

// required uint32 to_pos = 2;
inline bool CSMoveFairyPosReq::has_to_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMoveFairyPosReq::set_has_to_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMoveFairyPosReq::clear_has_to_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMoveFairyPosReq::clear_to_pos() {
  to_pos_ = 0u;
  clear_has_to_pos();
}
inline ::google::protobuf::uint32 CSMoveFairyPosReq::to_pos() const {
  return to_pos_;
}
inline void CSMoveFairyPosReq::set_to_pos(::google::protobuf::uint32 value) {
  set_has_to_pos();
  to_pos_ = value;
}

// -------------------------------------------------------------------

// CSMoveFairyPosRsp

// required uint32 from_pos = 1;
inline bool CSMoveFairyPosRsp::has_from_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMoveFairyPosRsp::set_has_from_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMoveFairyPosRsp::clear_has_from_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMoveFairyPosRsp::clear_from_pos() {
  from_pos_ = 0u;
  clear_has_from_pos();
}
inline ::google::protobuf::uint32 CSMoveFairyPosRsp::from_pos() const {
  return from_pos_;
}
inline void CSMoveFairyPosRsp::set_from_pos(::google::protobuf::uint32 value) {
  set_has_from_pos();
  from_pos_ = value;
}

// required uint32 to_pos = 2;
inline bool CSMoveFairyPosRsp::has_to_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMoveFairyPosRsp::set_has_to_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMoveFairyPosRsp::clear_has_to_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMoveFairyPosRsp::clear_to_pos() {
  to_pos_ = 0u;
  clear_has_to_pos();
}
inline ::google::protobuf::uint32 CSMoveFairyPosRsp::to_pos() const {
  return to_pos_;
}
inline void CSMoveFairyPosRsp::set_to_pos(::google::protobuf::uint32 value) {
  set_has_to_pos();
  to_pos_ = value;
}

// -------------------------------------------------------------------

// CSFairyTrainReq

// required uint32 fairy_pos = 1;
inline bool CSFairyTrainReq::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyTrainReq::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyTrainReq::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyTrainReq::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyTrainReq::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyTrainReq::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// required uint32 train_lv = 2;
inline bool CSFairyTrainReq::has_train_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyTrainReq::set_has_train_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyTrainReq::clear_has_train_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyTrainReq::clear_train_lv() {
  train_lv_ = 0u;
  clear_has_train_lv();
}
inline ::google::protobuf::uint32 CSFairyTrainReq::train_lv() const {
  return train_lv_;
}
inline void CSFairyTrainReq::set_train_lv(::google::protobuf::uint32 value) {
  set_has_train_lv();
  train_lv_ = value;
}

// -------------------------------------------------------------------

// CSFairyTrainRsp

// required uint32 fairy_pos = 1;
inline bool CSFairyTrainRsp::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyTrainRsp::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyTrainRsp::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyTrainRsp::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyTrainRsp::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyTrainRsp::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// repeated .FairyTrainAttr fairy_train_attrs = 2;
inline int CSFairyTrainRsp::fairy_train_attrs_size() const {
  return fairy_train_attrs_.size();
}
inline void CSFairyTrainRsp::clear_fairy_train_attrs() {
  fairy_train_attrs_.Clear();
}
inline const ::FairyTrainAttr& CSFairyTrainRsp::fairy_train_attrs(int index) const {
  return fairy_train_attrs_.Get(index);
}
inline ::FairyTrainAttr* CSFairyTrainRsp::mutable_fairy_train_attrs(int index) {
  return fairy_train_attrs_.Mutable(index);
}
inline ::FairyTrainAttr* CSFairyTrainRsp::add_fairy_train_attrs() {
  return fairy_train_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
CSFairyTrainRsp::fairy_train_attrs() const {
  return fairy_train_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
CSFairyTrainRsp::mutable_fairy_train_attrs() {
  return &fairy_train_attrs_;
}

// required int32 eff_diff = 3;
inline bool CSFairyTrainRsp::has_eff_diff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSFairyTrainRsp::set_has_eff_diff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSFairyTrainRsp::clear_has_eff_diff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSFairyTrainRsp::clear_eff_diff() {
  eff_diff_ = 0;
  clear_has_eff_diff();
}
inline ::google::protobuf::int32 CSFairyTrainRsp::eff_diff() const {
  return eff_diff_;
}
inline void CSFairyTrainRsp::set_eff_diff(::google::protobuf::int32 value) {
  set_has_eff_diff();
  eff_diff_ = value;
}

// -------------------------------------------------------------------

// CSFairyTrainDetermineReq

// required uint32 fairy_pos = 1;
inline bool CSFairyTrainDetermineReq::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyTrainDetermineReq::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyTrainDetermineReq::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyTrainDetermineReq::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyTrainDetermineReq::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyTrainDetermineReq::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// required bool save = 2;
inline bool CSFairyTrainDetermineReq::has_save() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyTrainDetermineReq::set_has_save() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyTrainDetermineReq::clear_has_save() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyTrainDetermineReq::clear_save() {
  save_ = false;
  clear_has_save();
}
inline bool CSFairyTrainDetermineReq::save() const {
  return save_;
}
inline void CSFairyTrainDetermineReq::set_save(bool value) {
  set_has_save();
  save_ = value;
}

// -------------------------------------------------------------------

// CSFairyTrainDetermineRsp

// required uint32 fairy_pos = 1;
inline bool CSFairyTrainDetermineRsp::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyTrainDetermineRsp::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyTrainDetermineRsp::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyTrainDetermineRsp::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyTrainDetermineRsp::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyTrainDetermineRsp::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// required bool succ = 2;
inline bool CSFairyTrainDetermineRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyTrainDetermineRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyTrainDetermineRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyTrainDetermineRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSFairyTrainDetermineRsp::succ() const {
  return succ_;
}
inline void CSFairyTrainDetermineRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSFairyAddExpReq

// required uint32 fairy_pos = 1;
inline bool CSFairyAddExpReq::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyAddExpReq::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyAddExpReq::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyAddExpReq::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyAddExpReq::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyAddExpReq::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// repeated uint32 del_fairy_poss = 2;
inline int CSFairyAddExpReq::del_fairy_poss_size() const {
  return del_fairy_poss_.size();
}
inline void CSFairyAddExpReq::clear_del_fairy_poss() {
  del_fairy_poss_.Clear();
}
inline ::google::protobuf::uint32 CSFairyAddExpReq::del_fairy_poss(int index) const {
  return del_fairy_poss_.Get(index);
}
inline void CSFairyAddExpReq::set_del_fairy_poss(int index, ::google::protobuf::uint32 value) {
  del_fairy_poss_.Set(index, value);
}
inline void CSFairyAddExpReq::add_del_fairy_poss(::google::protobuf::uint32 value) {
  del_fairy_poss_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFairyAddExpReq::del_fairy_poss() const {
  return del_fairy_poss_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFairyAddExpReq::mutable_del_fairy_poss() {
  return &del_fairy_poss_;
}

// optional uint32 fairy_elem = 3;
inline bool CSFairyAddExpReq::has_fairy_elem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSFairyAddExpReq::set_has_fairy_elem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSFairyAddExpReq::clear_has_fairy_elem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSFairyAddExpReq::clear_fairy_elem() {
  fairy_elem_ = 0u;
  clear_has_fairy_elem();
}
inline ::google::protobuf::uint32 CSFairyAddExpReq::fairy_elem() const {
  return fairy_elem_;
}
inline void CSFairyAddExpReq::set_fairy_elem(::google::protobuf::uint32 value) {
  set_has_fairy_elem();
  fairy_elem_ = value;
}

// optional bool req_info = 4;
inline bool CSFairyAddExpReq::has_req_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSFairyAddExpReq::set_has_req_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSFairyAddExpReq::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSFairyAddExpReq::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyAddExpReq::req_info() const {
  return req_info_;
}
inline void CSFairyAddExpReq::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// optional uint32 times = 5;
inline bool CSFairyAddExpReq::has_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSFairyAddExpReq::set_has_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSFairyAddExpReq::clear_has_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSFairyAddExpReq::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 CSFairyAddExpReq::times() const {
  return times_;
}
inline void CSFairyAddExpReq::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// CSFairyAddExpRsp

// required uint32 fairy_pos = 1;
inline bool CSFairyAddExpRsp::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyAddExpRsp::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyAddExpRsp::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyAddExpRsp::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyAddExpRsp::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyAddExpRsp::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// optional bool succ = 2;
inline bool CSFairyAddExpRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyAddExpRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyAddExpRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyAddExpRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSFairyAddExpRsp::succ() const {
  return succ_;
}
inline void CSFairyAddExpRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional .FairyInfo fairy_info = 3;
inline bool CSFairyAddExpRsp::has_fairy_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSFairyAddExpRsp::set_has_fairy_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSFairyAddExpRsp::clear_has_fairy_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSFairyAddExpRsp::clear_fairy_info() {
  if (fairy_info_ != NULL) fairy_info_->::FairyInfo::Clear();
  clear_has_fairy_info();
}
inline const ::FairyInfo& CSFairyAddExpRsp::fairy_info() const {
  return fairy_info_ != NULL ? *fairy_info_ : *default_instance_->fairy_info_;
}
inline ::FairyInfo* CSFairyAddExpRsp::mutable_fairy_info() {
  set_has_fairy_info();
  if (fairy_info_ == NULL) fairy_info_ = new ::FairyInfo;
  return fairy_info_;
}
inline ::FairyInfo* CSFairyAddExpRsp::release_fairy_info() {
  clear_has_fairy_info();
  ::FairyInfo* temp = fairy_info_;
  fairy_info_ = NULL;
  return temp;
}

// optional uint32 cost_coin = 4;
inline bool CSFairyAddExpRsp::has_cost_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSFairyAddExpRsp::set_has_cost_coin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSFairyAddExpRsp::clear_has_cost_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSFairyAddExpRsp::clear_cost_coin() {
  cost_coin_ = 0u;
  clear_has_cost_coin();
}
inline ::google::protobuf::uint32 CSFairyAddExpRsp::cost_coin() const {
  return cost_coin_;
}
inline void CSFairyAddExpRsp::set_cost_coin(::google::protobuf::uint32 value) {
  set_has_cost_coin();
  cost_coin_ = value;
}

// -------------------------------------------------------------------

// CSFairyUpGradeLevelReq

// required uint32 fairy_pos = 1;
inline bool CSFairyUpGradeLevelReq::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyUpGradeLevelReq::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyUpGradeLevelReq::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyUpGradeLevelReq::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyUpGradeLevelReq::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyUpGradeLevelReq::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// optional bool req_info = 4;
inline bool CSFairyUpGradeLevelReq::has_req_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyUpGradeLevelReq::set_has_req_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyUpGradeLevelReq::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyUpGradeLevelReq::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyUpGradeLevelReq::req_info() const {
  return req_info_;
}
inline void CSFairyUpGradeLevelReq::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// -------------------------------------------------------------------

// CSFairyUpGradeLevelRsp_Item

// required uint32 id = 1;
inline bool CSFairyUpGradeLevelRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyUpGradeLevelRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyUpGradeLevelRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyUpGradeLevelRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSFairyUpGradeLevelRsp_Item::id() const {
  return id_;
}
inline void CSFairyUpGradeLevelRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSFairyUpGradeLevelRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyUpGradeLevelRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyUpGradeLevelRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyUpGradeLevelRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSFairyUpGradeLevelRsp_Item::num() const {
  return num_;
}
inline void CSFairyUpGradeLevelRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSFairyUpGradeLevelRsp

// required uint32 fairy_pos = 1;
inline bool CSFairyUpGradeLevelRsp::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyUpGradeLevelRsp::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyUpGradeLevelRsp::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyUpGradeLevelRsp::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSFairyUpGradeLevelRsp::fairy_pos() const {
  return fairy_pos_;
}
inline void CSFairyUpGradeLevelRsp::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// optional bool succ = 2;
inline bool CSFairyUpGradeLevelRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyUpGradeLevelRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyUpGradeLevelRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyUpGradeLevelRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSFairyUpGradeLevelRsp::succ() const {
  return succ_;
}
inline void CSFairyUpGradeLevelRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional .FairyInfo fairy_info = 3;
inline bool CSFairyUpGradeLevelRsp::has_fairy_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSFairyUpGradeLevelRsp::set_has_fairy_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSFairyUpGradeLevelRsp::clear_has_fairy_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSFairyUpGradeLevelRsp::clear_fairy_info() {
  if (fairy_info_ != NULL) fairy_info_->::FairyInfo::Clear();
  clear_has_fairy_info();
}
inline const ::FairyInfo& CSFairyUpGradeLevelRsp::fairy_info() const {
  return fairy_info_ != NULL ? *fairy_info_ : *default_instance_->fairy_info_;
}
inline ::FairyInfo* CSFairyUpGradeLevelRsp::mutable_fairy_info() {
  set_has_fairy_info();
  if (fairy_info_ == NULL) fairy_info_ = new ::FairyInfo;
  return fairy_info_;
}
inline ::FairyInfo* CSFairyUpGradeLevelRsp::release_fairy_info() {
  clear_has_fairy_info();
  ::FairyInfo* temp = fairy_info_;
  fairy_info_ = NULL;
  return temp;
}

// repeated .CSFairyUpGradeLevelRsp.Item consume_items = 4;
inline int CSFairyUpGradeLevelRsp::consume_items_size() const {
  return consume_items_.size();
}
inline void CSFairyUpGradeLevelRsp::clear_consume_items() {
  consume_items_.Clear();
}
inline const ::CSFairyUpGradeLevelRsp_Item& CSFairyUpGradeLevelRsp::consume_items(int index) const {
  return consume_items_.Get(index);
}
inline ::CSFairyUpGradeLevelRsp_Item* CSFairyUpGradeLevelRsp::mutable_consume_items(int index) {
  return consume_items_.Mutable(index);
}
inline ::CSFairyUpGradeLevelRsp_Item* CSFairyUpGradeLevelRsp::add_consume_items() {
  return consume_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSFairyUpGradeLevelRsp_Item >&
CSFairyUpGradeLevelRsp::consume_items() const {
  return consume_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSFairyUpGradeLevelRsp_Item >*
CSFairyUpGradeLevelRsp::mutable_consume_items() {
  return &consume_items_;
}

// -------------------------------------------------------------------

// CSFairyDecomposeReq

// repeated uint32 fairy_pos = 1;
inline int CSFairyDecomposeReq::fairy_pos_size() const {
  return fairy_pos_.size();
}
inline void CSFairyDecomposeReq::clear_fairy_pos() {
  fairy_pos_.Clear();
}
inline ::google::protobuf::uint32 CSFairyDecomposeReq::fairy_pos(int index) const {
  return fairy_pos_.Get(index);
}
inline void CSFairyDecomposeReq::set_fairy_pos(int index, ::google::protobuf::uint32 value) {
  fairy_pos_.Set(index, value);
}
inline void CSFairyDecomposeReq::add_fairy_pos(::google::protobuf::uint32 value) {
  fairy_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFairyDecomposeReq::fairy_pos() const {
  return fairy_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFairyDecomposeReq::mutable_fairy_pos() {
  return &fairy_pos_;
}

// required bool req_info = 2;
inline bool CSFairyDecomposeReq::has_req_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyDecomposeReq::set_has_req_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyDecomposeReq::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyDecomposeReq::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyDecomposeReq::req_info() const {
  return req_info_;
}
inline void CSFairyDecomposeReq::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// optional bool is_fragments = 3;
inline bool CSFairyDecomposeReq::has_is_fragments() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSFairyDecomposeReq::set_has_is_fragments() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSFairyDecomposeReq::clear_has_is_fragments() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSFairyDecomposeReq::clear_is_fragments() {
  is_fragments_ = false;
  clear_has_is_fragments();
}
inline bool CSFairyDecomposeReq::is_fragments() const {
  return is_fragments_;
}
inline void CSFairyDecomposeReq::set_is_fragments(bool value) {
  set_has_is_fragments();
  is_fragments_ = value;
}

// -------------------------------------------------------------------

// CSFairyDecomposeRsp_Item

// required uint32 id = 1;
inline bool CSFairyDecomposeRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyDecomposeRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyDecomposeRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyDecomposeRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSFairyDecomposeRsp_Item::id() const {
  return id_;
}
inline void CSFairyDecomposeRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSFairyDecomposeRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyDecomposeRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyDecomposeRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyDecomposeRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSFairyDecomposeRsp_Item::num() const {
  return num_;
}
inline void CSFairyDecomposeRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSFairyDecomposeRsp

// repeated uint32 fairy_pos = 1;
inline int CSFairyDecomposeRsp::fairy_pos_size() const {
  return fairy_pos_.size();
}
inline void CSFairyDecomposeRsp::clear_fairy_pos() {
  fairy_pos_.Clear();
}
inline ::google::protobuf::uint32 CSFairyDecomposeRsp::fairy_pos(int index) const {
  return fairy_pos_.Get(index);
}
inline void CSFairyDecomposeRsp::set_fairy_pos(int index, ::google::protobuf::uint32 value) {
  fairy_pos_.Set(index, value);
}
inline void CSFairyDecomposeRsp::add_fairy_pos(::google::protobuf::uint32 value) {
  fairy_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFairyDecomposeRsp::fairy_pos() const {
  return fairy_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFairyDecomposeRsp::mutable_fairy_pos() {
  return &fairy_pos_;
}

// required bool succ = 2;
inline bool CSFairyDecomposeRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyDecomposeRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyDecomposeRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyDecomposeRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSFairyDecomposeRsp::succ() const {
  return succ_;
}
inline void CSFairyDecomposeRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// repeated .CSFairyDecomposeRsp.Item to_items = 3;
inline int CSFairyDecomposeRsp::to_items_size() const {
  return to_items_.size();
}
inline void CSFairyDecomposeRsp::clear_to_items() {
  to_items_.Clear();
}
inline const ::CSFairyDecomposeRsp_Item& CSFairyDecomposeRsp::to_items(int index) const {
  return to_items_.Get(index);
}
inline ::CSFairyDecomposeRsp_Item* CSFairyDecomposeRsp::mutable_to_items(int index) {
  return to_items_.Mutable(index);
}
inline ::CSFairyDecomposeRsp_Item* CSFairyDecomposeRsp::add_to_items() {
  return to_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >&
CSFairyDecomposeRsp::to_items() const {
  return to_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >*
CSFairyDecomposeRsp::mutable_to_items() {
  return &to_items_;
}

// required bool req_info = 4;
inline bool CSFairyDecomposeRsp::has_req_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSFairyDecomposeRsp::set_has_req_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSFairyDecomposeRsp::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSFairyDecomposeRsp::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyDecomposeRsp::req_info() const {
  return req_info_;
}
inline void CSFairyDecomposeRsp::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// repeated .CSFairyDecomposeRsp.Item fragments = 5;
inline int CSFairyDecomposeRsp::fragments_size() const {
  return fragments_.size();
}
inline void CSFairyDecomposeRsp::clear_fragments() {
  fragments_.Clear();
}
inline const ::CSFairyDecomposeRsp_Item& CSFairyDecomposeRsp::fragments(int index) const {
  return fragments_.Get(index);
}
inline ::CSFairyDecomposeRsp_Item* CSFairyDecomposeRsp::mutable_fragments(int index) {
  return fragments_.Mutable(index);
}
inline ::CSFairyDecomposeRsp_Item* CSFairyDecomposeRsp::add_fragments() {
  return fragments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >&
CSFairyDecomposeRsp::fragments() const {
  return fragments_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSFairyDecomposeRsp_Item >*
CSFairyDecomposeRsp::mutable_fragments() {
  return &fragments_;
}

// optional bool is_fragments = 6;
inline bool CSFairyDecomposeRsp::has_is_fragments() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSFairyDecomposeRsp::set_has_is_fragments() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSFairyDecomposeRsp::clear_has_is_fragments() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSFairyDecomposeRsp::clear_is_fragments() {
  is_fragments_ = false;
  clear_has_is_fragments();
}
inline bool CSFairyDecomposeRsp::is_fragments() const {
  return is_fragments_;
}
inline void CSFairyDecomposeRsp::set_is_fragments(bool value) {
  set_has_is_fragments();
  is_fragments_ = value;
}

// -------------------------------------------------------------------

// CSFairyRebirthReq

// repeated uint32 fairy_pos = 1;
inline int CSFairyRebirthReq::fairy_pos_size() const {
  return fairy_pos_.size();
}
inline void CSFairyRebirthReq::clear_fairy_pos() {
  fairy_pos_.Clear();
}
inline ::google::protobuf::uint32 CSFairyRebirthReq::fairy_pos(int index) const {
  return fairy_pos_.Get(index);
}
inline void CSFairyRebirthReq::set_fairy_pos(int index, ::google::protobuf::uint32 value) {
  fairy_pos_.Set(index, value);
}
inline void CSFairyRebirthReq::add_fairy_pos(::google::protobuf::uint32 value) {
  fairy_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFairyRebirthReq::fairy_pos() const {
  return fairy_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFairyRebirthReq::mutable_fairy_pos() {
  return &fairy_pos_;
}

// required bool req_info = 2;
inline bool CSFairyRebirthReq::has_req_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyRebirthReq::set_has_req_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyRebirthReq::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyRebirthReq::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyRebirthReq::req_info() const {
  return req_info_;
}
inline void CSFairyRebirthReq::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// -------------------------------------------------------------------

// CSFairyRebirthRsp_Item

// required uint32 id = 1;
inline bool CSFairyRebirthRsp_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSFairyRebirthRsp_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSFairyRebirthRsp_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSFairyRebirthRsp_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSFairyRebirthRsp_Item::id() const {
  return id_;
}
inline void CSFairyRebirthRsp_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool CSFairyRebirthRsp_Item::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyRebirthRsp_Item::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyRebirthRsp_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyRebirthRsp_Item::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSFairyRebirthRsp_Item::num() const {
  return num_;
}
inline void CSFairyRebirthRsp_Item::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSFairyRebirthRsp

// repeated uint32 fairy_pos = 1;
inline int CSFairyRebirthRsp::fairy_pos_size() const {
  return fairy_pos_.size();
}
inline void CSFairyRebirthRsp::clear_fairy_pos() {
  fairy_pos_.Clear();
}
inline ::google::protobuf::uint32 CSFairyRebirthRsp::fairy_pos(int index) const {
  return fairy_pos_.Get(index);
}
inline void CSFairyRebirthRsp::set_fairy_pos(int index, ::google::protobuf::uint32 value) {
  fairy_pos_.Set(index, value);
}
inline void CSFairyRebirthRsp::add_fairy_pos(::google::protobuf::uint32 value) {
  fairy_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFairyRebirthRsp::fairy_pos() const {
  return fairy_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFairyRebirthRsp::mutable_fairy_pos() {
  return &fairy_pos_;
}

// required bool succ = 2;
inline bool CSFairyRebirthRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSFairyRebirthRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSFairyRebirthRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSFairyRebirthRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSFairyRebirthRsp::succ() const {
  return succ_;
}
inline void CSFairyRebirthRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// repeated .CSFairyRebirthRsp.Item to_items = 3;
inline int CSFairyRebirthRsp::to_items_size() const {
  return to_items_.size();
}
inline void CSFairyRebirthRsp::clear_to_items() {
  to_items_.Clear();
}
inline const ::CSFairyRebirthRsp_Item& CSFairyRebirthRsp::to_items(int index) const {
  return to_items_.Get(index);
}
inline ::CSFairyRebirthRsp_Item* CSFairyRebirthRsp::mutable_to_items(int index) {
  return to_items_.Mutable(index);
}
inline ::CSFairyRebirthRsp_Item* CSFairyRebirthRsp::add_to_items() {
  return to_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSFairyRebirthRsp_Item >&
CSFairyRebirthRsp::to_items() const {
  return to_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSFairyRebirthRsp_Item >*
CSFairyRebirthRsp::mutable_to_items() {
  return &to_items_;
}

// required bool req_info = 4;
inline bool CSFairyRebirthRsp::has_req_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSFairyRebirthRsp::set_has_req_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSFairyRebirthRsp::clear_has_req_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSFairyRebirthRsp::clear_req_info() {
  req_info_ = false;
  clear_has_req_info();
}
inline bool CSFairyRebirthRsp::req_info() const {
  return req_info_;
}
inline void CSFairyRebirthRsp::set_req_info(bool value) {
  set_has_req_info();
  req_info_ = value;
}

// -------------------------------------------------------------------

// CSNotifyAddFairyRsp

// required .FairyInfo fairy_info = 1;
inline bool CSNotifyAddFairyRsp::has_fairy_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyAddFairyRsp::set_has_fairy_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyAddFairyRsp::clear_has_fairy_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyAddFairyRsp::clear_fairy_info() {
  if (fairy_info_ != NULL) fairy_info_->::FairyInfo::Clear();
  clear_has_fairy_info();
}
inline const ::FairyInfo& CSNotifyAddFairyRsp::fairy_info() const {
  return fairy_info_ != NULL ? *fairy_info_ : *default_instance_->fairy_info_;
}
inline ::FairyInfo* CSNotifyAddFairyRsp::mutable_fairy_info() {
  set_has_fairy_info();
  if (fairy_info_ == NULL) fairy_info_ = new ::FairyInfo;
  return fairy_info_;
}
inline ::FairyInfo* CSNotifyAddFairyRsp::release_fairy_info() {
  clear_has_fairy_info();
  ::FairyInfo* temp = fairy_info_;
  fairy_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSNotifyUpdateFairyRsp

// required uint32 fairy_pos = 1;
inline bool CSNotifyUpdateFairyRsp::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyUpdateFairyRsp::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyUpdateFairyRsp::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 CSNotifyUpdateFairyRsp::fairy_pos() const {
  return fairy_pos_;
}
inline void CSNotifyUpdateFairyRsp::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// optional .FairyBasic fairy_basic = 2;
inline bool CSNotifyUpdateFairyRsp::has_fairy_basic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyUpdateFairyRsp::set_has_fairy_basic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyUpdateFairyRsp::clear_has_fairy_basic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_basic() {
  if (fairy_basic_ != NULL) fairy_basic_->::FairyBasic::Clear();
  clear_has_fairy_basic();
}
inline const ::FairyBasic& CSNotifyUpdateFairyRsp::fairy_basic() const {
  return fairy_basic_ != NULL ? *fairy_basic_ : *default_instance_->fairy_basic_;
}
inline ::FairyBasic* CSNotifyUpdateFairyRsp::mutable_fairy_basic() {
  set_has_fairy_basic();
  if (fairy_basic_ == NULL) fairy_basic_ = new ::FairyBasic;
  return fairy_basic_;
}
inline ::FairyBasic* CSNotifyUpdateFairyRsp::release_fairy_basic() {
  clear_has_fairy_basic();
  ::FairyBasic* temp = fairy_basic_;
  fairy_basic_ = NULL;
  return temp;
}

// repeated .FairyAttr fairy_attrs = 3;
inline int CSNotifyUpdateFairyRsp::fairy_attrs_size() const {
  return fairy_attrs_.size();
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_attrs() {
  fairy_attrs_.Clear();
}
inline const ::FairyAttr& CSNotifyUpdateFairyRsp::fairy_attrs(int index) const {
  return fairy_attrs_.Get(index);
}
inline ::FairyAttr* CSNotifyUpdateFairyRsp::mutable_fairy_attrs(int index) {
  return fairy_attrs_.Mutable(index);
}
inline ::FairyAttr* CSNotifyUpdateFairyRsp::add_fairy_attrs() {
  return fairy_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyAttr >&
CSNotifyUpdateFairyRsp::fairy_attrs() const {
  return fairy_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyAttr >*
CSNotifyUpdateFairyRsp::mutable_fairy_attrs() {
  return &fairy_attrs_;
}

// repeated .FairyTrainAttr fairy_train_attrs = 4;
inline int CSNotifyUpdateFairyRsp::fairy_train_attrs_size() const {
  return fairy_train_attrs_.size();
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_train_attrs() {
  fairy_train_attrs_.Clear();
}
inline const ::FairyTrainAttr& CSNotifyUpdateFairyRsp::fairy_train_attrs(int index) const {
  return fairy_train_attrs_.Get(index);
}
inline ::FairyTrainAttr* CSNotifyUpdateFairyRsp::mutable_fairy_train_attrs(int index) {
  return fairy_train_attrs_.Mutable(index);
}
inline ::FairyTrainAttr* CSNotifyUpdateFairyRsp::add_fairy_train_attrs() {
  return fairy_train_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >&
CSNotifyUpdateFairyRsp::fairy_train_attrs() const {
  return fairy_train_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::FairyTrainAttr >*
CSNotifyUpdateFairyRsp::mutable_fairy_train_attrs() {
  return &fairy_train_attrs_;
}

// repeated uint32 fairy_rel_ids = 5;
inline int CSNotifyUpdateFairyRsp::fairy_rel_ids_size() const {
  return fairy_rel_ids_.size();
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_rel_ids() {
  fairy_rel_ids_.Clear();
}
inline ::google::protobuf::uint32 CSNotifyUpdateFairyRsp::fairy_rel_ids(int index) const {
  return fairy_rel_ids_.Get(index);
}
inline void CSNotifyUpdateFairyRsp::set_fairy_rel_ids(int index, ::google::protobuf::uint32 value) {
  fairy_rel_ids_.Set(index, value);
}
inline void CSNotifyUpdateFairyRsp::add_fairy_rel_ids(::google::protobuf::uint32 value) {
  fairy_rel_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSNotifyUpdateFairyRsp::fairy_rel_ids() const {
  return fairy_rel_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSNotifyUpdateFairyRsp::mutable_fairy_rel_ids() {
  return &fairy_rel_ids_;
}

// required uint32 fairy_effectiveness = 6;
inline bool CSNotifyUpdateFairyRsp::has_fairy_effectiveness() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSNotifyUpdateFairyRsp::set_has_fairy_effectiveness() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSNotifyUpdateFairyRsp::clear_has_fairy_effectiveness() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSNotifyUpdateFairyRsp::clear_fairy_effectiveness() {
  fairy_effectiveness_ = 0u;
  clear_has_fairy_effectiveness();
}
inline ::google::protobuf::uint32 CSNotifyUpdateFairyRsp::fairy_effectiveness() const {
  return fairy_effectiveness_;
}
inline void CSNotifyUpdateFairyRsp::set_fairy_effectiveness(::google::protobuf::uint32 value) {
  set_has_fairy_effectiveness();
  fairy_effectiveness_ = value;
}

// -------------------------------------------------------------------

// CSNotifyDelFairyRsp

// repeated uint32 fairy_pos = 1;
inline int CSNotifyDelFairyRsp::fairy_pos_size() const {
  return fairy_pos_.size();
}
inline void CSNotifyDelFairyRsp::clear_fairy_pos() {
  fairy_pos_.Clear();
}
inline ::google::protobuf::uint32 CSNotifyDelFairyRsp::fairy_pos(int index) const {
  return fairy_pos_.Get(index);
}
inline void CSNotifyDelFairyRsp::set_fairy_pos(int index, ::google::protobuf::uint32 value) {
  fairy_pos_.Set(index, value);
}
inline void CSNotifyDelFairyRsp::add_fairy_pos(::google::protobuf::uint32 value) {
  fairy_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSNotifyDelFairyRsp::fairy_pos() const {
  return fairy_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSNotifyDelFairyRsp::mutable_fairy_pos() {
  return &fairy_pos_;
}

// -------------------------------------------------------------------

// LyleMsg9

// -------------------------------------------------------------------

// LyleMsg10

// -------------------------------------------------------------------

// LyleMsg11

// -------------------------------------------------------------------

// LyleMsg12

// -------------------------------------------------------------------

// kakao_cd

// required uint32 uid = 1;
inline bool kakao_cd::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void kakao_cd::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void kakao_cd::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void kakao_cd::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 kakao_cd::uid() const {
  return uid_;
}
inline void kakao_cd::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 count = 2;
inline bool kakao_cd::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void kakao_cd::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void kakao_cd::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void kakao_cd::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 kakao_cd::count() const {
  return count_;
}
inline void kakao_cd::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required uint32 expire_time = 3;
inline bool kakao_cd::has_expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void kakao_cd::set_has_expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void kakao_cd::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void kakao_cd::clear_expire_time() {
  expire_time_ = 0u;
  clear_has_expire_time();
}
inline ::google::protobuf::uint32 kakao_cd::expire_time() const {
  return expire_time_;
}
inline void kakao_cd::set_expire_time(::google::protobuf::uint32 value) {
  set_has_expire_time();
  expire_time_ = value;
}

// optional uint32 start_time = 4 [default = 0];
inline bool kakao_cd::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void kakao_cd::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void kakao_cd::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void kakao_cd::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 kakao_cd::start_time() const {
  return start_time_;
}
inline void kakao_cd::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional bytes name = 5 [default = ""];
inline bool kakao_cd::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void kakao_cd::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void kakao_cd::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void kakao_cd::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& kakao_cd::name() const {
  return *name_;
}
inline void kakao_cd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void kakao_cd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void kakao_cd::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* kakao_cd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* kakao_cd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSQueryKakaoCdReq

// required uint32 ntype = 1;
inline bool CSQueryKakaoCdReq::has_ntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryKakaoCdReq::set_has_ntype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryKakaoCdReq::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryKakaoCdReq::clear_ntype() {
  ntype_ = 0u;
  clear_has_ntype();
}
inline ::google::protobuf::uint32 CSQueryKakaoCdReq::ntype() const {
  return ntype_;
}
inline void CSQueryKakaoCdReq::set_ntype(::google::protobuf::uint32 value) {
  set_has_ntype();
  ntype_ = value;
}

// -------------------------------------------------------------------

// CSQueryKakaoCdRsp

// repeated .kakao_cd cd = 1;
inline int CSQueryKakaoCdRsp::cd_size() const {
  return cd_.size();
}
inline void CSQueryKakaoCdRsp::clear_cd() {
  cd_.Clear();
}
inline const ::kakao_cd& CSQueryKakaoCdRsp::cd(int index) const {
  return cd_.Get(index);
}
inline ::kakao_cd* CSQueryKakaoCdRsp::mutable_cd(int index) {
  return cd_.Mutable(index);
}
inline ::kakao_cd* CSQueryKakaoCdRsp::add_cd() {
  return cd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kakao_cd >&
CSQueryKakaoCdRsp::cd() const {
  return cd_;
}
inline ::google::protobuf::RepeatedPtrField< ::kakao_cd >*
CSQueryKakaoCdRsp::mutable_cd() {
  return &cd_;
}

// -------------------------------------------------------------------

// CSSendPowerReq

// required uint32 accepter = 1;
inline bool CSSendPowerReq::has_accepter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSendPowerReq::set_has_accepter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSendPowerReq::clear_has_accepter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSendPowerReq::clear_accepter() {
  accepter_ = 0u;
  clear_has_accepter();
}
inline ::google::protobuf::uint32 CSSendPowerReq::accepter() const {
  return accepter_;
}
inline void CSSendPowerReq::set_accepter(::google::protobuf::uint32 value) {
  set_has_accepter();
  accepter_ = value;
}

// -------------------------------------------------------------------

// CSSendPoweRsp

// required bool succ = 1;
inline bool CSSendPoweRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSendPoweRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSendPoweRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSendPoweRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSSendPoweRsp::succ() const {
  return succ_;
}
inline void CSSendPoweRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetPowerRewardReq

// required uint32 accepter = 1;
inline bool CSGetPowerRewardReq::has_accepter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetPowerRewardReq::set_has_accepter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetPowerRewardReq::clear_has_accepter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetPowerRewardReq::clear_accepter() {
  accepter_ = 0u;
  clear_has_accepter();
}
inline ::google::protobuf::uint32 CSGetPowerRewardReq::accepter() const {
  return accepter_;
}
inline void CSGetPowerRewardReq::set_accepter(::google::protobuf::uint32 value) {
  set_has_accepter();
  accepter_ = value;
}

// required uint32 expire_time = 2;
inline bool CSGetPowerRewardReq::has_expire_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetPowerRewardReq::set_has_expire_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetPowerRewardReq::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetPowerRewardReq::clear_expire_time() {
  expire_time_ = 0u;
  clear_has_expire_time();
}
inline ::google::protobuf::uint32 CSGetPowerRewardReq::expire_time() const {
  return expire_time_;
}
inline void CSGetPowerRewardReq::set_expire_time(::google::protobuf::uint32 value) {
  set_has_expire_time();
  expire_time_ = value;
}

// -------------------------------------------------------------------

// CSGetPowerRewardRsp

// -------------------------------------------------------------------

// CSPushMsgToKakaoReq

// repeated uint32 accepter = 1;
inline int CSPushMsgToKakaoReq::accepter_size() const {
  return accepter_.size();
}
inline void CSPushMsgToKakaoReq::clear_accepter() {
  accepter_.Clear();
}
inline ::google::protobuf::uint32 CSPushMsgToKakaoReq::accepter(int index) const {
  return accepter_.Get(index);
}
inline void CSPushMsgToKakaoReq::set_accepter(int index, ::google::protobuf::uint32 value) {
  accepter_.Set(index, value);
}
inline void CSPushMsgToKakaoReq::add_accepter(::google::protobuf::uint32 value) {
  accepter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSPushMsgToKakaoReq::accepter() const {
  return accepter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSPushMsgToKakaoReq::mutable_accepter() {
  return &accepter_;
}

// -------------------------------------------------------------------

// CSPushMsgToKakaoRsp

// required uint32 num = 1;
inline bool CSPushMsgToKakaoRsp::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPushMsgToKakaoRsp::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPushMsgToKakaoRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPushMsgToKakaoRsp::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSPushMsgToKakaoRsp::num() const {
  return num_;
}
inline void CSPushMsgToKakaoRsp::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSKakaolistFriendReq

// -------------------------------------------------------------------

// CSKakaolistFriendRsp

// repeated .PartnerInfo game_friends = 1;
inline int CSKakaolistFriendRsp::game_friends_size() const {
  return game_friends_.size();
}
inline void CSKakaolistFriendRsp::clear_game_friends() {
  game_friends_.Clear();
}
inline const ::PartnerInfo& CSKakaolistFriendRsp::game_friends(int index) const {
  return game_friends_.Get(index);
}
inline ::PartnerInfo* CSKakaolistFriendRsp::mutable_game_friends(int index) {
  return game_friends_.Mutable(index);
}
inline ::PartnerInfo* CSKakaolistFriendRsp::add_game_friends() {
  return game_friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSKakaolistFriendRsp::game_friends() const {
  return game_friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSKakaolistFriendRsp::mutable_game_friends() {
  return &game_friends_;
}

// repeated .PartnerInfo verify_friends = 2;
inline int CSKakaolistFriendRsp::verify_friends_size() const {
  return verify_friends_.size();
}
inline void CSKakaolistFriendRsp::clear_verify_friends() {
  verify_friends_.Clear();
}
inline const ::PartnerInfo& CSKakaolistFriendRsp::verify_friends(int index) const {
  return verify_friends_.Get(index);
}
inline ::PartnerInfo* CSKakaolistFriendRsp::mutable_verify_friends(int index) {
  return verify_friends_.Mutable(index);
}
inline ::PartnerInfo* CSKakaolistFriendRsp::add_verify_friends() {
  return verify_friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSKakaolistFriendRsp::verify_friends() const {
  return verify_friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSKakaolistFriendRsp::mutable_verify_friends() {
  return &verify_friends_;
}

// -------------------------------------------------------------------

// CSKakaoAddFriendReq

// required .base_info invitee = 1;
inline bool CSKakaoAddFriendReq::has_invitee() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoAddFriendReq::set_has_invitee() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoAddFriendReq::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoAddFriendReq::clear_invitee() {
  if (invitee_ != NULL) invitee_->::base_info::Clear();
  clear_has_invitee();
}
inline const ::base_info& CSKakaoAddFriendReq::invitee() const {
  return invitee_ != NULL ? *invitee_ : *default_instance_->invitee_;
}
inline ::base_info* CSKakaoAddFriendReq::mutable_invitee() {
  set_has_invitee();
  if (invitee_ == NULL) invitee_ = new ::base_info;
  return invitee_;
}
inline ::base_info* CSKakaoAddFriendReq::release_invitee() {
  clear_has_invitee();
  ::base_info* temp = invitee_;
  invitee_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSKakaoAddFriendRsp

// required .base_info inviter = 1;
inline bool CSKakaoAddFriendRsp::has_inviter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoAddFriendRsp::set_has_inviter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoAddFriendRsp::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoAddFriendRsp::clear_inviter() {
  if (inviter_ != NULL) inviter_->::base_info::Clear();
  clear_has_inviter();
}
inline const ::base_info& CSKakaoAddFriendRsp::inviter() const {
  return inviter_ != NULL ? *inviter_ : *default_instance_->inviter_;
}
inline ::base_info* CSKakaoAddFriendRsp::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == NULL) inviter_ = new ::base_info;
  return inviter_;
}
inline ::base_info* CSKakaoAddFriendRsp::release_inviter() {
  clear_has_inviter();
  ::base_info* temp = inviter_;
  inviter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSKakaoAnswerFriendReq

// required uint32 accept = 1;
inline bool CSKakaoAnswerFriendReq::has_accept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoAnswerFriendReq::set_has_accept() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoAnswerFriendReq::clear_has_accept() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoAnswerFriendReq::clear_accept() {
  accept_ = 0u;
  clear_has_accept();
}
inline ::google::protobuf::uint32 CSKakaoAnswerFriendReq::accept() const {
  return accept_;
}
inline void CSKakaoAnswerFriendReq::set_accept(::google::protobuf::uint32 value) {
  set_has_accept();
  accept_ = value;
}

// required .base_info inviter = 2;
inline bool CSKakaoAnswerFriendReq::has_inviter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSKakaoAnswerFriendReq::set_has_inviter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSKakaoAnswerFriendReq::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSKakaoAnswerFriendReq::clear_inviter() {
  if (inviter_ != NULL) inviter_->::base_info::Clear();
  clear_has_inviter();
}
inline const ::base_info& CSKakaoAnswerFriendReq::inviter() const {
  return inviter_ != NULL ? *inviter_ : *default_instance_->inviter_;
}
inline ::base_info* CSKakaoAnswerFriendReq::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == NULL) inviter_ = new ::base_info;
  return inviter_;
}
inline ::base_info* CSKakaoAnswerFriendReq::release_inviter() {
  clear_has_inviter();
  ::base_info* temp = inviter_;
  inviter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSKakaoAnswerFriendRsp

// required uint32 accept = 1;
inline bool CSKakaoAnswerFriendRsp::has_accept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoAnswerFriendRsp::set_has_accept() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoAnswerFriendRsp::clear_has_accept() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoAnswerFriendRsp::clear_accept() {
  accept_ = 0u;
  clear_has_accept();
}
inline ::google::protobuf::uint32 CSKakaoAnswerFriendRsp::accept() const {
  return accept_;
}
inline void CSKakaoAnswerFriendRsp::set_accept(::google::protobuf::uint32 value) {
  set_has_accept();
  accept_ = value;
}

// required .base_info invitee = 2;
inline bool CSKakaoAnswerFriendRsp::has_invitee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSKakaoAnswerFriendRsp::set_has_invitee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSKakaoAnswerFriendRsp::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSKakaoAnswerFriendRsp::clear_invitee() {
  if (invitee_ != NULL) invitee_->::base_info::Clear();
  clear_has_invitee();
}
inline const ::base_info& CSKakaoAnswerFriendRsp::invitee() const {
  return invitee_ != NULL ? *invitee_ : *default_instance_->invitee_;
}
inline ::base_info* CSKakaoAnswerFriendRsp::mutable_invitee() {
  set_has_invitee();
  if (invitee_ == NULL) invitee_ = new ::base_info;
  return invitee_;
}
inline ::base_info* CSKakaoAnswerFriendRsp::release_invitee() {
  clear_has_invitee();
  ::base_info* temp = invitee_;
  invitee_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSKakaoDelFriendReq

// required .base_info fri = 1;
inline bool CSKakaoDelFriendReq::has_fri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoDelFriendReq::set_has_fri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoDelFriendReq::clear_has_fri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoDelFriendReq::clear_fri() {
  if (fri_ != NULL) fri_->::base_info::Clear();
  clear_has_fri();
}
inline const ::base_info& CSKakaoDelFriendReq::fri() const {
  return fri_ != NULL ? *fri_ : *default_instance_->fri_;
}
inline ::base_info* CSKakaoDelFriendReq::mutable_fri() {
  set_has_fri();
  if (fri_ == NULL) fri_ = new ::base_info;
  return fri_;
}
inline ::base_info* CSKakaoDelFriendReq::release_fri() {
  clear_has_fri();
  ::base_info* temp = fri_;
  fri_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSKakaoDBAddRsp

// required uint32 type = 1;
inline bool CSKakaoDBAddRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoDBAddRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoDBAddRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoDBAddRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSKakaoDBAddRsp::type() const {
  return type_;
}
inline void CSKakaoDBAddRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required .base_info fri = 2;
inline bool CSKakaoDBAddRsp::has_fri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSKakaoDBAddRsp::set_has_fri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSKakaoDBAddRsp::clear_has_fri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSKakaoDBAddRsp::clear_fri() {
  if (fri_ != NULL) fri_->::base_info::Clear();
  clear_has_fri();
}
inline const ::base_info& CSKakaoDBAddRsp::fri() const {
  return fri_ != NULL ? *fri_ : *default_instance_->fri_;
}
inline ::base_info* CSKakaoDBAddRsp::mutable_fri() {
  set_has_fri();
  if (fri_ == NULL) fri_ = new ::base_info;
  return fri_;
}
inline ::base_info* CSKakaoDBAddRsp::release_fri() {
  clear_has_fri();
  ::base_info* temp = fri_;
  fri_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSPVPLearnPrepareReq

// required uint32 uid = 1;
inline bool CSPVPLearnPrepareReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPLearnPrepareReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPLearnPrepareReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPLearnPrepareReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareReq::uid() const {
  return uid_;
}
inline void CSPVPLearnPrepareReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPLearnPrepareReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPLearnPrepareReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPLearnPrepareReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPLearnPrepareReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareReq::reg_time() const {
  return reg_time_;
}
inline void CSPVPLearnPrepareReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPLearnPrepareReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPLearnPrepareReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPLearnPrepareReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPLearnPrepareReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareReq::channel_id() const {
  return channel_id_;
}
inline void CSPVPLearnPrepareReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bool mandatory = 4;
inline bool CSPVPLearnPrepareReq::has_mandatory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPLearnPrepareReq::set_has_mandatory() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPLearnPrepareReq::clear_has_mandatory() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPLearnPrepareReq::clear_mandatory() {
  mandatory_ = false;
  clear_has_mandatory();
}
inline bool CSPVPLearnPrepareReq::mandatory() const {
  return mandatory_;
}
inline void CSPVPLearnPrepareReq::set_mandatory(bool value) {
  set_has_mandatory();
  mandatory_ = value;
}

// -------------------------------------------------------------------

// CSPVPLearnPrepareRsp

// required uint32 uid = 1;
inline bool CSPVPLearnPrepareRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPLearnPrepareRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPLearnPrepareRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareRsp::uid() const {
  return uid_;
}
inline void CSPVPLearnPrepareRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPLearnPrepareRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPLearnPrepareRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPLearnPrepareRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareRsp::reg_time() const {
  return reg_time_;
}
inline void CSPVPLearnPrepareRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPLearnPrepareRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPLearnPrepareRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPLearnPrepareRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareRsp::channel_id() const {
  return channel_id_;
}
inline void CSPVPLearnPrepareRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool CSPVPLearnPrepareRsp::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPLearnPrepareRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPLearnPrepareRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVPLearnPrepareRsp::name() const {
  return *name_;
}
inline void CSPVPLearnPrepareRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPLearnPrepareRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPLearnPrepareRsp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVPLearnPrepareRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVPLearnPrepareRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 effectiveness = 5;
inline bool CSPVPLearnPrepareRsp::has_effectiveness() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_effectiveness() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVPLearnPrepareRsp::clear_has_effectiveness() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVPLearnPrepareRsp::clear_effectiveness() {
  effectiveness_ = 0u;
  clear_has_effectiveness();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareRsp::effectiveness() const {
  return effectiveness_;
}
inline void CSPVPLearnPrepareRsp::set_effectiveness(::google::protobuf::uint32 value) {
  set_has_effectiveness();
  effectiveness_ = value;
}

// required uint32 type = 6;
inline bool CSPVPLearnPrepareRsp::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVPLearnPrepareRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVPLearnPrepareRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPLearnPrepareRsp::type() const {
  return type_;
}
inline void CSPVPLearnPrepareRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required bool mandatory = 7;
inline bool CSPVPLearnPrepareRsp::has_mandatory() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSPVPLearnPrepareRsp::set_has_mandatory() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSPVPLearnPrepareRsp::clear_has_mandatory() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSPVPLearnPrepareRsp::clear_mandatory() {
  mandatory_ = false;
  clear_has_mandatory();
}
inline bool CSPVPLearnPrepareRsp::mandatory() const {
  return mandatory_;
}
inline void CSPVPLearnPrepareRsp::set_mandatory(bool value) {
  set_has_mandatory();
  mandatory_ = value;
}

// -------------------------------------------------------------------

// CSPVPLearnReq

// required uint32 uid = 1;
inline bool CSPVPLearnReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPLearnReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPLearnReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPLearnReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPLearnReq::uid() const {
  return uid_;
}
inline void CSPVPLearnReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPLearnReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPLearnReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPLearnReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPLearnReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPLearnReq::reg_time() const {
  return reg_time_;
}
inline void CSPVPLearnReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPLearnReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPLearnReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPLearnReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPLearnReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPLearnReq::channel_id() const {
  return channel_id_;
}
inline void CSPVPLearnReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bool mandatory = 4;
inline bool CSPVPLearnReq::has_mandatory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPLearnReq::set_has_mandatory() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPLearnReq::clear_has_mandatory() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPLearnReq::clear_mandatory() {
  mandatory_ = false;
  clear_has_mandatory();
}
inline bool CSPVPLearnReq::mandatory() const {
  return mandatory_;
}
inline void CSPVPLearnReq::set_mandatory(bool value) {
  set_has_mandatory();
  mandatory_ = value;
}

// -------------------------------------------------------------------

// CSPVPLearnRsp

// required uint32 uid = 1;
inline bool CSPVPLearnRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPLearnRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPLearnRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPLearnRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPLearnRsp::uid() const {
  return uid_;
}
inline void CSPVPLearnRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPLearnRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPLearnRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPLearnRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPLearnRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPLearnRsp::reg_time() const {
  return reg_time_;
}
inline void CSPVPLearnRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPLearnRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPLearnRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPLearnRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPLearnRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPLearnRsp::channel_id() const {
  return channel_id_;
}
inline void CSPVPLearnRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool CSPVPLearnRsp::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPLearnRsp::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPLearnRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPLearnRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVPLearnRsp::name() const {
  return *name_;
}
inline void CSPVPLearnRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPLearnRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPLearnRsp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVPLearnRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVPLearnRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 effectiveness = 5;
inline bool CSPVPLearnRsp::has_effectiveness() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVPLearnRsp::set_has_effectiveness() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVPLearnRsp::clear_has_effectiveness() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVPLearnRsp::clear_effectiveness() {
  effectiveness_ = 0u;
  clear_has_effectiveness();
}
inline ::google::protobuf::uint32 CSPVPLearnRsp::effectiveness() const {
  return effectiveness_;
}
inline void CSPVPLearnRsp::set_effectiveness(::google::protobuf::uint32 value) {
  set_has_effectiveness();
  effectiveness_ = value;
}

// required uint32 type = 6;
inline bool CSPVPLearnRsp::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVPLearnRsp::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVPLearnRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVPLearnRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPLearnRsp::type() const {
  return type_;
}
inline void CSPVPLearnRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required bool mandatory = 7;
inline bool CSPVPLearnRsp::has_mandatory() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSPVPLearnRsp::set_has_mandatory() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSPVPLearnRsp::clear_has_mandatory() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSPVPLearnRsp::clear_mandatory() {
  mandatory_ = false;
  clear_has_mandatory();
}
inline bool CSPVPLearnRsp::mandatory() const {
  return mandatory_;
}
inline void CSPVPLearnRsp::set_mandatory(bool value) {
  set_has_mandatory();
  mandatory_ = value;
}

// -------------------------------------------------------------------

// CSPVPLearnMandatoryRsp

// -------------------------------------------------------------------

// CSPVPAckLearnReq

// required uint32 uid = 1;
inline bool CSPVPAckLearnReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPAckLearnReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPAckLearnReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPAckLearnReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPAckLearnReq::uid() const {
  return uid_;
}
inline void CSPVPAckLearnReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPAckLearnReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPAckLearnReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPAckLearnReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPAckLearnReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPAckLearnReq::reg_time() const {
  return reg_time_;
}
inline void CSPVPAckLearnReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPAckLearnReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPAckLearnReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPAckLearnReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPAckLearnReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPAckLearnReq::channel_id() const {
  return channel_id_;
}
inline void CSPVPAckLearnReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bool accept = 4;
inline bool CSPVPAckLearnReq::has_accept() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPAckLearnReq::set_has_accept() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPAckLearnReq::clear_has_accept() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPAckLearnReq::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool CSPVPAckLearnReq::accept() const {
  return accept_;
}
inline void CSPVPAckLearnReq::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// required uint32 type = 5;
inline bool CSPVPAckLearnReq::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVPAckLearnReq::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVPAckLearnReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVPAckLearnReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPAckLearnReq::type() const {
  return type_;
}
inline void CSPVPAckLearnReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSPVPAckLearnRefuseRsp

// required uint32 uid = 1;
inline bool CSPVPAckLearnRefuseRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPAckLearnRefuseRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPAckLearnRefuseRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPAckLearnRefuseRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSPVPAckLearnRefuseRsp::uid() const {
  return uid_;
}
inline void CSPVPAckLearnRefuseRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVPAckLearnRefuseRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPAckLearnRefuseRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPAckLearnRefuseRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPAckLearnRefuseRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVPAckLearnRefuseRsp::reg_time() const {
  return reg_time_;
}
inline void CSPVPAckLearnRefuseRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVPAckLearnRefuseRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPAckLearnRefuseRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPAckLearnRefuseRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPAckLearnRefuseRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVPAckLearnRefuseRsp::channel_id() const {
  return channel_id_;
}
inline void CSPVPAckLearnRefuseRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool CSPVPAckLearnRefuseRsp::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVPAckLearnRefuseRsp::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVPAckLearnRefuseRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVPAckLearnRefuseRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVPAckLearnRefuseRsp::name() const {
  return *name_;
}
inline void CSPVPAckLearnRefuseRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPAckLearnRefuseRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVPAckLearnRefuseRsp::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVPAckLearnRefuseRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVPAckLearnRefuseRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 type = 5;
inline bool CSPVPAckLearnRefuseRsp::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVPAckLearnRefuseRsp::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVPAckLearnRefuseRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVPAckLearnRefuseRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPAckLearnRefuseRsp::type() const {
  return type_;
}
inline void CSPVPAckLearnRefuseRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSAutoBattleCheckReq

// -------------------------------------------------------------------

// CSAutoBattleCheckRsp

// required uint32 on_or_off = 1;
inline bool CSAutoBattleCheckRsp::has_on_or_off() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAutoBattleCheckRsp::set_has_on_or_off() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAutoBattleCheckRsp::clear_has_on_or_off() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAutoBattleCheckRsp::clear_on_or_off() {
  on_or_off_ = 0u;
  clear_has_on_or_off();
}
inline ::google::protobuf::uint32 CSAutoBattleCheckRsp::on_or_off() const {
  return on_or_off_;
}
inline void CSAutoBattleCheckRsp::set_on_or_off(::google::protobuf::uint32 value) {
  set_has_on_or_off();
  on_or_off_ = value;
}

// required uint32 vip_lv = 2;
inline bool CSAutoBattleCheckRsp::has_vip_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAutoBattleCheckRsp::set_has_vip_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAutoBattleCheckRsp::clear_has_vip_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAutoBattleCheckRsp::clear_vip_lv() {
  vip_lv_ = 0u;
  clear_has_vip_lv();
}
inline ::google::protobuf::uint32 CSAutoBattleCheckRsp::vip_lv() const {
  return vip_lv_;
}
inline void CSAutoBattleCheckRsp::set_vip_lv(::google::protobuf::uint32 value) {
  set_has_vip_lv();
  vip_lv_ = value;
}

// required uint32 lv = 3;
inline bool CSAutoBattleCheckRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAutoBattleCheckRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAutoBattleCheckRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAutoBattleCheckRsp::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSAutoBattleCheckRsp::lv() const {
  return lv_;
}
inline void CSAutoBattleCheckRsp::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// CSNearbyRednameReq

// -------------------------------------------------------------------

// CSNearbyRednameRsp

// repeated .PartnerInfo nearby = 1;
inline int CSNearbyRednameRsp::nearby_size() const {
  return nearby_.size();
}
inline void CSNearbyRednameRsp::clear_nearby() {
  nearby_.Clear();
}
inline const ::PartnerInfo& CSNearbyRednameRsp::nearby(int index) const {
  return nearby_.Get(index);
}
inline ::PartnerInfo* CSNearbyRednameRsp::mutable_nearby(int index) {
  return nearby_.Mutable(index);
}
inline ::PartnerInfo* CSNearbyRednameRsp::add_nearby() {
  return nearby_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSNearbyRednameRsp::nearby() const {
  return nearby_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSNearbyRednameRsp::mutable_nearby() {
  return &nearby_;
}

// -------------------------------------------------------------------

// CSInstanceStarRewardReq

// required uint32 instance_category = 1;
inline bool CSInstanceStarRewardReq::has_instance_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceStarRewardReq::set_has_instance_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceStarRewardReq::clear_has_instance_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceStarRewardReq::clear_instance_category() {
  instance_category_ = 0u;
  clear_has_instance_category();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardReq::instance_category() const {
  return instance_category_;
}
inline void CSInstanceStarRewardReq::set_instance_category(::google::protobuf::uint32 value) {
  set_has_instance_category();
  instance_category_ = value;
}

// -------------------------------------------------------------------

// CSInstanceStarRewardRsp

// required uint32 instance_category = 1;
inline bool CSInstanceStarRewardRsp::has_instance_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceStarRewardRsp::set_has_instance_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceStarRewardRsp::clear_has_instance_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceStarRewardRsp::clear_instance_category() {
  instance_category_ = 0u;
  clear_has_instance_category();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardRsp::instance_category() const {
  return instance_category_;
}
inline void CSInstanceStarRewardRsp::set_instance_category(::google::protobuf::uint32 value) {
  set_has_instance_category();
  instance_category_ = value;
}

// required uint32 stars = 2;
inline bool CSInstanceStarRewardRsp::has_stars() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceStarRewardRsp::set_has_stars() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceStarRewardRsp::clear_has_stars() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceStarRewardRsp::clear_stars() {
  stars_ = 0u;
  clear_has_stars();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardRsp::stars() const {
  return stars_;
}
inline void CSInstanceStarRewardRsp::set_stars(::google::protobuf::uint32 value) {
  set_has_stars();
  stars_ = value;
}

// required uint32 one_status = 3;
inline bool CSInstanceStarRewardRsp::has_one_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstanceStarRewardRsp::set_has_one_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstanceStarRewardRsp::clear_has_one_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstanceStarRewardRsp::clear_one_status() {
  one_status_ = 0u;
  clear_has_one_status();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardRsp::one_status() const {
  return one_status_;
}
inline void CSInstanceStarRewardRsp::set_one_status(::google::protobuf::uint32 value) {
  set_has_one_status();
  one_status_ = value;
}

// required uint32 two_status = 4;
inline bool CSInstanceStarRewardRsp::has_two_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSInstanceStarRewardRsp::set_has_two_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSInstanceStarRewardRsp::clear_has_two_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSInstanceStarRewardRsp::clear_two_status() {
  two_status_ = 0u;
  clear_has_two_status();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardRsp::two_status() const {
  return two_status_;
}
inline void CSInstanceStarRewardRsp::set_two_status(::google::protobuf::uint32 value) {
  set_has_two_status();
  two_status_ = value;
}

// required uint32 three_status = 5;
inline bool CSInstanceStarRewardRsp::has_three_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSInstanceStarRewardRsp::set_has_three_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSInstanceStarRewardRsp::clear_has_three_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSInstanceStarRewardRsp::clear_three_status() {
  three_status_ = 0u;
  clear_has_three_status();
}
inline ::google::protobuf::uint32 CSInstanceStarRewardRsp::three_status() const {
  return three_status_;
}
inline void CSInstanceStarRewardRsp::set_three_status(::google::protobuf::uint32 value) {
  set_has_three_status();
  three_status_ = value;
}

// -------------------------------------------------------------------

// CSInstanceGetStarRewardReq

// required uint32 instance_category = 1;
inline bool CSInstanceGetStarRewardReq::has_instance_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceGetStarRewardReq::set_has_instance_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceGetStarRewardReq::clear_has_instance_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceGetStarRewardReq::clear_instance_category() {
  instance_category_ = 0u;
  clear_has_instance_category();
}
inline ::google::protobuf::uint32 CSInstanceGetStarRewardReq::instance_category() const {
  return instance_category_;
}
inline void CSInstanceGetStarRewardReq::set_instance_category(::google::protobuf::uint32 value) {
  set_has_instance_category();
  instance_category_ = value;
}

// required uint32 reward_type = 2;
inline bool CSInstanceGetStarRewardReq::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceGetStarRewardReq::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceGetStarRewardReq::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceGetStarRewardReq::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
inline ::google::protobuf::uint32 CSInstanceGetStarRewardReq::reward_type() const {
  return reward_type_;
}
inline void CSInstanceGetStarRewardReq::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
}

// -------------------------------------------------------------------

// CSInstanceGetStarRewardRsp

// required uint32 instance_category = 1;
inline bool CSInstanceGetStarRewardRsp::has_instance_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceGetStarRewardRsp::set_has_instance_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceGetStarRewardRsp::clear_has_instance_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceGetStarRewardRsp::clear_instance_category() {
  instance_category_ = 0u;
  clear_has_instance_category();
}
inline ::google::protobuf::uint32 CSInstanceGetStarRewardRsp::instance_category() const {
  return instance_category_;
}
inline void CSInstanceGetStarRewardRsp::set_instance_category(::google::protobuf::uint32 value) {
  set_has_instance_category();
  instance_category_ = value;
}

// required uint32 reward_type = 2;
inline bool CSInstanceGetStarRewardRsp::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceGetStarRewardRsp::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceGetStarRewardRsp::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceGetStarRewardRsp::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
inline ::google::protobuf::uint32 CSInstanceGetStarRewardRsp::reward_type() const {
  return reward_type_;
}
inline void CSInstanceGetStarRewardRsp::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
}

// required uint32 status = 3;
inline bool CSInstanceGetStarRewardRsp::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstanceGetStarRewardRsp::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstanceGetStarRewardRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstanceGetStarRewardRsp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSInstanceGetStarRewardRsp::status() const {
  return status_;
}
inline void CSInstanceGetStarRewardRsp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CSChkInstanceStarRewardReq

// -------------------------------------------------------------------

// CSChkInstanceStarRewardRsp

// required bool all_or_nothing = 1;
inline bool CSChkInstanceStarRewardRsp::has_all_or_nothing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChkInstanceStarRewardRsp::set_has_all_or_nothing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChkInstanceStarRewardRsp::clear_has_all_or_nothing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChkInstanceStarRewardRsp::clear_all_or_nothing() {
  all_or_nothing_ = false;
  clear_has_all_or_nothing();
}
inline bool CSChkInstanceStarRewardRsp::all_or_nothing() const {
  return all_or_nothing_;
}
inline void CSChkInstanceStarRewardRsp::set_all_or_nothing(bool value) {
  set_has_all_or_nothing();
  all_or_nothing_ = value;
}

// required uint32 last_raid_id = 2;
inline bool CSChkInstanceStarRewardRsp::has_last_raid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChkInstanceStarRewardRsp::set_has_last_raid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChkInstanceStarRewardRsp::clear_has_last_raid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChkInstanceStarRewardRsp::clear_last_raid_id() {
  last_raid_id_ = 0u;
  clear_has_last_raid_id();
}
inline ::google::protobuf::uint32 CSChkInstanceStarRewardRsp::last_raid_id() const {
  return last_raid_id_;
}
inline void CSChkInstanceStarRewardRsp::set_last_raid_id(::google::protobuf::uint32 value) {
  set_has_last_raid_id();
  last_raid_id_ = value;
}

// -------------------------------------------------------------------

// CSDelEnemyReq

// required uint32 userid = 1;
inline bool CSDelEnemyReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelEnemyReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelEnemyReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelEnemyReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSDelEnemyReq::userid() const {
  return userid_;
}
inline void CSDelEnemyReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSDelEnemyReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDelEnemyReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDelEnemyReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDelEnemyReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSDelEnemyReq::reg_tm() const {
  return reg_tm_;
}
inline void CSDelEnemyReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channelid = 3;
inline bool CSDelEnemyReq::has_channelid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDelEnemyReq::set_has_channelid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDelEnemyReq::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDelEnemyReq::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CSDelEnemyReq::channelid() const {
  return channelid_;
}
inline void CSDelEnemyReq::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
}

// -------------------------------------------------------------------

// CSDelEnemyRsp

// required uint32 succ = 1;
inline bool CSDelEnemyRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelEnemyRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelEnemyRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelEnemyRsp::clear_succ() {
  succ_ = 0u;
  clear_has_succ();
}
inline ::google::protobuf::uint32 CSDelEnemyRsp::succ() const {
  return succ_;
}
inline void CSDelEnemyRsp::set_succ(::google::protobuf::uint32 value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSEnemyInfoReq

// -------------------------------------------------------------------

// CSEnemyInfoRsp

// repeated .PartnerInfo enemy = 1;
inline int CSEnemyInfoRsp::enemy_size() const {
  return enemy_.size();
}
inline void CSEnemyInfoRsp::clear_enemy() {
  enemy_.Clear();
}
inline const ::PartnerInfo& CSEnemyInfoRsp::enemy(int index) const {
  return enemy_.Get(index);
}
inline ::PartnerInfo* CSEnemyInfoRsp::mutable_enemy(int index) {
  return enemy_.Mutable(index);
}
inline ::PartnerInfo* CSEnemyInfoRsp::add_enemy() {
  return enemy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSEnemyInfoRsp::enemy() const {
  return enemy_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSEnemyInfoRsp::mutable_enemy() {
  return &enemy_;
}

// -------------------------------------------------------------------

// CSGetRednameTimeReq

// required uint32 userid = 1;
inline bool CSGetRednameTimeReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetRednameTimeReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetRednameTimeReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetRednameTimeReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetRednameTimeReq::userid() const {
  return userid_;
}
inline void CSGetRednameTimeReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSGetRednameTimeReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetRednameTimeReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetRednameTimeReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetRednameTimeReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSGetRednameTimeReq::reg_tm() const {
  return reg_tm_;
}
inline void CSGetRednameTimeReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channelid = 3;
inline bool CSGetRednameTimeReq::has_channelid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetRednameTimeReq::set_has_channelid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetRednameTimeReq::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetRednameTimeReq::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CSGetRednameTimeReq::channelid() const {
  return channelid_;
}
inline void CSGetRednameTimeReq::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
}

// -------------------------------------------------------------------

// CSGetRednameTimeRsp

// required uint32 time = 1;
inline bool CSGetRednameTimeRsp::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetRednameTimeRsp::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetRednameTimeRsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetRednameTimeRsp::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CSGetRednameTimeRsp::time() const {
  return time_;
}
inline void CSGetRednameTimeRsp::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 userid = 2;
inline bool CSGetRednameTimeRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetRednameTimeRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetRednameTimeRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetRednameTimeRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetRednameTimeRsp::userid() const {
  return userid_;
}
inline void CSGetRednameTimeRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_tm = 3;
inline bool CSGetRednameTimeRsp::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetRednameTimeRsp::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetRednameTimeRsp::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetRednameTimeRsp::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSGetRednameTimeRsp::reg_tm() const {
  return reg_tm_;
}
inline void CSGetRednameTimeRsp::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// optional uint32 channelid = 4;
inline bool CSGetRednameTimeRsp::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetRednameTimeRsp::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetRednameTimeRsp::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetRednameTimeRsp::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CSGetRednameTimeRsp::channelid() const {
  return channelid_;
}
inline void CSGetRednameTimeRsp::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
}

// -------------------------------------------------------------------

// CSSpiritDrawReq

// required uint32 type = 1;
inline bool CSSpiritDrawReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritDrawReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritDrawReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritDrawReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSSpiritDrawReq::type() const {
  return type_;
}
inline void CSSpiritDrawReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSSpiritDrawRsp

// repeated uint32 spirits = 1;
inline int CSSpiritDrawRsp::spirits_size() const {
  return spirits_.size();
}
inline void CSSpiritDrawRsp::clear_spirits() {
  spirits_.Clear();
}
inline ::google::protobuf::uint32 CSSpiritDrawRsp::spirits(int index) const {
  return spirits_.Get(index);
}
inline void CSSpiritDrawRsp::set_spirits(int index, ::google::protobuf::uint32 value) {
  spirits_.Set(index, value);
}
inline void CSSpiritDrawRsp::add_spirits(::google::protobuf::uint32 value) {
  spirits_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSSpiritDrawRsp::spirits() const {
  return spirits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSSpiritDrawRsp::mutable_spirits() {
  return &spirits_;
}

// optional uint32 type = 2;
inline bool CSSpiritDrawRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritDrawRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritDrawRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritDrawRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSSpiritDrawRsp::type() const {
  return type_;
}
inline void CSSpiritDrawRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSEquipAllBestReq

// required uint32 pos = 1;
inline bool CSEquipAllBestReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipAllBestReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipAllBestReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipAllBestReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipAllBestReq::pos() const {
  return pos_;
}
inline void CSEquipAllBestReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSCALBattleFairyReq

// -------------------------------------------------------------------

// CSCALBattleFairyRsp

// -------------------------------------------------------------------

// CSBabelFactorReq

// -------------------------------------------------------------------

// CSBabelFactorRsp

// repeated uint32 factors = 1;
inline int CSBabelFactorRsp::factors_size() const {
  return factors_.size();
}
inline void CSBabelFactorRsp::clear_factors() {
  factors_.Clear();
}
inline ::google::protobuf::uint32 CSBabelFactorRsp::factors(int index) const {
  return factors_.Get(index);
}
inline void CSBabelFactorRsp::set_factors(int index, ::google::protobuf::uint32 value) {
  factors_.Set(index, value);
}
inline void CSBabelFactorRsp::add_factors(::google::protobuf::uint32 value) {
  factors_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSBabelFactorRsp::factors() const {
  return factors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSBabelFactorRsp::mutable_factors() {
  return &factors_;
}

// -------------------------------------------------------------------

// CSShoppingInfo

// required uint32 shopping_id = 1;
inline bool CSShoppingInfo::has_shopping_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShoppingInfo::set_has_shopping_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShoppingInfo::clear_has_shopping_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShoppingInfo::clear_shopping_id() {
  shopping_id_ = 0u;
  clear_has_shopping_id();
}
inline ::google::protobuf::uint32 CSShoppingInfo::shopping_id() const {
  return shopping_id_;
}
inline void CSShoppingInfo::set_shopping_id(::google::protobuf::uint32 value) {
  set_has_shopping_id();
  shopping_id_ = value;
}

// required uint32 buy_times = 2;
inline bool CSShoppingInfo::has_buy_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSShoppingInfo::set_has_buy_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSShoppingInfo::clear_has_buy_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSShoppingInfo::clear_buy_times() {
  buy_times_ = 0u;
  clear_has_buy_times();
}
inline ::google::protobuf::uint32 CSShoppingInfo::buy_times() const {
  return buy_times_;
}
inline void CSShoppingInfo::set_buy_times(::google::protobuf::uint32 value) {
  set_has_buy_times();
  buy_times_ = value;
}

// -------------------------------------------------------------------

// CSShoppingReq

// repeated uint32 shopping_ids = 1;
inline int CSShoppingReq::shopping_ids_size() const {
  return shopping_ids_.size();
}
inline void CSShoppingReq::clear_shopping_ids() {
  shopping_ids_.Clear();
}
inline ::google::protobuf::uint32 CSShoppingReq::shopping_ids(int index) const {
  return shopping_ids_.Get(index);
}
inline void CSShoppingReq::set_shopping_ids(int index, ::google::protobuf::uint32 value) {
  shopping_ids_.Set(index, value);
}
inline void CSShoppingReq::add_shopping_ids(::google::protobuf::uint32 value) {
  shopping_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSShoppingReq::shopping_ids() const {
  return shopping_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSShoppingReq::mutable_shopping_ids() {
  return &shopping_ids_;
}

// -------------------------------------------------------------------

// CSShoppingRsp

// repeated .CSShoppingInfo shoppings = 1;
inline int CSShoppingRsp::shoppings_size() const {
  return shoppings_.size();
}
inline void CSShoppingRsp::clear_shoppings() {
  shoppings_.Clear();
}
inline const ::CSShoppingInfo& CSShoppingRsp::shoppings(int index) const {
  return shoppings_.Get(index);
}
inline ::CSShoppingInfo* CSShoppingRsp::mutable_shoppings(int index) {
  return shoppings_.Mutable(index);
}
inline ::CSShoppingInfo* CSShoppingRsp::add_shoppings() {
  return shoppings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSShoppingInfo >&
CSShoppingRsp::shoppings() const {
  return shoppings_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSShoppingInfo >*
CSShoppingRsp::mutable_shoppings() {
  return &shoppings_;
}

// -------------------------------------------------------------------

// CSEquipNotify

// required uint32 pos = 1;
inline bool CSEquipNotify::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipNotify::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipNotify::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipNotify::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipNotify::pos() const {
  return pos_;
}
inline void CSEquipNotify::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSShowRebirthNotify

// required bool show = 1;
inline bool CSShowRebirthNotify::has_show() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowRebirthNotify::set_has_show() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowRebirthNotify::clear_has_show() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowRebirthNotify::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CSShowRebirthNotify::show() const {
  return show_;
}
inline void CSShowRebirthNotify::set_show(bool value) {
  set_has_show();
  show_ = value;
}

// -------------------------------------------------------------------

// CSNewFairyNotify

// repeated uint32 fairys = 1;
inline int CSNewFairyNotify::fairys_size() const {
  return fairys_.size();
}
inline void CSNewFairyNotify::clear_fairys() {
  fairys_.Clear();
}
inline ::google::protobuf::uint32 CSNewFairyNotify::fairys(int index) const {
  return fairys_.Get(index);
}
inline void CSNewFairyNotify::set_fairys(int index, ::google::protobuf::uint32 value) {
  fairys_.Set(index, value);
}
inline void CSNewFairyNotify::add_fairys(::google::protobuf::uint32 value) {
  fairys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSNewFairyNotify::fairys() const {
  return fairys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSNewFairyNotify::mutable_fairys() {
  return &fairys_;
}

// -------------------------------------------------------------------

// CSGoogleGradingRsp

// -------------------------------------------------------------------

// CSGoogleGradingCompleteReq

// -------------------------------------------------------------------

// CSKakaoAttrReq

// repeated uint32 key = 1;
inline int CSKakaoAttrReq::key_size() const {
  return key_.size();
}
inline void CSKakaoAttrReq::clear_key() {
  key_.Clear();
}
inline ::google::protobuf::uint32 CSKakaoAttrReq::key(int index) const {
  return key_.Get(index);
}
inline void CSKakaoAttrReq::set_key(int index, ::google::protobuf::uint32 value) {
  key_.Set(index, value);
}
inline void CSKakaoAttrReq::add_key(::google::protobuf::uint32 value) {
  key_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSKakaoAttrReq::key() const {
  return key_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSKakaoAttrReq::mutable_key() {
  return &key_;
}

// -------------------------------------------------------------------

// CSKakaoAttrRsp_kakao_value

// required uint32 key = 1;
inline bool CSKakaoAttrRsp_kakao_value::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSKakaoAttrRsp_kakao_value::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSKakaoAttrRsp_kakao_value::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSKakaoAttrRsp_kakao_value::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSKakaoAttrRsp_kakao_value::key() const {
  return key_;
}
inline void CSKakaoAttrRsp_kakao_value::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSKakaoAttrRsp_kakao_value::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSKakaoAttrRsp_kakao_value::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSKakaoAttrRsp_kakao_value::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSKakaoAttrRsp_kakao_value::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSKakaoAttrRsp_kakao_value::value() const {
  return value_;
}
inline void CSKakaoAttrRsp_kakao_value::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSKakaoAttrRsp

// repeated .CSKakaoAttrRsp.kakao_value values = 1;
inline int CSKakaoAttrRsp::values_size() const {
  return values_.size();
}
inline void CSKakaoAttrRsp::clear_values() {
  values_.Clear();
}
inline const ::CSKakaoAttrRsp_kakao_value& CSKakaoAttrRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSKakaoAttrRsp_kakao_value* CSKakaoAttrRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSKakaoAttrRsp_kakao_value* CSKakaoAttrRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSKakaoAttrRsp_kakao_value >&
CSKakaoAttrRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSKakaoAttrRsp_kakao_value >*
CSKakaoAttrRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSkakaoUrlReq

// required bytes kakao_url = 1;
inline bool CSkakaoUrlReq::has_kakao_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSkakaoUrlReq::set_has_kakao_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSkakaoUrlReq::clear_has_kakao_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSkakaoUrlReq::clear_kakao_url() {
  if (kakao_url_ != &::google::protobuf::internal::kEmptyString) {
    kakao_url_->clear();
  }
  clear_has_kakao_url();
}
inline const ::std::string& CSkakaoUrlReq::kakao_url() const {
  return *kakao_url_;
}
inline void CSkakaoUrlReq::set_kakao_url(const ::std::string& value) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(value);
}
inline void CSkakaoUrlReq::set_kakao_url(const char* value) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(value);
}
inline void CSkakaoUrlReq::set_kakao_url(const void* value, size_t size) {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  kakao_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSkakaoUrlReq::mutable_kakao_url() {
  set_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    kakao_url_ = new ::std::string;
  }
  return kakao_url_;
}
inline ::std::string* CSkakaoUrlReq::release_kakao_url() {
  clear_has_kakao_url();
  if (kakao_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = kakao_url_;
    kakao_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSGetCdRewardReq

// required uint32 type = 1;
inline bool CSGetCdRewardReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetCdRewardReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetCdRewardReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetCdRewardReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSGetCdRewardReq::type() const {
  return type_;
}
inline void CSGetCdRewardReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint64 accepter = 2;
inline bool CSGetCdRewardReq::has_accepter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetCdRewardReq::set_has_accepter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetCdRewardReq::clear_has_accepter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetCdRewardReq::clear_accepter() {
  accepter_ = GOOGLE_ULONGLONG(0);
  clear_has_accepter();
}
inline ::google::protobuf::uint64 CSGetCdRewardReq::accepter() const {
  return accepter_;
}
inline void CSGetCdRewardReq::set_accepter(::google::protobuf::uint64 value) {
  set_has_accepter();
  accepter_ = value;
}

// required uint32 expire_time = 3;
inline bool CSGetCdRewardReq::has_expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetCdRewardReq::set_has_expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetCdRewardReq::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetCdRewardReq::clear_expire_time() {
  expire_time_ = 0u;
  clear_has_expire_time();
}
inline ::google::protobuf::uint32 CSGetCdRewardReq::expire_time() const {
  return expire_time_;
}
inline void CSGetCdRewardReq::set_expire_time(::google::protobuf::uint32 value) {
  set_has_expire_time();
  expire_time_ = value;
}

// -------------------------------------------------------------------

// CSGetCdRewardRsp

// -------------------------------------------------------------------

// CSEquipAllBestRsp

// -------------------------------------------------------------------

// CSGoogleGradingReq

// -------------------------------------------------------------------

// CSGetExploreTreasureReq

// -------------------------------------------------------------------

// CSGetExploreTreasureRsp

// required bool res = 1;
inline bool CSGetExploreTreasureRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetExploreTreasureRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetExploreTreasureRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetExploreTreasureRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSGetExploreTreasureRsp::res() const {
  return res_;
}
inline void CSGetExploreTreasureRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSGetExploreInfoReq

// -------------------------------------------------------------------

// CSGetExploreInfoRsp

// optional uint32 res = 1;
inline bool CSGetExploreInfoRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetExploreInfoRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetExploreInfoRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetExploreInfoRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSGetExploreInfoRsp::res() const {
  return res_;
}
inline void CSGetExploreInfoRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// repeated uint32 param = 2;
inline int CSGetExploreInfoRsp::param_size() const {
  return param_.size();
}
inline void CSGetExploreInfoRsp::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSGetExploreInfoRsp::param(int index) const {
  return param_.Get(index);
}
inline void CSGetExploreInfoRsp::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSGetExploreInfoRsp::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetExploreInfoRsp::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetExploreInfoRsp::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSGetActivityDataReq

// -------------------------------------------------------------------

// CSActivityCentreItemInfo

// required uint32 index = 1;
inline bool CSActivityCentreItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSActivityCentreItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSActivityCentreItemInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::index() const {
  return index_;
}
inline void CSActivityCentreItemInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional bytes activity_type = 2;
inline bool CSActivityCentreItemInfo::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSActivityCentreItemInfo::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSActivityCentreItemInfo::clear_activity_type() {
  if (activity_type_ != &::google::protobuf::internal::kEmptyString) {
    activity_type_->clear();
  }
  clear_has_activity_type();
}
inline const ::std::string& CSActivityCentreItemInfo::activity_type() const {
  return *activity_type_;
}
inline void CSActivityCentreItemInfo::set_activity_type(const ::std::string& value) {
  set_has_activity_type();
  if (activity_type_ == &::google::protobuf::internal::kEmptyString) {
    activity_type_ = new ::std::string;
  }
  activity_type_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_type(const char* value) {
  set_has_activity_type();
  if (activity_type_ == &::google::protobuf::internal::kEmptyString) {
    activity_type_ = new ::std::string;
  }
  activity_type_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_type(const void* value, size_t size) {
  set_has_activity_type();
  if (activity_type_ == &::google::protobuf::internal::kEmptyString) {
    activity_type_ = new ::std::string;
  }
  activity_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_activity_type() {
  set_has_activity_type();
  if (activity_type_ == &::google::protobuf::internal::kEmptyString) {
    activity_type_ = new ::std::string;
  }
  return activity_type_;
}
inline ::std::string* CSActivityCentreItemInfo::release_activity_type() {
  clear_has_activity_type();
  if (activity_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_type_;
    activity_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_show = 3;
inline bool CSActivityCentreItemInfo::has_activity_show() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_activity_show() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSActivityCentreItemInfo::clear_has_activity_show() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSActivityCentreItemInfo::clear_activity_show() {
  if (activity_show_ != &::google::protobuf::internal::kEmptyString) {
    activity_show_->clear();
  }
  clear_has_activity_show();
}
inline const ::std::string& CSActivityCentreItemInfo::activity_show() const {
  return *activity_show_;
}
inline void CSActivityCentreItemInfo::set_activity_show(const ::std::string& value) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_show(const char* value) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_show(const void* value, size_t size) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_activity_show() {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  return activity_show_;
}
inline ::std::string* CSActivityCentreItemInfo::release_activity_show() {
  clear_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_show_;
    activity_show_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_qualification = 4;
inline bool CSActivityCentreItemInfo::has_activity_qualification() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_activity_qualification() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSActivityCentreItemInfo::clear_has_activity_qualification() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSActivityCentreItemInfo::clear_activity_qualification() {
  if (activity_qualification_ != &::google::protobuf::internal::kEmptyString) {
    activity_qualification_->clear();
  }
  clear_has_activity_qualification();
}
inline const ::std::string& CSActivityCentreItemInfo::activity_qualification() const {
  return *activity_qualification_;
}
inline void CSActivityCentreItemInfo::set_activity_qualification(const ::std::string& value) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_qualification(const char* value) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_qualification(const void* value, size_t size) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_activity_qualification() {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  return activity_qualification_;
}
inline ::std::string* CSActivityCentreItemInfo::release_activity_qualification() {
  clear_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_qualification_;
    activity_qualification_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_qualification2 = 5;
inline bool CSActivityCentreItemInfo::has_activity_qualification2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_activity_qualification2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSActivityCentreItemInfo::clear_has_activity_qualification2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSActivityCentreItemInfo::clear_activity_qualification2() {
  if (activity_qualification2_ != &::google::protobuf::internal::kEmptyString) {
    activity_qualification2_->clear();
  }
  clear_has_activity_qualification2();
}
inline const ::std::string& CSActivityCentreItemInfo::activity_qualification2() const {
  return *activity_qualification2_;
}
inline void CSActivityCentreItemInfo::set_activity_qualification2(const ::std::string& value) {
  set_has_activity_qualification2();
  if (activity_qualification2_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification2_ = new ::std::string;
  }
  activity_qualification2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_qualification2(const char* value) {
  set_has_activity_qualification2();
  if (activity_qualification2_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification2_ = new ::std::string;
  }
  activity_qualification2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_activity_qualification2(const void* value, size_t size) {
  set_has_activity_qualification2();
  if (activity_qualification2_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification2_ = new ::std::string;
  }
  activity_qualification2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_activity_qualification2() {
  set_has_activity_qualification2();
  if (activity_qualification2_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification2_ = new ::std::string;
  }
  return activity_qualification2_;
}
inline ::std::string* CSActivityCentreItemInfo::release_activity_qualification2() {
  clear_has_activity_qualification2();
  if (activity_qualification2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_qualification2_;
    activity_qualification2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes award1 = 6;
inline bool CSActivityCentreItemInfo::has_award1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_award1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSActivityCentreItemInfo::clear_has_award1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSActivityCentreItemInfo::clear_award1() {
  if (award1_ != &::google::protobuf::internal::kEmptyString) {
    award1_->clear();
  }
  clear_has_award1();
}
inline const ::std::string& CSActivityCentreItemInfo::award1() const {
  return *award1_;
}
inline void CSActivityCentreItemInfo::set_award1(const ::std::string& value) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(value);
}
inline void CSActivityCentreItemInfo::set_award1(const char* value) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(value);
}
inline void CSActivityCentreItemInfo::set_award1(const void* value, size_t size) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_award1() {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  return award1_;
}
inline ::std::string* CSActivityCentreItemInfo::release_award1() {
  clear_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award1_;
    award1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes award2 = 7;
inline bool CSActivityCentreItemInfo::has_award2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_award2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSActivityCentreItemInfo::clear_has_award2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSActivityCentreItemInfo::clear_award2() {
  if (award2_ != &::google::protobuf::internal::kEmptyString) {
    award2_->clear();
  }
  clear_has_award2();
}
inline const ::std::string& CSActivityCentreItemInfo::award2() const {
  return *award2_;
}
inline void CSActivityCentreItemInfo::set_award2(const ::std::string& value) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_award2(const char* value) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_award2(const void* value, size_t size) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_award2() {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  return award2_;
}
inline ::std::string* CSActivityCentreItemInfo::release_award2() {
  clear_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award2_;
    award2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 startdate = 8;
inline bool CSActivityCentreItemInfo::has_startdate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_startdate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSActivityCentreItemInfo::clear_has_startdate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSActivityCentreItemInfo::clear_startdate() {
  startdate_ = 0u;
  clear_has_startdate();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::startdate() const {
  return startdate_;
}
inline void CSActivityCentreItemInfo::set_startdate(::google::protobuf::uint32 value) {
  set_has_startdate();
  startdate_ = value;
}

// optional uint32 enddate = 9;
inline bool CSActivityCentreItemInfo::has_enddate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_enddate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSActivityCentreItemInfo::clear_has_enddate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSActivityCentreItemInfo::clear_enddate() {
  enddate_ = 0u;
  clear_has_enddate();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::enddate() const {
  return enddate_;
}
inline void CSActivityCentreItemInfo::set_enddate(::google::protobuf::uint32 value) {
  set_has_enddate();
  enddate_ = value;
}

// optional uint32 starttime = 10;
inline bool CSActivityCentreItemInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSActivityCentreItemInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSActivityCentreItemInfo::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::starttime() const {
  return starttime_;
}
inline void CSActivityCentreItemInfo::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional uint32 endtime = 11;
inline bool CSActivityCentreItemInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSActivityCentreItemInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSActivityCentreItemInfo::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::endtime() const {
  return endtime_;
}
inline void CSActivityCentreItemInfo::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated uint32 specialtm = 12;
inline int CSActivityCentreItemInfo::specialtm_size() const {
  return specialtm_.size();
}
inline void CSActivityCentreItemInfo::clear_specialtm() {
  specialtm_.Clear();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::specialtm(int index) const {
  return specialtm_.Get(index);
}
inline void CSActivityCentreItemInfo::set_specialtm(int index, ::google::protobuf::uint32 value) {
  specialtm_.Set(index, value);
}
inline void CSActivityCentreItemInfo::add_specialtm(::google::protobuf::uint32 value) {
  specialtm_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSActivityCentreItemInfo::specialtm() const {
  return specialtm_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSActivityCentreItemInfo::mutable_specialtm() {
  return &specialtm_;
}

// optional uint32 rewarddate = 13;
inline bool CSActivityCentreItemInfo::has_rewarddate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_rewarddate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSActivityCentreItemInfo::clear_has_rewarddate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSActivityCentreItemInfo::clear_rewarddate() {
  rewarddate_ = 0u;
  clear_has_rewarddate();
}
inline ::google::protobuf::uint32 CSActivityCentreItemInfo::rewarddate() const {
  return rewarddate_;
}
inline void CSActivityCentreItemInfo::set_rewarddate(::google::protobuf::uint32 value) {
  set_has_rewarddate();
  rewarddate_ = value;
}

// optional bytes extend_1 = 14;
inline bool CSActivityCentreItemInfo::has_extend_1() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_extend_1() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSActivityCentreItemInfo::clear_has_extend_1() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSActivityCentreItemInfo::clear_extend_1() {
  if (extend_1_ != &::google::protobuf::internal::kEmptyString) {
    extend_1_->clear();
  }
  clear_has_extend_1();
}
inline const ::std::string& CSActivityCentreItemInfo::extend_1() const {
  return *extend_1_;
}
inline void CSActivityCentreItemInfo::set_extend_1(const ::std::string& value) {
  set_has_extend_1();
  if (extend_1_ == &::google::protobuf::internal::kEmptyString) {
    extend_1_ = new ::std::string;
  }
  extend_1_->assign(value);
}
inline void CSActivityCentreItemInfo::set_extend_1(const char* value) {
  set_has_extend_1();
  if (extend_1_ == &::google::protobuf::internal::kEmptyString) {
    extend_1_ = new ::std::string;
  }
  extend_1_->assign(value);
}
inline void CSActivityCentreItemInfo::set_extend_1(const void* value, size_t size) {
  set_has_extend_1();
  if (extend_1_ == &::google::protobuf::internal::kEmptyString) {
    extend_1_ = new ::std::string;
  }
  extend_1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_extend_1() {
  set_has_extend_1();
  if (extend_1_ == &::google::protobuf::internal::kEmptyString) {
    extend_1_ = new ::std::string;
  }
  return extend_1_;
}
inline ::std::string* CSActivityCentreItemInfo::release_extend_1() {
  clear_has_extend_1();
  if (extend_1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = extend_1_;
    extend_1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes extend_2 = 15;
inline bool CSActivityCentreItemInfo::has_extend_2() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSActivityCentreItemInfo::set_has_extend_2() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSActivityCentreItemInfo::clear_has_extend_2() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSActivityCentreItemInfo::clear_extend_2() {
  if (extend_2_ != &::google::protobuf::internal::kEmptyString) {
    extend_2_->clear();
  }
  clear_has_extend_2();
}
inline const ::std::string& CSActivityCentreItemInfo::extend_2() const {
  return *extend_2_;
}
inline void CSActivityCentreItemInfo::set_extend_2(const ::std::string& value) {
  set_has_extend_2();
  if (extend_2_ == &::google::protobuf::internal::kEmptyString) {
    extend_2_ = new ::std::string;
  }
  extend_2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_extend_2(const char* value) {
  set_has_extend_2();
  if (extend_2_ == &::google::protobuf::internal::kEmptyString) {
    extend_2_ = new ::std::string;
  }
  extend_2_->assign(value);
}
inline void CSActivityCentreItemInfo::set_extend_2(const void* value, size_t size) {
  set_has_extend_2();
  if (extend_2_ == &::google::protobuf::internal::kEmptyString) {
    extend_2_ = new ::std::string;
  }
  extend_2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSActivityCentreItemInfo::mutable_extend_2() {
  set_has_extend_2();
  if (extend_2_ == &::google::protobuf::internal::kEmptyString) {
    extend_2_ = new ::std::string;
  }
  return extend_2_;
}
inline ::std::string* CSActivityCentreItemInfo::release_extend_2() {
  clear_has_extend_2();
  if (extend_2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = extend_2_;
    extend_2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSShowActivityItemInfo

// required bytes activity_show = 1;
inline bool CSShowActivityItemInfo::has_activity_show() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowActivityItemInfo::set_has_activity_show() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowActivityItemInfo::clear_has_activity_show() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowActivityItemInfo::clear_activity_show() {
  if (activity_show_ != &::google::protobuf::internal::kEmptyString) {
    activity_show_->clear();
  }
  clear_has_activity_show();
}
inline const ::std::string& CSShowActivityItemInfo::activity_show() const {
  return *activity_show_;
}
inline void CSShowActivityItemInfo::set_activity_show(const ::std::string& value) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_show(const char* value) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_show(const void* value, size_t size) {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  activity_show_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_activity_show() {
  set_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    activity_show_ = new ::std::string;
  }
  return activity_show_;
}
inline ::std::string* CSShowActivityItemInfo::release_activity_show() {
  clear_has_activity_show();
  if (activity_show_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_show_;
    activity_show_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_condition = 2;
inline bool CSShowActivityItemInfo::has_activity_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSShowActivityItemInfo::set_has_activity_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSShowActivityItemInfo::clear_has_activity_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSShowActivityItemInfo::clear_activity_condition() {
  if (activity_condition_ != &::google::protobuf::internal::kEmptyString) {
    activity_condition_->clear();
  }
  clear_has_activity_condition();
}
inline const ::std::string& CSShowActivityItemInfo::activity_condition() const {
  return *activity_condition_;
}
inline void CSShowActivityItemInfo::set_activity_condition(const ::std::string& value) {
  set_has_activity_condition();
  if (activity_condition_ == &::google::protobuf::internal::kEmptyString) {
    activity_condition_ = new ::std::string;
  }
  activity_condition_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_condition(const char* value) {
  set_has_activity_condition();
  if (activity_condition_ == &::google::protobuf::internal::kEmptyString) {
    activity_condition_ = new ::std::string;
  }
  activity_condition_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_condition(const void* value, size_t size) {
  set_has_activity_condition();
  if (activity_condition_ == &::google::protobuf::internal::kEmptyString) {
    activity_condition_ = new ::std::string;
  }
  activity_condition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_activity_condition() {
  set_has_activity_condition();
  if (activity_condition_ == &::google::protobuf::internal::kEmptyString) {
    activity_condition_ = new ::std::string;
  }
  return activity_condition_;
}
inline ::std::string* CSShowActivityItemInfo::release_activity_condition() {
  clear_has_activity_condition();
  if (activity_condition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_condition_;
    activity_condition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_name = 3;
inline bool CSShowActivityItemInfo::has_activity_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSShowActivityItemInfo::set_has_activity_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSShowActivityItemInfo::clear_has_activity_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSShowActivityItemInfo::clear_activity_name() {
  if (activity_name_ != &::google::protobuf::internal::kEmptyString) {
    activity_name_->clear();
  }
  clear_has_activity_name();
}
inline const ::std::string& CSShowActivityItemInfo::activity_name() const {
  return *activity_name_;
}
inline void CSShowActivityItemInfo::set_activity_name(const ::std::string& value) {
  set_has_activity_name();
  if (activity_name_ == &::google::protobuf::internal::kEmptyString) {
    activity_name_ = new ::std::string;
  }
  activity_name_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_name(const char* value) {
  set_has_activity_name();
  if (activity_name_ == &::google::protobuf::internal::kEmptyString) {
    activity_name_ = new ::std::string;
  }
  activity_name_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_name(const void* value, size_t size) {
  set_has_activity_name();
  if (activity_name_ == &::google::protobuf::internal::kEmptyString) {
    activity_name_ = new ::std::string;
  }
  activity_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_activity_name() {
  set_has_activity_name();
  if (activity_name_ == &::google::protobuf::internal::kEmptyString) {
    activity_name_ = new ::std::string;
  }
  return activity_name_;
}
inline ::std::string* CSShowActivityItemInfo::release_activity_name() {
  clear_has_activity_name();
  if (activity_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_name_;
    activity_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes font_color = 4;
inline bool CSShowActivityItemInfo::has_font_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSShowActivityItemInfo::set_has_font_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSShowActivityItemInfo::clear_has_font_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSShowActivityItemInfo::clear_font_color() {
  if (font_color_ != &::google::protobuf::internal::kEmptyString) {
    font_color_->clear();
  }
  clear_has_font_color();
}
inline const ::std::string& CSShowActivityItemInfo::font_color() const {
  return *font_color_;
}
inline void CSShowActivityItemInfo::set_font_color(const ::std::string& value) {
  set_has_font_color();
  if (font_color_ == &::google::protobuf::internal::kEmptyString) {
    font_color_ = new ::std::string;
  }
  font_color_->assign(value);
}
inline void CSShowActivityItemInfo::set_font_color(const char* value) {
  set_has_font_color();
  if (font_color_ == &::google::protobuf::internal::kEmptyString) {
    font_color_ = new ::std::string;
  }
  font_color_->assign(value);
}
inline void CSShowActivityItemInfo::set_font_color(const void* value, size_t size) {
  set_has_font_color();
  if (font_color_ == &::google::protobuf::internal::kEmptyString) {
    font_color_ = new ::std::string;
  }
  font_color_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_font_color() {
  set_has_font_color();
  if (font_color_ == &::google::protobuf::internal::kEmptyString) {
    font_color_ = new ::std::string;
  }
  return font_color_;
}
inline ::std::string* CSShowActivityItemInfo::release_font_color() {
  clear_has_font_color();
  if (font_color_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = font_color_;
    font_color_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes buttonid = 5;
inline bool CSShowActivityItemInfo::has_buttonid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSShowActivityItemInfo::set_has_buttonid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSShowActivityItemInfo::clear_has_buttonid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSShowActivityItemInfo::clear_buttonid() {
  if (buttonid_ != &::google::protobuf::internal::kEmptyString) {
    buttonid_->clear();
  }
  clear_has_buttonid();
}
inline const ::std::string& CSShowActivityItemInfo::buttonid() const {
  return *buttonid_;
}
inline void CSShowActivityItemInfo::set_buttonid(const ::std::string& value) {
  set_has_buttonid();
  if (buttonid_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_ = new ::std::string;
  }
  buttonid_->assign(value);
}
inline void CSShowActivityItemInfo::set_buttonid(const char* value) {
  set_has_buttonid();
  if (buttonid_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_ = new ::std::string;
  }
  buttonid_->assign(value);
}
inline void CSShowActivityItemInfo::set_buttonid(const void* value, size_t size) {
  set_has_buttonid();
  if (buttonid_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_ = new ::std::string;
  }
  buttonid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_buttonid() {
  set_has_buttonid();
  if (buttonid_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_ = new ::std::string;
  }
  return buttonid_;
}
inline ::std::string* CSShowActivityItemInfo::release_buttonid() {
  clear_has_buttonid();
  if (buttonid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buttonid_;
    buttonid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes buttonid_text = 6;
inline bool CSShowActivityItemInfo::has_buttonid_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSShowActivityItemInfo::set_has_buttonid_text() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSShowActivityItemInfo::clear_has_buttonid_text() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSShowActivityItemInfo::clear_buttonid_text() {
  if (buttonid_text_ != &::google::protobuf::internal::kEmptyString) {
    buttonid_text_->clear();
  }
  clear_has_buttonid_text();
}
inline const ::std::string& CSShowActivityItemInfo::buttonid_text() const {
  return *buttonid_text_;
}
inline void CSShowActivityItemInfo::set_buttonid_text(const ::std::string& value) {
  set_has_buttonid_text();
  if (buttonid_text_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_text_ = new ::std::string;
  }
  buttonid_text_->assign(value);
}
inline void CSShowActivityItemInfo::set_buttonid_text(const char* value) {
  set_has_buttonid_text();
  if (buttonid_text_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_text_ = new ::std::string;
  }
  buttonid_text_->assign(value);
}
inline void CSShowActivityItemInfo::set_buttonid_text(const void* value, size_t size) {
  set_has_buttonid_text();
  if (buttonid_text_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_text_ = new ::std::string;
  }
  buttonid_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_buttonid_text() {
  set_has_buttonid_text();
  if (buttonid_text_ == &::google::protobuf::internal::kEmptyString) {
    buttonid_text_ = new ::std::string;
  }
  return buttonid_text_;
}
inline ::std::string* CSShowActivityItemInfo::release_buttonid_text() {
  clear_has_buttonid_text();
  if (buttonid_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buttonid_text_;
    buttonid_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes openlayername = 7;
inline bool CSShowActivityItemInfo::has_openlayername() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSShowActivityItemInfo::set_has_openlayername() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSShowActivityItemInfo::clear_has_openlayername() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSShowActivityItemInfo::clear_openlayername() {
  if (openlayername_ != &::google::protobuf::internal::kEmptyString) {
    openlayername_->clear();
  }
  clear_has_openlayername();
}
inline const ::std::string& CSShowActivityItemInfo::openlayername() const {
  return *openlayername_;
}
inline void CSShowActivityItemInfo::set_openlayername(const ::std::string& value) {
  set_has_openlayername();
  if (openlayername_ == &::google::protobuf::internal::kEmptyString) {
    openlayername_ = new ::std::string;
  }
  openlayername_->assign(value);
}
inline void CSShowActivityItemInfo::set_openlayername(const char* value) {
  set_has_openlayername();
  if (openlayername_ == &::google::protobuf::internal::kEmptyString) {
    openlayername_ = new ::std::string;
  }
  openlayername_->assign(value);
}
inline void CSShowActivityItemInfo::set_openlayername(const void* value, size_t size) {
  set_has_openlayername();
  if (openlayername_ == &::google::protobuf::internal::kEmptyString) {
    openlayername_ = new ::std::string;
  }
  openlayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_openlayername() {
  set_has_openlayername();
  if (openlayername_ == &::google::protobuf::internal::kEmptyString) {
    openlayername_ = new ::std::string;
  }
  return openlayername_;
}
inline ::std::string* CSShowActivityItemInfo::release_openlayername() {
  clear_has_openlayername();
  if (openlayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = openlayername_;
    openlayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes activity_content = 8;
inline bool CSShowActivityItemInfo::has_activity_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSShowActivityItemInfo::set_has_activity_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSShowActivityItemInfo::clear_has_activity_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSShowActivityItemInfo::clear_activity_content() {
  if (activity_content_ != &::google::protobuf::internal::kEmptyString) {
    activity_content_->clear();
  }
  clear_has_activity_content();
}
inline const ::std::string& CSShowActivityItemInfo::activity_content() const {
  return *activity_content_;
}
inline void CSShowActivityItemInfo::set_activity_content(const ::std::string& value) {
  set_has_activity_content();
  if (activity_content_ == &::google::protobuf::internal::kEmptyString) {
    activity_content_ = new ::std::string;
  }
  activity_content_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_content(const char* value) {
  set_has_activity_content();
  if (activity_content_ == &::google::protobuf::internal::kEmptyString) {
    activity_content_ = new ::std::string;
  }
  activity_content_->assign(value);
}
inline void CSShowActivityItemInfo::set_activity_content(const void* value, size_t size) {
  set_has_activity_content();
  if (activity_content_ == &::google::protobuf::internal::kEmptyString) {
    activity_content_ = new ::std::string;
  }
  activity_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_activity_content() {
  set_has_activity_content();
  if (activity_content_ == &::google::protobuf::internal::kEmptyString) {
    activity_content_ = new ::std::string;
  }
  return activity_content_;
}
inline ::std::string* CSShowActivityItemInfo::release_activity_content() {
  clear_has_activity_content();
  if (activity_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_content_;
    activity_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes itemflag = 9;
inline bool CSShowActivityItemInfo::has_itemflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSShowActivityItemInfo::set_has_itemflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSShowActivityItemInfo::clear_has_itemflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSShowActivityItemInfo::clear_itemflag() {
  if (itemflag_ != &::google::protobuf::internal::kEmptyString) {
    itemflag_->clear();
  }
  clear_has_itemflag();
}
inline const ::std::string& CSShowActivityItemInfo::itemflag() const {
  return *itemflag_;
}
inline void CSShowActivityItemInfo::set_itemflag(const ::std::string& value) {
  set_has_itemflag();
  if (itemflag_ == &::google::protobuf::internal::kEmptyString) {
    itemflag_ = new ::std::string;
  }
  itemflag_->assign(value);
}
inline void CSShowActivityItemInfo::set_itemflag(const char* value) {
  set_has_itemflag();
  if (itemflag_ == &::google::protobuf::internal::kEmptyString) {
    itemflag_ = new ::std::string;
  }
  itemflag_->assign(value);
}
inline void CSShowActivityItemInfo::set_itemflag(const void* value, size_t size) {
  set_has_itemflag();
  if (itemflag_ == &::google::protobuf::internal::kEmptyString) {
    itemflag_ = new ::std::string;
  }
  itemflag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowActivityItemInfo::mutable_itemflag() {
  set_has_itemflag();
  if (itemflag_ == &::google::protobuf::internal::kEmptyString) {
    itemflag_ = new ::std::string;
  }
  return itemflag_;
}
inline ::std::string* CSShowActivityItemInfo::release_itemflag() {
  clear_has_itemflag();
  if (itemflag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemflag_;
    itemflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSGetActivityDataRsp

// repeated .CSShowActivityItemInfo show_info = 1;
inline int CSGetActivityDataRsp::show_info_size() const {
  return show_info_.size();
}
inline void CSGetActivityDataRsp::clear_show_info() {
  show_info_.Clear();
}
inline const ::CSShowActivityItemInfo& CSGetActivityDataRsp::show_info(int index) const {
  return show_info_.Get(index);
}
inline ::CSShowActivityItemInfo* CSGetActivityDataRsp::mutable_show_info(int index) {
  return show_info_.Mutable(index);
}
inline ::CSShowActivityItemInfo* CSGetActivityDataRsp::add_show_info() {
  return show_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSShowActivityItemInfo >&
CSGetActivityDataRsp::show_info() const {
  return show_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSShowActivityItemInfo >*
CSGetActivityDataRsp::mutable_show_info() {
  return &show_info_;
}

// repeated .CSActivityCentreItemInfo center_info = 2;
inline int CSGetActivityDataRsp::center_info_size() const {
  return center_info_.size();
}
inline void CSGetActivityDataRsp::clear_center_info() {
  center_info_.Clear();
}
inline const ::CSActivityCentreItemInfo& CSGetActivityDataRsp::center_info(int index) const {
  return center_info_.Get(index);
}
inline ::CSActivityCentreItemInfo* CSGetActivityDataRsp::mutable_center_info(int index) {
  return center_info_.Mutable(index);
}
inline ::CSActivityCentreItemInfo* CSGetActivityDataRsp::add_center_info() {
  return center_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSActivityCentreItemInfo >&
CSGetActivityDataRsp::center_info() const {
  return center_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSActivityCentreItemInfo >*
CSGetActivityDataRsp::mutable_center_info() {
  return &center_info_;
}

// -------------------------------------------------------------------

// carmsg01

// -------------------------------------------------------------------

// carmsg02

// -------------------------------------------------------------------

// carmsg03

// -------------------------------------------------------------------

// carmsg04

// -------------------------------------------------------------------

// carmsg05

// -------------------------------------------------------------------

// CSTargetListReq

// -------------------------------------------------------------------

// Step_Rate

// required uint32 cur_rate = 1;
inline bool Step_Rate::has_cur_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Step_Rate::set_has_cur_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Step_Rate::clear_has_cur_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Step_Rate::clear_cur_rate() {
  cur_rate_ = 0u;
  clear_has_cur_rate();
}
inline ::google::protobuf::uint32 Step_Rate::cur_rate() const {
  return cur_rate_;
}
inline void Step_Rate::set_cur_rate(::google::protobuf::uint32 value) {
  set_has_cur_rate();
  cur_rate_ = value;
}

// required uint32 total_rate = 2;
inline bool Step_Rate::has_total_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Step_Rate::set_has_total_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Step_Rate::clear_has_total_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Step_Rate::clear_total_rate() {
  total_rate_ = 0u;
  clear_has_total_rate();
}
inline ::google::protobuf::uint32 Step_Rate::total_rate() const {
  return total_rate_;
}
inline void Step_Rate::set_total_rate(::google::protobuf::uint32 value) {
  set_has_total_rate();
  total_rate_ = value;
}

// -------------------------------------------------------------------

// Target_Info

// required uint32 target_id = 1;
inline bool Target_Info::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Target_Info::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Target_Info::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Target_Info::clear_target_id() {
  target_id_ = 0u;
  clear_has_target_id();
}
inline ::google::protobuf::uint32 Target_Info::target_id() const {
  return target_id_;
}
inline void Target_Info::set_target_id(::google::protobuf::uint32 value) {
  set_has_target_id();
  target_id_ = value;
}

// repeated .Step_Rate rate = 2;
inline int Target_Info::rate_size() const {
  return rate_.size();
}
inline void Target_Info::clear_rate() {
  rate_.Clear();
}
inline const ::Step_Rate& Target_Info::rate(int index) const {
  return rate_.Get(index);
}
inline ::Step_Rate* Target_Info::mutable_rate(int index) {
  return rate_.Mutable(index);
}
inline ::Step_Rate* Target_Info::add_rate() {
  return rate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Step_Rate >&
Target_Info::rate() const {
  return rate_;
}
inline ::google::protobuf::RepeatedPtrField< ::Step_Rate >*
Target_Info::mutable_rate() {
  return &rate_;
}

// required uint32 status = 3;
inline bool Target_Info::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Target_Info::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Target_Info::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Target_Info::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 Target_Info::status() const {
  return status_;
}
inline void Target_Info::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CSTargetListRsp

// repeated .Target_Info targets = 1;
inline int CSTargetListRsp::targets_size() const {
  return targets_.size();
}
inline void CSTargetListRsp::clear_targets() {
  targets_.Clear();
}
inline const ::Target_Info& CSTargetListRsp::targets(int index) const {
  return targets_.Get(index);
}
inline ::Target_Info* CSTargetListRsp::mutable_targets(int index) {
  return targets_.Mutable(index);
}
inline ::Target_Info* CSTargetListRsp::add_targets() {
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Target_Info >&
CSTargetListRsp::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Target_Info >*
CSTargetListRsp::mutable_targets() {
  return &targets_;
}

// -------------------------------------------------------------------

// CSGetTargetRewardReq

// required uint32 target_id = 1;
inline bool CSGetTargetRewardReq::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetTargetRewardReq::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetTargetRewardReq::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetTargetRewardReq::clear_target_id() {
  target_id_ = 0u;
  clear_has_target_id();
}
inline ::google::protobuf::uint32 CSGetTargetRewardReq::target_id() const {
  return target_id_;
}
inline void CSGetTargetRewardReq::set_target_id(::google::protobuf::uint32 value) {
  set_has_target_id();
  target_id_ = value;
}

// repeated uint32 param = 2;
inline int CSGetTargetRewardReq::param_size() const {
  return param_.size();
}
inline void CSGetTargetRewardReq::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSGetTargetRewardReq::param(int index) const {
  return param_.Get(index);
}
inline void CSGetTargetRewardReq::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSGetTargetRewardReq::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetTargetRewardReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetTargetRewardReq::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSGetTargetRewardRsp

// required uint32 target_id = 1;
inline bool CSGetTargetRewardRsp::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetTargetRewardRsp::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetTargetRewardRsp::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetTargetRewardRsp::clear_target_id() {
  target_id_ = 0u;
  clear_has_target_id();
}
inline ::google::protobuf::uint32 CSGetTargetRewardRsp::target_id() const {
  return target_id_;
}
inline void CSGetTargetRewardRsp::set_target_id(::google::protobuf::uint32 value) {
  set_has_target_id();
  target_id_ = value;
}

// required bool is_succ = 2;
inline bool CSGetTargetRewardRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetTargetRewardRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetTargetRewardRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetTargetRewardRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSGetTargetRewardRsp::is_succ() const {
  return is_succ_;
}
inline void CSGetTargetRewardRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// optional .CSReward rewards = 3;
inline bool CSGetTargetRewardRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetTargetRewardRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetTargetRewardRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetTargetRewardRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSGetTargetRewardRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSGetTargetRewardRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSGetTargetRewardRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSUpdateTargetInfoRsp

// repeated .Target_Info targets = 1;
inline int CSUpdateTargetInfoRsp::targets_size() const {
  return targets_.size();
}
inline void CSUpdateTargetInfoRsp::clear_targets() {
  targets_.Clear();
}
inline const ::Target_Info& CSUpdateTargetInfoRsp::targets(int index) const {
  return targets_.Get(index);
}
inline ::Target_Info* CSUpdateTargetInfoRsp::mutable_targets(int index) {
  return targets_.Mutable(index);
}
inline ::Target_Info* CSUpdateTargetInfoRsp::add_targets() {
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Target_Info >&
CSUpdateTargetInfoRsp::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Target_Info >*
CSUpdateTargetInfoRsp::mutable_targets() {
  return &targets_;
}

// -------------------------------------------------------------------

// CSDelTargetfoRsp

// repeated uint32 target_ids = 1;
inline int CSDelTargetfoRsp::target_ids_size() const {
  return target_ids_.size();
}
inline void CSDelTargetfoRsp::clear_target_ids() {
  target_ids_.Clear();
}
inline ::google::protobuf::uint32 CSDelTargetfoRsp::target_ids(int index) const {
  return target_ids_.Get(index);
}
inline void CSDelTargetfoRsp::set_target_ids(int index, ::google::protobuf::uint32 value) {
  target_ids_.Set(index, value);
}
inline void CSDelTargetfoRsp::add_target_ids(::google::protobuf::uint32 value) {
  target_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSDelTargetfoRsp::target_ids() const {
  return target_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSDelTargetfoRsp::mutable_target_ids() {
  return &target_ids_;
}

// -------------------------------------------------------------------

// CSExchangeParameterListReq

// repeated uint32 ids = 1;
inline int CSExchangeParameterListReq::ids_size() const {
  return ids_.size();
}
inline void CSExchangeParameterListReq::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeParameterListReq::ids(int index) const {
  return ids_.Get(index);
}
inline void CSExchangeParameterListReq::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void CSExchangeParameterListReq::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeParameterListReq::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeParameterListReq::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// CSExchangeParameterListRsp_ParameterList

// required uint32 id = 1;
inline bool CSExchangeParameterListRsp_ParameterList::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterListRsp_ParameterList::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterListRsp_ParameterList::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterListRsp_ParameterList::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterListRsp_ParameterList::id() const {
  return id_;
}
inline void CSExchangeParameterListRsp_ParameterList::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 price = 2;
inline bool CSExchangeParameterListRsp_ParameterList::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeParameterListRsp_ParameterList::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeParameterListRsp_ParameterList::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeParameterListRsp_ParameterList::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 CSExchangeParameterListRsp_ParameterList::price() const {
  return price_;
}
inline void CSExchangeParameterListRsp_ParameterList::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// -------------------------------------------------------------------

// CSExchangeParameterListRsp

// repeated .CSExchangeParameterListRsp.ParameterList prices = 1;
inline int CSExchangeParameterListRsp::prices_size() const {
  return prices_.size();
}
inline void CSExchangeParameterListRsp::clear_prices() {
  prices_.Clear();
}
inline const ::CSExchangeParameterListRsp_ParameterList& CSExchangeParameterListRsp::prices(int index) const {
  return prices_.Get(index);
}
inline ::CSExchangeParameterListRsp_ParameterList* CSExchangeParameterListRsp::mutable_prices(int index) {
  return prices_.Mutable(index);
}
inline ::CSExchangeParameterListRsp_ParameterList* CSExchangeParameterListRsp::add_prices() {
  return prices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeParameterListRsp_ParameterList >&
CSExchangeParameterListRsp::prices() const {
  return prices_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSExchangeParameterListRsp_ParameterList >*
CSExchangeParameterListRsp::mutable_prices() {
  return &prices_;
}

// -------------------------------------------------------------------

// CSTargetFinishedRsp

// required bool res = 1;
inline bool CSTargetFinishedRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTargetFinishedRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTargetFinishedRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTargetFinishedRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSTargetFinishedRsp::res() const {
  return res_;
}
inline void CSTargetFinishedRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSMcardInfoReq

// -------------------------------------------------------------------

// McardInfo

// required uint32 card_id = 1;
inline bool McardInfo::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void McardInfo::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void McardInfo::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void McardInfo::clear_card_id() {
  card_id_ = 0u;
  clear_has_card_id();
}
inline ::google::protobuf::uint32 McardInfo::card_id() const {
  return card_id_;
}
inline void McardInfo::set_card_id(::google::protobuf::uint32 value) {
  set_has_card_id();
  card_id_ = value;
}

// required bool is_rev = 2;
inline bool McardInfo::has_is_rev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void McardInfo::set_has_is_rev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void McardInfo::clear_has_is_rev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void McardInfo::clear_is_rev() {
  is_rev_ = false;
  clear_has_is_rev();
}
inline bool McardInfo::is_rev() const {
  return is_rev_;
}
inline void McardInfo::set_is_rev(bool value) {
  set_has_is_rev();
  is_rev_ = value;
}

// required uint32 day_cnt = 3;
inline bool McardInfo::has_day_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void McardInfo::set_has_day_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void McardInfo::clear_has_day_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void McardInfo::clear_day_cnt() {
  day_cnt_ = 0u;
  clear_has_day_cnt();
}
inline ::google::protobuf::uint32 McardInfo::day_cnt() const {
  return day_cnt_;
}
inline void McardInfo::set_day_cnt(::google::protobuf::uint32 value) {
  set_has_day_cnt();
  day_cnt_ = value;
}

// required bool is_alarm = 4;
inline bool McardInfo::has_is_alarm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void McardInfo::set_has_is_alarm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void McardInfo::clear_has_is_alarm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void McardInfo::clear_is_alarm() {
  is_alarm_ = false;
  clear_has_is_alarm();
}
inline bool McardInfo::is_alarm() const {
  return is_alarm_;
}
inline void McardInfo::set_is_alarm(bool value) {
  set_has_is_alarm();
  is_alarm_ = value;
}

// required uint32 ret_diamond = 5;
inline bool McardInfo::has_ret_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void McardInfo::set_has_ret_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void McardInfo::clear_has_ret_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void McardInfo::clear_ret_diamond() {
  ret_diamond_ = 0u;
  clear_has_ret_diamond();
}
inline ::google::protobuf::uint32 McardInfo::ret_diamond() const {
  return ret_diamond_;
}
inline void McardInfo::set_ret_diamond(::google::protobuf::uint32 value) {
  set_has_ret_diamond();
  ret_diamond_ = value;
}

// -------------------------------------------------------------------

// CSMcardInfoRsp

// required uint32 cnt = 1;
inline bool CSMcardInfoRsp::has_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMcardInfoRsp::set_has_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMcardInfoRsp::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMcardInfoRsp::clear_cnt() {
  cnt_ = 0u;
  clear_has_cnt();
}
inline ::google::protobuf::uint32 CSMcardInfoRsp::cnt() const {
  return cnt_;
}
inline void CSMcardInfoRsp::set_cnt(::google::protobuf::uint32 value) {
  set_has_cnt();
  cnt_ = value;
}

// repeated .McardInfo info = 2;
inline int CSMcardInfoRsp::info_size() const {
  return info_.size();
}
inline void CSMcardInfoRsp::clear_info() {
  info_.Clear();
}
inline const ::McardInfo& CSMcardInfoRsp::info(int index) const {
  return info_.Get(index);
}
inline ::McardInfo* CSMcardInfoRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::McardInfo* CSMcardInfoRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::McardInfo >&
CSMcardInfoRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::McardInfo >*
CSMcardInfoRsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CSMcardRewardReq

// required uint32 card_id = 1;
inline bool CSMcardRewardReq::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMcardRewardReq::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMcardRewardReq::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMcardRewardReq::clear_card_id() {
  card_id_ = 0u;
  clear_has_card_id();
}
inline ::google::protobuf::uint32 CSMcardRewardReq::card_id() const {
  return card_id_;
}
inline void CSMcardRewardReq::set_card_id(::google::protobuf::uint32 value) {
  set_has_card_id();
  card_id_ = value;
}

// -------------------------------------------------------------------

// CSMcardRewardRsp

// required bool is_succ = 1;
inline bool CSMcardRewardRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMcardRewardRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMcardRewardRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMcardRewardRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSMcardRewardRsp::is_succ() const {
  return is_succ_;
}
inline void CSMcardRewardRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// -------------------------------------------------------------------

// CSCreateGuildReq

// required string name = 1;
inline bool CSCreateGuildReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCreateGuildReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCreateGuildReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCreateGuildReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSCreateGuildReq::name() const {
  return *name_;
}
inline void CSCreateGuildReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSCreateGuildReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSCreateGuildReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSCreateGuildReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSCreateGuildReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSCreateGuildRsp

// required uint32 res = 1;
inline bool CSCreateGuildRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCreateGuildRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCreateGuildRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCreateGuildRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSCreateGuildRsp::res() const {
  return res_;
}
inline void CSCreateGuildRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// required uint32 gid_high = 2;
inline bool CSCreateGuildRsp::has_gid_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCreateGuildRsp::set_has_gid_high() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCreateGuildRsp::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCreateGuildRsp::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 CSCreateGuildRsp::gid_high() const {
  return gid_high_;
}
inline void CSCreateGuildRsp::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// required uint32 gid_low = 3;
inline bool CSCreateGuildRsp::has_gid_low() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSCreateGuildRsp::set_has_gid_low() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSCreateGuildRsp::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSCreateGuildRsp::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 CSCreateGuildRsp::gid_low() const {
  return gid_low_;
}
inline void CSCreateGuildRsp::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// -------------------------------------------------------------------

// CSJoinGuildReq

// required uint32 gid_high = 1;
inline bool CSJoinGuildReq::has_gid_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSJoinGuildReq::set_has_gid_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSJoinGuildReq::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSJoinGuildReq::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 CSJoinGuildReq::gid_high() const {
  return gid_high_;
}
inline void CSJoinGuildReq::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// required uint32 gid_low = 2;
inline bool CSJoinGuildReq::has_gid_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSJoinGuildReq::set_has_gid_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSJoinGuildReq::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSJoinGuildReq::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 CSJoinGuildReq::gid_low() const {
  return gid_low_;
}
inline void CSJoinGuildReq::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// -------------------------------------------------------------------

// CSJoinGuildRsp

// required uint32 res = 1;
inline bool CSJoinGuildRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSJoinGuildRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSJoinGuildRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSJoinGuildRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSJoinGuildRsp::res() const {
  return res_;
}
inline void CSJoinGuildRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// optional uint32 gid_high = 2;
inline bool CSJoinGuildRsp::has_gid_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSJoinGuildRsp::set_has_gid_high() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSJoinGuildRsp::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSJoinGuildRsp::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 CSJoinGuildRsp::gid_high() const {
  return gid_high_;
}
inline void CSJoinGuildRsp::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// optional uint32 gid_low = 3;
inline bool CSJoinGuildRsp::has_gid_low() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSJoinGuildRsp::set_has_gid_low() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSJoinGuildRsp::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSJoinGuildRsp::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 CSJoinGuildRsp::gid_low() const {
  return gid_low_;
}
inline void CSJoinGuildRsp::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// -------------------------------------------------------------------

// CSDropGuildReq

// -------------------------------------------------------------------

// CSDropGuildRsp

// required bool res = 1;
inline bool CSDropGuildRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDropGuildRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDropGuildRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDropGuildRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSDropGuildRsp::res() const {
  return res_;
}
inline void CSDropGuildRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSQuitGuildReq

// -------------------------------------------------------------------

// CSQuitGuildRsp

// required bool res = 1;
inline bool CSQuitGuildRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQuitGuildRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQuitGuildRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQuitGuildRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSQuitGuildRsp::res() const {
  return res_;
}
inline void CSQuitGuildRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSGuildInfo

// required uint32 gid_high = 1;
inline bool CSGuildInfo::has_gid_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildInfo::set_has_gid_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildInfo::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildInfo::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 CSGuildInfo::gid_high() const {
  return gid_high_;
}
inline void CSGuildInfo::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// required uint32 gid_low = 2;
inline bool CSGuildInfo::has_gid_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildInfo::set_has_gid_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildInfo::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildInfo::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 CSGuildInfo::gid_low() const {
  return gid_low_;
}
inline void CSGuildInfo::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// required uint32 exp = 3;
inline bool CSGuildInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 CSGuildInfo::exp() const {
  return exp_;
}
inline void CSGuildInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 contribute = 4;
inline bool CSGuildInfo::has_contribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildInfo::set_has_contribute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildInfo::clear_has_contribute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildInfo::clear_contribute() {
  contribute_ = 0u;
  clear_has_contribute();
}
inline ::google::protobuf::uint32 CSGuildInfo::contribute() const {
  return contribute_;
}
inline void CSGuildInfo::set_contribute(::google::protobuf::uint32 value) {
  set_has_contribute();
  contribute_ = value;
}

// required uint32 lv = 5;
inline bool CSGuildInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSGuildInfo::lv() const {
  return lv_;
}
inline void CSGuildInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 fightcondition = 6;
inline bool CSGuildInfo::has_fightcondition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildInfo::set_has_fightcondition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildInfo::clear_has_fightcondition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildInfo::clear_fightcondition() {
  fightcondition_ = 0u;
  clear_has_fightcondition();
}
inline ::google::protobuf::uint32 CSGuildInfo::fightcondition() const {
  return fightcondition_;
}
inline void CSGuildInfo::set_fightcondition(::google::protobuf::uint32 value) {
  set_has_fightcondition();
  fightcondition_ = value;
}

// required bytes gname = 7;
inline bool CSGuildInfo::has_gname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildInfo::set_has_gname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildInfo::clear_has_gname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildInfo::clear_gname() {
  if (gname_ != &::google::protobuf::internal::kEmptyString) {
    gname_->clear();
  }
  clear_has_gname();
}
inline const ::std::string& CSGuildInfo::gname() const {
  return *gname_;
}
inline void CSGuildInfo::set_gname(const ::std::string& value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void CSGuildInfo::set_gname(const char* value) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(value);
}
inline void CSGuildInfo::set_gname(const void* value, size_t size) {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  gname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildInfo::mutable_gname() {
  set_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    gname_ = new ::std::string;
  }
  return gname_;
}
inline ::std::string* CSGuildInfo::release_gname() {
  clear_has_gname();
  if (gname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gname_;
    gname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes oname = 8;
inline bool CSGuildInfo::has_oname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSGuildInfo::set_has_oname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSGuildInfo::clear_has_oname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSGuildInfo::clear_oname() {
  if (oname_ != &::google::protobuf::internal::kEmptyString) {
    oname_->clear();
  }
  clear_has_oname();
}
inline const ::std::string& CSGuildInfo::oname() const {
  return *oname_;
}
inline void CSGuildInfo::set_oname(const ::std::string& value) {
  set_has_oname();
  if (oname_ == &::google::protobuf::internal::kEmptyString) {
    oname_ = new ::std::string;
  }
  oname_->assign(value);
}
inline void CSGuildInfo::set_oname(const char* value) {
  set_has_oname();
  if (oname_ == &::google::protobuf::internal::kEmptyString) {
    oname_ = new ::std::string;
  }
  oname_->assign(value);
}
inline void CSGuildInfo::set_oname(const void* value, size_t size) {
  set_has_oname();
  if (oname_ == &::google::protobuf::internal::kEmptyString) {
    oname_ = new ::std::string;
  }
  oname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildInfo::mutable_oname() {
  set_has_oname();
  if (oname_ == &::google::protobuf::internal::kEmptyString) {
    oname_ = new ::std::string;
  }
  return oname_;
}
inline ::std::string* CSGuildInfo::release_oname() {
  clear_has_oname();
  if (oname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oname_;
    oname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes note = 9;
inline bool CSGuildInfo::has_note() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSGuildInfo::set_has_note() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSGuildInfo::clear_has_note() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSGuildInfo::clear_note() {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& CSGuildInfo::note() const {
  return *note_;
}
inline void CSGuildInfo::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void CSGuildInfo::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void CSGuildInfo::set_note(const void* value, size_t size) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildInfo::mutable_note() {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  return note_;
}
inline ::std::string* CSGuildInfo::release_note() {
  clear_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 member_num = 10;
inline bool CSGuildInfo::has_member_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSGuildInfo::set_has_member_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSGuildInfo::clear_has_member_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSGuildInfo::clear_member_num() {
  member_num_ = 0u;
  clear_has_member_num();
}
inline ::google::protobuf::uint32 CSGuildInfo::member_num() const {
  return member_num_;
}
inline void CSGuildInfo::set_member_num(::google::protobuf::uint32 value) {
  set_has_member_num();
  member_num_ = value;
}

// required uint32 power_score = 11;
inline bool CSGuildInfo::has_power_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSGuildInfo::set_has_power_score() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSGuildInfo::clear_has_power_score() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSGuildInfo::clear_power_score() {
  power_score_ = 0u;
  clear_has_power_score();
}
inline ::google::protobuf::uint32 CSGuildInfo::power_score() const {
  return power_score_;
}
inline void CSGuildInfo::set_power_score(::google::protobuf::uint32 value) {
  set_has_power_score();
  power_score_ = value;
}

// required uint32 exp_limit = 12;
inline bool CSGuildInfo::has_exp_limit() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSGuildInfo::set_has_exp_limit() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSGuildInfo::clear_has_exp_limit() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSGuildInfo::clear_exp_limit() {
  exp_limit_ = 0u;
  clear_has_exp_limit();
}
inline ::google::protobuf::uint32 CSGuildInfo::exp_limit() const {
  return exp_limit_;
}
inline void CSGuildInfo::set_exp_limit(::google::protobuf::uint32 value) {
  set_has_exp_limit();
  exp_limit_ = value;
}

// required uint32 member_num_limit = 13;
inline bool CSGuildInfo::has_member_num_limit() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSGuildInfo::set_has_member_num_limit() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSGuildInfo::clear_has_member_num_limit() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSGuildInfo::clear_member_num_limit() {
  member_num_limit_ = 0u;
  clear_has_member_num_limit();
}
inline ::google::protobuf::uint32 CSGuildInfo::member_num_limit() const {
  return member_num_limit_;
}
inline void CSGuildInfo::set_member_num_limit(::google::protobuf::uint32 value) {
  set_has_member_num_limit();
  member_num_limit_ = value;
}

// required bytes notice = 14;
inline bool CSGuildInfo::has_notice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSGuildInfo::set_has_notice() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSGuildInfo::clear_has_notice() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSGuildInfo::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& CSGuildInfo::notice() const {
  return *notice_;
}
inline void CSGuildInfo::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildInfo::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildInfo::set_notice(const void* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildInfo::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* CSGuildInfo::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 join_type = 15;
inline bool CSGuildInfo::has_join_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSGuildInfo::set_has_join_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSGuildInfo::clear_has_join_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSGuildInfo::clear_join_type() {
  join_type_ = 0u;
  clear_has_join_type();
}
inline ::google::protobuf::uint32 CSGuildInfo::join_type() const {
  return join_type_;
}
inline void CSGuildInfo::set_join_type(::google::protobuf::uint32 value) {
  set_has_join_type();
  join_type_ = value;
}

// optional bool isrequired = 16 [default = false];
inline bool CSGuildInfo::has_isrequired() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSGuildInfo::set_has_isrequired() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSGuildInfo::clear_has_isrequired() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSGuildInfo::clear_isrequired() {
  isrequired_ = false;
  clear_has_isrequired();
}
inline bool CSGuildInfo::isrequired() const {
  return isrequired_;
}
inline void CSGuildInfo::set_isrequired(bool value) {
  set_has_isrequired();
  isrequired_ = value;
}

// optional uint32 ouserid = 17;
inline bool CSGuildInfo::has_ouserid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSGuildInfo::set_has_ouserid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSGuildInfo::clear_has_ouserid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSGuildInfo::clear_ouserid() {
  ouserid_ = 0u;
  clear_has_ouserid();
}
inline ::google::protobuf::uint32 CSGuildInfo::ouserid() const {
  return ouserid_;
}
inline void CSGuildInfo::set_ouserid(::google::protobuf::uint32 value) {
  set_has_ouserid();
  ouserid_ = value;
}

// optional uint32 oreg_tm = 18;
inline bool CSGuildInfo::has_oreg_tm() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSGuildInfo::set_has_oreg_tm() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSGuildInfo::clear_has_oreg_tm() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSGuildInfo::clear_oreg_tm() {
  oreg_tm_ = 0u;
  clear_has_oreg_tm();
}
inline ::google::protobuf::uint32 CSGuildInfo::oreg_tm() const {
  return oreg_tm_;
}
inline void CSGuildInfo::set_oreg_tm(::google::protobuf::uint32 value) {
  set_has_oreg_tm();
  oreg_tm_ = value;
}

// optional uint32 ochannel_id = 19;
inline bool CSGuildInfo::has_ochannel_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSGuildInfo::set_has_ochannel_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSGuildInfo::clear_has_ochannel_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSGuildInfo::clear_ochannel_id() {
  ochannel_id_ = 0u;
  clear_has_ochannel_id();
}
inline ::google::protobuf::uint32 CSGuildInfo::ochannel_id() const {
  return ochannel_id_;
}
inline void CSGuildInfo::set_ochannel_id(::google::protobuf::uint32 value) {
  set_has_ochannel_id();
  ochannel_id_ = value;
}

// -------------------------------------------------------------------

// CSListGuildReq

// required uint32 begin = 1;
inline bool CSListGuildReq::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSListGuildReq::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSListGuildReq::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSListGuildReq::clear_begin() {
  begin_ = 0u;
  clear_has_begin();
}
inline ::google::protobuf::uint32 CSListGuildReq::begin() const {
  return begin_;
}
inline void CSListGuildReq::set_begin(::google::protobuf::uint32 value) {
  set_has_begin();
  begin_ = value;
}

// required uint32 end = 2;
inline bool CSListGuildReq::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSListGuildReq::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSListGuildReq::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSListGuildReq::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 CSListGuildReq::end() const {
  return end_;
}
inline void CSListGuildReq::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// CSListGuildRsp

// required uint32 begin = 1;
inline bool CSListGuildRsp::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSListGuildRsp::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSListGuildRsp::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSListGuildRsp::clear_begin() {
  begin_ = 0u;
  clear_has_begin();
}
inline ::google::protobuf::uint32 CSListGuildRsp::begin() const {
  return begin_;
}
inline void CSListGuildRsp::set_begin(::google::protobuf::uint32 value) {
  set_has_begin();
  begin_ = value;
}

// repeated .CSGuildInfo infos = 2;
inline int CSListGuildRsp::infos_size() const {
  return infos_.size();
}
inline void CSListGuildRsp::clear_infos() {
  infos_.Clear();
}
inline const ::CSGuildInfo& CSListGuildRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSGuildInfo* CSListGuildRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSGuildInfo* CSListGuildRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >&
CSListGuildRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >*
CSListGuildRsp::mutable_infos() {
  return &infos_;
}

// required uint32 guild_num = 3;
inline bool CSListGuildRsp::has_guild_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSListGuildRsp::set_has_guild_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSListGuildRsp::clear_has_guild_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSListGuildRsp::clear_guild_num() {
  guild_num_ = 0u;
  clear_has_guild_num();
}
inline ::google::protobuf::uint32 CSListGuildRsp::guild_num() const {
  return guild_num_;
}
inline void CSListGuildRsp::set_guild_num(::google::protobuf::uint32 value) {
  set_has_guild_num();
  guild_num_ = value;
}

// -------------------------------------------------------------------

// CSSearchGuildReq

// required string name = 1;
inline bool CSSearchGuildReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSearchGuildReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSearchGuildReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSearchGuildReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSSearchGuildReq::name() const {
  return *name_;
}
inline void CSSearchGuildReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSSearchGuildReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSSearchGuildReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSSearchGuildReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSSearchGuildReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSSearchGuildRsp

// repeated .CSGuildInfo infos = 1;
inline int CSSearchGuildRsp::infos_size() const {
  return infos_.size();
}
inline void CSSearchGuildRsp::clear_infos() {
  infos_.Clear();
}
inline const ::CSGuildInfo& CSSearchGuildRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSGuildInfo* CSSearchGuildRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSGuildInfo* CSSearchGuildRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >&
CSSearchGuildRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGuildInfo >*
CSSearchGuildRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CSListPlayerGuildReq

// optional uint32 gid_high = 1;
inline bool CSListPlayerGuildReq::has_gid_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSListPlayerGuildReq::set_has_gid_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSListPlayerGuildReq::clear_has_gid_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSListPlayerGuildReq::clear_gid_high() {
  gid_high_ = 0u;
  clear_has_gid_high();
}
inline ::google::protobuf::uint32 CSListPlayerGuildReq::gid_high() const {
  return gid_high_;
}
inline void CSListPlayerGuildReq::set_gid_high(::google::protobuf::uint32 value) {
  set_has_gid_high();
  gid_high_ = value;
}

// optional uint32 gid_low = 2;
inline bool CSListPlayerGuildReq::has_gid_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSListPlayerGuildReq::set_has_gid_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSListPlayerGuildReq::clear_has_gid_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSListPlayerGuildReq::clear_gid_low() {
  gid_low_ = 0u;
  clear_has_gid_low();
}
inline ::google::protobuf::uint32 CSListPlayerGuildReq::gid_low() const {
  return gid_low_;
}
inline void CSListPlayerGuildReq::set_gid_low(::google::protobuf::uint32 value) {
  set_has_gid_low();
  gid_low_ = value;
}

// -------------------------------------------------------------------

// CSPlayerGuildInfo_Item

// required uint32 item_id = 1;
inline bool CSPlayerGuildInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPlayerGuildInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPlayerGuildInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPlayerGuildInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo_Item::item_id() const {
  return item_id_;
}
inline void CSPlayerGuildInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSPlayerGuildInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPlayerGuildInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPlayerGuildInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPlayerGuildInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo_Item::item_num() const {
  return item_num_;
}
inline void CSPlayerGuildInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSPlayerGuildInfo

// required uint32 userid = 1;
inline bool CSPlayerGuildInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPlayerGuildInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPlayerGuildInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPlayerGuildInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::userid() const {
  return userid_;
}
inline void CSPlayerGuildInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSPlayerGuildInfo::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPlayerGuildInfo::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPlayerGuildInfo::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPlayerGuildInfo::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::reg_tm() const {
  return reg_tm_;
}
inline void CSPlayerGuildInfo::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPlayerGuildInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPlayerGuildInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPlayerGuildInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPlayerGuildInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::channel_id() const {
  return channel_id_;
}
inline void CSPlayerGuildInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool CSPlayerGuildInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPlayerGuildInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPlayerGuildInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPlayerGuildInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPlayerGuildInfo::name() const {
  return *name_;
}
inline void CSPlayerGuildInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPlayerGuildInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPlayerGuildInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPlayerGuildInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPlayerGuildInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 lv = 5;
inline bool CSPlayerGuildInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPlayerGuildInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPlayerGuildInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPlayerGuildInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::lv() const {
  return lv_;
}
inline void CSPlayerGuildInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 contribute = 6;
inline bool CSPlayerGuildInfo::has_contribute() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPlayerGuildInfo::set_has_contribute() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPlayerGuildInfo::clear_has_contribute() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPlayerGuildInfo::clear_contribute() {
  contribute_ = 0u;
  clear_has_contribute();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::contribute() const {
  return contribute_;
}
inline void CSPlayerGuildInfo::set_contribute(::google::protobuf::uint32 value) {
  set_has_contribute();
  contribute_ = value;
}

// required uint32 power_score = 7;
inline bool CSPlayerGuildInfo::has_power_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSPlayerGuildInfo::set_has_power_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSPlayerGuildInfo::clear_has_power_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSPlayerGuildInfo::clear_power_score() {
  power_score_ = 0u;
  clear_has_power_score();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::power_score() const {
  return power_score_;
}
inline void CSPlayerGuildInfo::set_power_score(::google::protobuf::uint32 value) {
  set_has_power_score();
  power_score_ = value;
}

// required uint32 status = 8;
inline bool CSPlayerGuildInfo::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSPlayerGuildInfo::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSPlayerGuildInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSPlayerGuildInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::status() const {
  return status_;
}
inline void CSPlayerGuildInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 total_contribute = 9;
inline bool CSPlayerGuildInfo::has_total_contribute() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSPlayerGuildInfo::set_has_total_contribute() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSPlayerGuildInfo::clear_has_total_contribute() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSPlayerGuildInfo::clear_total_contribute() {
  total_contribute_ = 0u;
  clear_has_total_contribute();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::total_contribute() const {
  return total_contribute_;
}
inline void CSPlayerGuildInfo::set_total_contribute(::google::protobuf::uint32 value) {
  set_has_total_contribute();
  total_contribute_ = value;
}

// optional uint32 online = 10;
inline bool CSPlayerGuildInfo::has_online() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSPlayerGuildInfo::set_has_online() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSPlayerGuildInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSPlayerGuildInfo::clear_online() {
  online_ = 0u;
  clear_has_online();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::online() const {
  return online_;
}
inline void CSPlayerGuildInfo::set_online(::google::protobuf::uint32 value) {
  set_has_online();
  online_ = value;
}

// optional uint32 type = 11;
inline bool CSPlayerGuildInfo::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSPlayerGuildInfo::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSPlayerGuildInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSPlayerGuildInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPlayerGuildInfo::type() const {
  return type_;
}
inline void CSPlayerGuildInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .CSPlayerGuildInfo.Item cost = 12;
inline int CSPlayerGuildInfo::cost_size() const {
  return cost_.size();
}
inline void CSPlayerGuildInfo::clear_cost() {
  cost_.Clear();
}
inline const ::CSPlayerGuildInfo_Item& CSPlayerGuildInfo::cost(int index) const {
  return cost_.Get(index);
}
inline ::CSPlayerGuildInfo_Item* CSPlayerGuildInfo::mutable_cost(int index) {
  return cost_.Mutable(index);
}
inline ::CSPlayerGuildInfo_Item* CSPlayerGuildInfo::add_cost() {
  return cost_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo_Item >&
CSPlayerGuildInfo::cost() const {
  return cost_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo_Item >*
CSPlayerGuildInfo::mutable_cost() {
  return &cost_;
}

// -------------------------------------------------------------------

// CSListPlayerGuildRsp

// repeated .CSPlayerGuildInfo infos = 1;
inline int CSListPlayerGuildRsp::infos_size() const {
  return infos_.size();
}
inline void CSListPlayerGuildRsp::clear_infos() {
  infos_.Clear();
}
inline const ::CSPlayerGuildInfo& CSListPlayerGuildRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSPlayerGuildInfo* CSListPlayerGuildRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSPlayerGuildInfo* CSListPlayerGuildRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >&
CSListPlayerGuildRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >*
CSListPlayerGuildRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// PlayerGuild

// required uint32 userid = 1;
inline bool PlayerGuild::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerGuild::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerGuild::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerGuild::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PlayerGuild::userid() const {
  return userid_;
}
inline void PlayerGuild::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool PlayerGuild::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerGuild::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerGuild::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerGuild::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 PlayerGuild::reg_tm() const {
  return reg_tm_;
}
inline void PlayerGuild::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool PlayerGuild::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerGuild::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerGuild::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerGuild::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 PlayerGuild::channel_id() const {
  return channel_id_;
}
inline void PlayerGuild::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 status = 4;
inline bool PlayerGuild::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerGuild::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerGuild::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerGuild::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 PlayerGuild::status() const {
  return status_;
}
inline void PlayerGuild::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CSChangeOtherPlayerGuildStatusReq

// repeated .PlayerGuild keys = 1;
inline int CSChangeOtherPlayerGuildStatusReq::keys_size() const {
  return keys_.size();
}
inline void CSChangeOtherPlayerGuildStatusReq::clear_keys() {
  keys_.Clear();
}
inline const ::PlayerGuild& CSChangeOtherPlayerGuildStatusReq::keys(int index) const {
  return keys_.Get(index);
}
inline ::PlayerGuild* CSChangeOtherPlayerGuildStatusReq::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline ::PlayerGuild* CSChangeOtherPlayerGuildStatusReq::add_keys() {
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerGuild >&
CSChangeOtherPlayerGuildStatusReq::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerGuild >*
CSChangeOtherPlayerGuildStatusReq::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CSChangePlayerGuildStatusRsp

// required bool res = 1;
inline bool CSChangePlayerGuildStatusRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChangePlayerGuildStatusRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChangePlayerGuildStatusRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChangePlayerGuildStatusRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSChangePlayerGuildStatusRsp::res() const {
  return res_;
}
inline void CSChangePlayerGuildStatusRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// repeated .PlayerGuild info = 2;
inline int CSChangePlayerGuildStatusRsp::info_size() const {
  return info_.size();
}
inline void CSChangePlayerGuildStatusRsp::clear_info() {
  info_.Clear();
}
inline const ::PlayerGuild& CSChangePlayerGuildStatusRsp::info(int index) const {
  return info_.Get(index);
}
inline ::PlayerGuild* CSChangePlayerGuildStatusRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PlayerGuild* CSChangePlayerGuildStatusRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerGuild >&
CSChangePlayerGuildStatusRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerGuild >*
CSChangePlayerGuildStatusRsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CSSetGuildNoticeReq

// optional bytes guild_notice = 1;
inline bool CSSetGuildNoticeReq::has_guild_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetGuildNoticeReq::set_has_guild_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetGuildNoticeReq::clear_has_guild_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetGuildNoticeReq::clear_guild_notice() {
  if (guild_notice_ != &::google::protobuf::internal::kEmptyString) {
    guild_notice_->clear();
  }
  clear_has_guild_notice();
}
inline const ::std::string& CSSetGuildNoticeReq::guild_notice() const {
  return *guild_notice_;
}
inline void CSSetGuildNoticeReq::set_guild_notice(const ::std::string& value) {
  set_has_guild_notice();
  if (guild_notice_ == &::google::protobuf::internal::kEmptyString) {
    guild_notice_ = new ::std::string;
  }
  guild_notice_->assign(value);
}
inline void CSSetGuildNoticeReq::set_guild_notice(const char* value) {
  set_has_guild_notice();
  if (guild_notice_ == &::google::protobuf::internal::kEmptyString) {
    guild_notice_ = new ::std::string;
  }
  guild_notice_->assign(value);
}
inline void CSSetGuildNoticeReq::set_guild_notice(const void* value, size_t size) {
  set_has_guild_notice();
  if (guild_notice_ == &::google::protobuf::internal::kEmptyString) {
    guild_notice_ = new ::std::string;
  }
  guild_notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSSetGuildNoticeReq::mutable_guild_notice() {
  set_has_guild_notice();
  if (guild_notice_ == &::google::protobuf::internal::kEmptyString) {
    guild_notice_ = new ::std::string;
  }
  return guild_notice_;
}
inline ::std::string* CSSetGuildNoticeReq::release_guild_notice() {
  clear_has_guild_notice();
  if (guild_notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_notice_;
    guild_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes guild_note = 2;
inline bool CSSetGuildNoticeReq::has_guild_note() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetGuildNoticeReq::set_has_guild_note() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetGuildNoticeReq::clear_has_guild_note() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetGuildNoticeReq::clear_guild_note() {
  if (guild_note_ != &::google::protobuf::internal::kEmptyString) {
    guild_note_->clear();
  }
  clear_has_guild_note();
}
inline const ::std::string& CSSetGuildNoticeReq::guild_note() const {
  return *guild_note_;
}
inline void CSSetGuildNoticeReq::set_guild_note(const ::std::string& value) {
  set_has_guild_note();
  if (guild_note_ == &::google::protobuf::internal::kEmptyString) {
    guild_note_ = new ::std::string;
  }
  guild_note_->assign(value);
}
inline void CSSetGuildNoticeReq::set_guild_note(const char* value) {
  set_has_guild_note();
  if (guild_note_ == &::google::protobuf::internal::kEmptyString) {
    guild_note_ = new ::std::string;
  }
  guild_note_->assign(value);
}
inline void CSSetGuildNoticeReq::set_guild_note(const void* value, size_t size) {
  set_has_guild_note();
  if (guild_note_ == &::google::protobuf::internal::kEmptyString) {
    guild_note_ = new ::std::string;
  }
  guild_note_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSSetGuildNoticeReq::mutable_guild_note() {
  set_has_guild_note();
  if (guild_note_ == &::google::protobuf::internal::kEmptyString) {
    guild_note_ = new ::std::string;
  }
  return guild_note_;
}
inline ::std::string* CSSetGuildNoticeReq::release_guild_note() {
  clear_has_guild_note();
  if (guild_note_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_note_;
    guild_note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSSetGuildNoticeRsp

// required bool res = 1;
inline bool CSSetGuildNoticeRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetGuildNoticeRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetGuildNoticeRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetGuildNoticeRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSSetGuildNoticeRsp::res() const {
  return res_;
}
inline void CSSetGuildNoticeRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSGetRecruitMemberReq

// required uint32 instance_id = 1;
inline bool CSGetRecruitMemberReq::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetRecruitMemberReq::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetRecruitMemberReq::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetRecruitMemberReq::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSGetRecruitMemberReq::instance_id() const {
  return instance_id_;
}
inline void CSGetRecruitMemberReq::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// -------------------------------------------------------------------

// CSGetRecruitMemberRsp

// repeated .CSPlayerGuildInfo infos = 1;
inline int CSGetRecruitMemberRsp::infos_size() const {
  return infos_.size();
}
inline void CSGetRecruitMemberRsp::clear_infos() {
  infos_.Clear();
}
inline const ::CSPlayerGuildInfo& CSGetRecruitMemberRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSPlayerGuildInfo* CSGetRecruitMemberRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSPlayerGuildInfo* CSGetRecruitMemberRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >&
CSGetRecruitMemberRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPlayerGuildInfo >*
CSGetRecruitMemberRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CSPVAI3Req

// required uint32 instance_id = 1;
inline bool CSPVAI3Req::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAI3Req::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAI3Req::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAI3Req::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSPVAI3Req::instance_id() const {
  return instance_id_;
}
inline void CSPVAI3Req::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// optional .CSPlayerGuildInfo infos = 2;
inline bool CSPVAI3Req::has_infos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAI3Req::set_has_infos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAI3Req::clear_has_infos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAI3Req::clear_infos() {
  if (infos_ != NULL) infos_->::CSPlayerGuildInfo::Clear();
  clear_has_infos();
}
inline const ::CSPlayerGuildInfo& CSPVAI3Req::infos() const {
  return infos_ != NULL ? *infos_ : *default_instance_->infos_;
}
inline ::CSPlayerGuildInfo* CSPVAI3Req::mutable_infos() {
  set_has_infos();
  if (infos_ == NULL) infos_ = new ::CSPlayerGuildInfo;
  return infos_;
}
inline ::CSPlayerGuildInfo* CSPVAI3Req::release_infos() {
  clear_has_infos();
  ::CSPlayerGuildInfo* temp = infos_;
  infos_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSQueryNewDowerReq

// -------------------------------------------------------------------

// CSQueryNewDowerRsp

// required uint32 next_title_light = 2;
inline bool CSQueryNewDowerRsp::has_next_title_light() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_next_title_light() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryNewDowerRsp::clear_has_next_title_light() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryNewDowerRsp::clear_next_title_light() {
  next_title_light_ = 0u;
  clear_has_next_title_light();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::next_title_light() const {
  return next_title_light_;
}
inline void CSQueryNewDowerRsp::set_next_title_light(::google::protobuf::uint32 value) {
  set_has_next_title_light();
  next_title_light_ = value;
}

// required uint32 physical_attack = 11;
inline bool CSQueryNewDowerRsp::has_physical_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_physical_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryNewDowerRsp::clear_has_physical_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryNewDowerRsp::clear_physical_attack() {
  physical_attack_ = 0u;
  clear_has_physical_attack();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::physical_attack() const {
  return physical_attack_;
}
inline void CSQueryNewDowerRsp::set_physical_attack(::google::protobuf::uint32 value) {
  set_has_physical_attack();
  physical_attack_ = value;
}

// required uint32 magic_attack = 12;
inline bool CSQueryNewDowerRsp::has_magic_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_magic_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryNewDowerRsp::clear_has_magic_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryNewDowerRsp::clear_magic_attack() {
  magic_attack_ = 0u;
  clear_has_magic_attack();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::magic_attack() const {
  return magic_attack_;
}
inline void CSQueryNewDowerRsp::set_magic_attack(::google::protobuf::uint32 value) {
  set_has_magic_attack();
  magic_attack_ = value;
}

// required uint32 skill_attack = 13;
inline bool CSQueryNewDowerRsp::has_skill_attack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_skill_attack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryNewDowerRsp::clear_has_skill_attack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryNewDowerRsp::clear_skill_attack() {
  skill_attack_ = 0u;
  clear_has_skill_attack();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::skill_attack() const {
  return skill_attack_;
}
inline void CSQueryNewDowerRsp::set_skill_attack(::google::protobuf::uint32 value) {
  set_has_skill_attack();
  skill_attack_ = value;
}

// required uint32 physical_defence = 14;
inline bool CSQueryNewDowerRsp::has_physical_defence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_physical_defence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryNewDowerRsp::clear_has_physical_defence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryNewDowerRsp::clear_physical_defence() {
  physical_defence_ = 0u;
  clear_has_physical_defence();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::physical_defence() const {
  return physical_defence_;
}
inline void CSQueryNewDowerRsp::set_physical_defence(::google::protobuf::uint32 value) {
  set_has_physical_defence();
  physical_defence_ = value;
}

// required uint32 magic_defence = 15;
inline bool CSQueryNewDowerRsp::has_magic_defence() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_magic_defence() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSQueryNewDowerRsp::clear_has_magic_defence() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSQueryNewDowerRsp::clear_magic_defence() {
  magic_defence_ = 0u;
  clear_has_magic_defence();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::magic_defence() const {
  return magic_defence_;
}
inline void CSQueryNewDowerRsp::set_magic_defence(::google::protobuf::uint32 value) {
  set_has_magic_defence();
  magic_defence_ = value;
}

// required uint32 skill_defence = 16;
inline bool CSQueryNewDowerRsp::has_skill_defence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_skill_defence() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSQueryNewDowerRsp::clear_has_skill_defence() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSQueryNewDowerRsp::clear_skill_defence() {
  skill_defence_ = 0u;
  clear_has_skill_defence();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::skill_defence() const {
  return skill_defence_;
}
inline void CSQueryNewDowerRsp::set_skill_defence(::google::protobuf::uint32 value) {
  set_has_skill_defence();
  skill_defence_ = value;
}

// required uint32 health_point = 17;
inline bool CSQueryNewDowerRsp::has_health_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSQueryNewDowerRsp::set_has_health_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSQueryNewDowerRsp::clear_has_health_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSQueryNewDowerRsp::clear_health_point() {
  health_point_ = 0u;
  clear_has_health_point();
}
inline ::google::protobuf::uint32 CSQueryNewDowerRsp::health_point() const {
  return health_point_;
}
inline void CSQueryNewDowerRsp::set_health_point(::google::protobuf::uint32 value) {
  set_has_health_point();
  health_point_ = value;
}

// -------------------------------------------------------------------

// CSNewDowerReq

// -------------------------------------------------------------------

// CSNewDowerRsp

// required uint32 id = 1;
inline bool CSNewDowerRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNewDowerRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNewDowerRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNewDowerRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSNewDowerRsp::id() const {
  return id_;
}
inline void CSNewDowerRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSNewDowerOneKeyReq

// -------------------------------------------------------------------

// CSNewDowerOneKeyRsp

// -------------------------------------------------------------------

// CSTitleReq

// -------------------------------------------------------------------

// TitleInfo

// required uint32 title_id = 1;
inline bool TitleInfo::has_title_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleInfo::set_has_title_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleInfo::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleInfo::clear_title_id() {
  title_id_ = 0u;
  clear_has_title_id();
}
inline ::google::protobuf::uint32 TitleInfo::title_id() const {
  return title_id_;
}
inline void TitleInfo::set_title_id(::google::protobuf::uint32 value) {
  set_has_title_id();
  title_id_ = value;
}

// optional uint32 dead_tm = 2 [default = 2147483647];
inline bool TitleInfo::has_dead_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleInfo::set_has_dead_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleInfo::clear_has_dead_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleInfo::clear_dead_tm() {
  dead_tm_ = 2147483647u;
  clear_has_dead_tm();
}
inline ::google::protobuf::uint32 TitleInfo::dead_tm() const {
  return dead_tm_;
}
inline void TitleInfo::set_dead_tm(::google::protobuf::uint32 value) {
  set_has_dead_tm();
  dead_tm_ = value;
}

// -------------------------------------------------------------------

// CSTitleRsp

// optional .TitleInfo wear_title = 1;
inline bool CSTitleRsp::has_wear_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTitleRsp::set_has_wear_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTitleRsp::clear_has_wear_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTitleRsp::clear_wear_title() {
  if (wear_title_ != NULL) wear_title_->::TitleInfo::Clear();
  clear_has_wear_title();
}
inline const ::TitleInfo& CSTitleRsp::wear_title() const {
  return wear_title_ != NULL ? *wear_title_ : *default_instance_->wear_title_;
}
inline ::TitleInfo* CSTitleRsp::mutable_wear_title() {
  set_has_wear_title();
  if (wear_title_ == NULL) wear_title_ = new ::TitleInfo;
  return wear_title_;
}
inline ::TitleInfo* CSTitleRsp::release_wear_title() {
  clear_has_wear_title();
  ::TitleInfo* temp = wear_title_;
  wear_title_ = NULL;
  return temp;
}

// repeated .TitleInfo unlock_titles = 2;
inline int CSTitleRsp::unlock_titles_size() const {
  return unlock_titles_.size();
}
inline void CSTitleRsp::clear_unlock_titles() {
  unlock_titles_.Clear();
}
inline const ::TitleInfo& CSTitleRsp::unlock_titles(int index) const {
  return unlock_titles_.Get(index);
}
inline ::TitleInfo* CSTitleRsp::mutable_unlock_titles(int index) {
  return unlock_titles_.Mutable(index);
}
inline ::TitleInfo* CSTitleRsp::add_unlock_titles() {
  return unlock_titles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TitleInfo >&
CSTitleRsp::unlock_titles() const {
  return unlock_titles_;
}
inline ::google::protobuf::RepeatedPtrField< ::TitleInfo >*
CSTitleRsp::mutable_unlock_titles() {
  return &unlock_titles_;
}

// repeated .TitleInfo learn_titles = 3;
inline int CSTitleRsp::learn_titles_size() const {
  return learn_titles_.size();
}
inline void CSTitleRsp::clear_learn_titles() {
  learn_titles_.Clear();
}
inline const ::TitleInfo& CSTitleRsp::learn_titles(int index) const {
  return learn_titles_.Get(index);
}
inline ::TitleInfo* CSTitleRsp::mutable_learn_titles(int index) {
  return learn_titles_.Mutable(index);
}
inline ::TitleInfo* CSTitleRsp::add_learn_titles() {
  return learn_titles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TitleInfo >&
CSTitleRsp::learn_titles() const {
  return learn_titles_;
}
inline ::google::protobuf::RepeatedPtrField< ::TitleInfo >*
CSTitleRsp::mutable_learn_titles() {
  return &learn_titles_;
}

// -------------------------------------------------------------------

// CSTitleLearnReq

// required uint32 title_id = 1;
inline bool CSTitleLearnReq::has_title_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTitleLearnReq::set_has_title_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTitleLearnReq::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTitleLearnReq::clear_title_id() {
  title_id_ = 0u;
  clear_has_title_id();
}
inline ::google::protobuf::uint32 CSTitleLearnReq::title_id() const {
  return title_id_;
}
inline void CSTitleLearnReq::set_title_id(::google::protobuf::uint32 value) {
  set_has_title_id();
  title_id_ = value;
}

// -------------------------------------------------------------------

// CSTitleLearnRsp

// -------------------------------------------------------------------

// CSTitleWearReq

// required uint32 title_id = 1;
inline bool CSTitleWearReq::has_title_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTitleWearReq::set_has_title_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTitleWearReq::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTitleWearReq::clear_title_id() {
  title_id_ = 0u;
  clear_has_title_id();
}
inline ::google::protobuf::uint32 CSTitleWearReq::title_id() const {
  return title_id_;
}
inline void CSTitleWearReq::set_title_id(::google::protobuf::uint32 value) {
  set_has_title_id();
  title_id_ = value;
}

// -------------------------------------------------------------------

// CSTitleWearRsp

// -------------------------------------------------------------------

// CSTitleUnlockRsp

// required uint32 title = 1;
inline bool CSTitleUnlockRsp::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTitleUnlockRsp::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTitleUnlockRsp::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTitleUnlockRsp::clear_title() {
  title_ = 0u;
  clear_has_title();
}
inline ::google::protobuf::uint32 CSTitleUnlockRsp::title() const {
  return title_;
}
inline void CSTitleUnlockRsp::set_title(::google::protobuf::uint32 value) {
  set_has_title();
  title_ = value;
}

// -------------------------------------------------------------------

// CSPGSetAcceptInviteReq

// -------------------------------------------------------------------

// CSPGSetAcceptInviteRsp

// required bool is_set = 1;
inline bool CSPGSetAcceptInviteRsp::has_is_set() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPGSetAcceptInviteRsp::set_has_is_set() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPGSetAcceptInviteRsp::clear_has_is_set() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPGSetAcceptInviteRsp::clear_is_set() {
  is_set_ = false;
  clear_has_is_set();
}
inline bool CSPGSetAcceptInviteRsp::is_set() const {
  return is_set_;
}
inline void CSPGSetAcceptInviteRsp::set_is_set(bool value) {
  set_has_is_set();
  is_set_ = value;
}

// -------------------------------------------------------------------

// CSPGContributeToGuildReq

// required uint32 param = 1;
inline bool CSPGContributeToGuildReq::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPGContributeToGuildReq::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPGContributeToGuildReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPGContributeToGuildReq::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CSPGContributeToGuildReq::param() const {
  return param_;
}
inline void CSPGContributeToGuildReq::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// CSPGContributeToGuildRsp

// required uint32 res = 1;
inline bool CSPGContributeToGuildRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPGContributeToGuildRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPGContributeToGuildRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPGContributeToGuildRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSPGContributeToGuildRsp::res() const {
  return res_;
}
inline void CSPGContributeToGuildRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// CSCancelWaitingRsp

// -------------------------------------------------------------------

// CSQueryPlayerGuildInfoReq

// -------------------------------------------------------------------

// CSQueryPlayerGuildInfoRsp

// optional .CSGuildInfo guildinfo = 1;
inline bool CSQueryPlayerGuildInfoRsp::has_guildinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryPlayerGuildInfoRsp::set_has_guildinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryPlayerGuildInfoRsp::clear_has_guildinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryPlayerGuildInfoRsp::clear_guildinfo() {
  if (guildinfo_ != NULL) guildinfo_->::CSGuildInfo::Clear();
  clear_has_guildinfo();
}
inline const ::CSGuildInfo& CSQueryPlayerGuildInfoRsp::guildinfo() const {
  return guildinfo_ != NULL ? *guildinfo_ : *default_instance_->guildinfo_;
}
inline ::CSGuildInfo* CSQueryPlayerGuildInfoRsp::mutable_guildinfo() {
  set_has_guildinfo();
  if (guildinfo_ == NULL) guildinfo_ = new ::CSGuildInfo;
  return guildinfo_;
}
inline ::CSGuildInfo* CSQueryPlayerGuildInfoRsp::release_guildinfo() {
  clear_has_guildinfo();
  ::CSGuildInfo* temp = guildinfo_;
  guildinfo_ = NULL;
  return temp;
}

// optional .CSPlayerGuildInfo playerinfo = 2;
inline bool CSQueryPlayerGuildInfoRsp::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryPlayerGuildInfoRsp::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryPlayerGuildInfoRsp::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryPlayerGuildInfoRsp::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::CSPlayerGuildInfo::Clear();
  clear_has_playerinfo();
}
inline const ::CSPlayerGuildInfo& CSQueryPlayerGuildInfoRsp::playerinfo() const {
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::CSPlayerGuildInfo* CSQueryPlayerGuildInfoRsp::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::CSPlayerGuildInfo;
  return playerinfo_;
}
inline ::CSPlayerGuildInfo* CSQueryPlayerGuildInfoRsp::release_playerinfo() {
  clear_has_playerinfo();
  ::CSPlayerGuildInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSSetPlayerGuildApplyConditionReq

// required uint32 type = 1;
inline bool CSSetPlayerGuildApplyConditionReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetPlayerGuildApplyConditionReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetPlayerGuildApplyConditionReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetPlayerGuildApplyConditionReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSSetPlayerGuildApplyConditionReq::type() const {
  return type_;
}
inline void CSSetPlayerGuildApplyConditionReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 fight = 2;
inline bool CSSetPlayerGuildApplyConditionReq::has_fight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetPlayerGuildApplyConditionReq::set_has_fight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetPlayerGuildApplyConditionReq::clear_has_fight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetPlayerGuildApplyConditionReq::clear_fight() {
  fight_ = 0u;
  clear_has_fight();
}
inline ::google::protobuf::uint32 CSSetPlayerGuildApplyConditionReq::fight() const {
  return fight_;
}
inline void CSSetPlayerGuildApplyConditionReq::set_fight(::google::protobuf::uint32 value) {
  set_has_fight();
  fight_ = value;
}

// -------------------------------------------------------------------

// CSSetPlayerGuildApplyConditionRsp

// required uint32 res = 1;
inline bool CSSetPlayerGuildApplyConditionRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetPlayerGuildApplyConditionRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetPlayerGuildApplyConditionRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetPlayerGuildApplyConditionRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSSetPlayerGuildApplyConditionRsp::res() const {
  return res_;
}
inline void CSSetPlayerGuildApplyConditionRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// -------------------------------------------------------------------

// GuildRecordInfo

// required uint32 record_type = 1;
inline bool GuildRecordInfo::has_record_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRecordInfo::set_has_record_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRecordInfo::clear_has_record_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRecordInfo::clear_record_type() {
  record_type_ = 0u;
  clear_has_record_type();
}
inline ::google::protobuf::uint32 GuildRecordInfo::record_type() const {
  return record_type_;
}
inline void GuildRecordInfo::set_record_type(::google::protobuf::uint32 value) {
  set_has_record_type();
  record_type_ = value;
}

// required bytes log = 2;
inline bool GuildRecordInfo::has_log() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRecordInfo::set_has_log() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRecordInfo::clear_has_log() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRecordInfo::clear_log() {
  if (log_ != &::google::protobuf::internal::kEmptyString) {
    log_->clear();
  }
  clear_has_log();
}
inline const ::std::string& GuildRecordInfo::log() const {
  return *log_;
}
inline void GuildRecordInfo::set_log(const ::std::string& value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void GuildRecordInfo::set_log(const char* value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void GuildRecordInfo::set_log(const void* value, size_t size) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildRecordInfo::mutable_log() {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  return log_;
}
inline ::std::string* GuildRecordInfo::release_log() {
  clear_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = log_;
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 modify_tm = 3;
inline bool GuildRecordInfo::has_modify_tm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRecordInfo::set_has_modify_tm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRecordInfo::clear_has_modify_tm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRecordInfo::clear_modify_tm() {
  modify_tm_ = 0u;
  clear_has_modify_tm();
}
inline ::google::protobuf::uint32 GuildRecordInfo::modify_tm() const {
  return modify_tm_;
}
inline void GuildRecordInfo::set_modify_tm(::google::protobuf::uint32 value) {
  set_has_modify_tm();
  modify_tm_ = value;
}

// -------------------------------------------------------------------

// CSGuildRecordListReq

// required uint32 zone_id = 1;
inline bool CSGuildRecordListReq::has_zone_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRecordListReq::set_has_zone_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRecordListReq::clear_has_zone_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRecordListReq::clear_zone_id() {
  zone_id_ = 0u;
  clear_has_zone_id();
}
inline ::google::protobuf::uint32 CSGuildRecordListReq::zone_id() const {
  return zone_id_;
}
inline void CSGuildRecordListReq::set_zone_id(::google::protobuf::uint32 value) {
  set_has_zone_id();
  zone_id_ = value;
}

// required uint32 guild_id_low = 2;
inline bool CSGuildRecordListReq::has_guild_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRecordListReq::set_has_guild_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRecordListReq::clear_has_guild_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRecordListReq::clear_guild_id_low() {
  guild_id_low_ = 0u;
  clear_has_guild_id_low();
}
inline ::google::protobuf::uint32 CSGuildRecordListReq::guild_id_low() const {
  return guild_id_low_;
}
inline void CSGuildRecordListReq::set_guild_id_low(::google::protobuf::uint32 value) {
  set_has_guild_id_low();
  guild_id_low_ = value;
}

// required uint32 guild_id_high = 3;
inline bool CSGuildRecordListReq::has_guild_id_high() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRecordListReq::set_has_guild_id_high() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRecordListReq::clear_has_guild_id_high() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRecordListReq::clear_guild_id_high() {
  guild_id_high_ = 0u;
  clear_has_guild_id_high();
}
inline ::google::protobuf::uint32 CSGuildRecordListReq::guild_id_high() const {
  return guild_id_high_;
}
inline void CSGuildRecordListReq::set_guild_id_high(::google::protobuf::uint32 value) {
  set_has_guild_id_high();
  guild_id_high_ = value;
}

// -------------------------------------------------------------------

// CSGuildRecordListRsp

// repeated .GuildRecordInfo logs = 1;
inline int CSGuildRecordListRsp::logs_size() const {
  return logs_.size();
}
inline void CSGuildRecordListRsp::clear_logs() {
  logs_.Clear();
}
inline const ::GuildRecordInfo& CSGuildRecordListRsp::logs(int index) const {
  return logs_.Get(index);
}
inline ::GuildRecordInfo* CSGuildRecordListRsp::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::GuildRecordInfo* CSGuildRecordListRsp::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildRecordInfo >&
CSGuildRecordListRsp::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::GuildRecordInfo >*
CSGuildRecordListRsp::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// CSGoddessBlessReq

// required bool ischeck = 1;
inline bool CSGoddessBlessReq::has_ischeck() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGoddessBlessReq::set_has_ischeck() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGoddessBlessReq::clear_has_ischeck() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGoddessBlessReq::clear_ischeck() {
  ischeck_ = false;
  clear_has_ischeck();
}
inline bool CSGoddessBlessReq::ischeck() const {
  return ischeck_;
}
inline void CSGoddessBlessReq::set_ischeck(bool value) {
  set_has_ischeck();
  ischeck_ = value;
}

// -------------------------------------------------------------------

// CSGoddessBlessRsp_Item

// required uint32 item_id = 1;
inline bool CSGoddessBlessRsp_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGoddessBlessRsp_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGoddessBlessRsp_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGoddessBlessRsp_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSGoddessBlessRsp_Item::item_id() const {
  return item_id_;
}
inline void CSGoddessBlessRsp_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSGoddessBlessRsp_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGoddessBlessRsp_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGoddessBlessRsp_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGoddessBlessRsp_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSGoddessBlessRsp_Item::item_num() const {
  return item_num_;
}
inline void CSGoddessBlessRsp_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSGoddessBlessRsp

// required uint32 res = 1;
inline bool CSGoddessBlessRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGoddessBlessRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGoddessBlessRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGoddessBlessRsp::clear_res() {
  res_ = 0u;
  clear_has_res();
}
inline ::google::protobuf::uint32 CSGoddessBlessRsp::res() const {
  return res_;
}
inline void CSGoddessBlessRsp::set_res(::google::protobuf::uint32 value) {
  set_has_res();
  res_ = value;
}

// repeated .CSGoddessBlessRsp.Item from_item = 2;
inline int CSGoddessBlessRsp::from_item_size() const {
  return from_item_.size();
}
inline void CSGoddessBlessRsp::clear_from_item() {
  from_item_.Clear();
}
inline const ::CSGoddessBlessRsp_Item& CSGoddessBlessRsp::from_item(int index) const {
  return from_item_.Get(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::mutable_from_item(int index) {
  return from_item_.Mutable(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::add_from_item() {
  return from_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
CSGoddessBlessRsp::from_item() const {
  return from_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
CSGoddessBlessRsp::mutable_from_item() {
  return &from_item_;
}

// repeated .CSGoddessBlessRsp.Item to_item = 3;
inline int CSGoddessBlessRsp::to_item_size() const {
  return to_item_.size();
}
inline void CSGoddessBlessRsp::clear_to_item() {
  to_item_.Clear();
}
inline const ::CSGoddessBlessRsp_Item& CSGoddessBlessRsp::to_item(int index) const {
  return to_item_.Get(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::mutable_to_item(int index) {
  return to_item_.Mutable(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::add_to_item() {
  return to_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
CSGoddessBlessRsp::to_item() const {
  return to_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
CSGoddessBlessRsp::mutable_to_item() {
  return &to_item_;
}

// repeated .CSGoddessBlessRsp.Item next_to_item = 4;
inline int CSGoddessBlessRsp::next_to_item_size() const {
  return next_to_item_.size();
}
inline void CSGoddessBlessRsp::clear_next_to_item() {
  next_to_item_.Clear();
}
inline const ::CSGoddessBlessRsp_Item& CSGoddessBlessRsp::next_to_item(int index) const {
  return next_to_item_.Get(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::mutable_next_to_item(int index) {
  return next_to_item_.Mutable(index);
}
inline ::CSGoddessBlessRsp_Item* CSGoddessBlessRsp::add_next_to_item() {
  return next_to_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >&
CSGoddessBlessRsp::next_to_item() const {
  return next_to_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGoddessBlessRsp_Item >*
CSGoddessBlessRsp::mutable_next_to_item() {
  return &next_to_item_;
}

// optional uint32 next_level = 5;
inline bool CSGoddessBlessRsp::has_next_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGoddessBlessRsp::set_has_next_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGoddessBlessRsp::clear_has_next_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGoddessBlessRsp::clear_next_level() {
  next_level_ = 0u;
  clear_has_next_level();
}
inline ::google::protobuf::uint32 CSGoddessBlessRsp::next_level() const {
  return next_level_;
}
inline void CSGoddessBlessRsp::set_next_level(::google::protobuf::uint32 value) {
  set_has_next_level();
  next_level_ = value;
}

// -------------------------------------------------------------------

// ShoppingItemInfo_Item

// required uint32 item_id = 1;
inline bool ShoppingItemInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShoppingItemInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShoppingItemInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShoppingItemInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 ShoppingItemInfo_Item::item_id() const {
  return item_id_;
}
inline void ShoppingItemInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool ShoppingItemInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShoppingItemInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShoppingItemInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShoppingItemInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 ShoppingItemInfo_Item::item_num() const {
  return item_num_;
}
inline void ShoppingItemInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ShoppingItemInfo

// required uint32 index = 1;
inline bool ShoppingItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShoppingItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShoppingItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShoppingItemInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ShoppingItemInfo::index() const {
  return index_;
}
inline void ShoppingItemInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .ShoppingItemInfo.Item from_item = 2;
inline bool ShoppingItemInfo::has_from_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShoppingItemInfo::set_has_from_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShoppingItemInfo::clear_has_from_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShoppingItemInfo::clear_from_item() {
  if (from_item_ != NULL) from_item_->::ShoppingItemInfo_Item::Clear();
  clear_has_from_item();
}
inline const ::ShoppingItemInfo_Item& ShoppingItemInfo::from_item() const {
  return from_item_ != NULL ? *from_item_ : *default_instance_->from_item_;
}
inline ::ShoppingItemInfo_Item* ShoppingItemInfo::mutable_from_item() {
  set_has_from_item();
  if (from_item_ == NULL) from_item_ = new ::ShoppingItemInfo_Item;
  return from_item_;
}
inline ::ShoppingItemInfo_Item* ShoppingItemInfo::release_from_item() {
  clear_has_from_item();
  ::ShoppingItemInfo_Item* temp = from_item_;
  from_item_ = NULL;
  return temp;
}

// required .ShoppingItemInfo.Item to_item = 3;
inline bool ShoppingItemInfo::has_to_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShoppingItemInfo::set_has_to_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShoppingItemInfo::clear_has_to_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShoppingItemInfo::clear_to_item() {
  if (to_item_ != NULL) to_item_->::ShoppingItemInfo_Item::Clear();
  clear_has_to_item();
}
inline const ::ShoppingItemInfo_Item& ShoppingItemInfo::to_item() const {
  return to_item_ != NULL ? *to_item_ : *default_instance_->to_item_;
}
inline ::ShoppingItemInfo_Item* ShoppingItemInfo::mutable_to_item() {
  set_has_to_item();
  if (to_item_ == NULL) to_item_ = new ::ShoppingItemInfo_Item;
  return to_item_;
}
inline ::ShoppingItemInfo_Item* ShoppingItemInfo::release_to_item() {
  clear_has_to_item();
  ::ShoppingItemInfo_Item* temp = to_item_;
  to_item_ = NULL;
  return temp;
}

// required uint32 buytimes = 4;
inline bool ShoppingItemInfo::has_buytimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShoppingItemInfo::set_has_buytimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShoppingItemInfo::clear_has_buytimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShoppingItemInfo::clear_buytimes() {
  buytimes_ = 0u;
  clear_has_buytimes();
}
inline ::google::protobuf::uint32 ShoppingItemInfo::buytimes() const {
  return buytimes_;
}
inline void ShoppingItemInfo::set_buytimes(::google::protobuf::uint32 value) {
  set_has_buytimes();
  buytimes_ = value;
}

// optional uint32 limit = 5;
inline bool ShoppingItemInfo::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShoppingItemInfo::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShoppingItemInfo::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShoppingItemInfo::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 ShoppingItemInfo::limit() const {
  return limit_;
}
inline void ShoppingItemInfo::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
}

// optional uint32 times = 6;
inline bool ShoppingItemInfo::has_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShoppingItemInfo::set_has_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShoppingItemInfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShoppingItemInfo::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 ShoppingItemInfo::times() const {
  return times_;
}
inline void ShoppingItemInfo::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// CSGetShoppingItemsReq

// repeated uint32 type = 1;
inline int CSGetShoppingItemsReq::type_size() const {
  return type_.size();
}
inline void CSGetShoppingItemsReq::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::uint32 CSGetShoppingItemsReq::type(int index) const {
  return type_.Get(index);
}
inline void CSGetShoppingItemsReq::set_type(int index, ::google::protobuf::uint32 value) {
  type_.Set(index, value);
}
inline void CSGetShoppingItemsReq::add_type(::google::protobuf::uint32 value) {
  type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetShoppingItemsReq::type() const {
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetShoppingItemsReq::mutable_type() {
  return &type_;
}

// -------------------------------------------------------------------

// CSGetShoppingItemsRsp

// repeated .ShoppingItemInfo items = 1;
inline int CSGetShoppingItemsRsp::items_size() const {
  return items_.size();
}
inline void CSGetShoppingItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::ShoppingItemInfo& CSGetShoppingItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::ShoppingItemInfo* CSGetShoppingItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::ShoppingItemInfo* CSGetShoppingItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShoppingItemInfo >&
CSGetShoppingItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShoppingItemInfo >*
CSGetShoppingItemsRsp::mutable_items() {
  return &items_;
}

// repeated uint32 param = 2;
inline int CSGetShoppingItemsRsp::param_size() const {
  return param_.size();
}
inline void CSGetShoppingItemsRsp::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSGetShoppingItemsRsp::param(int index) const {
  return param_.Get(index);
}
inline void CSGetShoppingItemsRsp::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSGetShoppingItemsRsp::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetShoppingItemsRsp::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetShoppingItemsRsp::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSExchangeItemInfoReq

// repeated uint32 params = 1;
inline int CSExchangeItemInfoReq::params_size() const {
  return params_.size();
}
inline void CSExchangeItemInfoReq::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeItemInfoReq::params(int index) const {
  return params_.Get(index);
}
inline void CSExchangeItemInfoReq::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
}
inline void CSExchangeItemInfoReq::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeItemInfoReq::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeItemInfoReq::mutable_params() {
  return &params_;
}

// optional uint32 type = 2;
inline bool CSExchangeItemInfoReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeItemInfoReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeItemInfoReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeItemInfoReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSExchangeItemInfoReq::type() const {
  return type_;
}
inline void CSExchangeItemInfoReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSExchangeItemInfoRsp_Item

// required uint32 item_id = 1;
inline bool CSExchangeItemInfoRsp_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeItemInfoRsp_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeItemInfoRsp_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeItemInfoRsp_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSExchangeItemInfoRsp_Item::item_id() const {
  return item_id_;
}
inline void CSExchangeItemInfoRsp_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSExchangeItemInfoRsp_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeItemInfoRsp_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeItemInfoRsp_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeItemInfoRsp_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSExchangeItemInfoRsp_Item::item_num() const {
  return item_num_;
}
inline void CSExchangeItemInfoRsp_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSExchangeItemInfoRsp_ItemInfo

// repeated .CSExchangeItemInfoRsp.Item from_item = 1;
inline int CSExchangeItemInfoRsp_ItemInfo::from_item_size() const {
  return from_item_.size();
}
inline void CSExchangeItemInfoRsp_ItemInfo::clear_from_item() {
  from_item_.Clear();
}
inline const ::CSExchangeItemInfoRsp_Item& CSExchangeItemInfoRsp_ItemInfo::from_item(int index) const {
  return from_item_.Get(index);
}
inline ::CSExchangeItemInfoRsp_Item* CSExchangeItemInfoRsp_ItemInfo::mutable_from_item(int index) {
  return from_item_.Mutable(index);
}
inline ::CSExchangeItemInfoRsp_Item* CSExchangeItemInfoRsp_ItemInfo::add_from_item() {
  return from_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >&
CSExchangeItemInfoRsp_ItemInfo::from_item() const {
  return from_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >*
CSExchangeItemInfoRsp_ItemInfo::mutable_from_item() {
  return &from_item_;
}

// repeated .CSExchangeItemInfoRsp.Item to_item = 2;
inline int CSExchangeItemInfoRsp_ItemInfo::to_item_size() const {
  return to_item_.size();
}
inline void CSExchangeItemInfoRsp_ItemInfo::clear_to_item() {
  to_item_.Clear();
}
inline const ::CSExchangeItemInfoRsp_Item& CSExchangeItemInfoRsp_ItemInfo::to_item(int index) const {
  return to_item_.Get(index);
}
inline ::CSExchangeItemInfoRsp_Item* CSExchangeItemInfoRsp_ItemInfo::mutable_to_item(int index) {
  return to_item_.Mutable(index);
}
inline ::CSExchangeItemInfoRsp_Item* CSExchangeItemInfoRsp_ItemInfo::add_to_item() {
  return to_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >&
CSExchangeItemInfoRsp_ItemInfo::to_item() const {
  return to_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_Item >*
CSExchangeItemInfoRsp_ItemInfo::mutable_to_item() {
  return &to_item_;
}

// required uint32 type = 3;
inline bool CSExchangeItemInfoRsp_ItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSExchangeItemInfoRsp_ItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSExchangeItemInfoRsp_ItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSExchangeItemInfoRsp_ItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSExchangeItemInfoRsp_ItemInfo::type() const {
  return type_;
}
inline void CSExchangeItemInfoRsp_ItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSExchangeItemInfoRsp

// repeated .CSExchangeItemInfoRsp.ItemInfo items = 1;
inline int CSExchangeItemInfoRsp::items_size() const {
  return items_.size();
}
inline void CSExchangeItemInfoRsp::clear_items() {
  items_.Clear();
}
inline const ::CSExchangeItemInfoRsp_ItemInfo& CSExchangeItemInfoRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSExchangeItemInfoRsp_ItemInfo* CSExchangeItemInfoRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSExchangeItemInfoRsp_ItemInfo* CSExchangeItemInfoRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_ItemInfo >&
CSExchangeItemInfoRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSExchangeItemInfoRsp_ItemInfo >*
CSExchangeItemInfoRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSGuildNoteRsp

// required bytes text = 1;
inline bool CSGuildNoteRsp::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildNoteRsp::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildNoteRsp::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildNoteRsp::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSGuildNoteRsp::text() const {
  return *text_;
}
inline void CSGuildNoteRsp::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSGuildNoteRsp::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSGuildNoteRsp::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildNoteRsp::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CSGuildNoteRsp::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSGuildRedPacketKey

// required uint32 userid = 1;
inline bool CSGuildRedPacketKey::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketKey::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketKey::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketKey::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGuildRedPacketKey::userid() const {
  return userid_;
}
inline void CSGuildRedPacketKey::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 channelid = 2;
inline bool CSGuildRedPacketKey::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketKey::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketKey::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketKey::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CSGuildRedPacketKey::channelid() const {
  return channelid_;
}
inline void CSGuildRedPacketKey::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
}

// required uint32 reg_tm = 3;
inline bool CSGuildRedPacketKey::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRedPacketKey::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRedPacketKey::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRedPacketKey::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSGuildRedPacketKey::reg_tm() const {
  return reg_tm_;
}
inline void CSGuildRedPacketKey::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 zone_id = 4;
inline bool CSGuildRedPacketKey::has_zone_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRedPacketKey::set_has_zone_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRedPacketKey::clear_has_zone_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRedPacketKey::clear_zone_id() {
  zone_id_ = 0u;
  clear_has_zone_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketKey::zone_id() const {
  return zone_id_;
}
inline void CSGuildRedPacketKey::set_zone_id(::google::protobuf::uint32 value) {
  set_has_zone_id();
  zone_id_ = value;
}

// required uint32 send_tm = 5;
inline bool CSGuildRedPacketKey::has_send_tm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRedPacketKey::set_has_send_tm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRedPacketKey::clear_has_send_tm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRedPacketKey::clear_send_tm() {
  send_tm_ = 0u;
  clear_has_send_tm();
}
inline ::google::protobuf::uint32 CSGuildRedPacketKey::send_tm() const {
  return send_tm_;
}
inline void CSGuildRedPacketKey::set_send_tm(::google::protobuf::uint32 value) {
  set_has_send_tm();
  send_tm_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketInfo

// required .CSGuildRedPacketKey key = 1;
inline bool CSGuildRedPacketInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketInfo::clear_key() {
  if (key_ != NULL) key_->::CSGuildRedPacketKey::Clear();
  clear_has_key();
}
inline const ::CSGuildRedPacketKey& CSGuildRedPacketInfo::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketInfo::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::CSGuildRedPacketKey;
  return key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketInfo::release_key() {
  clear_has_key();
  ::CSGuildRedPacketKey* temp = key_;
  key_ = NULL;
  return temp;
}

// required bytes name = 2;
inline bool CSGuildRedPacketInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSGuildRedPacketInfo::name() const {
  return *name_;
}
inline void CSGuildRedPacketInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildRedPacketInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildRedPacketInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSGuildRedPacketInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 packet_type = 3;
inline bool CSGuildRedPacketInfo::has_packet_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_packet_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRedPacketInfo::clear_has_packet_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRedPacketInfo::clear_packet_type() {
  packet_type_ = 0u;
  clear_has_packet_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketInfo::packet_type() const {
  return packet_type_;
}
inline void CSGuildRedPacketInfo::set_packet_type(::google::protobuf::uint32 value) {
  set_has_packet_type();
  packet_type_ = value;
}

// required uint32 packet_id = 4;
inline bool CSGuildRedPacketInfo::has_packet_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_packet_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRedPacketInfo::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRedPacketInfo::clear_packet_id() {
  packet_id_ = 0u;
  clear_has_packet_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketInfo::packet_id() const {
  return packet_id_;
}
inline void CSGuildRedPacketInfo::set_packet_id(::google::protobuf::uint32 value) {
  set_has_packet_id();
  packet_id_ = value;
}

// required uint32 surplus_nu = 5;
inline bool CSGuildRedPacketInfo::has_surplus_nu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_surplus_nu() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRedPacketInfo::clear_has_surplus_nu() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRedPacketInfo::clear_surplus_nu() {
  surplus_nu_ = 0u;
  clear_has_surplus_nu();
}
inline ::google::protobuf::uint32 CSGuildRedPacketInfo::surplus_nu() const {
  return surplus_nu_;
}
inline void CSGuildRedPacketInfo::set_surplus_nu(::google::protobuf::uint32 value) {
  set_has_surplus_nu();
  surplus_nu_ = value;
}

// optional bool is_draw = 6 [default = false];
inline bool CSGuildRedPacketInfo::has_is_draw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_is_draw() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildRedPacketInfo::clear_has_is_draw() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildRedPacketInfo::clear_is_draw() {
  is_draw_ = false;
  clear_has_is_draw();
}
inline bool CSGuildRedPacketInfo::is_draw() const {
  return is_draw_;
}
inline void CSGuildRedPacketInfo::set_is_draw(bool value) {
  set_has_is_draw();
  is_draw_ = value;
}

// optional uint32 real_diamond = 7 [default = 1000];
inline bool CSGuildRedPacketInfo::has_real_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildRedPacketInfo::set_has_real_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildRedPacketInfo::clear_has_real_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildRedPacketInfo::clear_real_diamond() {
  real_diamond_ = 1000u;
  clear_has_real_diamond();
}
inline ::google::protobuf::uint32 CSGuildRedPacketInfo::real_diamond() const {
  return real_diamond_;
}
inline void CSGuildRedPacketInfo::set_real_diamond(::google::protobuf::uint32 value) {
  set_has_real_diamond();
  real_diamond_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketQueryReq

// -------------------------------------------------------------------

// CSGuildRedPacketQueryRsp

// repeated .CSGuildRedPacketInfo infos = 1;
inline int CSGuildRedPacketQueryRsp::infos_size() const {
  return infos_.size();
}
inline void CSGuildRedPacketQueryRsp::clear_infos() {
  infos_.Clear();
}
inline const ::CSGuildRedPacketInfo& CSGuildRedPacketQueryRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSGuildRedPacketInfo* CSGuildRedPacketQueryRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSGuildRedPacketInfo* CSGuildRedPacketQueryRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketInfo >&
CSGuildRedPacketQueryRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketInfo >*
CSGuildRedPacketQueryRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CSGuildRedPacketSendReq

// required uint32 packet_id = 1;
inline bool CSGuildRedPacketSendReq::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketSendReq::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketSendReq::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketSendReq::clear_packet_id() {
  packet_id_ = 0u;
  clear_has_packet_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendReq::packet_id() const {
  return packet_id_;
}
inline void CSGuildRedPacketSendReq::set_packet_id(::google::protobuf::uint32 value) {
  set_has_packet_id();
  packet_id_ = value;
}

// required uint32 packet_type = 2;
inline bool CSGuildRedPacketSendReq::has_packet_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketSendReq::set_has_packet_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketSendReq::clear_has_packet_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketSendReq::clear_packet_type() {
  packet_type_ = 0u;
  clear_has_packet_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendReq::packet_type() const {
  return packet_type_;
}
inline void CSGuildRedPacketSendReq::set_packet_type(::google::protobuf::uint32 value) {
  set_has_packet_type();
  packet_type_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketSendRsp

// required bool suc = 1;
inline bool CSGuildRedPacketSendRsp::has_suc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketSendRsp::set_has_suc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketSendRsp::clear_has_suc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketSendRsp::clear_suc() {
  suc_ = false;
  clear_has_suc();
}
inline bool CSGuildRedPacketSendRsp::suc() const {
  return suc_;
}
inline void CSGuildRedPacketSendRsp::set_suc(bool value) {
  set_has_suc();
  suc_ = value;
}

// required uint32 packet_id = 2;
inline bool CSGuildRedPacketSendRsp::has_packet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketSendRsp::set_has_packet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketSendRsp::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketSendRsp::clear_packet_id() {
  packet_id_ = 0u;
  clear_has_packet_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendRsp::packet_id() const {
  return packet_id_;
}
inline void CSGuildRedPacketSendRsp::set_packet_id(::google::protobuf::uint32 value) {
  set_has_packet_id();
  packet_id_ = value;
}

// required uint32 packet_type = 3;
inline bool CSGuildRedPacketSendRsp::has_packet_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRedPacketSendRsp::set_has_packet_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRedPacketSendRsp::clear_has_packet_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRedPacketSendRsp::clear_packet_type() {
  packet_type_ = 0u;
  clear_has_packet_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendRsp::packet_type() const {
  return packet_type_;
}
inline void CSGuildRedPacketSendRsp::set_packet_type(::google::protobuf::uint32 value) {
  set_has_packet_type();
  packet_type_ = value;
}

// required uint32 acc_packet_diamond = 4;
inline bool CSGuildRedPacketSendRsp::has_acc_packet_diamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRedPacketSendRsp::set_has_acc_packet_diamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRedPacketSendRsp::clear_has_acc_packet_diamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRedPacketSendRsp::clear_acc_packet_diamond() {
  acc_packet_diamond_ = 0u;
  clear_has_acc_packet_diamond();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendRsp::acc_packet_diamond() const {
  return acc_packet_diamond_;
}
inline void CSGuildRedPacketSendRsp::set_acc_packet_diamond(::google::protobuf::uint32 value) {
  set_has_acc_packet_diamond();
  acc_packet_diamond_ = value;
}

// required uint32 real_diamond = 5;
inline bool CSGuildRedPacketSendRsp::has_real_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRedPacketSendRsp::set_has_real_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRedPacketSendRsp::clear_has_real_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRedPacketSendRsp::clear_real_diamond() {
  real_diamond_ = 0u;
  clear_has_real_diamond();
}
inline ::google::protobuf::uint32 CSGuildRedPacketSendRsp::real_diamond() const {
  return real_diamond_;
}
inline void CSGuildRedPacketSendRsp::set_real_diamond(::google::protobuf::uint32 value) {
  set_has_real_diamond();
  real_diamond_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketGetAwardReq

// required .CSGuildRedPacketKey key = 1;
inline bool CSGuildRedPacketGetAwardReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketGetAwardReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketGetAwardReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketGetAwardReq::clear_key() {
  if (key_ != NULL) key_->::CSGuildRedPacketKey::Clear();
  clear_has_key();
}
inline const ::CSGuildRedPacketKey& CSGuildRedPacketGetAwardReq::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketGetAwardReq::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::CSGuildRedPacketKey;
  return key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketGetAwardReq::release_key() {
  clear_has_key();
  ::CSGuildRedPacketKey* temp = key_;
  key_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSGuildRedPacketAward

// required uint32 item_id = 1;
inline bool CSGuildRedPacketAward::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketAward::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketAward::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketAward::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketAward::item_id() const {
  return item_id_;
}
inline void CSGuildRedPacketAward::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_count = 2;
inline bool CSGuildRedPacketAward::has_item_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketAward::set_has_item_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketAward::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketAward::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 CSGuildRedPacketAward::item_count() const {
  return item_count_;
}
inline void CSGuildRedPacketAward::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketGetAwardRsp

// required bool suc = 1;
inline bool CSGuildRedPacketGetAwardRsp::has_suc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketGetAwardRsp::set_has_suc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketGetAwardRsp::clear_has_suc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketGetAwardRsp::clear_suc() {
  suc_ = false;
  clear_has_suc();
}
inline bool CSGuildRedPacketGetAwardRsp::suc() const {
  return suc_;
}
inline void CSGuildRedPacketGetAwardRsp::set_suc(bool value) {
  set_has_suc();
  suc_ = value;
}

// required uint32 diamond_count = 2;
inline bool CSGuildRedPacketGetAwardRsp::has_diamond_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketGetAwardRsp::set_has_diamond_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketGetAwardRsp::clear_has_diamond_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketGetAwardRsp::clear_diamond_count() {
  diamond_count_ = 0u;
  clear_has_diamond_count();
}
inline ::google::protobuf::uint32 CSGuildRedPacketGetAwardRsp::diamond_count() const {
  return diamond_count_;
}
inline void CSGuildRedPacketGetAwardRsp::set_diamond_count(::google::protobuf::uint32 value) {
  set_has_diamond_count();
  diamond_count_ = value;
}

// repeated .CSGuildRedPacketAward awards = 3;
inline int CSGuildRedPacketGetAwardRsp::awards_size() const {
  return awards_.size();
}
inline void CSGuildRedPacketGetAwardRsp::clear_awards() {
  awards_.Clear();
}
inline const ::CSGuildRedPacketAward& CSGuildRedPacketGetAwardRsp::awards(int index) const {
  return awards_.Get(index);
}
inline ::CSGuildRedPacketAward* CSGuildRedPacketGetAwardRsp::mutable_awards(int index) {
  return awards_.Mutable(index);
}
inline ::CSGuildRedPacketAward* CSGuildRedPacketGetAwardRsp::add_awards() {
  return awards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketAward >&
CSGuildRedPacketGetAwardRsp::awards() const {
  return awards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketAward >*
CSGuildRedPacketGetAwardRsp::mutable_awards() {
  return &awards_;
}

// -------------------------------------------------------------------

// CSGuildRedPacketRecordReq

// required .CSGuildRedPacketKey key = 1;
inline bool CSGuildRedPacketRecordReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketRecordReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketRecordReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketRecordReq::clear_key() {
  if (key_ != NULL) key_->::CSGuildRedPacketKey::Clear();
  clear_has_key();
}
inline const ::CSGuildRedPacketKey& CSGuildRedPacketRecordReq::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketRecordReq::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::CSGuildRedPacketKey;
  return key_;
}
inline ::CSGuildRedPacketKey* CSGuildRedPacketRecordReq::release_key() {
  clear_has_key();
  ::CSGuildRedPacketKey* temp = key_;
  key_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSRedPacketRecordInfo

// required bytes log = 1;
inline bool CSRedPacketRecordInfo::has_log() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRedPacketRecordInfo::set_has_log() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRedPacketRecordInfo::clear_has_log() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRedPacketRecordInfo::clear_log() {
  if (log_ != &::google::protobuf::internal::kEmptyString) {
    log_->clear();
  }
  clear_has_log();
}
inline const ::std::string& CSRedPacketRecordInfo::log() const {
  return *log_;
}
inline void CSRedPacketRecordInfo::set_log(const ::std::string& value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void CSRedPacketRecordInfo::set_log(const char* value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void CSRedPacketRecordInfo::set_log(const void* value, size_t size) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSRedPacketRecordInfo::mutable_log() {
  set_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    log_ = new ::std::string;
  }
  return log_;
}
inline ::std::string* CSRedPacketRecordInfo::release_log() {
  clear_has_log();
  if (log_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = log_;
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 modify_tm = 2;
inline bool CSRedPacketRecordInfo::has_modify_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRedPacketRecordInfo::set_has_modify_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRedPacketRecordInfo::clear_has_modify_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRedPacketRecordInfo::clear_modify_tm() {
  modify_tm_ = 0u;
  clear_has_modify_tm();
}
inline ::google::protobuf::uint32 CSRedPacketRecordInfo::modify_tm() const {
  return modify_tm_;
}
inline void CSRedPacketRecordInfo::set_modify_tm(::google::protobuf::uint32 value) {
  set_has_modify_tm();
  modify_tm_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketRecordRsp

// repeated .CSRedPacketRecordInfo logs = 1;
inline int CSGuildRedPacketRecordRsp::logs_size() const {
  return logs_.size();
}
inline void CSGuildRedPacketRecordRsp::clear_logs() {
  logs_.Clear();
}
inline const ::CSRedPacketRecordInfo& CSGuildRedPacketRecordRsp::logs(int index) const {
  return logs_.Get(index);
}
inline ::CSRedPacketRecordInfo* CSGuildRedPacketRecordRsp::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::CSRedPacketRecordInfo* CSGuildRedPacketRecordRsp::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSRedPacketRecordInfo >&
CSGuildRedPacketRecordRsp::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSRedPacketRecordInfo >*
CSGuildRedPacketRecordRsp::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// CSGuildRedPacketFirstCheckReq

// required uint32 packet_id = 1;
inline bool CSGuildRedPacketFirstCheckReq::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketFirstCheckReq::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketFirstCheckReq::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketFirstCheckReq::clear_packet_id() {
  packet_id_ = 0u;
  clear_has_packet_id();
}
inline ::google::protobuf::uint32 CSGuildRedPacketFirstCheckReq::packet_id() const {
  return packet_id_;
}
inline void CSGuildRedPacketFirstCheckReq::set_packet_id(::google::protobuf::uint32 value) {
  set_has_packet_id();
  packet_id_ = value;
}

// required uint32 packet_type = 2;
inline bool CSGuildRedPacketFirstCheckReq::has_packet_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketFirstCheckReq::set_has_packet_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketFirstCheckReq::clear_has_packet_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketFirstCheckReq::clear_packet_type() {
  packet_type_ = 0u;
  clear_has_packet_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketFirstCheckReq::packet_type() const {
  return packet_type_;
}
inline void CSGuildRedPacketFirstCheckReq::set_packet_type(::google::protobuf::uint32 value) {
  set_has_packet_type();
  packet_type_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketFirstCheckRsp

// required uint32 acc_packet_diamond = 1;
inline bool CSGuildRedPacketFirstCheckRsp::has_acc_packet_diamond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketFirstCheckRsp::set_has_acc_packet_diamond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketFirstCheckRsp::clear_has_acc_packet_diamond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketFirstCheckRsp::clear_acc_packet_diamond() {
  acc_packet_diamond_ = 0u;
  clear_has_acc_packet_diamond();
}
inline ::google::protobuf::uint32 CSGuildRedPacketFirstCheckRsp::acc_packet_diamond() const {
  return acc_packet_diamond_;
}
inline void CSGuildRedPacketFirstCheckRsp::set_acc_packet_diamond(::google::protobuf::uint32 value) {
  set_has_acc_packet_diamond();
  acc_packet_diamond_ = value;
}

// optional bool is_succ = 2 [default = false];
inline bool CSGuildRedPacketFirstCheckRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketFirstCheckRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketFirstCheckRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketFirstCheckRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSGuildRedPacketFirstCheckRsp::is_succ() const {
  return is_succ_;
}
inline void CSGuildRedPacketFirstCheckRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketConfigInfo

// required uint32 envelopeid = 1;
inline bool CSGuildRedPacketConfigInfo::has_envelopeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_envelopeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_envelopeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRedPacketConfigInfo::clear_envelopeid() {
  envelopeid_ = 0u;
  clear_has_envelopeid();
}
inline ::google::protobuf::uint32 CSGuildRedPacketConfigInfo::envelopeid() const {
  return envelopeid_;
}
inline void CSGuildRedPacketConfigInfo::set_envelopeid(::google::protobuf::uint32 value) {
  set_has_envelopeid();
  envelopeid_ = value;
}

// required uint32 envelope_type = 2;
inline bool CSGuildRedPacketConfigInfo::has_envelope_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_envelope_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_envelope_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRedPacketConfigInfo::clear_envelope_type() {
  envelope_type_ = 0u;
  clear_has_envelope_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketConfigInfo::envelope_type() const {
  return envelope_type_;
}
inline void CSGuildRedPacketConfigInfo::set_envelope_type(::google::protobuf::uint32 value) {
  set_has_envelope_type();
  envelope_type_ = value;
}

// required uint32 time_type = 3;
inline bool CSGuildRedPacketConfigInfo::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRedPacketConfigInfo::clear_time_type() {
  time_type_ = 0u;
  clear_has_time_type();
}
inline ::google::protobuf::uint32 CSGuildRedPacketConfigInfo::time_type() const {
  return time_type_;
}
inline void CSGuildRedPacketConfigInfo::set_time_type(::google::protobuf::uint32 value) {
  set_has_time_type();
  time_type_ = value;
}

// required string activity_date = 4;
inline bool CSGuildRedPacketConfigInfo::has_activity_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_activity_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_activity_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRedPacketConfigInfo::clear_activity_date() {
  if (activity_date_ != &::google::protobuf::internal::kEmptyString) {
    activity_date_->clear();
  }
  clear_has_activity_date();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::activity_date() const {
  return *activity_date_;
}
inline void CSGuildRedPacketConfigInfo::set_activity_date(const ::std::string& value) {
  set_has_activity_date();
  if (activity_date_ == &::google::protobuf::internal::kEmptyString) {
    activity_date_ = new ::std::string;
  }
  activity_date_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_date(const char* value) {
  set_has_activity_date();
  if (activity_date_ == &::google::protobuf::internal::kEmptyString) {
    activity_date_ = new ::std::string;
  }
  activity_date_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_date(const char* value, size_t size) {
  set_has_activity_date();
  if (activity_date_ == &::google::protobuf::internal::kEmptyString) {
    activity_date_ = new ::std::string;
  }
  activity_date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_activity_date() {
  set_has_activity_date();
  if (activity_date_ == &::google::protobuf::internal::kEmptyString) {
    activity_date_ = new ::std::string;
  }
  return activity_date_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_activity_date() {
  clear_has_activity_date();
  if (activity_date_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_date_;
    activity_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string activity_time = 5;
inline bool CSGuildRedPacketConfigInfo::has_activity_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_activity_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_activity_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRedPacketConfigInfo::clear_activity_time() {
  if (activity_time_ != &::google::protobuf::internal::kEmptyString) {
    activity_time_->clear();
  }
  clear_has_activity_time();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::activity_time() const {
  return *activity_time_;
}
inline void CSGuildRedPacketConfigInfo::set_activity_time(const ::std::string& value) {
  set_has_activity_time();
  if (activity_time_ == &::google::protobuf::internal::kEmptyString) {
    activity_time_ = new ::std::string;
  }
  activity_time_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_time(const char* value) {
  set_has_activity_time();
  if (activity_time_ == &::google::protobuf::internal::kEmptyString) {
    activity_time_ = new ::std::string;
  }
  activity_time_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_time(const char* value, size_t size) {
  set_has_activity_time();
  if (activity_time_ == &::google::protobuf::internal::kEmptyString) {
    activity_time_ = new ::std::string;
  }
  activity_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_activity_time() {
  set_has_activity_time();
  if (activity_time_ == &::google::protobuf::internal::kEmptyString) {
    activity_time_ = new ::std::string;
  }
  return activity_time_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_activity_time() {
  clear_has_activity_time();
  if (activity_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_time_;
    activity_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string activity_qualification = 6;
inline bool CSGuildRedPacketConfigInfo::has_activity_qualification() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_activity_qualification() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_activity_qualification() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildRedPacketConfigInfo::clear_activity_qualification() {
  if (activity_qualification_ != &::google::protobuf::internal::kEmptyString) {
    activity_qualification_->clear();
  }
  clear_has_activity_qualification();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::activity_qualification() const {
  return *activity_qualification_;
}
inline void CSGuildRedPacketConfigInfo::set_activity_qualification(const ::std::string& value) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_qualification(const char* value) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_activity_qualification(const char* value, size_t size) {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  activity_qualification_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_activity_qualification() {
  set_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    activity_qualification_ = new ::std::string;
  }
  return activity_qualification_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_activity_qualification() {
  clear_has_activity_qualification();
  if (activity_qualification_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activity_qualification_;
    activity_qualification_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 random_multiples = 7;
inline bool CSGuildRedPacketConfigInfo::has_random_multiples() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_random_multiples() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_random_multiples() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildRedPacketConfigInfo::clear_random_multiples() {
  random_multiples_ = 0u;
  clear_has_random_multiples();
}
inline ::google::protobuf::uint32 CSGuildRedPacketConfigInfo::random_multiples() const {
  return random_multiples_;
}
inline void CSGuildRedPacketConfigInfo::set_random_multiples(::google::protobuf::uint32 value) {
  set_has_random_multiples();
  random_multiples_ = value;
}

// required string award1 = 8;
inline bool CSGuildRedPacketConfigInfo::has_award1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_award1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_award1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSGuildRedPacketConfigInfo::clear_award1() {
  if (award1_ != &::google::protobuf::internal::kEmptyString) {
    award1_->clear();
  }
  clear_has_award1();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::award1() const {
  return *award1_;
}
inline void CSGuildRedPacketConfigInfo::set_award1(const ::std::string& value) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award1(const char* value) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award1(const char* value, size_t size) {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  award1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_award1() {
  set_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    award1_ = new ::std::string;
  }
  return award1_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_award1() {
  clear_has_award1();
  if (award1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award1_;
    award1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string award2 = 9;
inline bool CSGuildRedPacketConfigInfo::has_award2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_award2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_award2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSGuildRedPacketConfigInfo::clear_award2() {
  if (award2_ != &::google::protobuf::internal::kEmptyString) {
    award2_->clear();
  }
  clear_has_award2();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::award2() const {
  return *award2_;
}
inline void CSGuildRedPacketConfigInfo::set_award2(const ::std::string& value) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award2(const char* value) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award2(const char* value, size_t size) {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  award2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_award2() {
  set_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    award2_ = new ::std::string;
  }
  return award2_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_award2() {
  clear_has_award2();
  if (award2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award2_;
    award2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string award3 = 10;
inline bool CSGuildRedPacketConfigInfo::has_award3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_award3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_award3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSGuildRedPacketConfigInfo::clear_award3() {
  if (award3_ != &::google::protobuf::internal::kEmptyString) {
    award3_->clear();
  }
  clear_has_award3();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::award3() const {
  return *award3_;
}
inline void CSGuildRedPacketConfigInfo::set_award3(const ::std::string& value) {
  set_has_award3();
  if (award3_ == &::google::protobuf::internal::kEmptyString) {
    award3_ = new ::std::string;
  }
  award3_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award3(const char* value) {
  set_has_award3();
  if (award3_ == &::google::protobuf::internal::kEmptyString) {
    award3_ = new ::std::string;
  }
  award3_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_award3(const char* value, size_t size) {
  set_has_award3();
  if (award3_ == &::google::protobuf::internal::kEmptyString) {
    award3_ = new ::std::string;
  }
  award3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_award3() {
  set_has_award3();
  if (award3_ == &::google::protobuf::internal::kEmptyString) {
    award3_ = new ::std::string;
  }
  return award3_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_award3() {
  clear_has_award3();
  if (award3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award3_;
    award3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string extent = 11;
inline bool CSGuildRedPacketConfigInfo::has_extent() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_extent() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_extent() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSGuildRedPacketConfigInfo::clear_extent() {
  if (extent_ != &::google::protobuf::internal::kEmptyString) {
    extent_->clear();
  }
  clear_has_extent();
}
inline const ::std::string& CSGuildRedPacketConfigInfo::extent() const {
  return *extent_;
}
inline void CSGuildRedPacketConfigInfo::set_extent(const ::std::string& value) {
  set_has_extent();
  if (extent_ == &::google::protobuf::internal::kEmptyString) {
    extent_ = new ::std::string;
  }
  extent_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_extent(const char* value) {
  set_has_extent();
  if (extent_ == &::google::protobuf::internal::kEmptyString) {
    extent_ = new ::std::string;
  }
  extent_->assign(value);
}
inline void CSGuildRedPacketConfigInfo::set_extent(const char* value, size_t size) {
  set_has_extent();
  if (extent_ == &::google::protobuf::internal::kEmptyString) {
    extent_ = new ::std::string;
  }
  extent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRedPacketConfigInfo::mutable_extent() {
  set_has_extent();
  if (extent_ == &::google::protobuf::internal::kEmptyString) {
    extent_ = new ::std::string;
  }
  return extent_;
}
inline ::std::string* CSGuildRedPacketConfigInfo::release_extent() {
  clear_has_extent();
  if (extent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = extent_;
    extent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 remain_times = 12 [default = 0];
inline bool CSGuildRedPacketConfigInfo::has_remain_times() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSGuildRedPacketConfigInfo::set_has_remain_times() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSGuildRedPacketConfigInfo::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSGuildRedPacketConfigInfo::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSGuildRedPacketConfigInfo::remain_times() const {
  return remain_times_;
}
inline void CSGuildRedPacketConfigInfo::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSGuildRedPacketConfigReq

// -------------------------------------------------------------------

// CSGuildRedPacketConfigRsp

// repeated .CSGuildRedPacketConfigInfo configs = 1;
inline int CSGuildRedPacketConfigRsp::configs_size() const {
  return configs_.size();
}
inline void CSGuildRedPacketConfigRsp::clear_configs() {
  configs_.Clear();
}
inline const ::CSGuildRedPacketConfigInfo& CSGuildRedPacketConfigRsp::configs(int index) const {
  return configs_.Get(index);
}
inline ::CSGuildRedPacketConfigInfo* CSGuildRedPacketConfigRsp::mutable_configs(int index) {
  return configs_.Mutable(index);
}
inline ::CSGuildRedPacketConfigInfo* CSGuildRedPacketConfigRsp::add_configs() {
  return configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketConfigInfo >&
CSGuildRedPacketConfigRsp::configs() const {
  return configs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGuildRedPacketConfigInfo >*
CSGuildRedPacketConfigRsp::mutable_configs() {
  return &configs_;
}

// -------------------------------------------------------------------

// UnionInfo

// optional uint32 level = 1;
inline bool UnionInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnionInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnionInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnionInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UnionInfo::level() const {
  return level_;
}
inline void UnionInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 exp = 2;
inline bool UnionInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnionInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnionInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnionInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 UnionInfo::exp() const {
  return exp_;
}
inline void UnionInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 people_num = 3;
inline bool UnionInfo::has_people_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnionInfo::set_has_people_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnionInfo::clear_has_people_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnionInfo::clear_people_num() {
  people_num_ = 0u;
  clear_has_people_num();
}
inline ::google::protobuf::uint32 UnionInfo::people_num() const {
  return people_num_;
}
inline void UnionInfo::set_people_num(::google::protobuf::uint32 value) {
  set_has_people_num();
  people_num_ = value;
}

// optional uint32 chairman_num = 4;
inline bool UnionInfo::has_chairman_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnionInfo::set_has_chairman_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnionInfo::clear_has_chairman_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnionInfo::clear_chairman_num() {
  chairman_num_ = 0u;
  clear_has_chairman_num();
}
inline ::google::protobuf::uint32 UnionInfo::chairman_num() const {
  return chairman_num_;
}
inline void UnionInfo::set_chairman_num(::google::protobuf::uint32 value) {
  set_has_chairman_num();
  chairman_num_ = value;
}

// optional uint32 elite_num = 5;
inline bool UnionInfo::has_elite_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnionInfo::set_has_elite_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnionInfo::clear_has_elite_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnionInfo::clear_elite_num() {
  elite_num_ = 0u;
  clear_has_elite_num();
}
inline ::google::protobuf::uint32 UnionInfo::elite_num() const {
  return elite_num_;
}
inline void UnionInfo::set_elite_num(::google::protobuf::uint32 value) {
  set_has_elite_num();
  elite_num_ = value;
}

// optional uint32 donate = 6;
inline bool UnionInfo::has_donate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnionInfo::set_has_donate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnionInfo::clear_has_donate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnionInfo::clear_donate() {
  donate_ = 0u;
  clear_has_donate();
}
inline ::google::protobuf::uint32 UnionInfo::donate() const {
  return donate_;
}
inline void UnionInfo::set_donate(::google::protobuf::uint32 value) {
  set_has_donate();
  donate_ = value;
}

// optional uint32 benedition = 9;
inline bool UnionInfo::has_benedition() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UnionInfo::set_has_benedition() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UnionInfo::clear_has_benedition() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UnionInfo::clear_benedition() {
  benedition_ = 0u;
  clear_has_benedition();
}
inline ::google::protobuf::uint32 UnionInfo::benedition() const {
  return benedition_;
}
inline void UnionInfo::set_benedition(::google::protobuf::uint32 value) {
  set_has_benedition();
  benedition_ = value;
}

// optional uint32 shop = 10;
inline bool UnionInfo::has_shop() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UnionInfo::set_has_shop() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UnionInfo::clear_has_shop() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UnionInfo::clear_shop() {
  shop_ = 0u;
  clear_has_shop();
}
inline ::google::protobuf::uint32 UnionInfo::shop() const {
  return shop_;
}
inline void UnionInfo::set_shop(::google::protobuf::uint32 value) {
  set_has_shop();
  shop_ = value;
}

// optional uint32 transcript = 11;
inline bool UnionInfo::has_transcript() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UnionInfo::set_has_transcript() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UnionInfo::clear_has_transcript() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UnionInfo::clear_transcript() {
  transcript_ = 0u;
  clear_has_transcript();
}
inline ::google::protobuf::uint32 UnionInfo::transcript() const {
  return transcript_;
}
inline void UnionInfo::set_transcript(::google::protobuf::uint32 value) {
  set_has_transcript();
  transcript_ = value;
}

// optional uint32 target = 12;
inline bool UnionInfo::has_target() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UnionInfo::set_has_target() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UnionInfo::clear_has_target() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UnionInfo::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 UnionInfo::target() const {
  return target_;
}
inline void UnionInfo::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
}

// optional uint32 boss = 13;
inline bool UnionInfo::has_boss() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UnionInfo::set_has_boss() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UnionInfo::clear_has_boss() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UnionInfo::clear_boss() {
  boss_ = 0u;
  clear_has_boss();
}
inline ::google::protobuf::uint32 UnionInfo::boss() const {
  return boss_;
}
inline void UnionInfo::set_boss(::google::protobuf::uint32 value) {
  set_has_boss();
  boss_ = value;
}

// optional uint32 melee = 14;
inline bool UnionInfo::has_melee() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UnionInfo::set_has_melee() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UnionInfo::clear_has_melee() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UnionInfo::clear_melee() {
  melee_ = 0u;
  clear_has_melee();
}
inline ::google::protobuf::uint32 UnionInfo::melee() const {
  return melee_;
}
inline void UnionInfo::set_melee(::google::protobuf::uint32 value) {
  set_has_melee();
  melee_ = value;
}

// optional uint32 scramble = 15;
inline bool UnionInfo::has_scramble() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UnionInfo::set_has_scramble() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UnionInfo::clear_has_scramble() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UnionInfo::clear_scramble() {
  scramble_ = 0u;
  clear_has_scramble();
}
inline ::google::protobuf::uint32 UnionInfo::scramble() const {
  return scramble_;
}
inline void UnionInfo::set_scramble(::google::protobuf::uint32 value) {
  set_has_scramble();
  scramble_ = value;
}

// optional uint32 redenvelope = 16;
inline bool UnionInfo::has_redenvelope() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UnionInfo::set_has_redenvelope() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UnionInfo::clear_has_redenvelope() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UnionInfo::clear_redenvelope() {
  redenvelope_ = 0u;
  clear_has_redenvelope();
}
inline ::google::protobuf::uint32 UnionInfo::redenvelope() const {
  return redenvelope_;
}
inline void UnionInfo::set_redenvelope(::google::protobuf::uint32 value) {
  set_has_redenvelope();
  redenvelope_ = value;
}

// -------------------------------------------------------------------

// CSUnionInfoReq

// -------------------------------------------------------------------

// CSUnionInfoRsp

// repeated .UnionInfo infos = 1;
inline int CSUnionInfoRsp::infos_size() const {
  return infos_.size();
}
inline void CSUnionInfoRsp::clear_infos() {
  infos_.Clear();
}
inline const ::UnionInfo& CSUnionInfoRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::UnionInfo* CSUnionInfoRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::UnionInfo* CSUnionInfoRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UnionInfo >&
CSUnionInfoRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::UnionInfo >*
CSUnionInfoRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CSChangeNameReq

// required bytes nick_name = 1;
inline bool CSChangeNameReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChangeNameReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChangeNameReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChangeNameReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& CSChangeNameReq::nick_name() const {
  return *nick_name_;
}
inline void CSChangeNameReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void CSChangeNameReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void CSChangeNameReq::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSChangeNameReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* CSChangeNameReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSChangeNameRsp

// required bool res = 1;
inline bool CSChangeNameRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChangeNameRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChangeNameRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChangeNameRsp::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool CSChangeNameRsp::res() const {
  return res_;
}
inline void CSChangeNameRsp::set_res(bool value) {
  set_has_res();
  res_ = value;
}

// required bytes nick_name = 2;
inline bool CSChangeNameRsp::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChangeNameRsp::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChangeNameRsp::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChangeNameRsp::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& CSChangeNameRsp::nick_name() const {
  return *nick_name_;
}
inline void CSChangeNameRsp::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void CSChangeNameRsp::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void CSChangeNameRsp::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSChangeNameRsp::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* CSChangeNameRsp::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSNotifyItemExploreRewardRsp_Item

// required uint32 item_id = 1;
inline bool CSNotifyItemExploreRewardRsp_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyItemExploreRewardRsp_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyItemExploreRewardRsp_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyItemExploreRewardRsp_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSNotifyItemExploreRewardRsp_Item::item_id() const {
  return item_id_;
}
inline void CSNotifyItemExploreRewardRsp_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSNotifyItemExploreRewardRsp_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyItemExploreRewardRsp_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyItemExploreRewardRsp_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyItemExploreRewardRsp_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSNotifyItemExploreRewardRsp_Item::item_num() const {
  return item_num_;
}
inline void CSNotifyItemExploreRewardRsp_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSNotifyItemExploreRewardRsp

// repeated .CSNotifyItemExploreRewardRsp.Item items = 1;
inline int CSNotifyItemExploreRewardRsp::items_size() const {
  return items_.size();
}
inline void CSNotifyItemExploreRewardRsp::clear_items() {
  items_.Clear();
}
inline const ::CSNotifyItemExploreRewardRsp_Item& CSNotifyItemExploreRewardRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSNotifyItemExploreRewardRsp_Item* CSNotifyItemExploreRewardRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSNotifyItemExploreRewardRsp_Item* CSNotifyItemExploreRewardRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyItemExploreRewardRsp_Item >&
CSNotifyItemExploreRewardRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSNotifyItemExploreRewardRsp_Item >*
CSNotifyItemExploreRewardRsp::mutable_items() {
  return &items_;
}

// optional bool isfresh = 2 [default = true];
inline bool CSNotifyItemExploreRewardRsp::has_isfresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyItemExploreRewardRsp::set_has_isfresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyItemExploreRewardRsp::clear_has_isfresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyItemExploreRewardRsp::clear_isfresh() {
  isfresh_ = true;
  clear_has_isfresh();
}
inline bool CSNotifyItemExploreRewardRsp::isfresh() const {
  return isfresh_;
}
inline void CSNotifyItemExploreRewardRsp::set_isfresh(bool value) {
  set_has_isfresh();
  isfresh_ = value;
}

// -------------------------------------------------------------------

// CSExploreRestRsp

// -------------------------------------------------------------------

// carmsg07

// -------------------------------------------------------------------

// carmsg08

// -------------------------------------------------------------------

// carmsg09

// -------------------------------------------------------------------

// carmsg10

// -------------------------------------------------------------------

// CSRankRewardListReq

// required uint32 rank_name = 1;
inline bool CSRankRewardListReq::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankRewardListReq::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankRewardListReq::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankRewardListReq::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSRankRewardListReq::rank_name() const {
  return rank_name_;
}
inline void CSRankRewardListReq::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSRankRewardListReq::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankRewardListReq::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankRewardListReq::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankRewardListReq::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSRankRewardListReq::rank_type() const {
  return rank_type_;
}
inline void CSRankRewardListReq::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// required uint32 rank_start = 3;
inline bool CSRankRewardListReq::has_rank_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRankRewardListReq::set_has_rank_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRankRewardListReq::clear_has_rank_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRankRewardListReq::clear_rank_start() {
  rank_start_ = 0u;
  clear_has_rank_start();
}
inline ::google::protobuf::uint32 CSRankRewardListReq::rank_start() const {
  return rank_start_;
}
inline void CSRankRewardListReq::set_rank_start(::google::protobuf::uint32 value) {
  set_has_rank_start();
  rank_start_ = value;
}

// required uint32 rank_size = 4;
inline bool CSRankRewardListReq::has_rank_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSRankRewardListReq::set_has_rank_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSRankRewardListReq::clear_has_rank_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSRankRewardListReq::clear_rank_size() {
  rank_size_ = 0u;
  clear_has_rank_size();
}
inline ::google::protobuf::uint32 CSRankRewardListReq::rank_size() const {
  return rank_size_;
}
inline void CSRankRewardListReq::set_rank_size(::google::protobuf::uint32 value) {
  set_has_rank_size();
  rank_size_ = value;
}

// -------------------------------------------------------------------

// CSRankRewardListRsp_Item

// required uint32 item_id = 1;
inline bool CSRankRewardListRsp_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankRewardListRsp_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankRewardListRsp_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankRewardListRsp_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp_Item::item_id() const {
  return item_id_;
}
inline void CSRankRewardListRsp_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSRankRewardListRsp_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankRewardListRsp_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankRewardListRsp_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankRewardListRsp_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp_Item::item_num() const {
  return item_num_;
}
inline void CSRankRewardListRsp_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSRankRewardListRsp_RankReward

// required uint32 rank_start = 1;
inline bool CSRankRewardListRsp_RankReward::has_rank_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankRewardListRsp_RankReward::set_has_rank_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankRewardListRsp_RankReward::clear_has_rank_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankRewardListRsp_RankReward::clear_rank_start() {
  rank_start_ = 0u;
  clear_has_rank_start();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp_RankReward::rank_start() const {
  return rank_start_;
}
inline void CSRankRewardListRsp_RankReward::set_rank_start(::google::protobuf::uint32 value) {
  set_has_rank_start();
  rank_start_ = value;
}

// required uint32 rank_end = 2;
inline bool CSRankRewardListRsp_RankReward::has_rank_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankRewardListRsp_RankReward::set_has_rank_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankRewardListRsp_RankReward::clear_has_rank_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankRewardListRsp_RankReward::clear_rank_end() {
  rank_end_ = 0u;
  clear_has_rank_end();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp_RankReward::rank_end() const {
  return rank_end_;
}
inline void CSRankRewardListRsp_RankReward::set_rank_end(::google::protobuf::uint32 value) {
  set_has_rank_end();
  rank_end_ = value;
}

// repeated .CSRankRewardListRsp.Item items = 3;
inline int CSRankRewardListRsp_RankReward::items_size() const {
  return items_.size();
}
inline void CSRankRewardListRsp_RankReward::clear_items() {
  items_.Clear();
}
inline const ::CSRankRewardListRsp_Item& CSRankRewardListRsp_RankReward::items(int index) const {
  return items_.Get(index);
}
inline ::CSRankRewardListRsp_Item* CSRankRewardListRsp_RankReward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSRankRewardListRsp_Item* CSRankRewardListRsp_RankReward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_Item >&
CSRankRewardListRsp_RankReward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_Item >*
CSRankRewardListRsp_RankReward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSRankRewardListRsp

// required uint32 rank_name = 1;
inline bool CSRankRewardListRsp::has_rank_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRankRewardListRsp::set_has_rank_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRankRewardListRsp::clear_has_rank_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRankRewardListRsp::clear_rank_name() {
  rank_name_ = 0u;
  clear_has_rank_name();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp::rank_name() const {
  return rank_name_;
}
inline void CSRankRewardListRsp::set_rank_name(::google::protobuf::uint32 value) {
  set_has_rank_name();
  rank_name_ = value;
}

// required uint32 rank_type = 2;
inline bool CSRankRewardListRsp::has_rank_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRankRewardListRsp::set_has_rank_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRankRewardListRsp::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRankRewardListRsp::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp::rank_type() const {
  return rank_type_;
}
inline void CSRankRewardListRsp::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// required uint32 rank_start = 3;
inline bool CSRankRewardListRsp::has_rank_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRankRewardListRsp::set_has_rank_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRankRewardListRsp::clear_has_rank_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRankRewardListRsp::clear_rank_start() {
  rank_start_ = 0u;
  clear_has_rank_start();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp::rank_start() const {
  return rank_start_;
}
inline void CSRankRewardListRsp::set_rank_start(::google::protobuf::uint32 value) {
  set_has_rank_start();
  rank_start_ = value;
}

// required uint32 rank_size = 4;
inline bool CSRankRewardListRsp::has_rank_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSRankRewardListRsp::set_has_rank_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSRankRewardListRsp::clear_has_rank_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSRankRewardListRsp::clear_rank_size() {
  rank_size_ = 0u;
  clear_has_rank_size();
}
inline ::google::protobuf::uint32 CSRankRewardListRsp::rank_size() const {
  return rank_size_;
}
inline void CSRankRewardListRsp::set_rank_size(::google::protobuf::uint32 value) {
  set_has_rank_size();
  rank_size_ = value;
}

// repeated .CSRankRewardListRsp.RankReward items = 5;
inline int CSRankRewardListRsp::items_size() const {
  return items_.size();
}
inline void CSRankRewardListRsp::clear_items() {
  items_.Clear();
}
inline const ::CSRankRewardListRsp_RankReward& CSRankRewardListRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSRankRewardListRsp_RankReward* CSRankRewardListRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSRankRewardListRsp_RankReward* CSRankRewardListRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_RankReward >&
CSRankRewardListRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSRankRewardListRsp_RankReward >*
CSRankRewardListRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSRecruitCommitReq

// required uint64 code = 1;
inline bool CSRecruitCommitReq::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRecruitCommitReq::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRecruitCommitReq::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRecruitCommitReq::clear_code() {
  code_ = GOOGLE_ULONGLONG(0);
  clear_has_code();
}
inline ::google::protobuf::uint64 CSRecruitCommitReq::code() const {
  return code_;
}
inline void CSRecruitCommitReq::set_code(::google::protobuf::uint64 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// CSRecruitCommitRsp

// required uint64 code = 1;
inline bool CSRecruitCommitRsp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRecruitCommitRsp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRecruitCommitRsp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRecruitCommitRsp::clear_code() {
  code_ = GOOGLE_ULONGLONG(0);
  clear_has_code();
}
inline ::google::protobuf::uint64 CSRecruitCommitRsp::code() const {
  return code_;
}
inline void CSRecruitCommitRsp::set_code(::google::protobuf::uint64 value) {
  set_has_code();
  code_ = value;
}

// required .RecruitCommitResult result = 2;
inline bool CSRecruitCommitRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRecruitCommitRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRecruitCommitRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRecruitCommitRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline RecruitCommitResult CSRecruitCommitRsp::result() const {
  return static_cast< RecruitCommitResult >(result_);
}
inline void CSRecruitCommitRsp::set_result(RecruitCommitResult value) {
  GOOGLE_DCHECK(RecruitCommitResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CSRecruitAwardReq

// required uint32 id = 1;
inline bool CSRecruitAwardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRecruitAwardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRecruitAwardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRecruitAwardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSRecruitAwardReq::id() const {
  return id_;
}
inline void CSRecruitAwardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSRecruitAwardRsp

// required uint32 id = 1;
inline bool CSRecruitAwardRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRecruitAwardRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRecruitAwardRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRecruitAwardRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSRecruitAwardRsp::id() const {
  return id_;
}
inline void CSRecruitAwardRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required .RecruitAwardResult result = 2;
inline bool CSRecruitAwardRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRecruitAwardRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRecruitAwardRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRecruitAwardRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline RecruitAwardResult CSRecruitAwardRsp::result() const {
  return static_cast< RecruitAwardResult >(result_);
}
inline void CSRecruitAwardRsp::set_result(RecruitAwardResult value) {
  GOOGLE_DCHECK(RecruitAwardResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// RecruitInfo

// required uint32 id = 1;
inline bool RecruitInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecruitInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecruitInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecruitInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RecruitInfo::id() const {
  return id_;
}
inline void RecruitInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 count = 3;
inline bool RecruitInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecruitInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecruitInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecruitInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RecruitInfo::count() const {
  return count_;
}
inline void RecruitInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required uint32 status = 4;
inline bool RecruitInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecruitInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecruitInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecruitInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 RecruitInfo::status() const {
  return status_;
}
inline void RecruitInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CSRecruitListReq

// -------------------------------------------------------------------

// CSRecruitListRsp

// required uint64 my_code = 1;
inline bool CSRecruitListRsp::has_my_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRecruitListRsp::set_has_my_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRecruitListRsp::clear_has_my_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRecruitListRsp::clear_my_code() {
  my_code_ = GOOGLE_ULONGLONG(0);
  clear_has_my_code();
}
inline ::google::protobuf::uint64 CSRecruitListRsp::my_code() const {
  return my_code_;
}
inline void CSRecruitListRsp::set_my_code(::google::protobuf::uint64 value) {
  set_has_my_code();
  my_code_ = value;
}

// repeated .RecruitInfo info = 2;
inline int CSRecruitListRsp::info_size() const {
  return info_.size();
}
inline void CSRecruitListRsp::clear_info() {
  info_.Clear();
}
inline const ::RecruitInfo& CSRecruitListRsp::info(int index) const {
  return info_.Get(index);
}
inline ::RecruitInfo* CSRecruitListRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::RecruitInfo* CSRecruitListRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RecruitInfo >&
CSRecruitListRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::RecruitInfo >*
CSRecruitListRsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CSExchangeHighQualityReq

// required uint32 exid = 1;
inline bool CSExchangeHighQualityReq::has_exid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeHighQualityReq::set_has_exid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeHighQualityReq::clear_has_exid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeHighQualityReq::clear_exid() {
  exid_ = 0u;
  clear_has_exid();
}
inline ::google::protobuf::uint32 CSExchangeHighQualityReq::exid() const {
  return exid_;
}
inline void CSExchangeHighQualityReq::set_exid(::google::protobuf::uint32 value) {
  set_has_exid();
  exid_ = value;
}

// repeated uint32 params = 2;
inline int CSExchangeHighQualityReq::params_size() const {
  return params_.size();
}
inline void CSExchangeHighQualityReq::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeHighQualityReq::params(int index) const {
  return params_.Get(index);
}
inline void CSExchangeHighQualityReq::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
}
inline void CSExchangeHighQualityReq::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeHighQualityReq::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeHighQualityReq::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CSExchangeHighQualityRsp

// required bool is_succ = 1;
inline bool CSExchangeHighQualityRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeHighQualityRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeHighQualityRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeHighQualityRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSExchangeHighQualityRsp::is_succ() const {
  return is_succ_;
}
inline void CSExchangeHighQualityRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// required uint32 exid = 2;
inline bool CSExchangeHighQualityRsp::has_exid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeHighQualityRsp::set_has_exid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeHighQualityRsp::clear_has_exid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeHighQualityRsp::clear_exid() {
  exid_ = 0u;
  clear_has_exid();
}
inline ::google::protobuf::uint32 CSExchangeHighQualityRsp::exid() const {
  return exid_;
}
inline void CSExchangeHighQualityRsp::set_exid(::google::protobuf::uint32 value) {
  set_has_exid();
  exid_ = value;
}

// optional .CSReward rewards = 3;
inline bool CSExchangeHighQualityRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSExchangeHighQualityRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSExchangeHighQualityRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSExchangeHighQualityRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSExchangeHighQualityRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSExchangeHighQualityRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSExchangeHighQualityRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// carmsg30

// -------------------------------------------------------------------

// carmsg31

// -------------------------------------------------------------------

// CSExchangeVocationInfoReq

// repeated uint32 params = 1;
inline int CSExchangeVocationInfoReq::params_size() const {
  return params_.size();
}
inline void CSExchangeVocationInfoReq::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeVocationInfoReq::params(int index) const {
  return params_.Get(index);
}
inline void CSExchangeVocationInfoReq::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
}
inline void CSExchangeVocationInfoReq::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeVocationInfoReq::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeVocationInfoReq::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// VocationInfo_Item

// required uint32 item_id = 1;
inline bool VocationInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VocationInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VocationInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VocationInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 VocationInfo_Item::item_id() const {
  return item_id_;
}
inline void VocationInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool VocationInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VocationInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VocationInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VocationInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 VocationInfo_Item::item_num() const {
  return item_num_;
}
inline void VocationInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// VocationInfo

// required uint32 id = 1;
inline bool VocationInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VocationInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VocationInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VocationInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 VocationInfo::id() const {
  return id_;
}
inline void VocationInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 vocation = 2;
inline bool VocationInfo::has_vocation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VocationInfo::set_has_vocation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VocationInfo::clear_has_vocation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VocationInfo::clear_vocation() {
  vocation_ = 0u;
  clear_has_vocation();
}
inline ::google::protobuf::uint32 VocationInfo::vocation() const {
  return vocation_;
}
inline void VocationInfo::set_vocation(::google::protobuf::uint32 value) {
  set_has_vocation();
  vocation_ = value;
}

// required uint32 level = 3;
inline bool VocationInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VocationInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VocationInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VocationInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 VocationInfo::level() const {
  return level_;
}
inline void VocationInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated .VocationInfo.Item reward_items = 4;
inline int VocationInfo::reward_items_size() const {
  return reward_items_.size();
}
inline void VocationInfo::clear_reward_items() {
  reward_items_.Clear();
}
inline const ::VocationInfo_Item& VocationInfo::reward_items(int index) const {
  return reward_items_.Get(index);
}
inline ::VocationInfo_Item* VocationInfo::mutable_reward_items(int index) {
  return reward_items_.Mutable(index);
}
inline ::VocationInfo_Item* VocationInfo::add_reward_items() {
  return reward_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >&
VocationInfo::reward_items() const {
  return reward_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >*
VocationInfo::mutable_reward_items() {
  return &reward_items_;
}

// repeated .VocationInfo.Item cost_items = 5;
inline int VocationInfo::cost_items_size() const {
  return cost_items_.size();
}
inline void VocationInfo::clear_cost_items() {
  cost_items_.Clear();
}
inline const ::VocationInfo_Item& VocationInfo::cost_items(int index) const {
  return cost_items_.Get(index);
}
inline ::VocationInfo_Item* VocationInfo::mutable_cost_items(int index) {
  return cost_items_.Mutable(index);
}
inline ::VocationInfo_Item* VocationInfo::add_cost_items() {
  return cost_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >&
VocationInfo::cost_items() const {
  return cost_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::VocationInfo_Item >*
VocationInfo::mutable_cost_items() {
  return &cost_items_;
}

// required uint32 physical_attack = 6;
inline bool VocationInfo::has_physical_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VocationInfo::set_has_physical_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VocationInfo::clear_has_physical_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VocationInfo::clear_physical_attack() {
  physical_attack_ = 0u;
  clear_has_physical_attack();
}
inline ::google::protobuf::uint32 VocationInfo::physical_attack() const {
  return physical_attack_;
}
inline void VocationInfo::set_physical_attack(::google::protobuf::uint32 value) {
  set_has_physical_attack();
  physical_attack_ = value;
}

// required uint32 magic_attack = 7;
inline bool VocationInfo::has_magic_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VocationInfo::set_has_magic_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VocationInfo::clear_has_magic_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VocationInfo::clear_magic_attack() {
  magic_attack_ = 0u;
  clear_has_magic_attack();
}
inline ::google::protobuf::uint32 VocationInfo::magic_attack() const {
  return magic_attack_;
}
inline void VocationInfo::set_magic_attack(::google::protobuf::uint32 value) {
  set_has_magic_attack();
  magic_attack_ = value;
}

// required uint32 skill_attack = 8;
inline bool VocationInfo::has_skill_attack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VocationInfo::set_has_skill_attack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VocationInfo::clear_has_skill_attack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VocationInfo::clear_skill_attack() {
  skill_attack_ = 0u;
  clear_has_skill_attack();
}
inline ::google::protobuf::uint32 VocationInfo::skill_attack() const {
  return skill_attack_;
}
inline void VocationInfo::set_skill_attack(::google::protobuf::uint32 value) {
  set_has_skill_attack();
  skill_attack_ = value;
}

// required uint32 physical_defence = 9;
inline bool VocationInfo::has_physical_defence() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VocationInfo::set_has_physical_defence() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VocationInfo::clear_has_physical_defence() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VocationInfo::clear_physical_defence() {
  physical_defence_ = 0u;
  clear_has_physical_defence();
}
inline ::google::protobuf::uint32 VocationInfo::physical_defence() const {
  return physical_defence_;
}
inline void VocationInfo::set_physical_defence(::google::protobuf::uint32 value) {
  set_has_physical_defence();
  physical_defence_ = value;
}

// required uint32 magic_defence = 10;
inline bool VocationInfo::has_magic_defence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VocationInfo::set_has_magic_defence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VocationInfo::clear_has_magic_defence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VocationInfo::clear_magic_defence() {
  magic_defence_ = 0u;
  clear_has_magic_defence();
}
inline ::google::protobuf::uint32 VocationInfo::magic_defence() const {
  return magic_defence_;
}
inline void VocationInfo::set_magic_defence(::google::protobuf::uint32 value) {
  set_has_magic_defence();
  magic_defence_ = value;
}

// required uint32 skill_defence = 11;
inline bool VocationInfo::has_skill_defence() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VocationInfo::set_has_skill_defence() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VocationInfo::clear_has_skill_defence() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VocationInfo::clear_skill_defence() {
  skill_defence_ = 0u;
  clear_has_skill_defence();
}
inline ::google::protobuf::uint32 VocationInfo::skill_defence() const {
  return skill_defence_;
}
inline void VocationInfo::set_skill_defence(::google::protobuf::uint32 value) {
  set_has_skill_defence();
  skill_defence_ = value;
}

// required uint32 health_point = 12;
inline bool VocationInfo::has_health_point() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VocationInfo::set_has_health_point() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VocationInfo::clear_has_health_point() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VocationInfo::clear_health_point() {
  health_point_ = 0u;
  clear_has_health_point();
}
inline ::google::protobuf::uint32 VocationInfo::health_point() const {
  return health_point_;
}
inline void VocationInfo::set_health_point(::google::protobuf::uint32 value) {
  set_has_health_point();
  health_point_ = value;
}

// -------------------------------------------------------------------

// CSExchangeVocationInfoRsp

// repeated .VocationInfo infos = 1;
inline int CSExchangeVocationInfoRsp::infos_size() const {
  return infos_.size();
}
inline void CSExchangeVocationInfoRsp::clear_infos() {
  infos_.Clear();
}
inline const ::VocationInfo& CSExchangeVocationInfoRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::VocationInfo* CSExchangeVocationInfoRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::VocationInfo* CSExchangeVocationInfoRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VocationInfo >&
CSExchangeVocationInfoRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::VocationInfo >*
CSExchangeVocationInfoRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CSExchangeVocationReq

// required uint32 id = 1;
inline bool CSExchangeVocationReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeVocationReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeVocationReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeVocationReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeVocationReq::id() const {
  return id_;
}
inline void CSExchangeVocationReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSExchangeVocationRsp

// required uint32 id = 1;
inline bool CSExchangeVocationRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeVocationRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeVocationRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeVocationRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeVocationRsp::id() const {
  return id_;
}
inline void CSExchangeVocationRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 ret = 2;
inline bool CSExchangeVocationRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeVocationRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeVocationRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeVocationRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSExchangeVocationRsp::ret() const {
  return ret_;
}
inline void CSExchangeVocationRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSNotifyCliSysFlagRsp_SysIndex>() {
  return ::CSNotifyCliSysFlagRsp_SysIndex_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSAddPartnerRsp_AddPartnerType>() {
  return ::CSAddPartnerRsp_AddPartnerType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_PLAYET_ATTR_T>() {
  return PB_PLAYET_ATTR_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_ITEM_ATTR_T>() {
  return PB_ITEM_ATTR_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_TASK_STATUS_T>() {
  return PB_TASK_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_INSTANCE_TYPE_T>() {
  return PB_INSTANCE_TYPE_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_SPEC_ACTIVITY_ID_T>() {
  return PB_SPEC_ACTIVITY_ID_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ITEM_TARGET_T>() {
  return ITEM_TARGET_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< AI_STATUS_T>() {
  return AI_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< RefreshShopTye>() {
  return RefreshShopTye_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< NoteType>() {
  return NoteType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< NoteResult>() {
  return NoteResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_ACTIVITY_STATUS_T>() {
  return PB_ACTIVITY_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ACTIVITY_RANK_QUERY_T>() {
  return ACTIVITY_RANK_QUERY_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< GET_GIFT_RES_T>() {
  return GET_GIFT_RES_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TOPUP_AWARD_STATUS>() {
  return TOPUP_AWARD_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< GET_TOPUP_AWARD_RESULT>() {
  return GET_TOPUP_AWARD_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_PVP2_BTL_RET_T>() {
  return PB_PVP2_BTL_RET_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< RANK_NAME_T>() {
  return RANK_NAME_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< RANK_TYPE_T>() {
  return RANK_TYPE_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_MAIL_STATUS_T>() {
  return PB_MAIL_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< CARDTYPE>() {
  return CARDTYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< FAIRY_POS_START_T>() {
  return FAIRY_POS_START_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_TARGET_STATUS_T>() {
  return PB_TARGET_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< GUILD_STATUS>() {
  return GUILD_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< APPLY_TYPE>() {
  return APPLY_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< RecruitCommitResult>() {
  return RecruitCommitResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< RecruitAwardResult>() {
  return RecruitAwardResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cs_5fcore_2eproto__INCLUDED
