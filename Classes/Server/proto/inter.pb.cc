// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* InterAttributesInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterAttributesInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterAttributesInfo_KeyValueDead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterAttributesInfo_KeyValueDead_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterUserSkillInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterUserSkillInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterUserSkillInfo_UserSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterUserSkillInfo_UserSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterItemInfo_EquipHole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterItemInfo_EquipHole_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterItemInfo_UserItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterItemInfo_UserItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* inter_fairy_basic_info_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  inter_fairy_basic_info_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* inter_fairy_train_info_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  inter_fairy_train_info_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterFairyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterFairyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterSync_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterOut_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterOut_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterDbSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterDbSync_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_inter_2eproto() {
  protobuf_AddDesc_inter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "inter.proto");
  GOOGLE_CHECK(file != NULL);
  InterAttributesInfo_descriptor_ = file->message_type(0);
  static const int InterAttributesInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo, values_),
  };
  InterAttributesInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterAttributesInfo_descriptor_,
      InterAttributesInfo::default_instance_,
      InterAttributesInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterAttributesInfo));
  InterAttributesInfo_KeyValueDead_descriptor_ = InterAttributesInfo_descriptor_->nested_type(0);
  static const int InterAttributesInfo_KeyValueDead_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo_KeyValueDead, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo_KeyValueDead, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo_KeyValueDead, dead_tm_),
  };
  InterAttributesInfo_KeyValueDead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterAttributesInfo_KeyValueDead_descriptor_,
      InterAttributesInfo_KeyValueDead::default_instance_,
      InterAttributesInfo_KeyValueDead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo_KeyValueDead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterAttributesInfo_KeyValueDead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterAttributesInfo_KeyValueDead));
  InterUserSkillInfo_descriptor_ = file->message_type(1);
  static const int InterUserSkillInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo, skills_),
  };
  InterUserSkillInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterUserSkillInfo_descriptor_,
      InterUserSkillInfo::default_instance_,
      InterUserSkillInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterUserSkillInfo));
  InterUserSkillInfo_UserSkill_descriptor_ = InterUserSkillInfo_descriptor_->nested_type(0);
  static const int InterUserSkillInfo_UserSkill_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo_UserSkill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo_UserSkill, level_),
  };
  InterUserSkillInfo_UserSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterUserSkillInfo_UserSkill_descriptor_,
      InterUserSkillInfo_UserSkill::default_instance_,
      InterUserSkillInfo_UserSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo_UserSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterUserSkillInfo_UserSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterUserSkillInfo_UserSkill));
  InterItemInfo_descriptor_ = file->message_type(2);
  static const int InterItemInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo, items_),
  };
  InterItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterItemInfo_descriptor_,
      InterItemInfo::default_instance_,
      InterItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterItemInfo));
  InterItemInfo_EquipHole_descriptor_ = InterItemInfo_descriptor_->nested_type(0);
  static const int InterItemInfo_EquipHole_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, hole_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, item_gem_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, attr_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, attr_value_),
  };
  InterItemInfo_EquipHole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterItemInfo_EquipHole_descriptor_,
      InterItemInfo_EquipHole::default_instance_,
      InterItemInfo_EquipHole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_EquipHole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterItemInfo_EquipHole));
  InterItemInfo_UserItem_descriptor_ = InterItemInfo_descriptor_->nested_type(1);
  static const int InterItemInfo_UserItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, item_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, equip_holes_),
  };
  InterItemInfo_UserItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterItemInfo_UserItem_descriptor_,
      InterItemInfo_UserItem::default_instance_,
      InterItemInfo_UserItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterItemInfo_UserItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterItemInfo_UserItem));
  inter_fairy_basic_info_t_descriptor_ = file->message_type(3);
  static const int inter_fairy_basic_info_t_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_born_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, fairy_get_way_),
  };
  inter_fairy_basic_info_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      inter_fairy_basic_info_t_descriptor_,
      inter_fairy_basic_info_t::default_instance_,
      inter_fairy_basic_info_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_basic_info_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(inter_fairy_basic_info_t));
  inter_fairy_train_info_t_descriptor_ = file->message_type(4);
  static const int inter_fairy_train_info_t_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_phy_atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_mag_atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_ski_atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_phy_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_mag_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_ski_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, train_hp_),
  };
  inter_fairy_train_info_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      inter_fairy_train_info_t_descriptor_,
      inter_fairy_train_info_t::default_instance_,
      inter_fairy_train_info_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(inter_fairy_train_info_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(inter_fairy_train_info_t));
  InterFairyInfo_descriptor_ = file->message_type(5);
  static const int InterFairyInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, fairy_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, fairy_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, basic_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, train_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, train_cost_),
  };
  InterFairyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterFairyInfo_descriptor_,
      InterFairyInfo::default_instance_,
      InterFairyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterFairyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterFairyInfo));
  InterSync_descriptor_ = file->message_type(6);
  static const int InterSync_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, reg_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, channel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, skillinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, attributeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, iteminfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, fairyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, zone_id_),
  };
  InterSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterSync_descriptor_,
      InterSync::default_instance_,
      InterSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterSync));
  InterOut_descriptor_ = file->message_type(7);
  static const int InterOut_offsets_[1] = {
  };
  InterOut_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterOut_descriptor_,
      InterOut::default_instance_,
      InterOut_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterOut, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterOut, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterOut));
  InterDbSync_descriptor_ = file->message_type(8);
  static const int InterDbSync_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterDbSync, msg_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterDbSync, data_),
  };
  InterDbSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterDbSync_descriptor_,
      InterDbSync::default_instance_,
      InterDbSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterDbSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterDbSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterDbSync));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_inter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterAttributesInfo_descriptor_, &InterAttributesInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterAttributesInfo_KeyValueDead_descriptor_, &InterAttributesInfo_KeyValueDead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterUserSkillInfo_descriptor_, &InterUserSkillInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterUserSkillInfo_UserSkill_descriptor_, &InterUserSkillInfo_UserSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterItemInfo_descriptor_, &InterItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterItemInfo_EquipHole_descriptor_, &InterItemInfo_EquipHole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterItemInfo_UserItem_descriptor_, &InterItemInfo_UserItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    inter_fairy_basic_info_t_descriptor_, &inter_fairy_basic_info_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    inter_fairy_train_info_t_descriptor_, &inter_fairy_train_info_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterFairyInfo_descriptor_, &InterFairyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterSync_descriptor_, &InterSync::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterOut_descriptor_, &InterOut::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterDbSync_descriptor_, &InterDbSync::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_inter_2eproto() {
  delete InterAttributesInfo::default_instance_;
  delete InterAttributesInfo_reflection_;
  delete InterAttributesInfo_KeyValueDead::default_instance_;
  delete InterAttributesInfo_KeyValueDead_reflection_;
  delete InterUserSkillInfo::default_instance_;
  delete InterUserSkillInfo_reflection_;
  delete InterUserSkillInfo_UserSkill::default_instance_;
  delete InterUserSkillInfo_UserSkill_reflection_;
  delete InterItemInfo::default_instance_;
  delete InterItemInfo_reflection_;
  delete InterItemInfo_EquipHole::default_instance_;
  delete InterItemInfo_EquipHole_reflection_;
  delete InterItemInfo_UserItem::default_instance_;
  delete InterItemInfo_UserItem_reflection_;
  delete inter_fairy_basic_info_t::default_instance_;
  delete inter_fairy_basic_info_t_reflection_;
  delete inter_fairy_train_info_t::default_instance_;
  delete inter_fairy_train_info_t_reflection_;
  delete InterFairyInfo::default_instance_;
  delete InterFairyInfo_reflection_;
  delete InterSync::default_instance_;
  delete InterSync_reflection_;
  delete InterOut::default_instance_;
  delete InterOut_reflection_;
  delete InterDbSync::default_instance_;
  delete InterDbSync_reflection_;
}

void protobuf_AddDesc_inter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::head_msg::protobuf_AddDesc_head_2eproto();
  ::protobuf_AddDesc_cs_5fcore_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013inter.proto\032\nhead.proto\032\rcs_core.proto"
    "\"\205\001\n\023InterAttributesInfo\0221\n\006values\030\001 \003(\013"
    "2!.InterAttributesInfo.KeyValueDead\032;\n\014K"
    "eyValueDead\022\013\n\003key\030\001 \002(\r\022\r\n\005value\030\002 \002(\r\022"
    "\017\n\007dead_tm\030\003 \002(\r\"k\n\022InterUserSkillInfo\022-"
    "\n\006skills\030\001 \003(\0132\035.InterUserSkillInfo.User"
    "Skill\032&\n\tUserSkill\022\n\n\002id\030\001 \002(\r\022\r\n\005level\030"
    "\002 \002(\r\"\222\002\n\rInterItemInfo\022&\n\005items\030\001 \003(\0132\027"
    ".InterItemInfo.UserItem\032Z\n\tEquipHole\022\022\n\n"
    "hole_index\030\001 \002(\r\022\023\n\013item_gem_id\030\002 \002(\r\022\020\n"
    "\010attr_key\030\003 \002(\r\022\022\n\nattr_value\030\004 \002(\r\032}\n\010U"
    "serItem\022\013\n\003pos\030\001 \002(\r\022\017\n\007item_id\030\002 \002(\r\022\022\n"
    "\nitem_level\030\003 \002(\r\022\020\n\010item_num\030\004 \002(\r\022-\n\013e"
    "quip_holes\030\005 \003(\0132\030.InterItemInfo.EquipHo"
    "le\"\232\001\n\030inter_fairy_basic_info_t\022\020\n\010fairy"
    "_lv\030\001 \002(\r\022\023\n\013fairy_grade\030\002 \002(\r\022\024\n\014fairy_"
    "status\030\003 \002(\r\022\021\n\tfairy_exp\030\004 \002(\r\022\027\n\017fairy"
    "_born_time\030\005 \002(\r\022\025\n\rfairy_get_way\030\006 \002(\r\""
    "\266\001\n\030inter_fairy_train_info_t\022\025\n\rtrain_ph"
    "y_atk\030\001 \002(\005\022\025\n\rtrain_mag_atk\030\002 \002(\005\022\025\n\rtr"
    "ain_ski_atk\030\003 \002(\005\022\025\n\rtrain_phy_def\030\004 \002(\005"
    "\022\025\n\rtrain_mag_def\030\005 \002(\005\022\025\n\rtrain_ski_def"
    "\030\006 \002(\005\022\020\n\010train_hp\030\007 \002(\005\"\247\001\n\016InterFairyI"
    "nfo\022\021\n\tfairy_pos\030\001 \002(\r\022\020\n\010fairy_id\030\002 \002(\r"
    "\022-\n\nbasic_info\030\003 \002(\0132\031.inter_fairy_basic"
    "_info_t\022-\n\ntrain_info\030\004 \002(\0132\031.inter_fair"
    "y_train_info_t\022\022\n\ntrain_cost\030\005 \002(\r\"\232\002\n\tI"
    "nterSync\022\013\n\003uid\030\001 \002(\r\022\020\n\010reg_time\030\002 \002(\r\022"
    "\022\n\nchannel_id\030\003 \002(\r\022 \n\010userinfo\030\004 \002(\0132\016."
    "BasicUserInfo\022&\n\tskillinfo\030\005 \002(\0132\023.Inter"
    "UserSkillInfo\022+\n\rattributeinfo\030\006 \002(\0132\024.I"
    "nterAttributesInfo\022 \n\010iteminfo\030\007 \002(\0132\016.I"
    "nterItemInfo\022\"\n\tfairyinfo\030\010 \003(\0132\017.InterF"
    "airyInfo\022\014\n\004data\030\t \001(\014\022\017\n\007zone_id\030\n \002(\r\""
    "\n\n\010InterOut\"-\n\013InterDbSync\022\020\n\010msg_name\030\001"
    " \002(\014\022\014\n\004data\030\002 \002(\014", 1418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inter.proto", &protobuf_RegisterTypes);
  InterAttributesInfo::default_instance_ = new InterAttributesInfo();
  InterAttributesInfo_KeyValueDead::default_instance_ = new InterAttributesInfo_KeyValueDead();
  InterUserSkillInfo::default_instance_ = new InterUserSkillInfo();
  InterUserSkillInfo_UserSkill::default_instance_ = new InterUserSkillInfo_UserSkill();
  InterItemInfo::default_instance_ = new InterItemInfo();
  InterItemInfo_EquipHole::default_instance_ = new InterItemInfo_EquipHole();
  InterItemInfo_UserItem::default_instance_ = new InterItemInfo_UserItem();
  inter_fairy_basic_info_t::default_instance_ = new inter_fairy_basic_info_t();
  inter_fairy_train_info_t::default_instance_ = new inter_fairy_train_info_t();
  InterFairyInfo::default_instance_ = new InterFairyInfo();
  InterSync::default_instance_ = new InterSync();
  InterOut::default_instance_ = new InterOut();
  InterDbSync::default_instance_ = new InterDbSync();
  InterAttributesInfo::default_instance_->InitAsDefaultInstance();
  InterAttributesInfo_KeyValueDead::default_instance_->InitAsDefaultInstance();
  InterUserSkillInfo::default_instance_->InitAsDefaultInstance();
  InterUserSkillInfo_UserSkill::default_instance_->InitAsDefaultInstance();
  InterItemInfo::default_instance_->InitAsDefaultInstance();
  InterItemInfo_EquipHole::default_instance_->InitAsDefaultInstance();
  InterItemInfo_UserItem::default_instance_->InitAsDefaultInstance();
  inter_fairy_basic_info_t::default_instance_->InitAsDefaultInstance();
  inter_fairy_train_info_t::default_instance_->InitAsDefaultInstance();
  InterFairyInfo::default_instance_->InitAsDefaultInstance();
  InterSync::default_instance_->InitAsDefaultInstance();
  InterOut::default_instance_->InitAsDefaultInstance();
  InterDbSync::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_inter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_inter_2eproto {
  StaticDescriptorInitializer_inter_2eproto() {
    protobuf_AddDesc_inter_2eproto();
  }
} static_descriptor_initializer_inter_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int InterAttributesInfo_KeyValueDead::kKeyFieldNumber;
const int InterAttributesInfo_KeyValueDead::kValueFieldNumber;
const int InterAttributesInfo_KeyValueDead::kDeadTmFieldNumber;
#endif  // !_MSC_VER

InterAttributesInfo_KeyValueDead::InterAttributesInfo_KeyValueDead()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterAttributesInfo_KeyValueDead::InitAsDefaultInstance() {
}

InterAttributesInfo_KeyValueDead::InterAttributesInfo_KeyValueDead(const InterAttributesInfo_KeyValueDead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterAttributesInfo_KeyValueDead::SharedCtor() {
  _cached_size_ = 0;
  key_ = 0u;
  value_ = 0u;
  dead_tm_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterAttributesInfo_KeyValueDead::~InterAttributesInfo_KeyValueDead() {
  SharedDtor();
}

void InterAttributesInfo_KeyValueDead::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterAttributesInfo_KeyValueDead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterAttributesInfo_KeyValueDead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterAttributesInfo_KeyValueDead_descriptor_;
}

const InterAttributesInfo_KeyValueDead& InterAttributesInfo_KeyValueDead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterAttributesInfo_KeyValueDead* InterAttributesInfo_KeyValueDead::default_instance_ = NULL;

InterAttributesInfo_KeyValueDead* InterAttributesInfo_KeyValueDead::New() const {
  return new InterAttributesInfo_KeyValueDead;
}

void InterAttributesInfo_KeyValueDead::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    key_ = 0u;
    value_ = 0u;
    dead_tm_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterAttributesInfo_KeyValueDead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
          set_has_key();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }
      
      // required uint32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_dead_tm;
        break;
      }
      
      // required uint32 dead_tm = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dead_tm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_tm_)));
          set_has_dead_tm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterAttributesInfo_KeyValueDead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key(), output);
  }
  
  // required uint32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }
  
  // required uint32 dead_tm = 3;
  if (has_dead_tm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dead_tm(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterAttributesInfo_KeyValueDead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 key = 1;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key(), target);
  }
  
  // required uint32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }
  
  // required uint32 dead_tm = 3;
  if (has_dead_tm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dead_tm(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterAttributesInfo_KeyValueDead::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->key());
    }
    
    // required uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }
    
    // required uint32 dead_tm = 3;
    if (has_dead_tm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dead_tm());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterAttributesInfo_KeyValueDead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterAttributesInfo_KeyValueDead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterAttributesInfo_KeyValueDead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterAttributesInfo_KeyValueDead::MergeFrom(const InterAttributesInfo_KeyValueDead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_dead_tm()) {
      set_dead_tm(from.dead_tm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterAttributesInfo_KeyValueDead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterAttributesInfo_KeyValueDead::CopyFrom(const InterAttributesInfo_KeyValueDead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterAttributesInfo_KeyValueDead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void InterAttributesInfo_KeyValueDead::Swap(InterAttributesInfo_KeyValueDead* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(dead_tm_, other->dead_tm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterAttributesInfo_KeyValueDead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterAttributesInfo_KeyValueDead_descriptor_;
  metadata.reflection = InterAttributesInfo_KeyValueDead_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InterAttributesInfo::kValuesFieldNumber;
#endif  // !_MSC_VER

InterAttributesInfo::InterAttributesInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterAttributesInfo::InitAsDefaultInstance() {
}

InterAttributesInfo::InterAttributesInfo(const InterAttributesInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterAttributesInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterAttributesInfo::~InterAttributesInfo() {
  SharedDtor();
}

void InterAttributesInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterAttributesInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterAttributesInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterAttributesInfo_descriptor_;
}

const InterAttributesInfo& InterAttributesInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterAttributesInfo* InterAttributesInfo::default_instance_ = NULL;

InterAttributesInfo* InterAttributesInfo::New() const {
  return new InterAttributesInfo;
}

void InterAttributesInfo::Clear() {
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterAttributesInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InterAttributesInfo.KeyValueDead values = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_values()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_values;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterAttributesInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .InterAttributesInfo.KeyValueDead values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterAttributesInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .InterAttributesInfo.KeyValueDead values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->values(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterAttributesInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .InterAttributesInfo.KeyValueDead values = 1;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->values(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterAttributesInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterAttributesInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterAttributesInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterAttributesInfo::MergeFrom(const InterAttributesInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterAttributesInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterAttributesInfo::CopyFrom(const InterAttributesInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterAttributesInfo::IsInitialized() const {
  
  for (int i = 0; i < values_size(); i++) {
    if (!this->values(i).IsInitialized()) return false;
  }
  return true;
}

void InterAttributesInfo::Swap(InterAttributesInfo* other) {
  if (other != this) {
    values_.Swap(&other->values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterAttributesInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterAttributesInfo_descriptor_;
  metadata.reflection = InterAttributesInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterUserSkillInfo_UserSkill::kIdFieldNumber;
const int InterUserSkillInfo_UserSkill::kLevelFieldNumber;
#endif  // !_MSC_VER

InterUserSkillInfo_UserSkill::InterUserSkillInfo_UserSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterUserSkillInfo_UserSkill::InitAsDefaultInstance() {
}

InterUserSkillInfo_UserSkill::InterUserSkillInfo_UserSkill(const InterUserSkillInfo_UserSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterUserSkillInfo_UserSkill::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterUserSkillInfo_UserSkill::~InterUserSkillInfo_UserSkill() {
  SharedDtor();
}

void InterUserSkillInfo_UserSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterUserSkillInfo_UserSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterUserSkillInfo_UserSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterUserSkillInfo_UserSkill_descriptor_;
}

const InterUserSkillInfo_UserSkill& InterUserSkillInfo_UserSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterUserSkillInfo_UserSkill* InterUserSkillInfo_UserSkill::default_instance_ = NULL;

InterUserSkillInfo_UserSkill* InterUserSkillInfo_UserSkill::New() const {
  return new InterUserSkillInfo_UserSkill;
}

void InterUserSkillInfo_UserSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    level_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterUserSkillInfo_UserSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterUserSkillInfo_UserSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterUserSkillInfo_UserSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterUserSkillInfo_UserSkill::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterUserSkillInfo_UserSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterUserSkillInfo_UserSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterUserSkillInfo_UserSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterUserSkillInfo_UserSkill::MergeFrom(const InterUserSkillInfo_UserSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterUserSkillInfo_UserSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterUserSkillInfo_UserSkill::CopyFrom(const InterUserSkillInfo_UserSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterUserSkillInfo_UserSkill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void InterUserSkillInfo_UserSkill::Swap(InterUserSkillInfo_UserSkill* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterUserSkillInfo_UserSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterUserSkillInfo_UserSkill_descriptor_;
  metadata.reflection = InterUserSkillInfo_UserSkill_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InterUserSkillInfo::kSkillsFieldNumber;
#endif  // !_MSC_VER

InterUserSkillInfo::InterUserSkillInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterUserSkillInfo::InitAsDefaultInstance() {
}

InterUserSkillInfo::InterUserSkillInfo(const InterUserSkillInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterUserSkillInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterUserSkillInfo::~InterUserSkillInfo() {
  SharedDtor();
}

void InterUserSkillInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterUserSkillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterUserSkillInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterUserSkillInfo_descriptor_;
}

const InterUserSkillInfo& InterUserSkillInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterUserSkillInfo* InterUserSkillInfo::default_instance_ = NULL;

InterUserSkillInfo* InterUserSkillInfo::New() const {
  return new InterUserSkillInfo;
}

void InterUserSkillInfo::Clear() {
  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterUserSkillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InterUserSkillInfo.UserSkill skills = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skills;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterUserSkillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .InterUserSkillInfo.UserSkill skills = 1;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skills(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterUserSkillInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .InterUserSkillInfo.UserSkill skills = 1;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skills(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterUserSkillInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .InterUserSkillInfo.UserSkill skills = 1;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterUserSkillInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterUserSkillInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterUserSkillInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterUserSkillInfo::MergeFrom(const InterUserSkillInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterUserSkillInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterUserSkillInfo::CopyFrom(const InterUserSkillInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterUserSkillInfo::IsInitialized() const {
  
  for (int i = 0; i < skills_size(); i++) {
    if (!this->skills(i).IsInitialized()) return false;
  }
  return true;
}

void InterUserSkillInfo::Swap(InterUserSkillInfo* other) {
  if (other != this) {
    skills_.Swap(&other->skills_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterUserSkillInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterUserSkillInfo_descriptor_;
  metadata.reflection = InterUserSkillInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterItemInfo_EquipHole::kHoleIndexFieldNumber;
const int InterItemInfo_EquipHole::kItemGemIdFieldNumber;
const int InterItemInfo_EquipHole::kAttrKeyFieldNumber;
const int InterItemInfo_EquipHole::kAttrValueFieldNumber;
#endif  // !_MSC_VER

InterItemInfo_EquipHole::InterItemInfo_EquipHole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterItemInfo_EquipHole::InitAsDefaultInstance() {
}

InterItemInfo_EquipHole::InterItemInfo_EquipHole(const InterItemInfo_EquipHole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterItemInfo_EquipHole::SharedCtor() {
  _cached_size_ = 0;
  hole_index_ = 0u;
  item_gem_id_ = 0u;
  attr_key_ = 0u;
  attr_value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterItemInfo_EquipHole::~InterItemInfo_EquipHole() {
  SharedDtor();
}

void InterItemInfo_EquipHole::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterItemInfo_EquipHole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterItemInfo_EquipHole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterItemInfo_EquipHole_descriptor_;
}

const InterItemInfo_EquipHole& InterItemInfo_EquipHole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterItemInfo_EquipHole* InterItemInfo_EquipHole::default_instance_ = NULL;

InterItemInfo_EquipHole* InterItemInfo_EquipHole::New() const {
  return new InterItemInfo_EquipHole;
}

void InterItemInfo_EquipHole::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_index_ = 0u;
    item_gem_id_ = 0u;
    attr_key_ = 0u;
    attr_value_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterItemInfo_EquipHole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hole_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hole_index_)));
          set_has_hole_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_gem_id;
        break;
      }
      
      // required uint32 item_gem_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_gem_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_gem_id_)));
          set_has_item_gem_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attr_key;
        break;
      }
      
      // required uint32 attr_key = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attr_key:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_key_)));
          set_has_attr_key();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attr_value;
        break;
      }
      
      // required uint32 attr_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attr_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));
          set_has_attr_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterItemInfo_EquipHole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 hole_index = 1;
  if (has_hole_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hole_index(), output);
  }
  
  // required uint32 item_gem_id = 2;
  if (has_item_gem_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_gem_id(), output);
  }
  
  // required uint32 attr_key = 3;
  if (has_attr_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->attr_key(), output);
  }
  
  // required uint32 attr_value = 4;
  if (has_attr_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->attr_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterItemInfo_EquipHole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 hole_index = 1;
  if (has_hole_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hole_index(), target);
  }
  
  // required uint32 item_gem_id = 2;
  if (has_item_gem_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_gem_id(), target);
  }
  
  // required uint32 attr_key = 3;
  if (has_attr_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->attr_key(), target);
  }
  
  // required uint32 attr_value = 4;
  if (has_attr_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->attr_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterItemInfo_EquipHole::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 hole_index = 1;
    if (has_hole_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hole_index());
    }
    
    // required uint32 item_gem_id = 2;
    if (has_item_gem_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_gem_id());
    }
    
    // required uint32 attr_key = 3;
    if (has_attr_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_key());
    }
    
    // required uint32 attr_value = 4;
    if (has_attr_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterItemInfo_EquipHole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterItemInfo_EquipHole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterItemInfo_EquipHole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterItemInfo_EquipHole::MergeFrom(const InterItemInfo_EquipHole& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_index()) {
      set_hole_index(from.hole_index());
    }
    if (from.has_item_gem_id()) {
      set_item_gem_id(from.item_gem_id());
    }
    if (from.has_attr_key()) {
      set_attr_key(from.attr_key());
    }
    if (from.has_attr_value()) {
      set_attr_value(from.attr_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterItemInfo_EquipHole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterItemInfo_EquipHole::CopyFrom(const InterItemInfo_EquipHole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterItemInfo_EquipHole::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void InterItemInfo_EquipHole::Swap(InterItemInfo_EquipHole* other) {
  if (other != this) {
    std::swap(hole_index_, other->hole_index_);
    std::swap(item_gem_id_, other->item_gem_id_);
    std::swap(attr_key_, other->attr_key_);
    std::swap(attr_value_, other->attr_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterItemInfo_EquipHole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterItemInfo_EquipHole_descriptor_;
  metadata.reflection = InterItemInfo_EquipHole_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InterItemInfo_UserItem::kPosFieldNumber;
const int InterItemInfo_UserItem::kItemIdFieldNumber;
const int InterItemInfo_UserItem::kItemLevelFieldNumber;
const int InterItemInfo_UserItem::kItemNumFieldNumber;
const int InterItemInfo_UserItem::kEquipHolesFieldNumber;
#endif  // !_MSC_VER

InterItemInfo_UserItem::InterItemInfo_UserItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterItemInfo_UserItem::InitAsDefaultInstance() {
}

InterItemInfo_UserItem::InterItemInfo_UserItem(const InterItemInfo_UserItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterItemInfo_UserItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  item_id_ = 0u;
  item_level_ = 0u;
  item_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterItemInfo_UserItem::~InterItemInfo_UserItem() {
  SharedDtor();
}

void InterItemInfo_UserItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterItemInfo_UserItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterItemInfo_UserItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterItemInfo_UserItem_descriptor_;
}

const InterItemInfo_UserItem& InterItemInfo_UserItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterItemInfo_UserItem* InterItemInfo_UserItem::default_instance_ = NULL;

InterItemInfo_UserItem* InterItemInfo_UserItem::New() const {
  return new InterItemInfo_UserItem;
}

void InterItemInfo_UserItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0u;
    item_id_ = 0u;
    item_level_ = 0u;
    item_num_ = 0u;
  }
  equip_holes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterItemInfo_UserItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // required uint32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_level;
        break;
      }
      
      // required uint32 item_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_level_)));
          set_has_item_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_num;
        break;
      }
      
      // required uint32 item_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_equip_holes;
        break;
      }
      
      // repeated .InterItemInfo.EquipHole equip_holes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_holes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_holes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_equip_holes;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterItemInfo_UserItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }
  
  // required uint32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_id(), output);
  }
  
  // required uint32 item_level = 3;
  if (has_item_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_level(), output);
  }
  
  // required uint32 item_num = 4;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->item_num(), output);
  }
  
  // repeated .InterItemInfo.EquipHole equip_holes = 5;
  for (int i = 0; i < this->equip_holes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->equip_holes(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterItemInfo_UserItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }
  
  // required uint32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_id(), target);
  }
  
  // required uint32 item_level = 3;
  if (has_item_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_level(), target);
  }
  
  // required uint32 item_num = 4;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->item_num(), target);
  }
  
  // repeated .InterItemInfo.EquipHole equip_holes = 5;
  for (int i = 0; i < this->equip_holes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->equip_holes(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterItemInfo_UserItem::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }
    
    // required uint32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }
    
    // required uint32 item_level = 3;
    if (has_item_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_level());
    }
    
    // required uint32 item_num = 4;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_num());
    }
    
  }
  // repeated .InterItemInfo.EquipHole equip_holes = 5;
  total_size += 1 * this->equip_holes_size();
  for (int i = 0; i < this->equip_holes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_holes(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterItemInfo_UserItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterItemInfo_UserItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterItemInfo_UserItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterItemInfo_UserItem::MergeFrom(const InterItemInfo_UserItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_holes_.MergeFrom(from.equip_holes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_level()) {
      set_item_level(from.item_level());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterItemInfo_UserItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterItemInfo_UserItem::CopyFrom(const InterItemInfo_UserItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterItemInfo_UserItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  for (int i = 0; i < equip_holes_size(); i++) {
    if (!this->equip_holes(i).IsInitialized()) return false;
  }
  return true;
}

void InterItemInfo_UserItem::Swap(InterItemInfo_UserItem* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_level_, other->item_level_);
    std::swap(item_num_, other->item_num_);
    equip_holes_.Swap(&other->equip_holes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterItemInfo_UserItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterItemInfo_UserItem_descriptor_;
  metadata.reflection = InterItemInfo_UserItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InterItemInfo::kItemsFieldNumber;
#endif  // !_MSC_VER

InterItemInfo::InterItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterItemInfo::InitAsDefaultInstance() {
}

InterItemInfo::InterItemInfo(const InterItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterItemInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterItemInfo::~InterItemInfo() {
  SharedDtor();
}

void InterItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterItemInfo_descriptor_;
}

const InterItemInfo& InterItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterItemInfo* InterItemInfo::default_instance_ = NULL;

InterItemInfo* InterItemInfo::New() const {
  return new InterItemInfo;
}

void InterItemInfo::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InterItemInfo.UserItem items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .InterItemInfo.UserItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .InterItemInfo.UserItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterItemInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .InterItemInfo.UserItem items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterItemInfo::MergeFrom(const InterItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterItemInfo::CopyFrom(const InterItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterItemInfo::IsInitialized() const {
  
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void InterItemInfo::Swap(InterItemInfo* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterItemInfo_descriptor_;
  metadata.reflection = InterItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int inter_fairy_basic_info_t::kFairyLvFieldNumber;
const int inter_fairy_basic_info_t::kFairyGradeFieldNumber;
const int inter_fairy_basic_info_t::kFairyStatusFieldNumber;
const int inter_fairy_basic_info_t::kFairyExpFieldNumber;
const int inter_fairy_basic_info_t::kFairyBornTimeFieldNumber;
const int inter_fairy_basic_info_t::kFairyGetWayFieldNumber;
#endif  // !_MSC_VER

inter_fairy_basic_info_t::inter_fairy_basic_info_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void inter_fairy_basic_info_t::InitAsDefaultInstance() {
}

inter_fairy_basic_info_t::inter_fairy_basic_info_t(const inter_fairy_basic_info_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void inter_fairy_basic_info_t::SharedCtor() {
  _cached_size_ = 0;
  fairy_lv_ = 0u;
  fairy_grade_ = 0u;
  fairy_status_ = 0u;
  fairy_exp_ = 0u;
  fairy_born_time_ = 0u;
  fairy_get_way_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

inter_fairy_basic_info_t::~inter_fairy_basic_info_t() {
  SharedDtor();
}

void inter_fairy_basic_info_t::SharedDtor() {
  if (this != default_instance_) {
  }
}

void inter_fairy_basic_info_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inter_fairy_basic_info_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return inter_fairy_basic_info_t_descriptor_;
}

const inter_fairy_basic_info_t& inter_fairy_basic_info_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

inter_fairy_basic_info_t* inter_fairy_basic_info_t::default_instance_ = NULL;

inter_fairy_basic_info_t* inter_fairy_basic_info_t::New() const {
  return new inter_fairy_basic_info_t;
}

void inter_fairy_basic_info_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fairy_lv_ = 0u;
    fairy_grade_ = 0u;
    fairy_status_ = 0u;
    fairy_exp_ = 0u;
    fairy_born_time_ = 0u;
    fairy_get_way_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool inter_fairy_basic_info_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 fairy_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_lv_)));
          set_has_fairy_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fairy_grade;
        break;
      }
      
      // required uint32 fairy_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_grade_)));
          set_has_fairy_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fairy_status;
        break;
      }
      
      // required uint32 fairy_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_status_)));
          set_has_fairy_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fairy_exp;
        break;
      }
      
      // required uint32 fairy_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_exp_)));
          set_has_fairy_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_fairy_born_time;
        break;
      }
      
      // required uint32 fairy_born_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_born_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_born_time_)));
          set_has_fairy_born_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fairy_get_way;
        break;
      }
      
      // required uint32 fairy_get_way = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_get_way:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_get_way_)));
          set_has_fairy_get_way();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void inter_fairy_basic_info_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 fairy_lv = 1;
  if (has_fairy_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fairy_lv(), output);
  }
  
  // required uint32 fairy_grade = 2;
  if (has_fairy_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fairy_grade(), output);
  }
  
  // required uint32 fairy_status = 3;
  if (has_fairy_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fairy_status(), output);
  }
  
  // required uint32 fairy_exp = 4;
  if (has_fairy_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fairy_exp(), output);
  }
  
  // required uint32 fairy_born_time = 5;
  if (has_fairy_born_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fairy_born_time(), output);
  }
  
  // required uint32 fairy_get_way = 6;
  if (has_fairy_get_way()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fairy_get_way(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* inter_fairy_basic_info_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 fairy_lv = 1;
  if (has_fairy_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fairy_lv(), target);
  }
  
  // required uint32 fairy_grade = 2;
  if (has_fairy_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fairy_grade(), target);
  }
  
  // required uint32 fairy_status = 3;
  if (has_fairy_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fairy_status(), target);
  }
  
  // required uint32 fairy_exp = 4;
  if (has_fairy_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fairy_exp(), target);
  }
  
  // required uint32 fairy_born_time = 5;
  if (has_fairy_born_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fairy_born_time(), target);
  }
  
  // required uint32 fairy_get_way = 6;
  if (has_fairy_get_way()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fairy_get_way(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int inter_fairy_basic_info_t::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 fairy_lv = 1;
    if (has_fairy_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_lv());
    }
    
    // required uint32 fairy_grade = 2;
    if (has_fairy_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_grade());
    }
    
    // required uint32 fairy_status = 3;
    if (has_fairy_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_status());
    }
    
    // required uint32 fairy_exp = 4;
    if (has_fairy_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_exp());
    }
    
    // required uint32 fairy_born_time = 5;
    if (has_fairy_born_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_born_time());
    }
    
    // required uint32 fairy_get_way = 6;
    if (has_fairy_get_way()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_get_way());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inter_fairy_basic_info_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const inter_fairy_basic_info_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const inter_fairy_basic_info_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void inter_fairy_basic_info_t::MergeFrom(const inter_fairy_basic_info_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fairy_lv()) {
      set_fairy_lv(from.fairy_lv());
    }
    if (from.has_fairy_grade()) {
      set_fairy_grade(from.fairy_grade());
    }
    if (from.has_fairy_status()) {
      set_fairy_status(from.fairy_status());
    }
    if (from.has_fairy_exp()) {
      set_fairy_exp(from.fairy_exp());
    }
    if (from.has_fairy_born_time()) {
      set_fairy_born_time(from.fairy_born_time());
    }
    if (from.has_fairy_get_way()) {
      set_fairy_get_way(from.fairy_get_way());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void inter_fairy_basic_info_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inter_fairy_basic_info_t::CopyFrom(const inter_fairy_basic_info_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inter_fairy_basic_info_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  
  return true;
}

void inter_fairy_basic_info_t::Swap(inter_fairy_basic_info_t* other) {
  if (other != this) {
    std::swap(fairy_lv_, other->fairy_lv_);
    std::swap(fairy_grade_, other->fairy_grade_);
    std::swap(fairy_status_, other->fairy_status_);
    std::swap(fairy_exp_, other->fairy_exp_);
    std::swap(fairy_born_time_, other->fairy_born_time_);
    std::swap(fairy_get_way_, other->fairy_get_way_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata inter_fairy_basic_info_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = inter_fairy_basic_info_t_descriptor_;
  metadata.reflection = inter_fairy_basic_info_t_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int inter_fairy_train_info_t::kTrainPhyAtkFieldNumber;
const int inter_fairy_train_info_t::kTrainMagAtkFieldNumber;
const int inter_fairy_train_info_t::kTrainSkiAtkFieldNumber;
const int inter_fairy_train_info_t::kTrainPhyDefFieldNumber;
const int inter_fairy_train_info_t::kTrainMagDefFieldNumber;
const int inter_fairy_train_info_t::kTrainSkiDefFieldNumber;
const int inter_fairy_train_info_t::kTrainHpFieldNumber;
#endif  // !_MSC_VER

inter_fairy_train_info_t::inter_fairy_train_info_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void inter_fairy_train_info_t::InitAsDefaultInstance() {
}

inter_fairy_train_info_t::inter_fairy_train_info_t(const inter_fairy_train_info_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void inter_fairy_train_info_t::SharedCtor() {
  _cached_size_ = 0;
  train_phy_atk_ = 0;
  train_mag_atk_ = 0;
  train_ski_atk_ = 0;
  train_phy_def_ = 0;
  train_mag_def_ = 0;
  train_ski_def_ = 0;
  train_hp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

inter_fairy_train_info_t::~inter_fairy_train_info_t() {
  SharedDtor();
}

void inter_fairy_train_info_t::SharedDtor() {
  if (this != default_instance_) {
  }
}

void inter_fairy_train_info_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* inter_fairy_train_info_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return inter_fairy_train_info_t_descriptor_;
}

const inter_fairy_train_info_t& inter_fairy_train_info_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

inter_fairy_train_info_t* inter_fairy_train_info_t::default_instance_ = NULL;

inter_fairy_train_info_t* inter_fairy_train_info_t::New() const {
  return new inter_fairy_train_info_t;
}

void inter_fairy_train_info_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    train_phy_atk_ = 0;
    train_mag_atk_ = 0;
    train_ski_atk_ = 0;
    train_phy_def_ = 0;
    train_mag_def_ = 0;
    train_ski_def_ = 0;
    train_hp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool inter_fairy_train_info_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 train_phy_atk = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_phy_atk_)));
          set_has_train_phy_atk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_train_mag_atk;
        break;
      }
      
      // required int32 train_mag_atk = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_mag_atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_mag_atk_)));
          set_has_train_mag_atk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_train_ski_atk;
        break;
      }
      
      // required int32 train_ski_atk = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_ski_atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_ski_atk_)));
          set_has_train_ski_atk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_train_phy_def;
        break;
      }
      
      // required int32 train_phy_def = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_phy_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_phy_def_)));
          set_has_train_phy_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_train_mag_def;
        break;
      }
      
      // required int32 train_mag_def = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_mag_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_mag_def_)));
          set_has_train_mag_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_train_ski_def;
        break;
      }
      
      // required int32 train_ski_def = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_ski_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_ski_def_)));
          set_has_train_ski_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_train_hp;
        break;
      }
      
      // required int32 train_hp = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_hp_)));
          set_has_train_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void inter_fairy_train_info_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 train_phy_atk = 1;
  if (has_train_phy_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->train_phy_atk(), output);
  }
  
  // required int32 train_mag_atk = 2;
  if (has_train_mag_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->train_mag_atk(), output);
  }
  
  // required int32 train_ski_atk = 3;
  if (has_train_ski_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->train_ski_atk(), output);
  }
  
  // required int32 train_phy_def = 4;
  if (has_train_phy_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->train_phy_def(), output);
  }
  
  // required int32 train_mag_def = 5;
  if (has_train_mag_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->train_mag_def(), output);
  }
  
  // required int32 train_ski_def = 6;
  if (has_train_ski_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->train_ski_def(), output);
  }
  
  // required int32 train_hp = 7;
  if (has_train_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->train_hp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* inter_fairy_train_info_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 train_phy_atk = 1;
  if (has_train_phy_atk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->train_phy_atk(), target);
  }
  
  // required int32 train_mag_atk = 2;
  if (has_train_mag_atk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->train_mag_atk(), target);
  }
  
  // required int32 train_ski_atk = 3;
  if (has_train_ski_atk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->train_ski_atk(), target);
  }
  
  // required int32 train_phy_def = 4;
  if (has_train_phy_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->train_phy_def(), target);
  }
  
  // required int32 train_mag_def = 5;
  if (has_train_mag_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->train_mag_def(), target);
  }
  
  // required int32 train_ski_def = 6;
  if (has_train_ski_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->train_ski_def(), target);
  }
  
  // required int32 train_hp = 7;
  if (has_train_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->train_hp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int inter_fairy_train_info_t::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 train_phy_atk = 1;
    if (has_train_phy_atk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_phy_atk());
    }
    
    // required int32 train_mag_atk = 2;
    if (has_train_mag_atk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_mag_atk());
    }
    
    // required int32 train_ski_atk = 3;
    if (has_train_ski_atk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_ski_atk());
    }
    
    // required int32 train_phy_def = 4;
    if (has_train_phy_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_phy_def());
    }
    
    // required int32 train_mag_def = 5;
    if (has_train_mag_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_mag_def());
    }
    
    // required int32 train_ski_def = 6;
    if (has_train_ski_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_ski_def());
    }
    
    // required int32 train_hp = 7;
    if (has_train_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_hp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void inter_fairy_train_info_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const inter_fairy_train_info_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const inter_fairy_train_info_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void inter_fairy_train_info_t::MergeFrom(const inter_fairy_train_info_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_train_phy_atk()) {
      set_train_phy_atk(from.train_phy_atk());
    }
    if (from.has_train_mag_atk()) {
      set_train_mag_atk(from.train_mag_atk());
    }
    if (from.has_train_ski_atk()) {
      set_train_ski_atk(from.train_ski_atk());
    }
    if (from.has_train_phy_def()) {
      set_train_phy_def(from.train_phy_def());
    }
    if (from.has_train_mag_def()) {
      set_train_mag_def(from.train_mag_def());
    }
    if (from.has_train_ski_def()) {
      set_train_ski_def(from.train_ski_def());
    }
    if (from.has_train_hp()) {
      set_train_hp(from.train_hp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void inter_fairy_train_info_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inter_fairy_train_info_t::CopyFrom(const inter_fairy_train_info_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inter_fairy_train_info_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  
  return true;
}

void inter_fairy_train_info_t::Swap(inter_fairy_train_info_t* other) {
  if (other != this) {
    std::swap(train_phy_atk_, other->train_phy_atk_);
    std::swap(train_mag_atk_, other->train_mag_atk_);
    std::swap(train_ski_atk_, other->train_ski_atk_);
    std::swap(train_phy_def_, other->train_phy_def_);
    std::swap(train_mag_def_, other->train_mag_def_);
    std::swap(train_ski_def_, other->train_ski_def_);
    std::swap(train_hp_, other->train_hp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata inter_fairy_train_info_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = inter_fairy_train_info_t_descriptor_;
  metadata.reflection = inter_fairy_train_info_t_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterFairyInfo::kFairyPosFieldNumber;
const int InterFairyInfo::kFairyIdFieldNumber;
const int InterFairyInfo::kBasicInfoFieldNumber;
const int InterFairyInfo::kTrainInfoFieldNumber;
const int InterFairyInfo::kTrainCostFieldNumber;
#endif  // !_MSC_VER

InterFairyInfo::InterFairyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterFairyInfo::InitAsDefaultInstance() {
  basic_info_ = const_cast< ::inter_fairy_basic_info_t*>(&::inter_fairy_basic_info_t::default_instance());
  train_info_ = const_cast< ::inter_fairy_train_info_t*>(&::inter_fairy_train_info_t::default_instance());
}

InterFairyInfo::InterFairyInfo(const InterFairyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterFairyInfo::SharedCtor() {
  _cached_size_ = 0;
  fairy_pos_ = 0u;
  fairy_id_ = 0u;
  basic_info_ = NULL;
  train_info_ = NULL;
  train_cost_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterFairyInfo::~InterFairyInfo() {
  SharedDtor();
}

void InterFairyInfo::SharedDtor() {
  if (this != default_instance_) {
    delete basic_info_;
    delete train_info_;
  }
}

void InterFairyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterFairyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterFairyInfo_descriptor_;
}

const InterFairyInfo& InterFairyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterFairyInfo* InterFairyInfo::default_instance_ = NULL;

InterFairyInfo* InterFairyInfo::New() const {
  return new InterFairyInfo;
}

void InterFairyInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fairy_pos_ = 0u;
    fairy_id_ = 0u;
    if (has_basic_info()) {
      if (basic_info_ != NULL) basic_info_->::inter_fairy_basic_info_t::Clear();
    }
    if (has_train_info()) {
      if (train_info_ != NULL) train_info_->::inter_fairy_train_info_t::Clear();
    }
    train_cost_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterFairyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 fairy_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_pos_)));
          set_has_fairy_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fairy_id;
        break;
      }
      
      // required uint32 fairy_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fairy_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fairy_id_)));
          set_has_fairy_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_basic_info;
        break;
      }
      
      // required .inter_fairy_basic_info_t basic_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_basic_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_train_info;
        break;
      }
      
      // required .inter_fairy_train_info_t train_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_train_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_train_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_train_cost;
        break;
      }
      
      // required uint32 train_cost = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &train_cost_)));
          set_has_train_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterFairyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 fairy_pos = 1;
  if (has_fairy_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fairy_pos(), output);
  }
  
  // required uint32 fairy_id = 2;
  if (has_fairy_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fairy_id(), output);
  }
  
  // required .inter_fairy_basic_info_t basic_info = 3;
  if (has_basic_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->basic_info(), output);
  }
  
  // required .inter_fairy_train_info_t train_info = 4;
  if (has_train_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->train_info(), output);
  }
  
  // required uint32 train_cost = 5;
  if (has_train_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->train_cost(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterFairyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 fairy_pos = 1;
  if (has_fairy_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fairy_pos(), target);
  }
  
  // required uint32 fairy_id = 2;
  if (has_fairy_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fairy_id(), target);
  }
  
  // required .inter_fairy_basic_info_t basic_info = 3;
  if (has_basic_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->basic_info(), target);
  }
  
  // required .inter_fairy_train_info_t train_info = 4;
  if (has_train_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->train_info(), target);
  }
  
  // required uint32 train_cost = 5;
  if (has_train_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->train_cost(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterFairyInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 fairy_pos = 1;
    if (has_fairy_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_pos());
    }
    
    // required uint32 fairy_id = 2;
    if (has_fairy_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fairy_id());
    }
    
    // required .inter_fairy_basic_info_t basic_info = 3;
    if (has_basic_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->basic_info());
    }
    
    // required .inter_fairy_train_info_t train_info = 4;
    if (has_train_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->train_info());
    }
    
    // required uint32 train_cost = 5;
    if (has_train_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->train_cost());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterFairyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterFairyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterFairyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterFairyInfo::MergeFrom(const InterFairyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fairy_pos()) {
      set_fairy_pos(from.fairy_pos());
    }
    if (from.has_fairy_id()) {
      set_fairy_id(from.fairy_id());
    }
    if (from.has_basic_info()) {
      mutable_basic_info()->::inter_fairy_basic_info_t::MergeFrom(from.basic_info());
    }
    if (from.has_train_info()) {
      mutable_train_info()->::inter_fairy_train_info_t::MergeFrom(from.train_info());
    }
    if (from.has_train_cost()) {
      set_train_cost(from.train_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterFairyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterFairyInfo::CopyFrom(const InterFairyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterFairyInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  if (has_basic_info()) {
    if (!this->basic_info().IsInitialized()) return false;
  }
  if (has_train_info()) {
    if (!this->train_info().IsInitialized()) return false;
  }
  return true;
}

void InterFairyInfo::Swap(InterFairyInfo* other) {
  if (other != this) {
    std::swap(fairy_pos_, other->fairy_pos_);
    std::swap(fairy_id_, other->fairy_id_);
    std::swap(basic_info_, other->basic_info_);
    std::swap(train_info_, other->train_info_);
    std::swap(train_cost_, other->train_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterFairyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterFairyInfo_descriptor_;
  metadata.reflection = InterFairyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterSync::kUidFieldNumber;
const int InterSync::kRegTimeFieldNumber;
const int InterSync::kChannelIdFieldNumber;
const int InterSync::kUserinfoFieldNumber;
const int InterSync::kSkillinfoFieldNumber;
const int InterSync::kAttributeinfoFieldNumber;
const int InterSync::kIteminfoFieldNumber;
const int InterSync::kFairyinfoFieldNumber;
const int InterSync::kDataFieldNumber;
const int InterSync::kZoneIdFieldNumber;
#endif  // !_MSC_VER

InterSync::InterSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterSync::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::BasicUserInfo*>(&::BasicUserInfo::default_instance());
  skillinfo_ = const_cast< ::InterUserSkillInfo*>(&::InterUserSkillInfo::default_instance());
  attributeinfo_ = const_cast< ::InterAttributesInfo*>(&::InterAttributesInfo::default_instance());
  iteminfo_ = const_cast< ::InterItemInfo*>(&::InterItemInfo::default_instance());
}

InterSync::InterSync(const InterSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterSync::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  reg_time_ = 0u;
  channel_id_ = 0u;
  userinfo_ = NULL;
  skillinfo_ = NULL;
  attributeinfo_ = NULL;
  iteminfo_ = NULL;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  zone_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterSync::~InterSync() {
  SharedDtor();
}

void InterSync::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
    delete userinfo_;
    delete skillinfo_;
    delete attributeinfo_;
    delete iteminfo_;
  }
}

void InterSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterSync_descriptor_;
}

const InterSync& InterSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterSync* InterSync::default_instance_ = NULL;

InterSync* InterSync::New() const {
  return new InterSync;
}

void InterSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    reg_time_ = 0u;
    channel_id_ = 0u;
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
    }
    if (has_skillinfo()) {
      if (skillinfo_ != NULL) skillinfo_->::InterUserSkillInfo::Clear();
    }
    if (has_attributeinfo()) {
      if (attributeinfo_ != NULL) attributeinfo_->::InterAttributesInfo::Clear();
    }
    if (has_iteminfo()) {
      if (iteminfo_ != NULL) iteminfo_->::InterItemInfo::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
    zone_id_ = 0u;
  }
  fairyinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reg_time;
        break;
      }
      
      // required uint32 reg_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reg_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_time_)));
          set_has_reg_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_channel_id;
        break;
      }
      
      // required uint32 channel_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channel_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
          set_has_channel_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_userinfo;
        break;
      }
      
      // required .BasicUserInfo userinfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_skillinfo;
        break;
      }
      
      // required .InterUserSkillInfo skillinfo = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skillinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_attributeinfo;
        break;
      }
      
      // required .InterAttributesInfo attributeinfo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributeinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attributeinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_iteminfo;
        break;
      }
      
      // required .InterItemInfo iteminfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iteminfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_iteminfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_fairyinfo;
        break;
      }
      
      // repeated .InterFairyInfo fairyinfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fairyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fairyinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_fairyinfo;
        if (input->ExpectTag(74)) goto parse_data;
        break;
      }
      
      // optional bytes data = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_zone_id;
        break;
      }
      
      // required uint32 zone_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_zone_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zone_id_)));
          set_has_zone_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required uint32 reg_time = 2;
  if (has_reg_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reg_time(), output);
  }
  
  // required uint32 channel_id = 3;
  if (has_channel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->channel_id(), output);
  }
  
  // required .BasicUserInfo userinfo = 4;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->userinfo(), output);
  }
  
  // required .InterUserSkillInfo skillinfo = 5;
  if (has_skillinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->skillinfo(), output);
  }
  
  // required .InterAttributesInfo attributeinfo = 6;
  if (has_attributeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->attributeinfo(), output);
  }
  
  // required .InterItemInfo iteminfo = 7;
  if (has_iteminfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->iteminfo(), output);
  }
  
  // repeated .InterFairyInfo fairyinfo = 8;
  for (int i = 0; i < this->fairyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->fairyinfo(i), output);
  }
  
  // optional bytes data = 9;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->data(), output);
  }
  
  // required uint32 zone_id = 10;
  if (has_zone_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->zone_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required uint32 reg_time = 2;
  if (has_reg_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reg_time(), target);
  }
  
  // required uint32 channel_id = 3;
  if (has_channel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->channel_id(), target);
  }
  
  // required .BasicUserInfo userinfo = 4;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->userinfo(), target);
  }
  
  // required .InterUserSkillInfo skillinfo = 5;
  if (has_skillinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->skillinfo(), target);
  }
  
  // required .InterAttributesInfo attributeinfo = 6;
  if (has_attributeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->attributeinfo(), target);
  }
  
  // required .InterItemInfo iteminfo = 7;
  if (has_iteminfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->iteminfo(), target);
  }
  
  // repeated .InterFairyInfo fairyinfo = 8;
  for (int i = 0; i < this->fairyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->fairyinfo(i), target);
  }
  
  // optional bytes data = 9;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->data(), target);
  }
  
  // required uint32 zone_id = 10;
  if (has_zone_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->zone_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterSync::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required uint32 reg_time = 2;
    if (has_reg_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reg_time());
    }
    
    // required uint32 channel_id = 3;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel_id());
    }
    
    // required .BasicUserInfo userinfo = 4;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }
    
    // required .InterUserSkillInfo skillinfo = 5;
    if (has_skillinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skillinfo());
    }
    
    // required .InterAttributesInfo attributeinfo = 6;
    if (has_attributeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributeinfo());
    }
    
    // required .InterItemInfo iteminfo = 7;
    if (has_iteminfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->iteminfo());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes data = 9;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }
    
    // required uint32 zone_id = 10;
    if (has_zone_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zone_id());
    }
    
  }
  // repeated .InterFairyInfo fairyinfo = 8;
  total_size += 1 * this->fairyinfo_size();
  for (int i = 0; i < this->fairyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fairyinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterSync::MergeFrom(const InterSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  fairyinfo_.MergeFrom(from.fairyinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_reg_time()) {
      set_reg_time(from.reg_time());
    }
    if (from.has_channel_id()) {
      set_channel_id(from.channel_id());
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::BasicUserInfo::MergeFrom(from.userinfo());
    }
    if (from.has_skillinfo()) {
      mutable_skillinfo()->::InterUserSkillInfo::MergeFrom(from.skillinfo());
    }
    if (from.has_attributeinfo()) {
      mutable_attributeinfo()->::InterAttributesInfo::MergeFrom(from.attributeinfo());
    }
    if (from.has_iteminfo()) {
      mutable_iteminfo()->::InterItemInfo::MergeFrom(from.iteminfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_zone_id()) {
      set_zone_id(from.zone_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterSync::CopyFrom(const InterSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterSync::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000027f) != 0x0000027f) return false;
  
  if (has_userinfo()) {
    if (!this->userinfo().IsInitialized()) return false;
  }
  if (has_skillinfo()) {
    if (!this->skillinfo().IsInitialized()) return false;
  }
  if (has_attributeinfo()) {
    if (!this->attributeinfo().IsInitialized()) return false;
  }
  if (has_iteminfo()) {
    if (!this->iteminfo().IsInitialized()) return false;
  }
  for (int i = 0; i < fairyinfo_size(); i++) {
    if (!this->fairyinfo(i).IsInitialized()) return false;
  }
  return true;
}

void InterSync::Swap(InterSync* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(reg_time_, other->reg_time_);
    std::swap(channel_id_, other->channel_id_);
    std::swap(userinfo_, other->userinfo_);
    std::swap(skillinfo_, other->skillinfo_);
    std::swap(attributeinfo_, other->attributeinfo_);
    std::swap(iteminfo_, other->iteminfo_);
    fairyinfo_.Swap(&other->fairyinfo_);
    std::swap(data_, other->data_);
    std::swap(zone_id_, other->zone_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterSync_descriptor_;
  metadata.reflection = InterSync_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

InterOut::InterOut()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterOut::InitAsDefaultInstance() {
}

InterOut::InterOut(const InterOut& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterOut::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterOut::~InterOut() {
  SharedDtor();
}

void InterOut::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterOut::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterOut::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterOut_descriptor_;
}

const InterOut& InterOut::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterOut* InterOut::default_instance_ = NULL;

InterOut* InterOut::New() const {
  return new InterOut;
}

void InterOut::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void InterOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterOut::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterOut::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterOut::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterOut* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterOut*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterOut::MergeFrom(const InterOut& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterOut::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterOut::CopyFrom(const InterOut& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterOut::IsInitialized() const {
  
  return true;
}

void InterOut::Swap(InterOut* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterOut::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterOut_descriptor_;
  metadata.reflection = InterOut_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterDbSync::kMsgNameFieldNumber;
const int InterDbSync::kDataFieldNumber;
#endif  // !_MSC_VER

InterDbSync::InterDbSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InterDbSync::InitAsDefaultInstance() {
}

InterDbSync::InterDbSync(const InterDbSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InterDbSync::SharedCtor() {
  _cached_size_ = 0;
  msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterDbSync::~InterDbSync() {
  SharedDtor();
}

void InterDbSync::SharedDtor() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_name_;
  }
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void InterDbSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterDbSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterDbSync_descriptor_;
}

const InterDbSync& InterDbSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inter_2eproto();  return *default_instance_;
}

InterDbSync* InterDbSync::default_instance_ = NULL;

InterDbSync* InterDbSync::New() const {
  return new InterDbSync;
}

void InterDbSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_msg_name()) {
      if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
        msg_name_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterDbSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes msg_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }
      
      // required bytes data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InterDbSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes msg_name = 1;
  if (has_msg_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->msg_name(), output);
  }
  
  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InterDbSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes msg_name = 1;
  if (has_msg_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->msg_name(), target);
  }
  
  // required bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InterDbSync::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes msg_name = 1;
    if (has_msg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_name());
    }
    
    // required bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterDbSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterDbSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterDbSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterDbSync::MergeFrom(const InterDbSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_name()) {
      set_msg_name(from.msg_name());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterDbSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterDbSync::CopyFrom(const InterDbSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterDbSync::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void InterDbSync::Swap(InterDbSync* other) {
  if (other != this) {
    std::swap(msg_name_, other->msg_name_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterDbSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterDbSync_descriptor_;
  metadata.reflection = InterDbSync_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
