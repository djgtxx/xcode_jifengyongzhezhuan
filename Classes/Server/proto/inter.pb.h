// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inter.proto

#ifndef PROTOBUF_inter_2eproto__INCLUDED
#define PROTOBUF_inter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "head.pb.h"
#include "cs_core.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_inter_2eproto();
void protobuf_AssignDesc_inter_2eproto();
void protobuf_ShutdownFile_inter_2eproto();

class InterAttributesInfo;
class InterAttributesInfo_KeyValueDead;
class InterUserSkillInfo;
class InterUserSkillInfo_UserSkill;
class InterItemInfo;
class InterItemInfo_EquipHole;
class InterItemInfo_UserItem;
class inter_fairy_basic_info_t;
class inter_fairy_train_info_t;
class InterFairyInfo;
class InterSync;
class InterOut;
class InterDbSync;

// ===================================================================

class InterAttributesInfo_KeyValueDead : public ::google::protobuf::Message {
 public:
  InterAttributesInfo_KeyValueDead();
  virtual ~InterAttributesInfo_KeyValueDead();
  
  InterAttributesInfo_KeyValueDead(const InterAttributesInfo_KeyValueDead& from);
  
  inline InterAttributesInfo_KeyValueDead& operator=(const InterAttributesInfo_KeyValueDead& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterAttributesInfo_KeyValueDead& default_instance();
  
  void Swap(InterAttributesInfo_KeyValueDead* other);
  
  // implements Message ----------------------------------------------
  
  InterAttributesInfo_KeyValueDead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterAttributesInfo_KeyValueDead& from);
  void MergeFrom(const InterAttributesInfo_KeyValueDead& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // required uint32 dead_tm = 3;
  inline bool has_dead_tm() const;
  inline void clear_dead_tm();
  static const int kDeadTmFieldNumber = 3;
  inline ::google::protobuf::uint32 dead_tm() const;
  inline void set_dead_tm(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:InterAttributesInfo.KeyValueDead)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_dead_tm();
  inline void clear_has_dead_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 dead_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterAttributesInfo_KeyValueDead* default_instance_;
};
// -------------------------------------------------------------------

class InterAttributesInfo : public ::google::protobuf::Message {
 public:
  InterAttributesInfo();
  virtual ~InterAttributesInfo();
  
  InterAttributesInfo(const InterAttributesInfo& from);
  
  inline InterAttributesInfo& operator=(const InterAttributesInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterAttributesInfo& default_instance();
  
  void Swap(InterAttributesInfo* other);
  
  // implements Message ----------------------------------------------
  
  InterAttributesInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterAttributesInfo& from);
  void MergeFrom(const InterAttributesInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef InterAttributesInfo_KeyValueDead KeyValueDead;
  
  // accessors -------------------------------------------------------
  
  // repeated .InterAttributesInfo.KeyValueDead values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::InterAttributesInfo_KeyValueDead& values(int index) const;
  inline ::InterAttributesInfo_KeyValueDead* mutable_values(int index);
  inline ::InterAttributesInfo_KeyValueDead* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::InterAttributesInfo_KeyValueDead >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterAttributesInfo_KeyValueDead >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:InterAttributesInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::InterAttributesInfo_KeyValueDead > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterAttributesInfo* default_instance_;
};
// -------------------------------------------------------------------

class InterUserSkillInfo_UserSkill : public ::google::protobuf::Message {
 public:
  InterUserSkillInfo_UserSkill();
  virtual ~InterUserSkillInfo_UserSkill();
  
  InterUserSkillInfo_UserSkill(const InterUserSkillInfo_UserSkill& from);
  
  inline InterUserSkillInfo_UserSkill& operator=(const InterUserSkillInfo_UserSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterUserSkillInfo_UserSkill& default_instance();
  
  void Swap(InterUserSkillInfo_UserSkill* other);
  
  // implements Message ----------------------------------------------
  
  InterUserSkillInfo_UserSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterUserSkillInfo_UserSkill& from);
  void MergeFrom(const InterUserSkillInfo_UserSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:InterUserSkillInfo.UserSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterUserSkillInfo_UserSkill* default_instance_;
};
// -------------------------------------------------------------------

class InterUserSkillInfo : public ::google::protobuf::Message {
 public:
  InterUserSkillInfo();
  virtual ~InterUserSkillInfo();
  
  InterUserSkillInfo(const InterUserSkillInfo& from);
  
  inline InterUserSkillInfo& operator=(const InterUserSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterUserSkillInfo& default_instance();
  
  void Swap(InterUserSkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  InterUserSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterUserSkillInfo& from);
  void MergeFrom(const InterUserSkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef InterUserSkillInfo_UserSkill UserSkill;
  
  // accessors -------------------------------------------------------
  
  // repeated .InterUserSkillInfo.UserSkill skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::InterUserSkillInfo_UserSkill& skills(int index) const;
  inline ::InterUserSkillInfo_UserSkill* mutable_skills(int index);
  inline ::InterUserSkillInfo_UserSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::InterUserSkillInfo_UserSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterUserSkillInfo_UserSkill >*
      mutable_skills();
  
  // @@protoc_insertion_point(class_scope:InterUserSkillInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::InterUserSkillInfo_UserSkill > skills_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterUserSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class InterItemInfo_EquipHole : public ::google::protobuf::Message {
 public:
  InterItemInfo_EquipHole();
  virtual ~InterItemInfo_EquipHole();
  
  InterItemInfo_EquipHole(const InterItemInfo_EquipHole& from);
  
  inline InterItemInfo_EquipHole& operator=(const InterItemInfo_EquipHole& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterItemInfo_EquipHole& default_instance();
  
  void Swap(InterItemInfo_EquipHole* other);
  
  // implements Message ----------------------------------------------
  
  InterItemInfo_EquipHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterItemInfo_EquipHole& from);
  void MergeFrom(const InterItemInfo_EquipHole& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hole_index = 1;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);
  
  // required uint32 item_gem_id = 2;
  inline bool has_item_gem_id() const;
  inline void clear_item_gem_id();
  static const int kItemGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_gem_id() const;
  inline void set_item_gem_id(::google::protobuf::uint32 value);
  
  // required uint32 attr_key = 3;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);
  
  // required uint32 attr_value = 4;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_value() const;
  inline void set_attr_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:InterItemInfo.EquipHole)
 private:
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  inline void set_has_item_gem_id();
  inline void clear_has_item_gem_id();
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hole_index_;
  ::google::protobuf::uint32 item_gem_id_;
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterItemInfo_EquipHole* default_instance_;
};
// -------------------------------------------------------------------

class InterItemInfo_UserItem : public ::google::protobuf::Message {
 public:
  InterItemInfo_UserItem();
  virtual ~InterItemInfo_UserItem();
  
  InterItemInfo_UserItem(const InterItemInfo_UserItem& from);
  
  inline InterItemInfo_UserItem& operator=(const InterItemInfo_UserItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterItemInfo_UserItem& default_instance();
  
  void Swap(InterItemInfo_UserItem* other);
  
  // implements Message ----------------------------------------------
  
  InterItemInfo_UserItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterItemInfo_UserItem& from);
  void MergeFrom(const InterItemInfo_UserItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_level = 3;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 4;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // repeated .InterItemInfo.EquipHole equip_holes = 5;
  inline int equip_holes_size() const;
  inline void clear_equip_holes();
  static const int kEquipHolesFieldNumber = 5;
  inline const ::InterItemInfo_EquipHole& equip_holes(int index) const;
  inline ::InterItemInfo_EquipHole* mutable_equip_holes(int index);
  inline ::InterItemInfo_EquipHole* add_equip_holes();
  inline const ::google::protobuf::RepeatedPtrField< ::InterItemInfo_EquipHole >&
      equip_holes() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterItemInfo_EquipHole >*
      mutable_equip_holes();
  
  // @@protoc_insertion_point(class_scope:InterItemInfo.UserItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::RepeatedPtrField< ::InterItemInfo_EquipHole > equip_holes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterItemInfo_UserItem* default_instance_;
};
// -------------------------------------------------------------------

class InterItemInfo : public ::google::protobuf::Message {
 public:
  InterItemInfo();
  virtual ~InterItemInfo();
  
  InterItemInfo(const InterItemInfo& from);
  
  inline InterItemInfo& operator=(const InterItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterItemInfo& default_instance();
  
  void Swap(InterItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  InterItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterItemInfo& from);
  void MergeFrom(const InterItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef InterItemInfo_EquipHole EquipHole;
  typedef InterItemInfo_UserItem UserItem;
  
  // accessors -------------------------------------------------------
  
  // repeated .InterItemInfo.UserItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::InterItemInfo_UserItem& items(int index) const;
  inline ::InterItemInfo_UserItem* mutable_items(int index);
  inline ::InterItemInfo_UserItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::InterItemInfo_UserItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterItemInfo_UserItem >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:InterItemInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::InterItemInfo_UserItem > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class inter_fairy_basic_info_t : public ::google::protobuf::Message {
 public:
  inter_fairy_basic_info_t();
  virtual ~inter_fairy_basic_info_t();
  
  inter_fairy_basic_info_t(const inter_fairy_basic_info_t& from);
  
  inline inter_fairy_basic_info_t& operator=(const inter_fairy_basic_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const inter_fairy_basic_info_t& default_instance();
  
  void Swap(inter_fairy_basic_info_t* other);
  
  // implements Message ----------------------------------------------
  
  inter_fairy_basic_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const inter_fairy_basic_info_t& from);
  void MergeFrom(const inter_fairy_basic_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_lv = 1;
  inline bool has_fairy_lv() const;
  inline void clear_fairy_lv();
  static const int kFairyLvFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_lv() const;
  inline void set_fairy_lv(::google::protobuf::uint32 value);
  
  // required uint32 fairy_grade = 2;
  inline bool has_fairy_grade() const;
  inline void clear_fairy_grade();
  static const int kFairyGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 fairy_grade() const;
  inline void set_fairy_grade(::google::protobuf::uint32 value);
  
  // required uint32 fairy_status = 3;
  inline bool has_fairy_status() const;
  inline void clear_fairy_status();
  static const int kFairyStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 fairy_status() const;
  inline void set_fairy_status(::google::protobuf::uint32 value);
  
  // required uint32 fairy_exp = 4;
  inline bool has_fairy_exp() const;
  inline void clear_fairy_exp();
  static const int kFairyExpFieldNumber = 4;
  inline ::google::protobuf::uint32 fairy_exp() const;
  inline void set_fairy_exp(::google::protobuf::uint32 value);
  
  // required uint32 fairy_born_time = 5;
  inline bool has_fairy_born_time() const;
  inline void clear_fairy_born_time();
  static const int kFairyBornTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 fairy_born_time() const;
  inline void set_fairy_born_time(::google::protobuf::uint32 value);
  
  // required uint32 fairy_get_way = 6;
  inline bool has_fairy_get_way() const;
  inline void clear_fairy_get_way();
  static const int kFairyGetWayFieldNumber = 6;
  inline ::google::protobuf::uint32 fairy_get_way() const;
  inline void set_fairy_get_way(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:inter_fairy_basic_info_t)
 private:
  inline void set_has_fairy_lv();
  inline void clear_has_fairy_lv();
  inline void set_has_fairy_grade();
  inline void clear_has_fairy_grade();
  inline void set_has_fairy_status();
  inline void clear_has_fairy_status();
  inline void set_has_fairy_exp();
  inline void clear_has_fairy_exp();
  inline void set_has_fairy_born_time();
  inline void clear_has_fairy_born_time();
  inline void set_has_fairy_get_way();
  inline void clear_has_fairy_get_way();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_lv_;
  ::google::protobuf::uint32 fairy_grade_;
  ::google::protobuf::uint32 fairy_status_;
  ::google::protobuf::uint32 fairy_exp_;
  ::google::protobuf::uint32 fairy_born_time_;
  ::google::protobuf::uint32 fairy_get_way_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static inter_fairy_basic_info_t* default_instance_;
};
// -------------------------------------------------------------------

class inter_fairy_train_info_t : public ::google::protobuf::Message {
 public:
  inter_fairy_train_info_t();
  virtual ~inter_fairy_train_info_t();
  
  inter_fairy_train_info_t(const inter_fairy_train_info_t& from);
  
  inline inter_fairy_train_info_t& operator=(const inter_fairy_train_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const inter_fairy_train_info_t& default_instance();
  
  void Swap(inter_fairy_train_info_t* other);
  
  // implements Message ----------------------------------------------
  
  inter_fairy_train_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const inter_fairy_train_info_t& from);
  void MergeFrom(const inter_fairy_train_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 train_phy_atk = 1;
  inline bool has_train_phy_atk() const;
  inline void clear_train_phy_atk();
  static const int kTrainPhyAtkFieldNumber = 1;
  inline ::google::protobuf::int32 train_phy_atk() const;
  inline void set_train_phy_atk(::google::protobuf::int32 value);
  
  // required int32 train_mag_atk = 2;
  inline bool has_train_mag_atk() const;
  inline void clear_train_mag_atk();
  static const int kTrainMagAtkFieldNumber = 2;
  inline ::google::protobuf::int32 train_mag_atk() const;
  inline void set_train_mag_atk(::google::protobuf::int32 value);
  
  // required int32 train_ski_atk = 3;
  inline bool has_train_ski_atk() const;
  inline void clear_train_ski_atk();
  static const int kTrainSkiAtkFieldNumber = 3;
  inline ::google::protobuf::int32 train_ski_atk() const;
  inline void set_train_ski_atk(::google::protobuf::int32 value);
  
  // required int32 train_phy_def = 4;
  inline bool has_train_phy_def() const;
  inline void clear_train_phy_def();
  static const int kTrainPhyDefFieldNumber = 4;
  inline ::google::protobuf::int32 train_phy_def() const;
  inline void set_train_phy_def(::google::protobuf::int32 value);
  
  // required int32 train_mag_def = 5;
  inline bool has_train_mag_def() const;
  inline void clear_train_mag_def();
  static const int kTrainMagDefFieldNumber = 5;
  inline ::google::protobuf::int32 train_mag_def() const;
  inline void set_train_mag_def(::google::protobuf::int32 value);
  
  // required int32 train_ski_def = 6;
  inline bool has_train_ski_def() const;
  inline void clear_train_ski_def();
  static const int kTrainSkiDefFieldNumber = 6;
  inline ::google::protobuf::int32 train_ski_def() const;
  inline void set_train_ski_def(::google::protobuf::int32 value);
  
  // required int32 train_hp = 7;
  inline bool has_train_hp() const;
  inline void clear_train_hp();
  static const int kTrainHpFieldNumber = 7;
  inline ::google::protobuf::int32 train_hp() const;
  inline void set_train_hp(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:inter_fairy_train_info_t)
 private:
  inline void set_has_train_phy_atk();
  inline void clear_has_train_phy_atk();
  inline void set_has_train_mag_atk();
  inline void clear_has_train_mag_atk();
  inline void set_has_train_ski_atk();
  inline void clear_has_train_ski_atk();
  inline void set_has_train_phy_def();
  inline void clear_has_train_phy_def();
  inline void set_has_train_mag_def();
  inline void clear_has_train_mag_def();
  inline void set_has_train_ski_def();
  inline void clear_has_train_ski_def();
  inline void set_has_train_hp();
  inline void clear_has_train_hp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 train_phy_atk_;
  ::google::protobuf::int32 train_mag_atk_;
  ::google::protobuf::int32 train_ski_atk_;
  ::google::protobuf::int32 train_phy_def_;
  ::google::protobuf::int32 train_mag_def_;
  ::google::protobuf::int32 train_ski_def_;
  ::google::protobuf::int32 train_hp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static inter_fairy_train_info_t* default_instance_;
};
// -------------------------------------------------------------------

class InterFairyInfo : public ::google::protobuf::Message {
 public:
  InterFairyInfo();
  virtual ~InterFairyInfo();
  
  InterFairyInfo(const InterFairyInfo& from);
  
  inline InterFairyInfo& operator=(const InterFairyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterFairyInfo& default_instance();
  
  void Swap(InterFairyInfo* other);
  
  // implements Message ----------------------------------------------
  
  InterFairyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterFairyInfo& from);
  void MergeFrom(const InterFairyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fairy_pos = 1;
  inline bool has_fairy_pos() const;
  inline void clear_fairy_pos();
  static const int kFairyPosFieldNumber = 1;
  inline ::google::protobuf::uint32 fairy_pos() const;
  inline void set_fairy_pos(::google::protobuf::uint32 value);
  
  // required uint32 fairy_id = 2;
  inline bool has_fairy_id() const;
  inline void clear_fairy_id();
  static const int kFairyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 fairy_id() const;
  inline void set_fairy_id(::google::protobuf::uint32 value);
  
  // required .inter_fairy_basic_info_t basic_info = 3;
  inline bool has_basic_info() const;
  inline void clear_basic_info();
  static const int kBasicInfoFieldNumber = 3;
  inline const ::inter_fairy_basic_info_t& basic_info() const;
  inline ::inter_fairy_basic_info_t* mutable_basic_info();
  inline ::inter_fairy_basic_info_t* release_basic_info();
  
  // required .inter_fairy_train_info_t train_info = 4;
  inline bool has_train_info() const;
  inline void clear_train_info();
  static const int kTrainInfoFieldNumber = 4;
  inline const ::inter_fairy_train_info_t& train_info() const;
  inline ::inter_fairy_train_info_t* mutable_train_info();
  inline ::inter_fairy_train_info_t* release_train_info();
  
  // required uint32 train_cost = 5;
  inline bool has_train_cost() const;
  inline void clear_train_cost();
  static const int kTrainCostFieldNumber = 5;
  inline ::google::protobuf::uint32 train_cost() const;
  inline void set_train_cost(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:InterFairyInfo)
 private:
  inline void set_has_fairy_pos();
  inline void clear_has_fairy_pos();
  inline void set_has_fairy_id();
  inline void clear_has_fairy_id();
  inline void set_has_basic_info();
  inline void clear_has_basic_info();
  inline void set_has_train_info();
  inline void clear_has_train_info();
  inline void set_has_train_cost();
  inline void clear_has_train_cost();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fairy_pos_;
  ::google::protobuf::uint32 fairy_id_;
  ::inter_fairy_basic_info_t* basic_info_;
  ::inter_fairy_train_info_t* train_info_;
  ::google::protobuf::uint32 train_cost_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterFairyInfo* default_instance_;
};
// -------------------------------------------------------------------

class InterSync : public ::google::protobuf::Message {
 public:
  InterSync();
  virtual ~InterSync();
  
  InterSync(const InterSync& from);
  
  inline InterSync& operator=(const InterSync& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterSync& default_instance();
  
  void Swap(InterSync* other);
  
  // implements Message ----------------------------------------------
  
  InterSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterSync& from);
  void MergeFrom(const InterSync& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .BasicUserInfo userinfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 4;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  
  // required .InterUserSkillInfo skillinfo = 5;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillinfoFieldNumber = 5;
  inline const ::InterUserSkillInfo& skillinfo() const;
  inline ::InterUserSkillInfo* mutable_skillinfo();
  inline ::InterUserSkillInfo* release_skillinfo();
  
  // required .InterAttributesInfo attributeinfo = 6;
  inline bool has_attributeinfo() const;
  inline void clear_attributeinfo();
  static const int kAttributeinfoFieldNumber = 6;
  inline const ::InterAttributesInfo& attributeinfo() const;
  inline ::InterAttributesInfo* mutable_attributeinfo();
  inline ::InterAttributesInfo* release_attributeinfo();
  
  // required .InterItemInfo iteminfo = 7;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 7;
  inline const ::InterItemInfo& iteminfo() const;
  inline ::InterItemInfo* mutable_iteminfo();
  inline ::InterItemInfo* release_iteminfo();
  
  // repeated .InterFairyInfo fairyinfo = 8;
  inline int fairyinfo_size() const;
  inline void clear_fairyinfo();
  static const int kFairyinfoFieldNumber = 8;
  inline const ::InterFairyInfo& fairyinfo(int index) const;
  inline ::InterFairyInfo* mutable_fairyinfo(int index);
  inline ::InterFairyInfo* add_fairyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::InterFairyInfo >&
      fairyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterFairyInfo >*
      mutable_fairyinfo();
  
  // optional bytes data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  // required uint32 zone_id = 10;
  inline bool has_zone_id() const;
  inline void clear_zone_id();
  static const int kZoneIdFieldNumber = 10;
  inline ::google::protobuf::uint32 zone_id() const;
  inline void set_zone_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:InterSync)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_skillinfo();
  inline void clear_has_skillinfo();
  inline void set_has_attributeinfo();
  inline void clear_has_attributeinfo();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_zone_id();
  inline void clear_has_zone_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::BasicUserInfo* userinfo_;
  ::InterUserSkillInfo* skillinfo_;
  ::InterAttributesInfo* attributeinfo_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 zone_id_;
  ::InterItemInfo* iteminfo_;
  ::google::protobuf::RepeatedPtrField< ::InterFairyInfo > fairyinfo_;
  ::std::string* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterSync* default_instance_;
};
// -------------------------------------------------------------------

class InterOut : public ::google::protobuf::Message {
 public:
  InterOut();
  virtual ~InterOut();
  
  InterOut(const InterOut& from);
  
  inline InterOut& operator=(const InterOut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterOut& default_instance();
  
  void Swap(InterOut* other);
  
  // implements Message ----------------------------------------------
  
  InterOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterOut& from);
  void MergeFrom(const InterOut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:InterOut)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterOut* default_instance_;
};
// -------------------------------------------------------------------

class InterDbSync : public ::google::protobuf::Message {
 public:
  InterDbSync();
  virtual ~InterDbSync();
  
  InterDbSync(const InterDbSync& from);
  
  inline InterDbSync& operator=(const InterDbSync& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterDbSync& default_instance();
  
  void Swap(InterDbSync* other);
  
  // implements Message ----------------------------------------------
  
  InterDbSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterDbSync& from);
  void MergeFrom(const InterDbSync& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes msg_name = 1;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 1;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const void* value, size_t size);
  inline ::std::string* mutable_msg_name();
  inline ::std::string* release_msg_name();
  
  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  // @@protoc_insertion_point(class_scope:InterDbSync)
 private:
  inline void set_has_msg_name();
  inline void clear_has_msg_name();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* msg_name_;
  ::std::string* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_inter_2eproto();
  friend void protobuf_AssignDesc_inter_2eproto();
  friend void protobuf_ShutdownFile_inter_2eproto();
  
  void InitAsDefaultInstance();
  static InterDbSync* default_instance_;
};
// ===================================================================


// ===================================================================

// InterAttributesInfo_KeyValueDead

// required uint32 key = 1;
inline bool InterAttributesInfo_KeyValueDead::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterAttributesInfo_KeyValueDead::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterAttributesInfo_KeyValueDead::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterAttributesInfo_KeyValueDead::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 InterAttributesInfo_KeyValueDead::key() const {
  return key_;
}
inline void InterAttributesInfo_KeyValueDead::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool InterAttributesInfo_KeyValueDead::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterAttributesInfo_KeyValueDead::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterAttributesInfo_KeyValueDead::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterAttributesInfo_KeyValueDead::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 InterAttributesInfo_KeyValueDead::value() const {
  return value_;
}
inline void InterAttributesInfo_KeyValueDead::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// required uint32 dead_tm = 3;
inline bool InterAttributesInfo_KeyValueDead::has_dead_tm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterAttributesInfo_KeyValueDead::set_has_dead_tm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterAttributesInfo_KeyValueDead::clear_has_dead_tm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterAttributesInfo_KeyValueDead::clear_dead_tm() {
  dead_tm_ = 0u;
  clear_has_dead_tm();
}
inline ::google::protobuf::uint32 InterAttributesInfo_KeyValueDead::dead_tm() const {
  return dead_tm_;
}
inline void InterAttributesInfo_KeyValueDead::set_dead_tm(::google::protobuf::uint32 value) {
  set_has_dead_tm();
  dead_tm_ = value;
}

// -------------------------------------------------------------------

// InterAttributesInfo

// repeated .InterAttributesInfo.KeyValueDead values = 1;
inline int InterAttributesInfo::values_size() const {
  return values_.size();
}
inline void InterAttributesInfo::clear_values() {
  values_.Clear();
}
inline const ::InterAttributesInfo_KeyValueDead& InterAttributesInfo::values(int index) const {
  return values_.Get(index);
}
inline ::InterAttributesInfo_KeyValueDead* InterAttributesInfo::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::InterAttributesInfo_KeyValueDead* InterAttributesInfo::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterAttributesInfo_KeyValueDead >&
InterAttributesInfo::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterAttributesInfo_KeyValueDead >*
InterAttributesInfo::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// InterUserSkillInfo_UserSkill

// required uint32 id = 1;
inline bool InterUserSkillInfo_UserSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterUserSkillInfo_UserSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterUserSkillInfo_UserSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterUserSkillInfo_UserSkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 InterUserSkillInfo_UserSkill::id() const {
  return id_;
}
inline void InterUserSkillInfo_UserSkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool InterUserSkillInfo_UserSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterUserSkillInfo_UserSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterUserSkillInfo_UserSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterUserSkillInfo_UserSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 InterUserSkillInfo_UserSkill::level() const {
  return level_;
}
inline void InterUserSkillInfo_UserSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// InterUserSkillInfo

// repeated .InterUserSkillInfo.UserSkill skills = 1;
inline int InterUserSkillInfo::skills_size() const {
  return skills_.size();
}
inline void InterUserSkillInfo::clear_skills() {
  skills_.Clear();
}
inline const ::InterUserSkillInfo_UserSkill& InterUserSkillInfo::skills(int index) const {
  return skills_.Get(index);
}
inline ::InterUserSkillInfo_UserSkill* InterUserSkillInfo::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::InterUserSkillInfo_UserSkill* InterUserSkillInfo::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterUserSkillInfo_UserSkill >&
InterUserSkillInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterUserSkillInfo_UserSkill >*
InterUserSkillInfo::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// InterItemInfo_EquipHole

// required uint32 hole_index = 1;
inline bool InterItemInfo_EquipHole::has_hole_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterItemInfo_EquipHole::set_has_hole_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterItemInfo_EquipHole::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterItemInfo_EquipHole::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 InterItemInfo_EquipHole::hole_index() const {
  return hole_index_;
}
inline void InterItemInfo_EquipHole::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// required uint32 item_gem_id = 2;
inline bool InterItemInfo_EquipHole::has_item_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterItemInfo_EquipHole::set_has_item_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterItemInfo_EquipHole::clear_has_item_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterItemInfo_EquipHole::clear_item_gem_id() {
  item_gem_id_ = 0u;
  clear_has_item_gem_id();
}
inline ::google::protobuf::uint32 InterItemInfo_EquipHole::item_gem_id() const {
  return item_gem_id_;
}
inline void InterItemInfo_EquipHole::set_item_gem_id(::google::protobuf::uint32 value) {
  set_has_item_gem_id();
  item_gem_id_ = value;
}

// required uint32 attr_key = 3;
inline bool InterItemInfo_EquipHole::has_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterItemInfo_EquipHole::set_has_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterItemInfo_EquipHole::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterItemInfo_EquipHole::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 InterItemInfo_EquipHole::attr_key() const {
  return attr_key_;
}
inline void InterItemInfo_EquipHole::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_value = 4;
inline bool InterItemInfo_EquipHole::has_attr_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InterItemInfo_EquipHole::set_has_attr_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InterItemInfo_EquipHole::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InterItemInfo_EquipHole::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
inline ::google::protobuf::uint32 InterItemInfo_EquipHole::attr_value() const {
  return attr_value_;
}
inline void InterItemInfo_EquipHole::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
}

// -------------------------------------------------------------------

// InterItemInfo_UserItem

// required uint32 pos = 1;
inline bool InterItemInfo_UserItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterItemInfo_UserItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterItemInfo_UserItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterItemInfo_UserItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 InterItemInfo_UserItem::pos() const {
  return pos_;
}
inline void InterItemInfo_UserItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool InterItemInfo_UserItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterItemInfo_UserItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterItemInfo_UserItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterItemInfo_UserItem::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 InterItemInfo_UserItem::item_id() const {
  return item_id_;
}
inline void InterItemInfo_UserItem::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_level = 3;
inline bool InterItemInfo_UserItem::has_item_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterItemInfo_UserItem::set_has_item_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterItemInfo_UserItem::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterItemInfo_UserItem::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 InterItemInfo_UserItem::item_level() const {
  return item_level_;
}
inline void InterItemInfo_UserItem::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// required uint32 item_num = 4;
inline bool InterItemInfo_UserItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InterItemInfo_UserItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InterItemInfo_UserItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InterItemInfo_UserItem::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 InterItemInfo_UserItem::item_num() const {
  return item_num_;
}
inline void InterItemInfo_UserItem::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// repeated .InterItemInfo.EquipHole equip_holes = 5;
inline int InterItemInfo_UserItem::equip_holes_size() const {
  return equip_holes_.size();
}
inline void InterItemInfo_UserItem::clear_equip_holes() {
  equip_holes_.Clear();
}
inline const ::InterItemInfo_EquipHole& InterItemInfo_UserItem::equip_holes(int index) const {
  return equip_holes_.Get(index);
}
inline ::InterItemInfo_EquipHole* InterItemInfo_UserItem::mutable_equip_holes(int index) {
  return equip_holes_.Mutable(index);
}
inline ::InterItemInfo_EquipHole* InterItemInfo_UserItem::add_equip_holes() {
  return equip_holes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterItemInfo_EquipHole >&
InterItemInfo_UserItem::equip_holes() const {
  return equip_holes_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterItemInfo_EquipHole >*
InterItemInfo_UserItem::mutable_equip_holes() {
  return &equip_holes_;
}

// -------------------------------------------------------------------

// InterItemInfo

// repeated .InterItemInfo.UserItem items = 1;
inline int InterItemInfo::items_size() const {
  return items_.size();
}
inline void InterItemInfo::clear_items() {
  items_.Clear();
}
inline const ::InterItemInfo_UserItem& InterItemInfo::items(int index) const {
  return items_.Get(index);
}
inline ::InterItemInfo_UserItem* InterItemInfo::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::InterItemInfo_UserItem* InterItemInfo::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterItemInfo_UserItem >&
InterItemInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterItemInfo_UserItem >*
InterItemInfo::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// inter_fairy_basic_info_t

// required uint32 fairy_lv = 1;
inline bool inter_fairy_basic_info_t::has_fairy_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inter_fairy_basic_info_t::clear_fairy_lv() {
  fairy_lv_ = 0u;
  clear_has_fairy_lv();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_lv() const {
  return fairy_lv_;
}
inline void inter_fairy_basic_info_t::set_fairy_lv(::google::protobuf::uint32 value) {
  set_has_fairy_lv();
  fairy_lv_ = value;
}

// required uint32 fairy_grade = 2;
inline bool inter_fairy_basic_info_t::has_fairy_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inter_fairy_basic_info_t::clear_fairy_grade() {
  fairy_grade_ = 0u;
  clear_has_fairy_grade();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_grade() const {
  return fairy_grade_;
}
inline void inter_fairy_basic_info_t::set_fairy_grade(::google::protobuf::uint32 value) {
  set_has_fairy_grade();
  fairy_grade_ = value;
}

// required uint32 fairy_status = 3;
inline bool inter_fairy_basic_info_t::has_fairy_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void inter_fairy_basic_info_t::clear_fairy_status() {
  fairy_status_ = 0u;
  clear_has_fairy_status();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_status() const {
  return fairy_status_;
}
inline void inter_fairy_basic_info_t::set_fairy_status(::google::protobuf::uint32 value) {
  set_has_fairy_status();
  fairy_status_ = value;
}

// required uint32 fairy_exp = 4;
inline bool inter_fairy_basic_info_t::has_fairy_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void inter_fairy_basic_info_t::clear_fairy_exp() {
  fairy_exp_ = 0u;
  clear_has_fairy_exp();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_exp() const {
  return fairy_exp_;
}
inline void inter_fairy_basic_info_t::set_fairy_exp(::google::protobuf::uint32 value) {
  set_has_fairy_exp();
  fairy_exp_ = value;
}

// required uint32 fairy_born_time = 5;
inline bool inter_fairy_basic_info_t::has_fairy_born_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_born_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_born_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void inter_fairy_basic_info_t::clear_fairy_born_time() {
  fairy_born_time_ = 0u;
  clear_has_fairy_born_time();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_born_time() const {
  return fairy_born_time_;
}
inline void inter_fairy_basic_info_t::set_fairy_born_time(::google::protobuf::uint32 value) {
  set_has_fairy_born_time();
  fairy_born_time_ = value;
}

// required uint32 fairy_get_way = 6;
inline bool inter_fairy_basic_info_t::has_fairy_get_way() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void inter_fairy_basic_info_t::set_has_fairy_get_way() {
  _has_bits_[0] |= 0x00000020u;
}
inline void inter_fairy_basic_info_t::clear_has_fairy_get_way() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void inter_fairy_basic_info_t::clear_fairy_get_way() {
  fairy_get_way_ = 0u;
  clear_has_fairy_get_way();
}
inline ::google::protobuf::uint32 inter_fairy_basic_info_t::fairy_get_way() const {
  return fairy_get_way_;
}
inline void inter_fairy_basic_info_t::set_fairy_get_way(::google::protobuf::uint32 value) {
  set_has_fairy_get_way();
  fairy_get_way_ = value;
}

// -------------------------------------------------------------------

// inter_fairy_train_info_t

// required int32 train_phy_atk = 1;
inline bool inter_fairy_train_info_t::has_train_phy_atk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_phy_atk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void inter_fairy_train_info_t::clear_has_train_phy_atk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void inter_fairy_train_info_t::clear_train_phy_atk() {
  train_phy_atk_ = 0;
  clear_has_train_phy_atk();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_phy_atk() const {
  return train_phy_atk_;
}
inline void inter_fairy_train_info_t::set_train_phy_atk(::google::protobuf::int32 value) {
  set_has_train_phy_atk();
  train_phy_atk_ = value;
}

// required int32 train_mag_atk = 2;
inline bool inter_fairy_train_info_t::has_train_mag_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_mag_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void inter_fairy_train_info_t::clear_has_train_mag_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void inter_fairy_train_info_t::clear_train_mag_atk() {
  train_mag_atk_ = 0;
  clear_has_train_mag_atk();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_mag_atk() const {
  return train_mag_atk_;
}
inline void inter_fairy_train_info_t::set_train_mag_atk(::google::protobuf::int32 value) {
  set_has_train_mag_atk();
  train_mag_atk_ = value;
}

// required int32 train_ski_atk = 3;
inline bool inter_fairy_train_info_t::has_train_ski_atk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_ski_atk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void inter_fairy_train_info_t::clear_has_train_ski_atk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void inter_fairy_train_info_t::clear_train_ski_atk() {
  train_ski_atk_ = 0;
  clear_has_train_ski_atk();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_ski_atk() const {
  return train_ski_atk_;
}
inline void inter_fairy_train_info_t::set_train_ski_atk(::google::protobuf::int32 value) {
  set_has_train_ski_atk();
  train_ski_atk_ = value;
}

// required int32 train_phy_def = 4;
inline bool inter_fairy_train_info_t::has_train_phy_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_phy_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void inter_fairy_train_info_t::clear_has_train_phy_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void inter_fairy_train_info_t::clear_train_phy_def() {
  train_phy_def_ = 0;
  clear_has_train_phy_def();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_phy_def() const {
  return train_phy_def_;
}
inline void inter_fairy_train_info_t::set_train_phy_def(::google::protobuf::int32 value) {
  set_has_train_phy_def();
  train_phy_def_ = value;
}

// required int32 train_mag_def = 5;
inline bool inter_fairy_train_info_t::has_train_mag_def() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_mag_def() {
  _has_bits_[0] |= 0x00000010u;
}
inline void inter_fairy_train_info_t::clear_has_train_mag_def() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void inter_fairy_train_info_t::clear_train_mag_def() {
  train_mag_def_ = 0;
  clear_has_train_mag_def();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_mag_def() const {
  return train_mag_def_;
}
inline void inter_fairy_train_info_t::set_train_mag_def(::google::protobuf::int32 value) {
  set_has_train_mag_def();
  train_mag_def_ = value;
}

// required int32 train_ski_def = 6;
inline bool inter_fairy_train_info_t::has_train_ski_def() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_ski_def() {
  _has_bits_[0] |= 0x00000020u;
}
inline void inter_fairy_train_info_t::clear_has_train_ski_def() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void inter_fairy_train_info_t::clear_train_ski_def() {
  train_ski_def_ = 0;
  clear_has_train_ski_def();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_ski_def() const {
  return train_ski_def_;
}
inline void inter_fairy_train_info_t::set_train_ski_def(::google::protobuf::int32 value) {
  set_has_train_ski_def();
  train_ski_def_ = value;
}

// required int32 train_hp = 7;
inline bool inter_fairy_train_info_t::has_train_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void inter_fairy_train_info_t::set_has_train_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void inter_fairy_train_info_t::clear_has_train_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void inter_fairy_train_info_t::clear_train_hp() {
  train_hp_ = 0;
  clear_has_train_hp();
}
inline ::google::protobuf::int32 inter_fairy_train_info_t::train_hp() const {
  return train_hp_;
}
inline void inter_fairy_train_info_t::set_train_hp(::google::protobuf::int32 value) {
  set_has_train_hp();
  train_hp_ = value;
}

// -------------------------------------------------------------------

// InterFairyInfo

// required uint32 fairy_pos = 1;
inline bool InterFairyInfo::has_fairy_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterFairyInfo::set_has_fairy_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterFairyInfo::clear_has_fairy_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterFairyInfo::clear_fairy_pos() {
  fairy_pos_ = 0u;
  clear_has_fairy_pos();
}
inline ::google::protobuf::uint32 InterFairyInfo::fairy_pos() const {
  return fairy_pos_;
}
inline void InterFairyInfo::set_fairy_pos(::google::protobuf::uint32 value) {
  set_has_fairy_pos();
  fairy_pos_ = value;
}

// required uint32 fairy_id = 2;
inline bool InterFairyInfo::has_fairy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterFairyInfo::set_has_fairy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterFairyInfo::clear_has_fairy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterFairyInfo::clear_fairy_id() {
  fairy_id_ = 0u;
  clear_has_fairy_id();
}
inline ::google::protobuf::uint32 InterFairyInfo::fairy_id() const {
  return fairy_id_;
}
inline void InterFairyInfo::set_fairy_id(::google::protobuf::uint32 value) {
  set_has_fairy_id();
  fairy_id_ = value;
}

// required .inter_fairy_basic_info_t basic_info = 3;
inline bool InterFairyInfo::has_basic_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterFairyInfo::set_has_basic_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterFairyInfo::clear_has_basic_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterFairyInfo::clear_basic_info() {
  if (basic_info_ != NULL) basic_info_->::inter_fairy_basic_info_t::Clear();
  clear_has_basic_info();
}
inline const ::inter_fairy_basic_info_t& InterFairyInfo::basic_info() const {
  return basic_info_ != NULL ? *basic_info_ : *default_instance_->basic_info_;
}
inline ::inter_fairy_basic_info_t* InterFairyInfo::mutable_basic_info() {
  set_has_basic_info();
  if (basic_info_ == NULL) basic_info_ = new ::inter_fairy_basic_info_t;
  return basic_info_;
}
inline ::inter_fairy_basic_info_t* InterFairyInfo::release_basic_info() {
  clear_has_basic_info();
  ::inter_fairy_basic_info_t* temp = basic_info_;
  basic_info_ = NULL;
  return temp;
}

// required .inter_fairy_train_info_t train_info = 4;
inline bool InterFairyInfo::has_train_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InterFairyInfo::set_has_train_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InterFairyInfo::clear_has_train_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InterFairyInfo::clear_train_info() {
  if (train_info_ != NULL) train_info_->::inter_fairy_train_info_t::Clear();
  clear_has_train_info();
}
inline const ::inter_fairy_train_info_t& InterFairyInfo::train_info() const {
  return train_info_ != NULL ? *train_info_ : *default_instance_->train_info_;
}
inline ::inter_fairy_train_info_t* InterFairyInfo::mutable_train_info() {
  set_has_train_info();
  if (train_info_ == NULL) train_info_ = new ::inter_fairy_train_info_t;
  return train_info_;
}
inline ::inter_fairy_train_info_t* InterFairyInfo::release_train_info() {
  clear_has_train_info();
  ::inter_fairy_train_info_t* temp = train_info_;
  train_info_ = NULL;
  return temp;
}

// required uint32 train_cost = 5;
inline bool InterFairyInfo::has_train_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InterFairyInfo::set_has_train_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InterFairyInfo::clear_has_train_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InterFairyInfo::clear_train_cost() {
  train_cost_ = 0u;
  clear_has_train_cost();
}
inline ::google::protobuf::uint32 InterFairyInfo::train_cost() const {
  return train_cost_;
}
inline void InterFairyInfo::set_train_cost(::google::protobuf::uint32 value) {
  set_has_train_cost();
  train_cost_ = value;
}

// -------------------------------------------------------------------

// InterSync

// required uint32 uid = 1;
inline bool InterSync::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterSync::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterSync::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterSync::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 InterSync::uid() const {
  return uid_;
}
inline void InterSync::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool InterSync::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterSync::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterSync::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterSync::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 InterSync::reg_time() const {
  return reg_time_;
}
inline void InterSync::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool InterSync::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterSync::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterSync::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterSync::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 InterSync::channel_id() const {
  return channel_id_;
}
inline void InterSync::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .BasicUserInfo userinfo = 4;
inline bool InterSync::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InterSync::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InterSync::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InterSync::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& InterSync::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* InterSync::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* InterSync::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}

// required .InterUserSkillInfo skillinfo = 5;
inline bool InterSync::has_skillinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InterSync::set_has_skillinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InterSync::clear_has_skillinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InterSync::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::InterUserSkillInfo::Clear();
  clear_has_skillinfo();
}
inline const ::InterUserSkillInfo& InterSync::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::InterUserSkillInfo* InterSync::mutable_skillinfo() {
  set_has_skillinfo();
  if (skillinfo_ == NULL) skillinfo_ = new ::InterUserSkillInfo;
  return skillinfo_;
}
inline ::InterUserSkillInfo* InterSync::release_skillinfo() {
  clear_has_skillinfo();
  ::InterUserSkillInfo* temp = skillinfo_;
  skillinfo_ = NULL;
  return temp;
}

// required .InterAttributesInfo attributeinfo = 6;
inline bool InterSync::has_attributeinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InterSync::set_has_attributeinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InterSync::clear_has_attributeinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InterSync::clear_attributeinfo() {
  if (attributeinfo_ != NULL) attributeinfo_->::InterAttributesInfo::Clear();
  clear_has_attributeinfo();
}
inline const ::InterAttributesInfo& InterSync::attributeinfo() const {
  return attributeinfo_ != NULL ? *attributeinfo_ : *default_instance_->attributeinfo_;
}
inline ::InterAttributesInfo* InterSync::mutable_attributeinfo() {
  set_has_attributeinfo();
  if (attributeinfo_ == NULL) attributeinfo_ = new ::InterAttributesInfo;
  return attributeinfo_;
}
inline ::InterAttributesInfo* InterSync::release_attributeinfo() {
  clear_has_attributeinfo();
  ::InterAttributesInfo* temp = attributeinfo_;
  attributeinfo_ = NULL;
  return temp;
}

// required .InterItemInfo iteminfo = 7;
inline bool InterSync::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InterSync::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InterSync::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InterSync::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::InterItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::InterItemInfo& InterSync::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::InterItemInfo* InterSync::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::InterItemInfo;
  return iteminfo_;
}
inline ::InterItemInfo* InterSync::release_iteminfo() {
  clear_has_iteminfo();
  ::InterItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}

// repeated .InterFairyInfo fairyinfo = 8;
inline int InterSync::fairyinfo_size() const {
  return fairyinfo_.size();
}
inline void InterSync::clear_fairyinfo() {
  fairyinfo_.Clear();
}
inline const ::InterFairyInfo& InterSync::fairyinfo(int index) const {
  return fairyinfo_.Get(index);
}
inline ::InterFairyInfo* InterSync::mutable_fairyinfo(int index) {
  return fairyinfo_.Mutable(index);
}
inline ::InterFairyInfo* InterSync::add_fairyinfo() {
  return fairyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterFairyInfo >&
InterSync::fairyinfo() const {
  return fairyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterFairyInfo >*
InterSync::mutable_fairyinfo() {
  return &fairyinfo_;
}

// optional bytes data = 9;
inline bool InterSync::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InterSync::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InterSync::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InterSync::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& InterSync::data() const {
  return *data_;
}
inline void InterSync::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void InterSync::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void InterSync::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InterSync::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* InterSync::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 zone_id = 10;
inline bool InterSync::has_zone_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InterSync::set_has_zone_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InterSync::clear_has_zone_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InterSync::clear_zone_id() {
  zone_id_ = 0u;
  clear_has_zone_id();
}
inline ::google::protobuf::uint32 InterSync::zone_id() const {
  return zone_id_;
}
inline void InterSync::set_zone_id(::google::protobuf::uint32 value) {
  set_has_zone_id();
  zone_id_ = value;
}

// -------------------------------------------------------------------

// InterOut

// -------------------------------------------------------------------

// InterDbSync

// required bytes msg_name = 1;
inline bool InterDbSync::has_msg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterDbSync::set_has_msg_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterDbSync::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterDbSync::clear_msg_name() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_name_->clear();
  }
  clear_has_msg_name();
}
inline const ::std::string& InterDbSync::msg_name() const {
  return *msg_name_;
}
inline void InterDbSync::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void InterDbSync::set_msg_name(const char* value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void InterDbSync::set_msg_name(const void* value, size_t size) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InterDbSync::mutable_msg_name() {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}
inline ::std::string* InterDbSync::release_msg_name() {
  clear_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_name_;
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes data = 2;
inline bool InterDbSync::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterDbSync::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterDbSync::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterDbSync::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& InterDbSync::data() const {
  return *data_;
}
inline void InterDbSync::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void InterDbSync::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void InterDbSync::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InterDbSync::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* InterDbSync::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_inter_2eproto__INCLUDED
