// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iAd.cs.proto

#ifndef PROTOBUF_iAd_2ecs_2eproto__INCLUDED
#define PROTOBUF_iAd_2ecs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace iAdCSProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_iAd_2ecs_2eproto();
void protobuf_AssignDesc_iAd_2ecs_2eproto();
void protobuf_ShutdownFile_iAd_2ecs_2eproto();

class cs_empty_msg_t;
class cs_msg_head_t;
class ack_errcode_t;
class cli_echo_req_t;
class cli_echo_rsp_t;
class login_req_t;
class login_mon_ev_info_t;
class login_mon_btl_attr_t;
class login_mon_moves_info_t;
class login_mon_info_t;
class login_rsp_t;
class player_enter_map_req_t;
class player_enter_map_rsp_t;
class broadcast_player_enter_map_t;
class player_leave_map_req_t;
class player_leave_map_rsp_t;
class broadcast_player_leave_map_t;
class map_player_walk_req_t;
class map_player_walk_rsp_t;
class broadcast_map_player_walk_t;
class get_map_player_list_req_t;
class get_map_player_list_rsp_t;
class get_map_player_list_rsp_t_simple_player_info_t;
class player_change_nick_req_t;
class player_change_nick_rsp_t;
class broadcast_player_new_nick_t;
class avatar_attr_info_t;
class player_item_info_t;
class get_player_items_req_t;
class get_player_items_rsp_t;
class use_normal_item_req_t;
class use_normal_item_rsp_t;
class use_monster_item_req_t;
class use_monster_item_rsp_t;
class cli_add_items_noti_t;
class cli_drop_items_req_t;
class cli_drop_items_rsp_t;
class mail_head_t;
class send_mail_req_t;
class send_mail_rsp_t;
class get_mail_head_list_req_t;
class get_mail_head_list_rsp_t;
class get_mail_body_req_t;
class get_mail_body_rsp_t;
class del_mail_req_t;
class del_mail_rsp_t;
class get_mail_enclosure_req_t;
class get_mail_enclosure_rsp_t;
class player_new_mail_noti_t;
class obtain_task_req_t;
class obtain_task_rsp_t;
class cancel_task_req_t;
class cancel_task_rsp_t;
class finish_task_req_t;
class finish_task_rsp_t;
class task_flag_t;
class task_buff_t;
class get_task_flag_list_req_t;
class get_task_flag_list_rsp_t;
class get_task_buff_list_req_t;
class get_task_buff_list_rsp_t;
class pb_cs_task_info_t;
class get_task_list_req_t;
class get_task_list_rsp_t;
class set_task_step_req_t;
class set_task_step_rsp_t;
class start_battle_pve_in_t;
class start_battle_pve_out_t;
class player_ready_in_t;
class player_ready_out_t;
class select_move_in_t;
class select_move_out_t;
class btl_notify_absorb_gain_exp_out_t;
class btl_notify_absorb_gain_exp_out_t_mon_info_t;
class btl_notify_battle_end_out_t;

enum cs_err_code_t {
  CS_ERR_NO_ERROR = 0,
  CS_ERR_INV_PKGLEN = 1,
  CS_ERR_UNSUPPORTED_MSG = 2,
  CS_ERR_NOT_ALLOWED_LOGIN = 3,
  CS_ERR_NOT_ENOUGH_RES_FOR_PLAYER = 4,
  CS_ERR_UNSUPPORTED_MSG_TYPE = 5,
  CS_ERR_NOFOUND_PLAYER = 6,
  CS_ERR_SESS_AUTH_FAILED = 7,
  CS_ERR_UID_ILLEGAL = 8,
  CS_ERR_CONN_ILLEGAL = 9,
  CS_ERR_SYSERR_BTLSVR = 10,
  CS_ERR_ONLINE_RES_RUNOUT = 11,
  CS_ERR_NOFOUND_MAP_ID = 10000,
  CS_ERR_ENTER_SAME_MAP = 10001,
  CS_ERR_NOT_IN_MAP = 10002,
  CS_ERR_ITEM_NOT_EXIST = 10300,
  CS_ERR_ITEM_NOT_ENOUGH = 10301,
  CS_ERR_ITEM_MAX_LIMIT = 10302,
  CS_ERR_ITEM_UNUSABLE = 10303,
  CS_ERR_ITEM_ABUSE = 10304,
  CS_ERR_ITEM_NOT_EQUIPMENT = 10305,
  CS_ERR_ITEM_MONSTER_UNUSABLE = 10306,
  CS_ERR_ITEM_MONSTER_UUID_ERR = 10307,
  CS_ERR_NO_CHANGE_NICK_CARD_EXIST = 10308,
  CS_ERR_ITEM_TYPE_ERROR = 10309,
  CS_ERR_ITEM_BAG_FULL = 10310,
  CS_ERR_ITEM_BAG_NOT_EXIST = 10311,
  CS_ERR_BTLSVR_INNER_ERROR1 = 10500,
  CS_ERR_NICK_WITH_DIRTY_WORDS = 10600,
  CS_ERR_MAIL_ID_NOT_EXIST = 10700,
  CS_ERR_MAIL_NO_ENCLOSURE = 10701,
  CS_ERR_MAIL_RECEIVER_NOT_EXIST = 10702,
  CS_ERR_MAIL_TITLE_DIRTY_WORD = 10703,
  CS_ERR_MAIL_CONTENT_DIRTY_WORD = 10704,
  CS_ERR_MAIL_ENCLOSURE_ID_NOT_EXIST = 10705,
  CS_ERR_MAIL_MAIL_NOT_LOAD = 10706,
  CS_ERR_MAIL_CLIENT_FORBIDDEN = 10707,
  CS_ERR_MAIL_SEND_TO_SELF_FORBIDDEN = 10708,
  CS_ERR_MAIL_RECEIVER_ID_INVALID = 10709,
  CS_ERR_MAIL_TITLE_TOO_LONG = 10710,
  CS_ERR_MAIL_CONTENT_TOO_LONG = 10711,
  CS_ERR_TASK_INVALID_TASK_ID = 10800,
  CS_ERR_TASK_ALREADY_TAKEN = 10801,
  CS_ERR_TASK_NO_TAKEN = 10802,
  CS_ERR_TASK_ALREADY_FINISHED = 10803,
  CS_ERR_TASK_LACK_PRE_TASK = 10804,
  CS_ERR_TASK_HIGHER_LEVEL_REQUIRED = 10805,
  CS_ERR_TASK_WRONG_MAP = 10806,
  CS_ERR_TASK_SETTER_NOAUTH = 10807,
  CS_ERR_TASK_STEP_INVALID = 10808,
  CS_ERR_TASK_STEP_TYPE_INVALID = 10809,
  CS_ERR_TASK_LACK_PRE_STEP = 10810,
  CS_ERR_TASK_STEP_ALREADY_FINISHED = 10811,
  CS_ERR_TASK_UNFINISHED = 10812,
  CS_ERR_TASK_NOT_INIT = 10813,
  CS_ERR_TASK_TOO_MANY_FLAG_REQ = 10814,
  CS_ERR_TASK_TOO_MANY_BUFF_REQ = 10815,
  CS_ERR_TASK_STAR_NOT_ENOUGH = 10816
};
bool cs_err_code_t_IsValid(int value);
const cs_err_code_t cs_err_code_t_MIN = CS_ERR_NO_ERROR;
const cs_err_code_t cs_err_code_t_MAX = CS_ERR_TASK_STAR_NOT_ENOUGH;
const int cs_err_code_t_ARRAYSIZE = cs_err_code_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* cs_err_code_t_descriptor();
inline const ::std::string& cs_err_code_t_Name(cs_err_code_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    cs_err_code_t_descriptor(), value);
}
inline bool cs_err_code_t_Parse(
    const ::std::string& name, cs_err_code_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cs_err_code_t>(
    cs_err_code_t_descriptor(), name, value);
}
// ===================================================================

class cs_empty_msg_t : public ::google::protobuf::Message {
 public:
  cs_empty_msg_t();
  virtual ~cs_empty_msg_t();
  
  cs_empty_msg_t(const cs_empty_msg_t& from);
  
  inline cs_empty_msg_t& operator=(const cs_empty_msg_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_empty_msg_t& default_instance();
  
  void Swap(cs_empty_msg_t* other);
  
  // implements Message ----------------------------------------------
  
  cs_empty_msg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_empty_msg_t& from);
  void MergeFrom(const cs_empty_msg_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cs_empty_msg_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cs_empty_msg_t* default_instance_;
};
// -------------------------------------------------------------------

class cs_msg_head_t : public ::google::protobuf::Message {
 public:
  cs_msg_head_t();
  virtual ~cs_msg_head_t();
  
  cs_msg_head_t(const cs_msg_head_t& from);
  
  inline cs_msg_head_t& operator=(const cs_msg_head_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_msg_head_t& default_instance();
  
  void Swap(cs_msg_head_t* other);
  
  // implements Message ----------------------------------------------
  
  cs_msg_head_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_msg_head_t& from);
  void MergeFrom(const cs_msg_head_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string msg_type_name = 1;
  inline bool has_msg_type_name() const;
  inline void clear_msg_type_name();
  static const int kMsgTypeNameFieldNumber = 1;
  inline const ::std::string& msg_type_name() const;
  inline void set_msg_type_name(const ::std::string& value);
  inline void set_msg_type_name(const char* value);
  inline void set_msg_type_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_type_name();
  inline ::std::string* release_msg_type_name();
  
  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 seq = 4 [default = 0];
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 4;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cs_msg_head_t)
 private:
  inline void set_has_msg_type_name();
  inline void clear_has_msg_type_name();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_seq();
  inline void clear_has_seq();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* msg_type_name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 seq_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cs_msg_head_t* default_instance_;
};
// -------------------------------------------------------------------

class ack_errcode_t : public ::google::protobuf::Message {
 public:
  ack_errcode_t();
  virtual ~ack_errcode_t();
  
  ack_errcode_t(const ack_errcode_t& from);
  
  inline ack_errcode_t& operator=(const ack_errcode_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ack_errcode_t& default_instance();
  
  void Swap(ack_errcode_t* other);
  
  // implements Message ----------------------------------------------
  
  ack_errcode_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ack_errcode_t& from);
  void MergeFrom(const ack_errcode_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::int32 errcode() const;
  inline void set_errcode(::google::protobuf::int32 value);
  
  // optional string errmsg = 2 [default = "default error"];
  inline bool has_errmsg() const;
  inline void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  inline const ::std::string& errmsg() const;
  inline void set_errmsg(const ::std::string& value);
  inline void set_errmsg(const char* value);
  inline void set_errmsg(const char* value, size_t size);
  inline ::std::string* mutable_errmsg();
  inline ::std::string* release_errmsg();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.ack_errcode_t)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  inline void set_has_errmsg();
  inline void clear_has_errmsg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* errmsg_;
  static const ::std::string _default_errmsg_;
  ::google::protobuf::int32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static ack_errcode_t* default_instance_;
};
// -------------------------------------------------------------------

class cli_echo_req_t : public ::google::protobuf::Message {
 public:
  cli_echo_req_t();
  virtual ~cli_echo_req_t();
  
  cli_echo_req_t(const cli_echo_req_t& from);
  
  inline cli_echo_req_t& operator=(const cli_echo_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cli_echo_req_t& default_instance();
  
  void Swap(cli_echo_req_t* other);
  
  // implements Message ----------------------------------------------
  
  cli_echo_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cli_echo_req_t& from);
  void MergeFrom(const cli_echo_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cli_echo_req_t)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* str_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cli_echo_req_t* default_instance_;
};
// -------------------------------------------------------------------

class cli_echo_rsp_t : public ::google::protobuf::Message {
 public:
  cli_echo_rsp_t();
  virtual ~cli_echo_rsp_t();
  
  cli_echo_rsp_t(const cli_echo_rsp_t& from);
  
  inline cli_echo_rsp_t& operator=(const cli_echo_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cli_echo_rsp_t& default_instance();
  
  void Swap(cli_echo_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  cli_echo_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cli_echo_rsp_t& from);
  void MergeFrom(const cli_echo_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cli_echo_rsp_t)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* str_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cli_echo_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class login_req_t : public ::google::protobuf::Message {
 public:
  login_req_t();
  virtual ~login_req_t();
  
  login_req_t(const login_req_t& from);
  
  inline login_req_t& operator=(const login_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_req_t& default_instance();
  
  void Swap(login_req_t* other);
  
  // implements Message ----------------------------------------------
  
  login_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_req_t& from);
  void MergeFrom(const login_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string session = 1;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 1;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_req_t)
 private:
  inline void set_has_session();
  inline void clear_has_session();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* session_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_req_t* default_instance_;
};
// -------------------------------------------------------------------

class login_mon_ev_info_t : public ::google::protobuf::Message {
 public:
  login_mon_ev_info_t();
  virtual ~login_mon_ev_info_t();
  
  login_mon_ev_info_t(const login_mon_ev_info_t& from);
  
  inline login_mon_ev_info_t& operator=(const login_mon_ev_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_mon_ev_info_t& default_instance();
  
  void Swap(login_mon_ev_info_t* other);
  
  // implements Message ----------------------------------------------
  
  login_mon_ev_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_mon_ev_info_t& from);
  void MergeFrom(const login_mon_ev_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 unalloc = 1;
  inline bool has_unalloc() const;
  inline void clear_unalloc();
  static const int kUnallocFieldNumber = 1;
  inline ::google::protobuf::uint32 unalloc() const;
  inline void set_unalloc(::google::protobuf::uint32 value);
  
  // required uint32 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // required uint32 atk = 3;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 3;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);
  
  // required uint32 def = 4;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 4;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // required uint32 sp_atk = 5;
  inline bool has_sp_atk() const;
  inline void clear_sp_atk();
  static const int kSpAtkFieldNumber = 5;
  inline ::google::protobuf::uint32 sp_atk() const;
  inline void set_sp_atk(::google::protobuf::uint32 value);
  
  // required uint32 sp_def = 6;
  inline bool has_sp_def() const;
  inline void clear_sp_def();
  static const int kSpDefFieldNumber = 6;
  inline ::google::protobuf::uint32 sp_def() const;
  inline void set_sp_def(::google::protobuf::uint32 value);
  
  // required uint32 spd = 7;
  inline bool has_spd() const;
  inline void clear_spd();
  static const int kSpdFieldNumber = 7;
  inline ::google::protobuf::uint32 spd() const;
  inline void set_spd(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_mon_ev_info_t)
 private:
  inline void set_has_unalloc();
  inline void clear_has_unalloc();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_sp_atk();
  inline void clear_has_sp_atk();
  inline void set_has_sp_def();
  inline void clear_has_sp_def();
  inline void set_has_spd();
  inline void clear_has_spd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 unalloc_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 sp_atk_;
  ::google::protobuf::uint32 sp_def_;
  ::google::protobuf::uint32 spd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_mon_ev_info_t* default_instance_;
};
// -------------------------------------------------------------------

class login_mon_btl_attr_t : public ::google::protobuf::Message {
 public:
  login_mon_btl_attr_t();
  virtual ~login_mon_btl_attr_t();
  
  login_mon_btl_attr_t(const login_mon_btl_attr_t& from);
  
  inline login_mon_btl_attr_t& operator=(const login_mon_btl_attr_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_mon_btl_attr_t& default_instance();
  
  void Swap(login_mon_btl_attr_t* other);
  
  // implements Message ----------------------------------------------
  
  login_mon_btl_attr_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_mon_btl_attr_t& from);
  void MergeFrom(const login_mon_btl_attr_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // required uint32 atk = 2;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 2;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);
  
  // required uint32 def = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 3;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);
  
  // required uint32 sp_atk = 4;
  inline bool has_sp_atk() const;
  inline void clear_sp_atk();
  static const int kSpAtkFieldNumber = 4;
  inline ::google::protobuf::uint32 sp_atk() const;
  inline void set_sp_atk(::google::protobuf::uint32 value);
  
  // required uint32 sp_def = 5;
  inline bool has_sp_def() const;
  inline void clear_sp_def();
  static const int kSpDefFieldNumber = 5;
  inline ::google::protobuf::uint32 sp_def() const;
  inline void set_sp_def(::google::protobuf::uint32 value);
  
  // required uint32 spd = 6;
  inline bool has_spd() const;
  inline void clear_spd();
  static const int kSpdFieldNumber = 6;
  inline ::google::protobuf::uint32 spd() const;
  inline void set_spd(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_mon_btl_attr_t)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_sp_atk();
  inline void clear_has_sp_atk();
  inline void set_has_sp_def();
  inline void clear_has_sp_def();
  inline void set_has_spd();
  inline void clear_has_spd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 sp_atk_;
  ::google::protobuf::uint32 sp_def_;
  ::google::protobuf::uint32 spd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_mon_btl_attr_t* default_instance_;
};
// -------------------------------------------------------------------

class login_mon_moves_info_t : public ::google::protobuf::Message {
 public:
  login_mon_moves_info_t();
  virtual ~login_mon_moves_info_t();
  
  login_mon_moves_info_t(const login_mon_moves_info_t& from);
  
  inline login_mon_moves_info_t& operator=(const login_mon_moves_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_mon_moves_info_t& default_instance();
  
  void Swap(login_mon_moves_info_t* other);
  
  // implements Message ----------------------------------------------
  
  login_mon_moves_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_mon_moves_info_t& from);
  void MergeFrom(const login_mon_moves_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 learned_normal_moves = 1;
  inline int learned_normal_moves_size() const;
  inline void clear_learned_normal_moves();
  static const int kLearnedNormalMovesFieldNumber = 1;
  inline ::google::protobuf::uint32 learned_normal_moves(int index) const;
  inline void set_learned_normal_moves(int index, ::google::protobuf::uint32 value);
  inline void add_learned_normal_moves(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      learned_normal_moves() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_learned_normal_moves();
  
  // repeated uint32 learned_insight_moves = 2;
  inline int learned_insight_moves_size() const;
  inline void clear_learned_insight_moves();
  static const int kLearnedInsightMovesFieldNumber = 2;
  inline ::google::protobuf::uint32 learned_insight_moves(int index) const;
  inline void set_learned_insight_moves(int index, ::google::protobuf::uint32 value);
  inline void add_learned_insight_moves(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      learned_insight_moves() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_learned_insight_moves();
  
  // repeated uint32 learned_unique_moves = 3;
  inline int learned_unique_moves_size() const;
  inline void clear_learned_unique_moves();
  static const int kLearnedUniqueMovesFieldNumber = 3;
  inline ::google::protobuf::uint32 learned_unique_moves(int index) const;
  inline void set_learned_unique_moves(int index, ::google::protobuf::uint32 value);
  inline void add_learned_unique_moves(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      learned_unique_moves() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_learned_unique_moves();
  
  // repeated uint32 non_unique_moves = 4;
  inline int non_unique_moves_size() const;
  inline void clear_non_unique_moves();
  static const int kNonUniqueMovesFieldNumber = 4;
  inline ::google::protobuf::uint32 non_unique_moves(int index) const;
  inline void set_non_unique_moves(int index, ::google::protobuf::uint32 value);
  inline void add_non_unique_moves(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      non_unique_moves() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_non_unique_moves();
  
  // repeated uint32 unique_moves = 5;
  inline int unique_moves_size() const;
  inline void clear_unique_moves();
  static const int kUniqueMovesFieldNumber = 5;
  inline ::google::protobuf::uint32 unique_moves(int index) const;
  inline void set_unique_moves(int index, ::google::protobuf::uint32 value);
  inline void add_unique_moves(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unique_moves() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unique_moves();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_mon_moves_info_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > learned_normal_moves_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > learned_insight_moves_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > learned_unique_moves_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > non_unique_moves_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unique_moves_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_mon_moves_info_t* default_instance_;
};
// -------------------------------------------------------------------

class login_mon_info_t : public ::google::protobuf::Message {
 public:
  login_mon_info_t();
  virtual ~login_mon_info_t();
  
  login_mon_info_t(const login_mon_info_t& from);
  
  inline login_mon_info_t& operator=(const login_mon_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_mon_info_t& default_instance();
  
  void Swap(login_mon_info_t* other);
  
  // implements Message ----------------------------------------------
  
  login_mon_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_mon_info_t& from);
  void MergeFrom(const login_mon_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 family = 2;
  inline bool has_family() const;
  inline void clear_family();
  static const int kFamilyFieldNumber = 2;
  inline ::google::protobuf::uint32 family() const;
  inline void set_family(::google::protobuf::uint32 value);
  
  // required uint32 form = 3;
  inline bool has_form() const;
  inline void clear_form();
  static const int kFormFieldNumber = 3;
  inline ::google::protobuf::uint32 form() const;
  inline void set_form(::google::protobuf::uint32 value);
  
  // required int32 born_time = 4;
  inline bool has_born_time() const;
  inline void clear_born_time();
  static const int kBornTimeFieldNumber = 4;
  inline ::google::protobuf::int32 born_time() const;
  inline void set_born_time(::google::protobuf::int32 value);
  
  // required string uuid = 5;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 5;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // required uint32 exp_to_next_level = 6;
  inline bool has_exp_to_next_level() const;
  inline void clear_exp_to_next_level();
  static const int kExpToNextLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 exp_to_next_level() const;
  inline void set_exp_to_next_level(::google::protobuf::uint32 value);
  
  // required uint32 max_hp = 7;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  inline ::google::protobuf::uint32 max_hp() const;
  inline void set_max_hp(::google::protobuf::uint32 value);
  
  // required uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 gender = 9;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 9;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // required uint32 character = 10;
  inline bool has_character() const;
  inline void clear_character();
  static const int kCharacterFieldNumber = 10;
  inline ::google::protobuf::uint32 character() const;
  inline void set_character(::google::protobuf::uint32 value);
  
  // required uint32 potential = 11;
  inline bool has_potential() const;
  inline void clear_potential();
  static const int kPotentialFieldNumber = 11;
  inline ::google::protobuf::uint32 potential() const;
  inline void set_potential(::google::protobuf::uint32 value);
  
  // required uint32 signet_id = 12;
  inline bool has_signet_id() const;
  inline void clear_signet_id();
  static const int kSignetIdFieldNumber = 12;
  inline ::google::protobuf::uint32 signet_id() const;
  inline void set_signet_id(::google::protobuf::uint32 value);
  
  // required uint32 weight = 13;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 13;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);
  
  // required uint32 height = 14;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 14;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);
  
  // required uint32 get_way = 15;
  inline bool has_get_way() const;
  inline void clear_get_way();
  static const int kGetWayFieldNumber = 15;
  inline ::google::protobuf::uint32 get_way() const;
  inline void set_get_way(::google::protobuf::uint32 value);
  
  // required uint32 is_fight_mon = 16;
  inline bool has_is_fight_mon() const;
  inline void clear_is_fight_mon();
  static const int kIsFightMonFieldNumber = 16;
  inline ::google::protobuf::uint32 is_fight_mon() const;
  inline void set_is_fight_mon(::google::protobuf::uint32 value);
  
  // required uint32 is_follow_mon = 17;
  inline bool has_is_follow_mon() const;
  inline void clear_is_follow_mon();
  static const int kIsFollowMonFieldNumber = 17;
  inline ::google::protobuf::uint32 is_follow_mon() const;
  inline void set_is_follow_mon(::google::protobuf::uint32 value);
  
  // required uint32 is_connected_mon = 18;
  inline bool has_is_connected_mon() const;
  inline void clear_is_connected_mon();
  static const int kIsConnectedMonFieldNumber = 18;
  inline ::google::protobuf::uint32 is_connected_mon() const;
  inline void set_is_connected_mon(::google::protobuf::uint32 value);
  
  // required .iAdCSProto.login_mon_ev_info_t ev_info = 19;
  inline bool has_ev_info() const;
  inline void clear_ev_info();
  static const int kEvInfoFieldNumber = 19;
  inline const ::iAdCSProto::login_mon_ev_info_t& ev_info() const;
  inline ::iAdCSProto::login_mon_ev_info_t* mutable_ev_info();
  inline ::iAdCSProto::login_mon_ev_info_t* release_ev_info();
  
  // required .iAdCSProto.login_mon_btl_attr_t btl_attr = 20;
  inline bool has_btl_attr() const;
  inline void clear_btl_attr();
  static const int kBtlAttrFieldNumber = 20;
  inline const ::iAdCSProto::login_mon_btl_attr_t& btl_attr() const;
  inline ::iAdCSProto::login_mon_btl_attr_t* mutable_btl_attr();
  inline ::iAdCSProto::login_mon_btl_attr_t* release_btl_attr();
  
  // required .iAdCSProto.login_mon_moves_info_t moves_info = 21;
  inline bool has_moves_info() const;
  inline void clear_moves_info();
  static const int kMovesInfoFieldNumber = 21;
  inline const ::iAdCSProto::login_mon_moves_info_t& moves_info() const;
  inline ::iAdCSProto::login_mon_moves_info_t* mutable_moves_info();
  inline ::iAdCSProto::login_mon_moves_info_t* release_moves_info();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_mon_info_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_family();
  inline void clear_has_family();
  inline void set_has_form();
  inline void clear_has_form();
  inline void set_has_born_time();
  inline void clear_has_born_time();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_exp_to_next_level();
  inline void clear_has_exp_to_next_level();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_character();
  inline void clear_has_character();
  inline void set_has_potential();
  inline void clear_has_potential();
  inline void set_has_signet_id();
  inline void clear_has_signet_id();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_get_way();
  inline void clear_has_get_way();
  inline void set_has_is_fight_mon();
  inline void clear_has_is_fight_mon();
  inline void set_has_is_follow_mon();
  inline void clear_has_is_follow_mon();
  inline void set_has_is_connected_mon();
  inline void clear_has_is_connected_mon();
  inline void set_has_ev_info();
  inline void clear_has_ev_info();
  inline void set_has_btl_attr();
  inline void clear_has_btl_attr();
  inline void set_has_moves_info();
  inline void clear_has_moves_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 family_;
  ::google::protobuf::uint32 form_;
  ::google::protobuf::int32 born_time_;
  ::std::string* uuid_;
  ::google::protobuf::uint32 exp_to_next_level_;
  ::google::protobuf::uint32 max_hp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 character_;
  ::google::protobuf::uint32 potential_;
  ::google::protobuf::uint32 signet_id_;
  ::google::protobuf::uint32 weight_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 get_way_;
  ::google::protobuf::uint32 is_fight_mon_;
  ::google::protobuf::uint32 is_follow_mon_;
  ::iAdCSProto::login_mon_ev_info_t* ev_info_;
  ::iAdCSProto::login_mon_btl_attr_t* btl_attr_;
  ::iAdCSProto::login_mon_moves_info_t* moves_info_;
  ::google::protobuf::uint32 is_connected_mon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_mon_info_t* default_instance_;
};
// -------------------------------------------------------------------

class login_rsp_t : public ::google::protobuf::Message {
 public:
  login_rsp_t();
  virtual ~login_rsp_t();
  
  login_rsp_t(const login_rsp_t& from);
  
  inline login_rsp_t& operator=(const login_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_rsp_t& default_instance();
  
  void Swap(login_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  login_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_rsp_t& from);
  void MergeFrom(const login_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes nick = 1;
  inline bool has_nick() const;
  inline void clear_nick();
  static const int kNickFieldNumber = 1;
  inline const ::std::string& nick() const;
  inline void set_nick(const ::std::string& value);
  inline void set_nick(const char* value);
  inline void set_nick(const void* value, size_t size);
  inline ::std::string* mutable_nick();
  inline ::std::string* release_nick();
  
  // repeated .iAdCSProto.login_mon_info_t mon_info = 2;
  inline int mon_info_size() const;
  inline void clear_mon_info();
  static const int kMonInfoFieldNumber = 2;
  inline const ::iAdCSProto::login_mon_info_t& mon_info(int index) const;
  inline ::iAdCSProto::login_mon_info_t* mutable_mon_info(int index);
  inline ::iAdCSProto::login_mon_info_t* add_mon_info();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::login_mon_info_t >&
      mon_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::login_mon_info_t >*
      mutable_mon_info();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.login_rsp_t)
 private:
  inline void set_has_nick();
  inline void clear_has_nick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nick_;
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::login_mon_info_t > mon_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static login_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class player_enter_map_req_t : public ::google::protobuf::Message {
 public:
  player_enter_map_req_t();
  virtual ~player_enter_map_req_t();
  
  player_enter_map_req_t(const player_enter_map_req_t& from);
  
  inline player_enter_map_req_t& operator=(const player_enter_map_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_enter_map_req_t& default_instance();
  
  void Swap(player_enter_map_req_t* other);
  
  // implements Message ----------------------------------------------
  
  player_enter_map_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_enter_map_req_t& from);
  void MergeFrom(const player_enter_map_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // required uint32 x_pos = 2;
  inline bool has_x_pos() const;
  inline void clear_x_pos();
  static const int kXPosFieldNumber = 2;
  inline ::google::protobuf::uint32 x_pos() const;
  inline void set_x_pos(::google::protobuf::uint32 value);
  
  // required uint32 y_pos = 3;
  inline bool has_y_pos() const;
  inline void clear_y_pos();
  static const int kYPosFieldNumber = 3;
  inline ::google::protobuf::uint32 y_pos() const;
  inline void set_y_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_enter_map_req_t)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_x_pos();
  inline void clear_has_x_pos();
  inline void set_has_y_pos();
  inline void clear_has_y_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 x_pos_;
  ::google::protobuf::uint32 y_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_enter_map_req_t* default_instance_;
};
// -------------------------------------------------------------------

class player_enter_map_rsp_t : public ::google::protobuf::Message {
 public:
  player_enter_map_rsp_t();
  virtual ~player_enter_map_rsp_t();
  
  player_enter_map_rsp_t(const player_enter_map_rsp_t& from);
  
  inline player_enter_map_rsp_t& operator=(const player_enter_map_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_enter_map_rsp_t& default_instance();
  
  void Swap(player_enter_map_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  player_enter_map_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_enter_map_rsp_t& from);
  void MergeFrom(const player_enter_map_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // required uint32 x_pos = 2;
  inline bool has_x_pos() const;
  inline void clear_x_pos();
  static const int kXPosFieldNumber = 2;
  inline ::google::protobuf::uint32 x_pos() const;
  inline void set_x_pos(::google::protobuf::uint32 value);
  
  // required uint32 y_pos = 3;
  inline bool has_y_pos() const;
  inline void clear_y_pos();
  static const int kYPosFieldNumber = 3;
  inline ::google::protobuf::uint32 y_pos() const;
  inline void set_y_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_enter_map_rsp_t)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_x_pos();
  inline void clear_has_x_pos();
  inline void set_has_y_pos();
  inline void clear_has_y_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 x_pos_;
  ::google::protobuf::uint32 y_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_enter_map_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_player_enter_map_t : public ::google::protobuf::Message {
 public:
  broadcast_player_enter_map_t();
  virtual ~broadcast_player_enter_map_t();
  
  broadcast_player_enter_map_t(const broadcast_player_enter_map_t& from);
  
  inline broadcast_player_enter_map_t& operator=(const broadcast_player_enter_map_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_player_enter_map_t& default_instance();
  
  void Swap(broadcast_player_enter_map_t* other);
  
  // implements Message ----------------------------------------------
  
  broadcast_player_enter_map_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_player_enter_map_t& from);
  void MergeFrom(const broadcast_player_enter_map_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // optional string user_nick = 2 [default = "test"];
  inline bool has_user_nick() const;
  inline void clear_user_nick();
  static const int kUserNickFieldNumber = 2;
  inline const ::std::string& user_nick() const;
  inline void set_user_nick(const ::std::string& value);
  inline void set_user_nick(const char* value);
  inline void set_user_nick(const char* value, size_t size);
  inline ::std::string* mutable_user_nick();
  inline ::std::string* release_user_nick();
  
  // required uint32 x_pos = 3;
  inline bool has_x_pos() const;
  inline void clear_x_pos();
  static const int kXPosFieldNumber = 3;
  inline ::google::protobuf::uint32 x_pos() const;
  inline void set_x_pos(::google::protobuf::uint32 value);
  
  // required uint32 y_pos = 4;
  inline bool has_y_pos() const;
  inline void clear_y_pos();
  static const int kYPosFieldNumber = 4;
  inline ::google::protobuf::uint32 y_pos() const;
  inline void set_y_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.broadcast_player_enter_map_t)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_nick();
  inline void clear_has_user_nick();
  inline void set_has_x_pos();
  inline void clear_has_x_pos();
  inline void set_has_y_pos();
  inline void clear_has_y_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_nick_;
  static const ::std::string _default_user_nick_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 x_pos_;
  ::google::protobuf::uint32 y_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static broadcast_player_enter_map_t* default_instance_;
};
// -------------------------------------------------------------------

class player_leave_map_req_t : public ::google::protobuf::Message {
 public:
  player_leave_map_req_t();
  virtual ~player_leave_map_req_t();
  
  player_leave_map_req_t(const player_leave_map_req_t& from);
  
  inline player_leave_map_req_t& operator=(const player_leave_map_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_leave_map_req_t& default_instance();
  
  void Swap(player_leave_map_req_t* other);
  
  // implements Message ----------------------------------------------
  
  player_leave_map_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_leave_map_req_t& from);
  void MergeFrom(const player_leave_map_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 map_id = 1 [default = 0];
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_leave_map_req_t)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_leave_map_req_t* default_instance_;
};
// -------------------------------------------------------------------

class player_leave_map_rsp_t : public ::google::protobuf::Message {
 public:
  player_leave_map_rsp_t();
  virtual ~player_leave_map_rsp_t();
  
  player_leave_map_rsp_t(const player_leave_map_rsp_t& from);
  
  inline player_leave_map_rsp_t& operator=(const player_leave_map_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_leave_map_rsp_t& default_instance();
  
  void Swap(player_leave_map_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  player_leave_map_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_leave_map_rsp_t& from);
  void MergeFrom(const player_leave_map_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 map_id = 1 [default = 0];
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_leave_map_rsp_t)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_leave_map_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_player_leave_map_t : public ::google::protobuf::Message {
 public:
  broadcast_player_leave_map_t();
  virtual ~broadcast_player_leave_map_t();
  
  broadcast_player_leave_map_t(const broadcast_player_leave_map_t& from);
  
  inline broadcast_player_leave_map_t& operator=(const broadcast_player_leave_map_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_player_leave_map_t& default_instance();
  
  void Swap(broadcast_player_leave_map_t* other);
  
  // implements Message ----------------------------------------------
  
  broadcast_player_leave_map_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_player_leave_map_t& from);
  void MergeFrom(const broadcast_player_leave_map_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.broadcast_player_leave_map_t)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 user_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static broadcast_player_leave_map_t* default_instance_;
};
// -------------------------------------------------------------------

class map_player_walk_req_t : public ::google::protobuf::Message {
 public:
  map_player_walk_req_t();
  virtual ~map_player_walk_req_t();
  
  map_player_walk_req_t(const map_player_walk_req_t& from);
  
  inline map_player_walk_req_t& operator=(const map_player_walk_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const map_player_walk_req_t& default_instance();
  
  void Swap(map_player_walk_req_t* other);
  
  // implements Message ----------------------------------------------
  
  map_player_walk_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const map_player_walk_req_t& from);
  void MergeFrom(const map_player_walk_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 dest_x = 1;
  inline bool has_dest_x() const;
  inline void clear_dest_x();
  static const int kDestXFieldNumber = 1;
  inline ::google::protobuf::uint32 dest_x() const;
  inline void set_dest_x(::google::protobuf::uint32 value);
  
  // required uint32 dest_y = 2;
  inline bool has_dest_y() const;
  inline void clear_dest_y();
  static const int kDestYFieldNumber = 2;
  inline ::google::protobuf::uint32 dest_y() const;
  inline void set_dest_y(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.map_player_walk_req_t)
 private:
  inline void set_has_dest_x();
  inline void clear_has_dest_x();
  inline void set_has_dest_y();
  inline void clear_has_dest_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 dest_x_;
  ::google::protobuf::uint32 dest_y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static map_player_walk_req_t* default_instance_;
};
// -------------------------------------------------------------------

class map_player_walk_rsp_t : public ::google::protobuf::Message {
 public:
  map_player_walk_rsp_t();
  virtual ~map_player_walk_rsp_t();
  
  map_player_walk_rsp_t(const map_player_walk_rsp_t& from);
  
  inline map_player_walk_rsp_t& operator=(const map_player_walk_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const map_player_walk_rsp_t& default_instance();
  
  void Swap(map_player_walk_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  map_player_walk_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const map_player_walk_rsp_t& from);
  void MergeFrom(const map_player_walk_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 dest_x = 1;
  inline bool has_dest_x() const;
  inline void clear_dest_x();
  static const int kDestXFieldNumber = 1;
  inline ::google::protobuf::uint32 dest_x() const;
  inline void set_dest_x(::google::protobuf::uint32 value);
  
  // required uint32 dest_y = 2;
  inline bool has_dest_y() const;
  inline void clear_dest_y();
  static const int kDestYFieldNumber = 2;
  inline ::google::protobuf::uint32 dest_y() const;
  inline void set_dest_y(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.map_player_walk_rsp_t)
 private:
  inline void set_has_dest_x();
  inline void clear_has_dest_x();
  inline void set_has_dest_y();
  inline void clear_has_dest_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 dest_x_;
  ::google::protobuf::uint32 dest_y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static map_player_walk_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_map_player_walk_t : public ::google::protobuf::Message {
 public:
  broadcast_map_player_walk_t();
  virtual ~broadcast_map_player_walk_t();
  
  broadcast_map_player_walk_t(const broadcast_map_player_walk_t& from);
  
  inline broadcast_map_player_walk_t& operator=(const broadcast_map_player_walk_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_map_player_walk_t& default_instance();
  
  void Swap(broadcast_map_player_walk_t* other);
  
  // implements Message ----------------------------------------------
  
  broadcast_map_player_walk_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_map_player_walk_t& from);
  void MergeFrom(const broadcast_map_player_walk_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // required uint32 dest_x = 2;
  inline bool has_dest_x() const;
  inline void clear_dest_x();
  static const int kDestXFieldNumber = 2;
  inline ::google::protobuf::uint32 dest_x() const;
  inline void set_dest_x(::google::protobuf::uint32 value);
  
  // required uint32 dest_y = 3;
  inline bool has_dest_y() const;
  inline void clear_dest_y();
  static const int kDestYFieldNumber = 3;
  inline ::google::protobuf::uint32 dest_y() const;
  inline void set_dest_y(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.broadcast_map_player_walk_t)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_dest_x();
  inline void clear_has_dest_x();
  inline void set_has_dest_y();
  inline void clear_has_dest_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 dest_x_;
  ::google::protobuf::uint32 dest_y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static broadcast_map_player_walk_t* default_instance_;
};
// -------------------------------------------------------------------

class get_map_player_list_req_t : public ::google::protobuf::Message {
 public:
  get_map_player_list_req_t();
  virtual ~get_map_player_list_req_t();
  
  get_map_player_list_req_t(const get_map_player_list_req_t& from);
  
  inline get_map_player_list_req_t& operator=(const get_map_player_list_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_map_player_list_req_t& default_instance();
  
  void Swap(get_map_player_list_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_map_player_list_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_map_player_list_req_t& from);
  void MergeFrom(const get_map_player_list_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_map_player_list_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_map_player_list_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_map_player_list_rsp_t_simple_player_info_t : public ::google::protobuf::Message {
 public:
  get_map_player_list_rsp_t_simple_player_info_t();
  virtual ~get_map_player_list_rsp_t_simple_player_info_t();
  
  get_map_player_list_rsp_t_simple_player_info_t(const get_map_player_list_rsp_t_simple_player_info_t& from);
  
  inline get_map_player_list_rsp_t_simple_player_info_t& operator=(const get_map_player_list_rsp_t_simple_player_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_map_player_list_rsp_t_simple_player_info_t& default_instance();
  
  void Swap(get_map_player_list_rsp_t_simple_player_info_t* other);
  
  // implements Message ----------------------------------------------
  
  get_map_player_list_rsp_t_simple_player_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_map_player_list_rsp_t_simple_player_info_t& from);
  void MergeFrom(const get_map_player_list_rsp_t_simple_player_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // optional string user_nick = 2;
  inline bool has_user_nick() const;
  inline void clear_user_nick();
  static const int kUserNickFieldNumber = 2;
  inline const ::std::string& user_nick() const;
  inline void set_user_nick(const ::std::string& value);
  inline void set_user_nick(const char* value);
  inline void set_user_nick(const char* value, size_t size);
  inline ::std::string* mutable_user_nick();
  inline ::std::string* release_user_nick();
  
  // optional uint32 x_pos = 3;
  inline bool has_x_pos() const;
  inline void clear_x_pos();
  static const int kXPosFieldNumber = 3;
  inline ::google::protobuf::uint32 x_pos() const;
  inline void set_x_pos(::google::protobuf::uint32 value);
  
  // optional uint32 y_pos = 4;
  inline bool has_y_pos() const;
  inline void clear_y_pos();
  static const int kYPosFieldNumber = 4;
  inline ::google::protobuf::uint32 y_pos() const;
  inline void set_y_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_map_player_list_rsp_t.simple_player_info_t)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_nick();
  inline void clear_has_user_nick();
  inline void set_has_x_pos();
  inline void clear_has_x_pos();
  inline void set_has_y_pos();
  inline void clear_has_y_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_nick_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 x_pos_;
  ::google::protobuf::uint32 y_pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_map_player_list_rsp_t_simple_player_info_t* default_instance_;
};
// -------------------------------------------------------------------

class get_map_player_list_rsp_t : public ::google::protobuf::Message {
 public:
  get_map_player_list_rsp_t();
  virtual ~get_map_player_list_rsp_t();
  
  get_map_player_list_rsp_t(const get_map_player_list_rsp_t& from);
  
  inline get_map_player_list_rsp_t& operator=(const get_map_player_list_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_map_player_list_rsp_t& default_instance();
  
  void Swap(get_map_player_list_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_map_player_list_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_map_player_list_rsp_t& from);
  void MergeFrom(const get_map_player_list_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef get_map_player_list_rsp_t_simple_player_info_t simple_player_info_t;
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.get_map_player_list_rsp_t.simple_player_info_t player_list = 1;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 1;
  inline const ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t& player_list(int index) const;
  inline ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t* mutable_player_list(int index);
  inline ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t >*
      mutable_player_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_map_player_list_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t > player_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_map_player_list_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class player_change_nick_req_t : public ::google::protobuf::Message {
 public:
  player_change_nick_req_t();
  virtual ~player_change_nick_req_t();
  
  player_change_nick_req_t(const player_change_nick_req_t& from);
  
  inline player_change_nick_req_t& operator=(const player_change_nick_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_change_nick_req_t& default_instance();
  
  void Swap(player_change_nick_req_t* other);
  
  // implements Message ----------------------------------------------
  
  player_change_nick_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_change_nick_req_t& from);
  void MergeFrom(const player_change_nick_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string new_nick = 1;
  inline bool has_new_nick() const;
  inline void clear_new_nick();
  static const int kNewNickFieldNumber = 1;
  inline const ::std::string& new_nick() const;
  inline void set_new_nick(const ::std::string& value);
  inline void set_new_nick(const char* value);
  inline void set_new_nick(const char* value, size_t size);
  inline ::std::string* mutable_new_nick();
  inline ::std::string* release_new_nick();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_change_nick_req_t)
 private:
  inline void set_has_new_nick();
  inline void clear_has_new_nick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* new_nick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_change_nick_req_t* default_instance_;
};
// -------------------------------------------------------------------

class player_change_nick_rsp_t : public ::google::protobuf::Message {
 public:
  player_change_nick_rsp_t();
  virtual ~player_change_nick_rsp_t();
  
  player_change_nick_rsp_t(const player_change_nick_rsp_t& from);
  
  inline player_change_nick_rsp_t& operator=(const player_change_nick_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_change_nick_rsp_t& default_instance();
  
  void Swap(player_change_nick_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  player_change_nick_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_change_nick_rsp_t& from);
  void MergeFrom(const player_change_nick_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string new_nick = 1;
  inline bool has_new_nick() const;
  inline void clear_new_nick();
  static const int kNewNickFieldNumber = 1;
  inline const ::std::string& new_nick() const;
  inline void set_new_nick(const ::std::string& value);
  inline void set_new_nick(const char* value);
  inline void set_new_nick(const char* value, size_t size);
  inline ::std::string* mutable_new_nick();
  inline ::std::string* release_new_nick();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_change_nick_rsp_t)
 private:
  inline void set_has_new_nick();
  inline void clear_has_new_nick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* new_nick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_change_nick_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_player_new_nick_t : public ::google::protobuf::Message {
 public:
  broadcast_player_new_nick_t();
  virtual ~broadcast_player_new_nick_t();
  
  broadcast_player_new_nick_t(const broadcast_player_new_nick_t& from);
  
  inline broadcast_player_new_nick_t& operator=(const broadcast_player_new_nick_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_player_new_nick_t& default_instance();
  
  void Swap(broadcast_player_new_nick_t* other);
  
  // implements Message ----------------------------------------------
  
  broadcast_player_new_nick_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_player_new_nick_t& from);
  void MergeFrom(const broadcast_player_new_nick_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // required string new_nick = 2;
  inline bool has_new_nick() const;
  inline void clear_new_nick();
  static const int kNewNickFieldNumber = 2;
  inline const ::std::string& new_nick() const;
  inline void set_new_nick(const ::std::string& value);
  inline void set_new_nick(const char* value);
  inline void set_new_nick(const char* value, size_t size);
  inline ::std::string* mutable_new_nick();
  inline ::std::string* release_new_nick();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.broadcast_player_new_nick_t)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_new_nick();
  inline void clear_has_new_nick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* new_nick_;
  ::google::protobuf::uint32 user_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static broadcast_player_new_nick_t* default_instance_;
};
// -------------------------------------------------------------------

class avatar_attr_info_t : public ::google::protobuf::Message {
 public:
  avatar_attr_info_t();
  virtual ~avatar_attr_info_t();
  
  avatar_attr_info_t(const avatar_attr_info_t& from);
  
  inline avatar_attr_info_t& operator=(const avatar_attr_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const avatar_attr_info_t& default_instance();
  
  void Swap(avatar_attr_info_t* other);
  
  // implements Message ----------------------------------------------
  
  avatar_attr_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const avatar_attr_info_t& from);
  void MergeFrom(const avatar_attr_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 attr_id = 1;
  inline bool has_attr_id() const;
  inline void clear_attr_id();
  static const int kAttrIdFieldNumber = 1;
  inline ::google::protobuf::uint32 attr_id() const;
  inline void set_attr_id(::google::protobuf::uint32 value);
  
  // required uint32 attr_value = 2;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 2;
  inline ::google::protobuf::uint32 attr_value() const;
  inline void set_attr_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.avatar_attr_info_t)
 private:
  inline void set_has_attr_id();
  inline void clear_has_attr_id();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 attr_id_;
  ::google::protobuf::uint32 attr_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static avatar_attr_info_t* default_instance_;
};
// -------------------------------------------------------------------

class player_item_info_t : public ::google::protobuf::Message {
 public:
  player_item_info_t();
  virtual ~player_item_info_t();
  
  player_item_info_t(const player_item_info_t& from);
  
  inline player_item_info_t& operator=(const player_item_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_item_info_t& default_instance();
  
  void Swap(player_item_info_t* other);
  
  // implements Message ----------------------------------------------
  
  player_item_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_item_info_t& from);
  void MergeFrom(const player_item_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // required uint32 item_bag_flag = 4;
  inline bool has_item_bag_flag() const;
  inline void clear_item_bag_flag();
  static const int kItemBagFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 item_bag_flag() const;
  inline void set_item_bag_flag(::google::protobuf::uint32 value);
  
  // repeated .iAdCSProto.avatar_attr_info_t avatar_attr_list = 5;
  inline int avatar_attr_list_size() const;
  inline void clear_avatar_attr_list();
  static const int kAvatarAttrListFieldNumber = 5;
  inline const ::iAdCSProto::avatar_attr_info_t& avatar_attr_list(int index) const;
  inline ::iAdCSProto::avatar_attr_info_t* mutable_avatar_attr_list(int index);
  inline ::iAdCSProto::avatar_attr_info_t* add_avatar_attr_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::avatar_attr_info_t >&
      avatar_attr_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::avatar_attr_info_t >*
      mutable_avatar_attr_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_item_info_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_item_bag_flag();
  inline void clear_has_item_bag_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::avatar_attr_info_t > avatar_attr_list_;
  ::google::protobuf::uint32 item_bag_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_item_info_t* default_instance_;
};
// -------------------------------------------------------------------

class get_player_items_req_t : public ::google::protobuf::Message {
 public:
  get_player_items_req_t();
  virtual ~get_player_items_req_t();
  
  get_player_items_req_t(const get_player_items_req_t& from);
  
  inline get_player_items_req_t& operator=(const get_player_items_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_player_items_req_t& default_instance();
  
  void Swap(get_player_items_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_player_items_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_player_items_req_t& from);
  void MergeFrom(const get_player_items_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_player_items_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_player_items_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_player_items_rsp_t : public ::google::protobuf::Message {
 public:
  get_player_items_rsp_t();
  virtual ~get_player_items_rsp_t();
  
  get_player_items_rsp_t(const get_player_items_rsp_t& from);
  
  inline get_player_items_rsp_t& operator=(const get_player_items_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_player_items_rsp_t& default_instance();
  
  void Swap(get_player_items_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_player_items_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_player_items_rsp_t& from);
  void MergeFrom(const get_player_items_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.player_item_info_t normal_items = 1;
  inline int normal_items_size() const;
  inline void clear_normal_items();
  static const int kNormalItemsFieldNumber = 1;
  inline const ::iAdCSProto::player_item_info_t& normal_items(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_normal_items(int index);
  inline ::iAdCSProto::player_item_info_t* add_normal_items();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      normal_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_normal_items();
  
  // repeated .iAdCSProto.player_item_info_t monster_items = 2;
  inline int monster_items_size() const;
  inline void clear_monster_items();
  static const int kMonsterItemsFieldNumber = 2;
  inline const ::iAdCSProto::player_item_info_t& monster_items(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_monster_items(int index);
  inline ::iAdCSProto::player_item_info_t* add_monster_items();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      monster_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_monster_items();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_player_items_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > normal_items_;
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > monster_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_player_items_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class use_normal_item_req_t : public ::google::protobuf::Message {
 public:
  use_normal_item_req_t();
  virtual ~use_normal_item_req_t();
  
  use_normal_item_req_t(const use_normal_item_req_t& from);
  
  inline use_normal_item_req_t& operator=(const use_normal_item_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const use_normal_item_req_t& default_instance();
  
  void Swap(use_normal_item_req_t* other);
  
  // implements Message ----------------------------------------------
  
  use_normal_item_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const use_normal_item_req_t& from);
  void MergeFrom(const use_normal_item_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_count = 3 [default = 1];
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.use_normal_item_req_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static use_normal_item_req_t* default_instance_;
};
// -------------------------------------------------------------------

class use_normal_item_rsp_t : public ::google::protobuf::Message {
 public:
  use_normal_item_rsp_t();
  virtual ~use_normal_item_rsp_t();
  
  use_normal_item_rsp_t(const use_normal_item_rsp_t& from);
  
  inline use_normal_item_rsp_t& operator=(const use_normal_item_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const use_normal_item_rsp_t& default_instance();
  
  void Swap(use_normal_item_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  use_normal_item_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const use_normal_item_rsp_t& from);
  void MergeFrom(const use_normal_item_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_count = 3 [default = 1];
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.use_normal_item_rsp_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static use_normal_item_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class use_monster_item_req_t : public ::google::protobuf::Message {
 public:
  use_monster_item_req_t();
  virtual ~use_monster_item_req_t();
  
  use_monster_item_req_t(const use_monster_item_req_t& from);
  
  inline use_monster_item_req_t& operator=(const use_monster_item_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const use_monster_item_req_t& default_instance();
  
  void Swap(use_monster_item_req_t* other);
  
  // implements Message ----------------------------------------------
  
  use_monster_item_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const use_monster_item_req_t& from);
  void MergeFrom(const use_monster_item_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_count = 3 [default = 1];
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // required string monster_uuid = 4;
  inline bool has_monster_uuid() const;
  inline void clear_monster_uuid();
  static const int kMonsterUuidFieldNumber = 4;
  inline const ::std::string& monster_uuid() const;
  inline void set_monster_uuid(const ::std::string& value);
  inline void set_monster_uuid(const char* value);
  inline void set_monster_uuid(const char* value, size_t size);
  inline ::std::string* mutable_monster_uuid();
  inline ::std::string* release_monster_uuid();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.use_monster_item_req_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_monster_uuid();
  inline void clear_has_monster_uuid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  ::std::string* monster_uuid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static use_monster_item_req_t* default_instance_;
};
// -------------------------------------------------------------------

class use_monster_item_rsp_t : public ::google::protobuf::Message {
 public:
  use_monster_item_rsp_t();
  virtual ~use_monster_item_rsp_t();
  
  use_monster_item_rsp_t(const use_monster_item_rsp_t& from);
  
  inline use_monster_item_rsp_t& operator=(const use_monster_item_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const use_monster_item_rsp_t& default_instance();
  
  void Swap(use_monster_item_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  use_monster_item_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const use_monster_item_rsp_t& from);
  void MergeFrom(const use_monster_item_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_count = 3 [default = 1];
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // required string monster_uuid = 4;
  inline bool has_monster_uuid() const;
  inline void clear_monster_uuid();
  static const int kMonsterUuidFieldNumber = 4;
  inline const ::std::string& monster_uuid() const;
  inline void set_monster_uuid(const ::std::string& value);
  inline void set_monster_uuid(const char* value);
  inline void set_monster_uuid(const char* value, size_t size);
  inline ::std::string* mutable_monster_uuid();
  inline ::std::string* release_monster_uuid();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.use_monster_item_rsp_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_monster_uuid();
  inline void clear_has_monster_uuid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  ::std::string* monster_uuid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static use_monster_item_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class cli_add_items_noti_t : public ::google::protobuf::Message {
 public:
  cli_add_items_noti_t();
  virtual ~cli_add_items_noti_t();
  
  cli_add_items_noti_t(const cli_add_items_noti_t& from);
  
  inline cli_add_items_noti_t& operator=(const cli_add_items_noti_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cli_add_items_noti_t& default_instance();
  
  void Swap(cli_add_items_noti_t* other);
  
  // implements Message ----------------------------------------------
  
  cli_add_items_noti_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cli_add_items_noti_t& from);
  void MergeFrom(const cli_add_items_noti_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.player_item_info_t add_items = 1;
  inline int add_items_size() const;
  inline void clear_add_items();
  static const int kAddItemsFieldNumber = 1;
  inline const ::iAdCSProto::player_item_info_t& add_items(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_add_items(int index);
  inline ::iAdCSProto::player_item_info_t* add_add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      add_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_add_items();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cli_add_items_noti_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > add_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cli_add_items_noti_t* default_instance_;
};
// -------------------------------------------------------------------

class cli_drop_items_req_t : public ::google::protobuf::Message {
 public:
  cli_drop_items_req_t();
  virtual ~cli_drop_items_req_t();
  
  cli_drop_items_req_t(const cli_drop_items_req_t& from);
  
  inline cli_drop_items_req_t& operator=(const cli_drop_items_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cli_drop_items_req_t& default_instance();
  
  void Swap(cli_drop_items_req_t* other);
  
  // implements Message ----------------------------------------------
  
  cli_drop_items_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cli_drop_items_req_t& from);
  void MergeFrom(const cli_drop_items_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.player_item_info_t drop_items = 1;
  inline int drop_items_size() const;
  inline void clear_drop_items();
  static const int kDropItemsFieldNumber = 1;
  inline const ::iAdCSProto::player_item_info_t& drop_items(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_drop_items(int index);
  inline ::iAdCSProto::player_item_info_t* add_drop_items();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      drop_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_drop_items();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cli_drop_items_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > drop_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cli_drop_items_req_t* default_instance_;
};
// -------------------------------------------------------------------

class cli_drop_items_rsp_t : public ::google::protobuf::Message {
 public:
  cli_drop_items_rsp_t();
  virtual ~cli_drop_items_rsp_t();
  
  cli_drop_items_rsp_t(const cli_drop_items_rsp_t& from);
  
  inline cli_drop_items_rsp_t& operator=(const cli_drop_items_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cli_drop_items_rsp_t& default_instance();
  
  void Swap(cli_drop_items_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  cli_drop_items_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cli_drop_items_rsp_t& from);
  void MergeFrom(const cli_drop_items_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.player_item_info_t drop_items = 1;
  inline int drop_items_size() const;
  inline void clear_drop_items();
  static const int kDropItemsFieldNumber = 1;
  inline const ::iAdCSProto::player_item_info_t& drop_items(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_drop_items(int index);
  inline ::iAdCSProto::player_item_info_t* add_drop_items();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      drop_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_drop_items();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cli_drop_items_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > drop_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cli_drop_items_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class mail_head_t : public ::google::protobuf::Message {
 public:
  mail_head_t();
  virtual ~mail_head_t();
  
  mail_head_t(const mail_head_t& from);
  
  inline mail_head_t& operator=(const mail_head_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_head_t& default_instance();
  
  void Swap(mail_head_t* other);
  
  // implements Message ----------------------------------------------
  
  mail_head_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_head_t& from);
  void MergeFrom(const mail_head_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // required int32 mail_time = 2;
  inline bool has_mail_time() const;
  inline void clear_mail_time();
  static const int kMailTimeFieldNumber = 2;
  inline ::google::protobuf::int32 mail_time() const;
  inline void set_mail_time(::google::protobuf::int32 value);
  
  // required uint32 mail_type = 3;
  inline bool has_mail_type() const;
  inline void clear_mail_type();
  static const int kMailTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 mail_type() const;
  inline void set_mail_type(::google::protobuf::uint32 value);
  
  // required uint32 read_state = 4;
  inline bool has_read_state() const;
  inline void clear_read_state();
  static const int kReadStateFieldNumber = 4;
  inline ::google::protobuf::uint32 read_state() const;
  inline void set_read_state(::google::protobuf::uint32 value);
  
  // required uint32 sender_id = 5;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 5;
  inline ::google::protobuf::uint32 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint32 value);
  
  // required int32 sender_role_tm = 6;
  inline bool has_sender_role_tm() const;
  inline void clear_sender_role_tm();
  static const int kSenderRoleTmFieldNumber = 6;
  inline ::google::protobuf::int32 sender_role_tm() const;
  inline void set_sender_role_tm(::google::protobuf::int32 value);
  
  // required string sender_nick = 7;
  inline bool has_sender_nick() const;
  inline void clear_sender_nick();
  static const int kSenderNickFieldNumber = 7;
  inline const ::std::string& sender_nick() const;
  inline void set_sender_nick(const ::std::string& value);
  inline void set_sender_nick(const char* value);
  inline void set_sender_nick(const char* value, size_t size);
  inline ::std::string* mutable_sender_nick();
  inline ::std::string* release_sender_nick();
  
  // required uint32 receiver_id = 8;
  inline bool has_receiver_id() const;
  inline void clear_receiver_id();
  static const int kReceiverIdFieldNumber = 8;
  inline ::google::protobuf::uint32 receiver_id() const;
  inline void set_receiver_id(::google::protobuf::uint32 value);
  
  // required int32 receiver_role_tm = 9;
  inline bool has_receiver_role_tm() const;
  inline void clear_receiver_role_tm();
  static const int kReceiverRoleTmFieldNumber = 9;
  inline ::google::protobuf::int32 receiver_role_tm() const;
  inline void set_receiver_role_tm(::google::protobuf::int32 value);
  
  // required string mail_title = 10;
  inline bool has_mail_title() const;
  inline void clear_mail_title();
  static const int kMailTitleFieldNumber = 10;
  inline const ::std::string& mail_title() const;
  inline void set_mail_title(const ::std::string& value);
  inline void set_mail_title(const char* value);
  inline void set_mail_title(const char* value, size_t size);
  inline ::std::string* mutable_mail_title();
  inline ::std::string* release_mail_title();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.mail_head_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_mail_time();
  inline void clear_has_mail_time();
  inline void set_has_mail_type();
  inline void clear_has_mail_type();
  inline void set_has_read_state();
  inline void clear_has_read_state();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_sender_role_tm();
  inline void clear_has_sender_role_tm();
  inline void set_has_sender_nick();
  inline void clear_has_sender_nick();
  inline void set_has_receiver_id();
  inline void clear_has_receiver_id();
  inline void set_has_receiver_role_tm();
  inline void clear_has_receiver_role_tm();
  inline void set_has_mail_title();
  inline void clear_has_mail_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  ::google::protobuf::int32 mail_time_;
  ::google::protobuf::uint32 mail_type_;
  ::google::protobuf::uint32 read_state_;
  ::google::protobuf::uint32 sender_id_;
  ::std::string* sender_nick_;
  ::google::protobuf::int32 sender_role_tm_;
  ::google::protobuf::uint32 receiver_id_;
  ::std::string* mail_title_;
  ::google::protobuf::int32 receiver_role_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static mail_head_t* default_instance_;
};
// -------------------------------------------------------------------

class send_mail_req_t : public ::google::protobuf::Message {
 public:
  send_mail_req_t();
  virtual ~send_mail_req_t();
  
  send_mail_req_t(const send_mail_req_t& from);
  
  inline send_mail_req_t& operator=(const send_mail_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const send_mail_req_t& default_instance();
  
  void Swap(send_mail_req_t* other);
  
  // implements Message ----------------------------------------------
  
  send_mail_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const send_mail_req_t& from);
  void MergeFrom(const send_mail_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 receiver_id = 1;
  inline bool has_receiver_id() const;
  inline void clear_receiver_id();
  static const int kReceiverIdFieldNumber = 1;
  inline ::google::protobuf::uint32 receiver_id() const;
  inline void set_receiver_id(::google::protobuf::uint32 value);
  
  // required int32 receiver_role_tm = 2;
  inline bool has_receiver_role_tm() const;
  inline void clear_receiver_role_tm();
  static const int kReceiverRoleTmFieldNumber = 2;
  inline ::google::protobuf::int32 receiver_role_tm() const;
  inline void set_receiver_role_tm(::google::protobuf::int32 value);
  
  // required string mail_title = 3;
  inline bool has_mail_title() const;
  inline void clear_mail_title();
  static const int kMailTitleFieldNumber = 3;
  inline const ::std::string& mail_title() const;
  inline void set_mail_title(const ::std::string& value);
  inline void set_mail_title(const char* value);
  inline void set_mail_title(const char* value, size_t size);
  inline ::std::string* mutable_mail_title();
  inline ::std::string* release_mail_title();
  
  // required string mail_content = 4;
  inline bool has_mail_content() const;
  inline void clear_mail_content();
  static const int kMailContentFieldNumber = 4;
  inline const ::std::string& mail_content() const;
  inline void set_mail_content(const ::std::string& value);
  inline void set_mail_content(const char* value);
  inline void set_mail_content(const char* value, size_t size);
  inline ::std::string* mutable_mail_content();
  inline ::std::string* release_mail_content();
  
  // repeated .iAdCSProto.player_item_info_t enclosure = 5;
  inline int enclosure_size() const;
  inline void clear_enclosure();
  static const int kEnclosureFieldNumber = 5;
  inline const ::iAdCSProto::player_item_info_t& enclosure(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_enclosure(int index);
  inline ::iAdCSProto::player_item_info_t* add_enclosure();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      enclosure() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_enclosure();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.send_mail_req_t)
 private:
  inline void set_has_receiver_id();
  inline void clear_has_receiver_id();
  inline void set_has_receiver_role_tm();
  inline void clear_has_receiver_role_tm();
  inline void set_has_mail_title();
  inline void clear_has_mail_title();
  inline void set_has_mail_content();
  inline void clear_has_mail_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 receiver_id_;
  ::google::protobuf::int32 receiver_role_tm_;
  ::std::string* mail_title_;
  ::std::string* mail_content_;
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > enclosure_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static send_mail_req_t* default_instance_;
};
// -------------------------------------------------------------------

class send_mail_rsp_t : public ::google::protobuf::Message {
 public:
  send_mail_rsp_t();
  virtual ~send_mail_rsp_t();
  
  send_mail_rsp_t(const send_mail_rsp_t& from);
  
  inline send_mail_rsp_t& operator=(const send_mail_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const send_mail_rsp_t& default_instance();
  
  void Swap(send_mail_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  send_mail_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const send_mail_rsp_t& from);
  void MergeFrom(const send_mail_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.send_mail_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static send_mail_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_head_list_req_t : public ::google::protobuf::Message {
 public:
  get_mail_head_list_req_t();
  virtual ~get_mail_head_list_req_t();
  
  get_mail_head_list_req_t(const get_mail_head_list_req_t& from);
  
  inline get_mail_head_list_req_t& operator=(const get_mail_head_list_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_head_list_req_t& default_instance();
  
  void Swap(get_mail_head_list_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_head_list_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_head_list_req_t& from);
  void MergeFrom(const get_mail_head_list_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_head_list_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_head_list_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_head_list_rsp_t : public ::google::protobuf::Message {
 public:
  get_mail_head_list_rsp_t();
  virtual ~get_mail_head_list_rsp_t();
  
  get_mail_head_list_rsp_t(const get_mail_head_list_rsp_t& from);
  
  inline get_mail_head_list_rsp_t& operator=(const get_mail_head_list_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_head_list_rsp_t& default_instance();
  
  void Swap(get_mail_head_list_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_head_list_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_head_list_rsp_t& from);
  void MergeFrom(const get_mail_head_list_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.mail_head_t mail_head_list = 1;
  inline int mail_head_list_size() const;
  inline void clear_mail_head_list();
  static const int kMailHeadListFieldNumber = 1;
  inline const ::iAdCSProto::mail_head_t& mail_head_list(int index) const;
  inline ::iAdCSProto::mail_head_t* mutable_mail_head_list(int index);
  inline ::iAdCSProto::mail_head_t* add_mail_head_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::mail_head_t >&
      mail_head_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::mail_head_t >*
      mutable_mail_head_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_head_list_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::mail_head_t > mail_head_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_head_list_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_body_req_t : public ::google::protobuf::Message {
 public:
  get_mail_body_req_t();
  virtual ~get_mail_body_req_t();
  
  get_mail_body_req_t(const get_mail_body_req_t& from);
  
  inline get_mail_body_req_t& operator=(const get_mail_body_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_body_req_t& default_instance();
  
  void Swap(get_mail_body_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_body_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_body_req_t& from);
  void MergeFrom(const get_mail_body_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_body_req_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_body_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_body_rsp_t : public ::google::protobuf::Message {
 public:
  get_mail_body_rsp_t();
  virtual ~get_mail_body_rsp_t();
  
  get_mail_body_rsp_t(const get_mail_body_rsp_t& from);
  
  inline get_mail_body_rsp_t& operator=(const get_mail_body_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_body_rsp_t& default_instance();
  
  void Swap(get_mail_body_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_body_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_body_rsp_t& from);
  void MergeFrom(const get_mail_body_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // required string mail_content = 2;
  inline bool has_mail_content() const;
  inline void clear_mail_content();
  static const int kMailContentFieldNumber = 2;
  inline const ::std::string& mail_content() const;
  inline void set_mail_content(const ::std::string& value);
  inline void set_mail_content(const char* value);
  inline void set_mail_content(const char* value, size_t size);
  inline ::std::string* mutable_mail_content();
  inline ::std::string* release_mail_content();
  
  // repeated .iAdCSProto.player_item_info_t enclosure = 3;
  inline int enclosure_size() const;
  inline void clear_enclosure();
  static const int kEnclosureFieldNumber = 3;
  inline const ::iAdCSProto::player_item_info_t& enclosure(int index) const;
  inline ::iAdCSProto::player_item_info_t* mutable_enclosure(int index);
  inline ::iAdCSProto::player_item_info_t* add_enclosure();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
      enclosure() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
      mutable_enclosure();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_body_rsp_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_mail_content();
  inline void clear_has_mail_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  ::std::string* mail_content_;
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t > enclosure_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_body_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class del_mail_req_t : public ::google::protobuf::Message {
 public:
  del_mail_req_t();
  virtual ~del_mail_req_t();
  
  del_mail_req_t(const del_mail_req_t& from);
  
  inline del_mail_req_t& operator=(const del_mail_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const del_mail_req_t& default_instance();
  
  void Swap(del_mail_req_t* other);
  
  // implements Message ----------------------------------------------
  
  del_mail_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_mail_req_t& from);
  void MergeFrom(const del_mail_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.del_mail_req_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static del_mail_req_t* default_instance_;
};
// -------------------------------------------------------------------

class del_mail_rsp_t : public ::google::protobuf::Message {
 public:
  del_mail_rsp_t();
  virtual ~del_mail_rsp_t();
  
  del_mail_rsp_t(const del_mail_rsp_t& from);
  
  inline del_mail_rsp_t& operator=(const del_mail_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const del_mail_rsp_t& default_instance();
  
  void Swap(del_mail_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  del_mail_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_mail_rsp_t& from);
  void MergeFrom(const del_mail_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.del_mail_rsp_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static del_mail_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_enclosure_req_t : public ::google::protobuf::Message {
 public:
  get_mail_enclosure_req_t();
  virtual ~get_mail_enclosure_req_t();
  
  get_mail_enclosure_req_t(const get_mail_enclosure_req_t& from);
  
  inline get_mail_enclosure_req_t& operator=(const get_mail_enclosure_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_enclosure_req_t& default_instance();
  
  void Swap(get_mail_enclosure_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_enclosure_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_enclosure_req_t& from);
  void MergeFrom(const get_mail_enclosure_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_enclosure_req_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_enclosure_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_mail_enclosure_rsp_t : public ::google::protobuf::Message {
 public:
  get_mail_enclosure_rsp_t();
  virtual ~get_mail_enclosure_rsp_t();
  
  get_mail_enclosure_rsp_t(const get_mail_enclosure_rsp_t& from);
  
  inline get_mail_enclosure_rsp_t& operator=(const get_mail_enclosure_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mail_enclosure_rsp_t& default_instance();
  
  void Swap(get_mail_enclosure_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_mail_enclosure_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mail_enclosure_rsp_t& from);
  void MergeFrom(const get_mail_enclosure_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_mail_enclosure_rsp_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 mail_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_mail_enclosure_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class player_new_mail_noti_t : public ::google::protobuf::Message {
 public:
  player_new_mail_noti_t();
  virtual ~player_new_mail_noti_t();
  
  player_new_mail_noti_t(const player_new_mail_noti_t& from);
  
  inline player_new_mail_noti_t& operator=(const player_new_mail_noti_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_new_mail_noti_t& default_instance();
  
  void Swap(player_new_mail_noti_t* other);
  
  // implements Message ----------------------------------------------
  
  player_new_mail_noti_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_new_mail_noti_t& from);
  void MergeFrom(const player_new_mail_noti_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .iAdCSProto.mail_head_t new_mail = 1;
  inline bool has_new_mail() const;
  inline void clear_new_mail();
  static const int kNewMailFieldNumber = 1;
  inline const ::iAdCSProto::mail_head_t& new_mail() const;
  inline ::iAdCSProto::mail_head_t* mutable_new_mail();
  inline ::iAdCSProto::mail_head_t* release_new_mail();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_new_mail_noti_t)
 private:
  inline void set_has_new_mail();
  inline void clear_has_new_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::iAdCSProto::mail_head_t* new_mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_new_mail_noti_t* default_instance_;
};
// -------------------------------------------------------------------

class obtain_task_req_t : public ::google::protobuf::Message {
 public:
  obtain_task_req_t();
  virtual ~obtain_task_req_t();
  
  obtain_task_req_t(const obtain_task_req_t& from);
  
  inline obtain_task_req_t& operator=(const obtain_task_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const obtain_task_req_t& default_instance();
  
  void Swap(obtain_task_req_t* other);
  
  // implements Message ----------------------------------------------
  
  obtain_task_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const obtain_task_req_t& from);
  void MergeFrom(const obtain_task_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.obtain_task_req_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static obtain_task_req_t* default_instance_;
};
// -------------------------------------------------------------------

class obtain_task_rsp_t : public ::google::protobuf::Message {
 public:
  obtain_task_rsp_t();
  virtual ~obtain_task_rsp_t();
  
  obtain_task_rsp_t(const obtain_task_rsp_t& from);
  
  inline obtain_task_rsp_t& operator=(const obtain_task_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const obtain_task_rsp_t& default_instance();
  
  void Swap(obtain_task_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  obtain_task_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const obtain_task_rsp_t& from);
  void MergeFrom(const obtain_task_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required bytes buffer = 2;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 2;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  inline ::std::string* release_buffer();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.obtain_task_rsp_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_buffer();
  inline void clear_has_buffer();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* buffer_;
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static obtain_task_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class cancel_task_req_t : public ::google::protobuf::Message {
 public:
  cancel_task_req_t();
  virtual ~cancel_task_req_t();
  
  cancel_task_req_t(const cancel_task_req_t& from);
  
  inline cancel_task_req_t& operator=(const cancel_task_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cancel_task_req_t& default_instance();
  
  void Swap(cancel_task_req_t* other);
  
  // implements Message ----------------------------------------------
  
  cancel_task_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cancel_task_req_t& from);
  void MergeFrom(const cancel_task_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cancel_task_req_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cancel_task_req_t* default_instance_;
};
// -------------------------------------------------------------------

class cancel_task_rsp_t : public ::google::protobuf::Message {
 public:
  cancel_task_rsp_t();
  virtual ~cancel_task_rsp_t();
  
  cancel_task_rsp_t(const cancel_task_rsp_t& from);
  
  inline cancel_task_rsp_t& operator=(const cancel_task_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cancel_task_rsp_t& default_instance();
  
  void Swap(cancel_task_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  cancel_task_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cancel_task_rsp_t& from);
  void MergeFrom(const cancel_task_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.cancel_task_rsp_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static cancel_task_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class finish_task_req_t : public ::google::protobuf::Message {
 public:
  finish_task_req_t();
  virtual ~finish_task_req_t();
  
  finish_task_req_t(const finish_task_req_t& from);
  
  inline finish_task_req_t& operator=(const finish_task_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const finish_task_req_t& default_instance();
  
  void Swap(finish_task_req_t* other);
  
  // implements Message ----------------------------------------------
  
  finish_task_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const finish_task_req_t& from);
  void MergeFrom(const finish_task_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.finish_task_req_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static finish_task_req_t* default_instance_;
};
// -------------------------------------------------------------------

class finish_task_rsp_t : public ::google::protobuf::Message {
 public:
  finish_task_rsp_t();
  virtual ~finish_task_rsp_t();
  
  finish_task_rsp_t(const finish_task_rsp_t& from);
  
  inline finish_task_rsp_t& operator=(const finish_task_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const finish_task_rsp_t& default_instance();
  
  void Swap(finish_task_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  finish_task_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const finish_task_rsp_t& from);
  void MergeFrom(const finish_task_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.finish_task_rsp_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static finish_task_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class task_flag_t : public ::google::protobuf::Message {
 public:
  task_flag_t();
  virtual ~task_flag_t();
  
  task_flag_t(const task_flag_t& from);
  
  inline task_flag_t& operator=(const task_flag_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const task_flag_t& default_instance();
  
  void Swap(task_flag_t* other);
  
  // implements Message ----------------------------------------------
  
  task_flag_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const task_flag_t& from);
  void MergeFrom(const task_flag_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 task_flag = 2;
  inline bool has_task_flag() const;
  inline void clear_task_flag();
  static const int kTaskFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 task_flag() const;
  inline void set_task_flag(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.task_flag_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_flag();
  inline void clear_has_task_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 task_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static task_flag_t* default_instance_;
};
// -------------------------------------------------------------------

class task_buff_t : public ::google::protobuf::Message {
 public:
  task_buff_t();
  virtual ~task_buff_t();
  
  task_buff_t(const task_buff_t& from);
  
  inline task_buff_t& operator=(const task_buff_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const task_buff_t& default_instance();
  
  void Swap(task_buff_t* other);
  
  // implements Message ----------------------------------------------
  
  task_buff_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const task_buff_t& from);
  void MergeFrom(const task_buff_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required bytes buffer = 2;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 2;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  inline ::std::string* release_buffer();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.task_buff_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_buffer();
  inline void clear_has_buffer();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* buffer_;
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static task_buff_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_flag_list_req_t : public ::google::protobuf::Message {
 public:
  get_task_flag_list_req_t();
  virtual ~get_task_flag_list_req_t();
  
  get_task_flag_list_req_t(const get_task_flag_list_req_t& from);
  
  inline get_task_flag_list_req_t& operator=(const get_task_flag_list_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_flag_list_req_t& default_instance();
  
  void Swap(get_task_flag_list_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_flag_list_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_flag_list_req_t& from);
  void MergeFrom(const get_task_flag_list_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 task_id_list = 1;
  inline int task_id_list_size() const;
  inline void clear_task_id_list();
  static const int kTaskIdListFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id_list(int index) const;
  inline void set_task_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_task_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      task_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_task_id_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_flag_list_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > task_id_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_flag_list_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_flag_list_rsp_t : public ::google::protobuf::Message {
 public:
  get_task_flag_list_rsp_t();
  virtual ~get_task_flag_list_rsp_t();
  
  get_task_flag_list_rsp_t(const get_task_flag_list_rsp_t& from);
  
  inline get_task_flag_list_rsp_t& operator=(const get_task_flag_list_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_flag_list_rsp_t& default_instance();
  
  void Swap(get_task_flag_list_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_flag_list_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_flag_list_rsp_t& from);
  void MergeFrom(const get_task_flag_list_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.task_flag_t flag_list = 1;
  inline int flag_list_size() const;
  inline void clear_flag_list();
  static const int kFlagListFieldNumber = 1;
  inline const ::iAdCSProto::task_flag_t& flag_list(int index) const;
  inline ::iAdCSProto::task_flag_t* mutable_flag_list(int index);
  inline ::iAdCSProto::task_flag_t* add_flag_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_flag_t >&
      flag_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_flag_t >*
      mutable_flag_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_flag_list_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_flag_t > flag_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_flag_list_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_buff_list_req_t : public ::google::protobuf::Message {
 public:
  get_task_buff_list_req_t();
  virtual ~get_task_buff_list_req_t();
  
  get_task_buff_list_req_t(const get_task_buff_list_req_t& from);
  
  inline get_task_buff_list_req_t& operator=(const get_task_buff_list_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_buff_list_req_t& default_instance();
  
  void Swap(get_task_buff_list_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_buff_list_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_buff_list_req_t& from);
  void MergeFrom(const get_task_buff_list_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 task_id_list = 1;
  inline int task_id_list_size() const;
  inline void clear_task_id_list();
  static const int kTaskIdListFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id_list(int index) const;
  inline void set_task_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_task_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      task_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_task_id_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_buff_list_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > task_id_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_buff_list_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_buff_list_rsp_t : public ::google::protobuf::Message {
 public:
  get_task_buff_list_rsp_t();
  virtual ~get_task_buff_list_rsp_t();
  
  get_task_buff_list_rsp_t(const get_task_buff_list_rsp_t& from);
  
  inline get_task_buff_list_rsp_t& operator=(const get_task_buff_list_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_buff_list_rsp_t& default_instance();
  
  void Swap(get_task_buff_list_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_buff_list_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_buff_list_rsp_t& from);
  void MergeFrom(const get_task_buff_list_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.task_buff_t buff_list = 1;
  inline int buff_list_size() const;
  inline void clear_buff_list();
  static const int kBuffListFieldNumber = 1;
  inline const ::iAdCSProto::task_buff_t& buff_list(int index) const;
  inline ::iAdCSProto::task_buff_t* mutable_buff_list(int index);
  inline ::iAdCSProto::task_buff_t* add_buff_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_buff_t >&
      buff_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_buff_t >*
      mutable_buff_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_buff_list_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_buff_t > buff_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_buff_list_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_cs_task_info_t : public ::google::protobuf::Message {
 public:
  pb_cs_task_info_t();
  virtual ~pb_cs_task_info_t();
  
  pb_cs_task_info_t(const pb_cs_task_info_t& from);
  
  inline pb_cs_task_info_t& operator=(const pb_cs_task_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_cs_task_info_t& default_instance();
  
  void Swap(pb_cs_task_info_t* other);
  
  // implements Message ----------------------------------------------
  
  pb_cs_task_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_cs_task_info_t& from);
  void MergeFrom(const pb_cs_task_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 task_type = 2;
  inline bool has_task_type() const;
  inline void clear_task_type();
  static const int kTaskTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 task_type() const;
  inline void set_task_type(::google::protobuf::uint32 value);
  
  // required uint32 task_flag = 3;
  inline bool has_task_flag() const;
  inline void clear_task_flag();
  static const int kTaskFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 task_flag() const;
  inline void set_task_flag(::google::protobuf::uint32 value);
  
  // required bytes buffer = 4;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 4;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  inline ::std::string* release_buffer();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.pb_cs_task_info_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_type();
  inline void clear_has_task_type();
  inline void set_has_task_flag();
  inline void clear_has_task_flag();
  inline void set_has_buffer();
  inline void clear_has_buffer();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 task_type_;
  ::std::string* buffer_;
  ::google::protobuf::uint32 task_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static pb_cs_task_info_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_list_req_t : public ::google::protobuf::Message {
 public:
  get_task_list_req_t();
  virtual ~get_task_list_req_t();
  
  get_task_list_req_t(const get_task_list_req_t& from);
  
  inline get_task_list_req_t& operator=(const get_task_list_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_list_req_t& default_instance();
  
  void Swap(get_task_list_req_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_list_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_list_req_t& from);
  void MergeFrom(const get_task_list_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_list_req_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_list_req_t* default_instance_;
};
// -------------------------------------------------------------------

class get_task_list_rsp_t : public ::google::protobuf::Message {
 public:
  get_task_list_rsp_t();
  virtual ~get_task_list_rsp_t();
  
  get_task_list_rsp_t(const get_task_list_rsp_t& from);
  
  inline get_task_list_rsp_t& operator=(const get_task_list_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_list_rsp_t& default_instance();
  
  void Swap(get_task_list_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  get_task_list_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_list_rsp_t& from);
  void MergeFrom(const get_task_list_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.pb_cs_task_info_t task_list = 1;
  inline int task_list_size() const;
  inline void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  inline const ::iAdCSProto::pb_cs_task_info_t& task_list(int index) const;
  inline ::iAdCSProto::pb_cs_task_info_t* mutable_task_list(int index);
  inline ::iAdCSProto::pb_cs_task_info_t* add_task_list();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::pb_cs_task_info_t >&
      task_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::pb_cs_task_info_t >*
      mutable_task_list();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.get_task_list_rsp_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::pb_cs_task_info_t > task_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static get_task_list_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class set_task_step_req_t : public ::google::protobuf::Message {
 public:
  set_task_step_req_t();
  virtual ~set_task_step_req_t();
  
  set_task_step_req_t(const set_task_step_req_t& from);
  
  inline set_task_step_req_t& operator=(const set_task_step_req_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const set_task_step_req_t& default_instance();
  
  void Swap(set_task_step_req_t* other);
  
  // implements Message ----------------------------------------------
  
  set_task_step_req_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_task_step_req_t& from);
  void MergeFrom(const set_task_step_req_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.set_task_step_req_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step();
  inline void clear_has_step();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static set_task_step_req_t* default_instance_;
};
// -------------------------------------------------------------------

class set_task_step_rsp_t : public ::google::protobuf::Message {
 public:
  set_task_step_rsp_t();
  virtual ~set_task_step_rsp_t();
  
  set_task_step_rsp_t(const set_task_step_rsp_t& from);
  
  inline set_task_step_rsp_t& operator=(const set_task_step_rsp_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const set_task_step_rsp_t& default_instance();
  
  void Swap(set_task_step_rsp_t* other);
  
  // implements Message ----------------------------------------------
  
  set_task_step_rsp_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_task_step_rsp_t& from);
  void MergeFrom(const set_task_step_rsp_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required bytes new_buffer = 2;
  inline bool has_new_buffer() const;
  inline void clear_new_buffer();
  static const int kNewBufferFieldNumber = 2;
  inline const ::std::string& new_buffer() const;
  inline void set_new_buffer(const ::std::string& value);
  inline void set_new_buffer(const char* value);
  inline void set_new_buffer(const void* value, size_t size);
  inline ::std::string* mutable_new_buffer();
  inline ::std::string* release_new_buffer();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.set_task_step_rsp_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_new_buffer();
  inline void clear_has_new_buffer();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* new_buffer_;
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static set_task_step_rsp_t* default_instance_;
};
// -------------------------------------------------------------------

class start_battle_pve_in_t : public ::google::protobuf::Message {
 public:
  start_battle_pve_in_t();
  virtual ~start_battle_pve_in_t();
  
  start_battle_pve_in_t(const start_battle_pve_in_t& from);
  
  inline start_battle_pve_in_t& operator=(const start_battle_pve_in_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const start_battle_pve_in_t& default_instance();
  
  void Swap(start_battle_pve_in_t* other);
  
  // implements Message ----------------------------------------------
  
  start_battle_pve_in_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const start_battle_pve_in_t& from);
  void MergeFrom(const start_battle_pve_in_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline ::google::protobuf::uint32 region() const;
  inline void set_region(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.start_battle_pve_in_t)
 private:
  inline void set_has_region();
  inline void clear_has_region();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 region_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static start_battle_pve_in_t* default_instance_;
};
// -------------------------------------------------------------------

class start_battle_pve_out_t : public ::google::protobuf::Message {
 public:
  start_battle_pve_out_t();
  virtual ~start_battle_pve_out_t();
  
  start_battle_pve_out_t(const start_battle_pve_out_t& from);
  
  inline start_battle_pve_out_t& operator=(const start_battle_pve_out_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const start_battle_pve_out_t& default_instance();
  
  void Swap(start_battle_pve_out_t* other);
  
  // implements Message ----------------------------------------------
  
  start_battle_pve_out_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const start_battle_pve_out_t& from);
  void MergeFrom(const start_battle_pve_out_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.start_battle_pve_out_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static start_battle_pve_out_t* default_instance_;
};
// -------------------------------------------------------------------

class player_ready_in_t : public ::google::protobuf::Message {
 public:
  player_ready_in_t();
  virtual ~player_ready_in_t();
  
  player_ready_in_t(const player_ready_in_t& from);
  
  inline player_ready_in_t& operator=(const player_ready_in_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_ready_in_t& default_instance();
  
  void Swap(player_ready_in_t* other);
  
  // implements Message ----------------------------------------------
  
  player_ready_in_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_ready_in_t& from);
  void MergeFrom(const player_ready_in_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_ready_in_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_ready_in_t* default_instance_;
};
// -------------------------------------------------------------------

class player_ready_out_t : public ::google::protobuf::Message {
 public:
  player_ready_out_t();
  virtual ~player_ready_out_t();
  
  player_ready_out_t(const player_ready_out_t& from);
  
  inline player_ready_out_t& operator=(const player_ready_out_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_ready_out_t& default_instance();
  
  void Swap(player_ready_out_t* other);
  
  // implements Message ----------------------------------------------
  
  player_ready_out_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_ready_out_t& from);
  void MergeFrom(const player_ready_out_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.player_ready_out_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static player_ready_out_t* default_instance_;
};
// -------------------------------------------------------------------

class select_move_in_t : public ::google::protobuf::Message {
 public:
  select_move_in_t();
  virtual ~select_move_in_t();
  
  select_move_in_t(const select_move_in_t& from);
  
  inline select_move_in_t& operator=(const select_move_in_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const select_move_in_t& default_instance();
  
  void Swap(select_move_in_t* other);
  
  // implements Message ----------------------------------------------
  
  select_move_in_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const select_move_in_t& from);
  void MergeFrom(const select_move_in_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 move_id = 1;
  inline bool has_move_id() const;
  inline void clear_move_id();
  static const int kMoveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 move_id() const;
  inline void set_move_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.select_move_in_t)
 private:
  inline void set_has_move_id();
  inline void clear_has_move_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 move_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static select_move_in_t* default_instance_;
};
// -------------------------------------------------------------------

class select_move_out_t : public ::google::protobuf::Message {
 public:
  select_move_out_t();
  virtual ~select_move_out_t();
  
  select_move_out_t(const select_move_out_t& from);
  
  inline select_move_out_t& operator=(const select_move_out_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const select_move_out_t& default_instance();
  
  void Swap(select_move_out_t* other);
  
  // implements Message ----------------------------------------------
  
  select_move_out_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const select_move_out_t& from);
  void MergeFrom(const select_move_out_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.select_move_out_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static select_move_out_t* default_instance_;
};
// -------------------------------------------------------------------

class btl_notify_absorb_gain_exp_out_t_mon_info_t : public ::google::protobuf::Message {
 public:
  btl_notify_absorb_gain_exp_out_t_mon_info_t();
  virtual ~btl_notify_absorb_gain_exp_out_t_mon_info_t();
  
  btl_notify_absorb_gain_exp_out_t_mon_info_t(const btl_notify_absorb_gain_exp_out_t_mon_info_t& from);
  
  inline btl_notify_absorb_gain_exp_out_t_mon_info_t& operator=(const btl_notify_absorb_gain_exp_out_t_mon_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btl_notify_absorb_gain_exp_out_t_mon_info_t& default_instance();
  
  void Swap(btl_notify_absorb_gain_exp_out_t_mon_info_t* other);
  
  // implements Message ----------------------------------------------
  
  btl_notify_absorb_gain_exp_out_t_mon_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btl_notify_absorb_gain_exp_out_t_mon_info_t& from);
  void MergeFrom(const btl_notify_absorb_gain_exp_out_t_mon_info_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // required uint32 mon_id = 2;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // required uint32 max_hp = 5;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 5;
  inline ::google::protobuf::uint32 max_hp() const;
  inline void set_max_hp(::google::protobuf::uint32 value);
  
  // required uint32 mon_btl_attr_atk = 6;
  inline bool has_mon_btl_attr_atk() const;
  inline void clear_mon_btl_attr_atk();
  static const int kMonBtlAttrAtkFieldNumber = 6;
  inline ::google::protobuf::uint32 mon_btl_attr_atk() const;
  inline void set_mon_btl_attr_atk(::google::protobuf::uint32 value);
  
  // required uint32 mon_btl_attr_def = 7;
  inline bool has_mon_btl_attr_def() const;
  inline void clear_mon_btl_attr_def();
  static const int kMonBtlAttrDefFieldNumber = 7;
  inline ::google::protobuf::uint32 mon_btl_attr_def() const;
  inline void set_mon_btl_attr_def(::google::protobuf::uint32 value);
  
  // required uint32 mon_btl_attr_sp_atk = 8;
  inline bool has_mon_btl_attr_sp_atk() const;
  inline void clear_mon_btl_attr_sp_atk();
  static const int kMonBtlAttrSpAtkFieldNumber = 8;
  inline ::google::protobuf::uint32 mon_btl_attr_sp_atk() const;
  inline void set_mon_btl_attr_sp_atk(::google::protobuf::uint32 value);
  
  // required uint32 mon_btl_attr_sp_def = 9;
  inline bool has_mon_btl_attr_sp_def() const;
  inline void clear_mon_btl_attr_sp_def();
  static const int kMonBtlAttrSpDefFieldNumber = 9;
  inline ::google::protobuf::uint32 mon_btl_attr_sp_def() const;
  inline void set_mon_btl_attr_sp_def(::google::protobuf::uint32 value);
  
  // required uint32 mon_btl_attr_spd = 10;
  inline bool has_mon_btl_attr_spd() const;
  inline void clear_mon_btl_attr_spd();
  static const int kMonBtlAttrSpdFieldNumber = 10;
  inline ::google::protobuf::uint32 mon_btl_attr_spd() const;
  inline void set_mon_btl_attr_spd(::google::protobuf::uint32 value);
  
  // required uint32 exp = 11;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 11;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // required uint32 gain_exp = 12;
  inline bool has_gain_exp() const;
  inline void clear_gain_exp();
  static const int kGainExpFieldNumber = 12;
  inline ::google::protobuf::uint32 gain_exp() const;
  inline void set_gain_exp(::google::protobuf::uint32 value);
  
  // required uint32 gain_exp_rate = 13;
  inline bool has_gain_exp_rate() const;
  inline void clear_gain_exp_rate();
  static const int kGainExpRateFieldNumber = 13;
  inline ::google::protobuf::uint32 gain_exp_rate() const;
  inline void set_gain_exp_rate(::google::protobuf::uint32 value);
  
  // required uint32 gain_ev = 14;
  inline bool has_gain_ev() const;
  inline void clear_gain_ev();
  static const int kGainEvFieldNumber = 14;
  inline ::google::protobuf::uint32 gain_ev() const;
  inline void set_gain_ev(::google::protobuf::uint32 value);
  
  // required uint32 exp_to_next_level = 15;
  inline bool has_exp_to_next_level() const;
  inline void clear_exp_to_next_level();
  static const int kExpToNextLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 exp_to_next_level() const;
  inline void set_exp_to_next_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.btl_notify_absorb_gain_exp_out_t.mon_info_t)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_mon_btl_attr_atk();
  inline void clear_has_mon_btl_attr_atk();
  inline void set_has_mon_btl_attr_def();
  inline void clear_has_mon_btl_attr_def();
  inline void set_has_mon_btl_attr_sp_atk();
  inline void clear_has_mon_btl_attr_sp_atk();
  inline void set_has_mon_btl_attr_sp_def();
  inline void clear_has_mon_btl_attr_sp_def();
  inline void set_has_mon_btl_attr_spd();
  inline void clear_has_mon_btl_attr_spd();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gain_exp();
  inline void clear_has_gain_exp();
  inline void set_has_gain_exp_rate();
  inline void clear_has_gain_exp_rate();
  inline void set_has_gain_ev();
  inline void clear_has_gain_ev();
  inline void set_has_exp_to_next_level();
  inline void clear_has_exp_to_next_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 max_hp_;
  ::google::protobuf::uint32 mon_btl_attr_atk_;
  ::google::protobuf::uint32 mon_btl_attr_def_;
  ::google::protobuf::uint32 mon_btl_attr_sp_atk_;
  ::google::protobuf::uint32 mon_btl_attr_sp_def_;
  ::google::protobuf::uint32 mon_btl_attr_spd_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 gain_exp_;
  ::google::protobuf::uint32 gain_exp_rate_;
  ::google::protobuf::uint32 gain_ev_;
  ::google::protobuf::uint32 exp_to_next_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static btl_notify_absorb_gain_exp_out_t_mon_info_t* default_instance_;
};
// -------------------------------------------------------------------

class btl_notify_absorb_gain_exp_out_t : public ::google::protobuf::Message {
 public:
  btl_notify_absorb_gain_exp_out_t();
  virtual ~btl_notify_absorb_gain_exp_out_t();
  
  btl_notify_absorb_gain_exp_out_t(const btl_notify_absorb_gain_exp_out_t& from);
  
  inline btl_notify_absorb_gain_exp_out_t& operator=(const btl_notify_absorb_gain_exp_out_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btl_notify_absorb_gain_exp_out_t& default_instance();
  
  void Swap(btl_notify_absorb_gain_exp_out_t* other);
  
  // implements Message ----------------------------------------------
  
  btl_notify_absorb_gain_exp_out_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btl_notify_absorb_gain_exp_out_t& from);
  void MergeFrom(const btl_notify_absorb_gain_exp_out_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef btl_notify_absorb_gain_exp_out_t_mon_info_t mon_info_t;
  
  // accessors -------------------------------------------------------
  
  // repeated .iAdCSProto.btl_notify_absorb_gain_exp_out_t.mon_info_t mon_info = 1;
  inline int mon_info_size() const;
  inline void clear_mon_info();
  static const int kMonInfoFieldNumber = 1;
  inline const ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t& mon_info(int index) const;
  inline ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t* mutable_mon_info(int index);
  inline ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t* add_mon_info();
  inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t >&
      mon_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t >*
      mutable_mon_info();
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.btl_notify_absorb_gain_exp_out_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t > mon_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static btl_notify_absorb_gain_exp_out_t* default_instance_;
};
// -------------------------------------------------------------------

class btl_notify_battle_end_out_t : public ::google::protobuf::Message {
 public:
  btl_notify_battle_end_out_t();
  virtual ~btl_notify_battle_end_out_t();
  
  btl_notify_battle_end_out_t(const btl_notify_battle_end_out_t& from);
  
  inline btl_notify_battle_end_out_t& operator=(const btl_notify_battle_end_out_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btl_notify_battle_end_out_t& default_instance();
  
  void Swap(btl_notify_battle_end_out_t* other);
  
  // implements Message ----------------------------------------------
  
  btl_notify_battle_end_out_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btl_notify_battle_end_out_t& from);
  void MergeFrom(const btl_notify_battle_end_out_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 winner_side = 1;
  inline bool has_winner_side() const;
  inline void clear_winner_side();
  static const int kWinnerSideFieldNumber = 1;
  inline ::google::protobuf::uint32 winner_side() const;
  inline void set_winner_side(::google::protobuf::uint32 value);
  
  // required uint32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:iAdCSProto.btl_notify_battle_end_out_t)
 private:
  inline void set_has_winner_side();
  inline void clear_has_winner_side();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 winner_side_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iAd_2ecs_2eproto();
  friend void protobuf_AssignDesc_iAd_2ecs_2eproto();
  friend void protobuf_ShutdownFile_iAd_2ecs_2eproto();
  
  void InitAsDefaultInstance();
  static btl_notify_battle_end_out_t* default_instance_;
};
// ===================================================================


// ===================================================================

// cs_empty_msg_t

// -------------------------------------------------------------------

// cs_msg_head_t

// required string msg_type_name = 1;
inline bool cs_msg_head_t::has_msg_type_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cs_msg_head_t::set_has_msg_type_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cs_msg_head_t::clear_has_msg_type_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cs_msg_head_t::clear_msg_type_name() {
  if (msg_type_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_type_name_->clear();
  }
  clear_has_msg_type_name();
}
inline const ::std::string& cs_msg_head_t::msg_type_name() const {
  return *msg_type_name_;
}
inline void cs_msg_head_t::set_msg_type_name(const ::std::string& value) {
  set_has_msg_type_name();
  if (msg_type_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_name_ = new ::std::string;
  }
  msg_type_name_->assign(value);
}
inline void cs_msg_head_t::set_msg_type_name(const char* value) {
  set_has_msg_type_name();
  if (msg_type_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_name_ = new ::std::string;
  }
  msg_type_name_->assign(value);
}
inline void cs_msg_head_t::set_msg_type_name(const char* value, size_t size) {
  set_has_msg_type_name();
  if (msg_type_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_name_ = new ::std::string;
  }
  msg_type_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* cs_msg_head_t::mutable_msg_type_name() {
  set_has_msg_type_name();
  if (msg_type_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_name_ = new ::std::string;
  }
  return msg_type_name_;
}
inline ::std::string* cs_msg_head_t::release_msg_type_name() {
  clear_has_msg_type_name();
  if (msg_type_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_type_name_;
    msg_type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 uid = 2;
inline bool cs_msg_head_t::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cs_msg_head_t::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cs_msg_head_t::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cs_msg_head_t::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 cs_msg_head_t::uid() const {
  return uid_;
}
inline void cs_msg_head_t::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 ret = 3;
inline bool cs_msg_head_t::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cs_msg_head_t::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cs_msg_head_t::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cs_msg_head_t::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 cs_msg_head_t::ret() const {
  return ret_;
}
inline void cs_msg_head_t::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 seq = 4 [default = 0];
inline bool cs_msg_head_t::has_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void cs_msg_head_t::set_has_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void cs_msg_head_t::clear_has_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void cs_msg_head_t::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 cs_msg_head_t::seq() const {
  return seq_;
}
inline void cs_msg_head_t::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// ack_errcode_t

// required int32 errcode = 1;
inline bool ack_errcode_t::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ack_errcode_t::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ack_errcode_t::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ack_errcode_t::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 ack_errcode_t::errcode() const {
  return errcode_;
}
inline void ack_errcode_t::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
}

// optional string errmsg = 2 [default = "default error"];
inline bool ack_errcode_t::has_errmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ack_errcode_t::set_has_errmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ack_errcode_t::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ack_errcode_t::clear_errmsg() {
  if (errmsg_ != &_default_errmsg_) {
    errmsg_->assign(_default_errmsg_);
  }
  clear_has_errmsg();
}
inline const ::std::string& ack_errcode_t::errmsg() const {
  return *errmsg_;
}
inline void ack_errcode_t::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  if (errmsg_ == &_default_errmsg_) {
    errmsg_ = new ::std::string;
  }
  errmsg_->assign(value);
}
inline void ack_errcode_t::set_errmsg(const char* value) {
  set_has_errmsg();
  if (errmsg_ == &_default_errmsg_) {
    errmsg_ = new ::std::string;
  }
  errmsg_->assign(value);
}
inline void ack_errcode_t::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  if (errmsg_ == &_default_errmsg_) {
    errmsg_ = new ::std::string;
  }
  errmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ack_errcode_t::mutable_errmsg() {
  set_has_errmsg();
  if (errmsg_ == &_default_errmsg_) {
    errmsg_ = new ::std::string(_default_errmsg_);
  }
  return errmsg_;
}
inline ::std::string* ack_errcode_t::release_errmsg() {
  clear_has_errmsg();
  if (errmsg_ == &_default_errmsg_) {
    return NULL;
  } else {
    ::std::string* temp = errmsg_;
    errmsg_ = const_cast< ::std::string*>(&_default_errmsg_);
    return temp;
  }
}

// -------------------------------------------------------------------

// cli_echo_req_t

// optional string str = 1;
inline bool cli_echo_req_t::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cli_echo_req_t::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cli_echo_req_t::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cli_echo_req_t::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& cli_echo_req_t::str() const {
  return *str_;
}
inline void cli_echo_req_t::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void cli_echo_req_t::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void cli_echo_req_t::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* cli_echo_req_t::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* cli_echo_req_t::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// cli_echo_rsp_t

// optional string str = 1;
inline bool cli_echo_rsp_t::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cli_echo_rsp_t::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cli_echo_rsp_t::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cli_echo_rsp_t::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& cli_echo_rsp_t::str() const {
  return *str_;
}
inline void cli_echo_rsp_t::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void cli_echo_rsp_t::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void cli_echo_rsp_t::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* cli_echo_rsp_t::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* cli_echo_rsp_t::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// login_req_t

// required string session = 1;
inline bool login_req_t::has_session() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_req_t::set_has_session() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_req_t::clear_has_session() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_req_t::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& login_req_t::session() const {
  return *session_;
}
inline void login_req_t::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void login_req_t::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void login_req_t::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* login_req_t::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* login_req_t::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// login_mon_ev_info_t

// required uint32 unalloc = 1;
inline bool login_mon_ev_info_t::has_unalloc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_mon_ev_info_t::set_has_unalloc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_mon_ev_info_t::clear_has_unalloc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_mon_ev_info_t::clear_unalloc() {
  unalloc_ = 0u;
  clear_has_unalloc();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::unalloc() const {
  return unalloc_;
}
inline void login_mon_ev_info_t::set_unalloc(::google::protobuf::uint32 value) {
  set_has_unalloc();
  unalloc_ = value;
}

// required uint32 hp = 2;
inline bool login_mon_ev_info_t::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void login_mon_ev_info_t::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void login_mon_ev_info_t::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void login_mon_ev_info_t::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::hp() const {
  return hp_;
}
inline void login_mon_ev_info_t::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 atk = 3;
inline bool login_mon_ev_info_t::has_atk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void login_mon_ev_info_t::set_has_atk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void login_mon_ev_info_t::clear_has_atk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void login_mon_ev_info_t::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::atk() const {
  return atk_;
}
inline void login_mon_ev_info_t::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
}

// required uint32 def = 4;
inline bool login_mon_ev_info_t::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void login_mon_ev_info_t::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void login_mon_ev_info_t::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void login_mon_ev_info_t::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::def() const {
  return def_;
}
inline void login_mon_ev_info_t::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 sp_atk = 5;
inline bool login_mon_ev_info_t::has_sp_atk() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void login_mon_ev_info_t::set_has_sp_atk() {
  _has_bits_[0] |= 0x00000010u;
}
inline void login_mon_ev_info_t::clear_has_sp_atk() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void login_mon_ev_info_t::clear_sp_atk() {
  sp_atk_ = 0u;
  clear_has_sp_atk();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::sp_atk() const {
  return sp_atk_;
}
inline void login_mon_ev_info_t::set_sp_atk(::google::protobuf::uint32 value) {
  set_has_sp_atk();
  sp_atk_ = value;
}

// required uint32 sp_def = 6;
inline bool login_mon_ev_info_t::has_sp_def() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void login_mon_ev_info_t::set_has_sp_def() {
  _has_bits_[0] |= 0x00000020u;
}
inline void login_mon_ev_info_t::clear_has_sp_def() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void login_mon_ev_info_t::clear_sp_def() {
  sp_def_ = 0u;
  clear_has_sp_def();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::sp_def() const {
  return sp_def_;
}
inline void login_mon_ev_info_t::set_sp_def(::google::protobuf::uint32 value) {
  set_has_sp_def();
  sp_def_ = value;
}

// required uint32 spd = 7;
inline bool login_mon_ev_info_t::has_spd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void login_mon_ev_info_t::set_has_spd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void login_mon_ev_info_t::clear_has_spd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void login_mon_ev_info_t::clear_spd() {
  spd_ = 0u;
  clear_has_spd();
}
inline ::google::protobuf::uint32 login_mon_ev_info_t::spd() const {
  return spd_;
}
inline void login_mon_ev_info_t::set_spd(::google::protobuf::uint32 value) {
  set_has_spd();
  spd_ = value;
}

// -------------------------------------------------------------------

// login_mon_btl_attr_t

// required uint32 hp = 1;
inline bool login_mon_btl_attr_t::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_mon_btl_attr_t::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_mon_btl_attr_t::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_mon_btl_attr_t::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::hp() const {
  return hp_;
}
inline void login_mon_btl_attr_t::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 atk = 2;
inline bool login_mon_btl_attr_t::has_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void login_mon_btl_attr_t::set_has_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void login_mon_btl_attr_t::clear_has_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void login_mon_btl_attr_t::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::atk() const {
  return atk_;
}
inline void login_mon_btl_attr_t::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
}

// required uint32 def = 3;
inline bool login_mon_btl_attr_t::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void login_mon_btl_attr_t::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void login_mon_btl_attr_t::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void login_mon_btl_attr_t::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::def() const {
  return def_;
}
inline void login_mon_btl_attr_t::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 sp_atk = 4;
inline bool login_mon_btl_attr_t::has_sp_atk() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void login_mon_btl_attr_t::set_has_sp_atk() {
  _has_bits_[0] |= 0x00000008u;
}
inline void login_mon_btl_attr_t::clear_has_sp_atk() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void login_mon_btl_attr_t::clear_sp_atk() {
  sp_atk_ = 0u;
  clear_has_sp_atk();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::sp_atk() const {
  return sp_atk_;
}
inline void login_mon_btl_attr_t::set_sp_atk(::google::protobuf::uint32 value) {
  set_has_sp_atk();
  sp_atk_ = value;
}

// required uint32 sp_def = 5;
inline bool login_mon_btl_attr_t::has_sp_def() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void login_mon_btl_attr_t::set_has_sp_def() {
  _has_bits_[0] |= 0x00000010u;
}
inline void login_mon_btl_attr_t::clear_has_sp_def() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void login_mon_btl_attr_t::clear_sp_def() {
  sp_def_ = 0u;
  clear_has_sp_def();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::sp_def() const {
  return sp_def_;
}
inline void login_mon_btl_attr_t::set_sp_def(::google::protobuf::uint32 value) {
  set_has_sp_def();
  sp_def_ = value;
}

// required uint32 spd = 6;
inline bool login_mon_btl_attr_t::has_spd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void login_mon_btl_attr_t::set_has_spd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void login_mon_btl_attr_t::clear_has_spd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void login_mon_btl_attr_t::clear_spd() {
  spd_ = 0u;
  clear_has_spd();
}
inline ::google::protobuf::uint32 login_mon_btl_attr_t::spd() const {
  return spd_;
}
inline void login_mon_btl_attr_t::set_spd(::google::protobuf::uint32 value) {
  set_has_spd();
  spd_ = value;
}

// -------------------------------------------------------------------

// login_mon_moves_info_t

// repeated uint32 learned_normal_moves = 1;
inline int login_mon_moves_info_t::learned_normal_moves_size() const {
  return learned_normal_moves_.size();
}
inline void login_mon_moves_info_t::clear_learned_normal_moves() {
  learned_normal_moves_.Clear();
}
inline ::google::protobuf::uint32 login_mon_moves_info_t::learned_normal_moves(int index) const {
  return learned_normal_moves_.Get(index);
}
inline void login_mon_moves_info_t::set_learned_normal_moves(int index, ::google::protobuf::uint32 value) {
  learned_normal_moves_.Set(index, value);
}
inline void login_mon_moves_info_t::add_learned_normal_moves(::google::protobuf::uint32 value) {
  learned_normal_moves_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
login_mon_moves_info_t::learned_normal_moves() const {
  return learned_normal_moves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
login_mon_moves_info_t::mutable_learned_normal_moves() {
  return &learned_normal_moves_;
}

// repeated uint32 learned_insight_moves = 2;
inline int login_mon_moves_info_t::learned_insight_moves_size() const {
  return learned_insight_moves_.size();
}
inline void login_mon_moves_info_t::clear_learned_insight_moves() {
  learned_insight_moves_.Clear();
}
inline ::google::protobuf::uint32 login_mon_moves_info_t::learned_insight_moves(int index) const {
  return learned_insight_moves_.Get(index);
}
inline void login_mon_moves_info_t::set_learned_insight_moves(int index, ::google::protobuf::uint32 value) {
  learned_insight_moves_.Set(index, value);
}
inline void login_mon_moves_info_t::add_learned_insight_moves(::google::protobuf::uint32 value) {
  learned_insight_moves_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
login_mon_moves_info_t::learned_insight_moves() const {
  return learned_insight_moves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
login_mon_moves_info_t::mutable_learned_insight_moves() {
  return &learned_insight_moves_;
}

// repeated uint32 learned_unique_moves = 3;
inline int login_mon_moves_info_t::learned_unique_moves_size() const {
  return learned_unique_moves_.size();
}
inline void login_mon_moves_info_t::clear_learned_unique_moves() {
  learned_unique_moves_.Clear();
}
inline ::google::protobuf::uint32 login_mon_moves_info_t::learned_unique_moves(int index) const {
  return learned_unique_moves_.Get(index);
}
inline void login_mon_moves_info_t::set_learned_unique_moves(int index, ::google::protobuf::uint32 value) {
  learned_unique_moves_.Set(index, value);
}
inline void login_mon_moves_info_t::add_learned_unique_moves(::google::protobuf::uint32 value) {
  learned_unique_moves_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
login_mon_moves_info_t::learned_unique_moves() const {
  return learned_unique_moves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
login_mon_moves_info_t::mutable_learned_unique_moves() {
  return &learned_unique_moves_;
}

// repeated uint32 non_unique_moves = 4;
inline int login_mon_moves_info_t::non_unique_moves_size() const {
  return non_unique_moves_.size();
}
inline void login_mon_moves_info_t::clear_non_unique_moves() {
  non_unique_moves_.Clear();
}
inline ::google::protobuf::uint32 login_mon_moves_info_t::non_unique_moves(int index) const {
  return non_unique_moves_.Get(index);
}
inline void login_mon_moves_info_t::set_non_unique_moves(int index, ::google::protobuf::uint32 value) {
  non_unique_moves_.Set(index, value);
}
inline void login_mon_moves_info_t::add_non_unique_moves(::google::protobuf::uint32 value) {
  non_unique_moves_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
login_mon_moves_info_t::non_unique_moves() const {
  return non_unique_moves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
login_mon_moves_info_t::mutable_non_unique_moves() {
  return &non_unique_moves_;
}

// repeated uint32 unique_moves = 5;
inline int login_mon_moves_info_t::unique_moves_size() const {
  return unique_moves_.size();
}
inline void login_mon_moves_info_t::clear_unique_moves() {
  unique_moves_.Clear();
}
inline ::google::protobuf::uint32 login_mon_moves_info_t::unique_moves(int index) const {
  return unique_moves_.Get(index);
}
inline void login_mon_moves_info_t::set_unique_moves(int index, ::google::protobuf::uint32 value) {
  unique_moves_.Set(index, value);
}
inline void login_mon_moves_info_t::add_unique_moves(::google::protobuf::uint32 value) {
  unique_moves_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
login_mon_moves_info_t::unique_moves() const {
  return unique_moves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
login_mon_moves_info_t::mutable_unique_moves() {
  return &unique_moves_;
}

// -------------------------------------------------------------------

// login_mon_info_t

// required uint32 id = 1;
inline bool login_mon_info_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_mon_info_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_mon_info_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_mon_info_t::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 login_mon_info_t::id() const {
  return id_;
}
inline void login_mon_info_t::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 family = 2;
inline bool login_mon_info_t::has_family() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void login_mon_info_t::set_has_family() {
  _has_bits_[0] |= 0x00000002u;
}
inline void login_mon_info_t::clear_has_family() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void login_mon_info_t::clear_family() {
  family_ = 0u;
  clear_has_family();
}
inline ::google::protobuf::uint32 login_mon_info_t::family() const {
  return family_;
}
inline void login_mon_info_t::set_family(::google::protobuf::uint32 value) {
  set_has_family();
  family_ = value;
}

// required uint32 form = 3;
inline bool login_mon_info_t::has_form() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void login_mon_info_t::set_has_form() {
  _has_bits_[0] |= 0x00000004u;
}
inline void login_mon_info_t::clear_has_form() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void login_mon_info_t::clear_form() {
  form_ = 0u;
  clear_has_form();
}
inline ::google::protobuf::uint32 login_mon_info_t::form() const {
  return form_;
}
inline void login_mon_info_t::set_form(::google::protobuf::uint32 value) {
  set_has_form();
  form_ = value;
}

// required int32 born_time = 4;
inline bool login_mon_info_t::has_born_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void login_mon_info_t::set_has_born_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void login_mon_info_t::clear_has_born_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void login_mon_info_t::clear_born_time() {
  born_time_ = 0;
  clear_has_born_time();
}
inline ::google::protobuf::int32 login_mon_info_t::born_time() const {
  return born_time_;
}
inline void login_mon_info_t::set_born_time(::google::protobuf::int32 value) {
  set_has_born_time();
  born_time_ = value;
}

// required string uuid = 5;
inline bool login_mon_info_t::has_uuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void login_mon_info_t::set_has_uuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void login_mon_info_t::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void login_mon_info_t::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& login_mon_info_t::uuid() const {
  return *uuid_;
}
inline void login_mon_info_t::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void login_mon_info_t::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void login_mon_info_t::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* login_mon_info_t::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* login_mon_info_t::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 exp_to_next_level = 6;
inline bool login_mon_info_t::has_exp_to_next_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void login_mon_info_t::set_has_exp_to_next_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void login_mon_info_t::clear_has_exp_to_next_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void login_mon_info_t::clear_exp_to_next_level() {
  exp_to_next_level_ = 0u;
  clear_has_exp_to_next_level();
}
inline ::google::protobuf::uint32 login_mon_info_t::exp_to_next_level() const {
  return exp_to_next_level_;
}
inline void login_mon_info_t::set_exp_to_next_level(::google::protobuf::uint32 value) {
  set_has_exp_to_next_level();
  exp_to_next_level_ = value;
}

// required uint32 max_hp = 7;
inline bool login_mon_info_t::has_max_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void login_mon_info_t::set_has_max_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void login_mon_info_t::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void login_mon_info_t::clear_max_hp() {
  max_hp_ = 0u;
  clear_has_max_hp();
}
inline ::google::protobuf::uint32 login_mon_info_t::max_hp() const {
  return max_hp_;
}
inline void login_mon_info_t::set_max_hp(::google::protobuf::uint32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// required uint32 level = 8;
inline bool login_mon_info_t::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void login_mon_info_t::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void login_mon_info_t::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void login_mon_info_t::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 login_mon_info_t::level() const {
  return level_;
}
inline void login_mon_info_t::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 gender = 9;
inline bool login_mon_info_t::has_gender() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void login_mon_info_t::set_has_gender() {
  _has_bits_[0] |= 0x00000100u;
}
inline void login_mon_info_t::clear_has_gender() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void login_mon_info_t::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 login_mon_info_t::gender() const {
  return gender_;
}
inline void login_mon_info_t::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// required uint32 character = 10;
inline bool login_mon_info_t::has_character() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void login_mon_info_t::set_has_character() {
  _has_bits_[0] |= 0x00000200u;
}
inline void login_mon_info_t::clear_has_character() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void login_mon_info_t::clear_character() {
  character_ = 0u;
  clear_has_character();
}
inline ::google::protobuf::uint32 login_mon_info_t::character() const {
  return character_;
}
inline void login_mon_info_t::set_character(::google::protobuf::uint32 value) {
  set_has_character();
  character_ = value;
}

// required uint32 potential = 11;
inline bool login_mon_info_t::has_potential() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void login_mon_info_t::set_has_potential() {
  _has_bits_[0] |= 0x00000400u;
}
inline void login_mon_info_t::clear_has_potential() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void login_mon_info_t::clear_potential() {
  potential_ = 0u;
  clear_has_potential();
}
inline ::google::protobuf::uint32 login_mon_info_t::potential() const {
  return potential_;
}
inline void login_mon_info_t::set_potential(::google::protobuf::uint32 value) {
  set_has_potential();
  potential_ = value;
}

// required uint32 signet_id = 12;
inline bool login_mon_info_t::has_signet_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void login_mon_info_t::set_has_signet_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void login_mon_info_t::clear_has_signet_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void login_mon_info_t::clear_signet_id() {
  signet_id_ = 0u;
  clear_has_signet_id();
}
inline ::google::protobuf::uint32 login_mon_info_t::signet_id() const {
  return signet_id_;
}
inline void login_mon_info_t::set_signet_id(::google::protobuf::uint32 value) {
  set_has_signet_id();
  signet_id_ = value;
}

// required uint32 weight = 13;
inline bool login_mon_info_t::has_weight() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void login_mon_info_t::set_has_weight() {
  _has_bits_[0] |= 0x00001000u;
}
inline void login_mon_info_t::clear_has_weight() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void login_mon_info_t::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 login_mon_info_t::weight() const {
  return weight_;
}
inline void login_mon_info_t::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
}

// required uint32 height = 14;
inline bool login_mon_info_t::has_height() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void login_mon_info_t::set_has_height() {
  _has_bits_[0] |= 0x00002000u;
}
inline void login_mon_info_t::clear_has_height() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void login_mon_info_t::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 login_mon_info_t::height() const {
  return height_;
}
inline void login_mon_info_t::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
}

// required uint32 get_way = 15;
inline bool login_mon_info_t::has_get_way() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void login_mon_info_t::set_has_get_way() {
  _has_bits_[0] |= 0x00004000u;
}
inline void login_mon_info_t::clear_has_get_way() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void login_mon_info_t::clear_get_way() {
  get_way_ = 0u;
  clear_has_get_way();
}
inline ::google::protobuf::uint32 login_mon_info_t::get_way() const {
  return get_way_;
}
inline void login_mon_info_t::set_get_way(::google::protobuf::uint32 value) {
  set_has_get_way();
  get_way_ = value;
}

// required uint32 is_fight_mon = 16;
inline bool login_mon_info_t::has_is_fight_mon() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void login_mon_info_t::set_has_is_fight_mon() {
  _has_bits_[0] |= 0x00008000u;
}
inline void login_mon_info_t::clear_has_is_fight_mon() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void login_mon_info_t::clear_is_fight_mon() {
  is_fight_mon_ = 0u;
  clear_has_is_fight_mon();
}
inline ::google::protobuf::uint32 login_mon_info_t::is_fight_mon() const {
  return is_fight_mon_;
}
inline void login_mon_info_t::set_is_fight_mon(::google::protobuf::uint32 value) {
  set_has_is_fight_mon();
  is_fight_mon_ = value;
}

// required uint32 is_follow_mon = 17;
inline bool login_mon_info_t::has_is_follow_mon() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void login_mon_info_t::set_has_is_follow_mon() {
  _has_bits_[0] |= 0x00010000u;
}
inline void login_mon_info_t::clear_has_is_follow_mon() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void login_mon_info_t::clear_is_follow_mon() {
  is_follow_mon_ = 0u;
  clear_has_is_follow_mon();
}
inline ::google::protobuf::uint32 login_mon_info_t::is_follow_mon() const {
  return is_follow_mon_;
}
inline void login_mon_info_t::set_is_follow_mon(::google::protobuf::uint32 value) {
  set_has_is_follow_mon();
  is_follow_mon_ = value;
}

// required uint32 is_connected_mon = 18;
inline bool login_mon_info_t::has_is_connected_mon() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void login_mon_info_t::set_has_is_connected_mon() {
  _has_bits_[0] |= 0x00020000u;
}
inline void login_mon_info_t::clear_has_is_connected_mon() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void login_mon_info_t::clear_is_connected_mon() {
  is_connected_mon_ = 0u;
  clear_has_is_connected_mon();
}
inline ::google::protobuf::uint32 login_mon_info_t::is_connected_mon() const {
  return is_connected_mon_;
}
inline void login_mon_info_t::set_is_connected_mon(::google::protobuf::uint32 value) {
  set_has_is_connected_mon();
  is_connected_mon_ = value;
}

// required .iAdCSProto.login_mon_ev_info_t ev_info = 19;
inline bool login_mon_info_t::has_ev_info() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void login_mon_info_t::set_has_ev_info() {
  _has_bits_[0] |= 0x00040000u;
}
inline void login_mon_info_t::clear_has_ev_info() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void login_mon_info_t::clear_ev_info() {
  if (ev_info_ != NULL) ev_info_->::iAdCSProto::login_mon_ev_info_t::Clear();
  clear_has_ev_info();
}
inline const ::iAdCSProto::login_mon_ev_info_t& login_mon_info_t::ev_info() const {
  return ev_info_ != NULL ? *ev_info_ : *default_instance_->ev_info_;
}
inline ::iAdCSProto::login_mon_ev_info_t* login_mon_info_t::mutable_ev_info() {
  set_has_ev_info();
  if (ev_info_ == NULL) ev_info_ = new ::iAdCSProto::login_mon_ev_info_t;
  return ev_info_;
}
inline ::iAdCSProto::login_mon_ev_info_t* login_mon_info_t::release_ev_info() {
  clear_has_ev_info();
  ::iAdCSProto::login_mon_ev_info_t* temp = ev_info_;
  ev_info_ = NULL;
  return temp;
}

// required .iAdCSProto.login_mon_btl_attr_t btl_attr = 20;
inline bool login_mon_info_t::has_btl_attr() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void login_mon_info_t::set_has_btl_attr() {
  _has_bits_[0] |= 0x00080000u;
}
inline void login_mon_info_t::clear_has_btl_attr() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void login_mon_info_t::clear_btl_attr() {
  if (btl_attr_ != NULL) btl_attr_->::iAdCSProto::login_mon_btl_attr_t::Clear();
  clear_has_btl_attr();
}
inline const ::iAdCSProto::login_mon_btl_attr_t& login_mon_info_t::btl_attr() const {
  return btl_attr_ != NULL ? *btl_attr_ : *default_instance_->btl_attr_;
}
inline ::iAdCSProto::login_mon_btl_attr_t* login_mon_info_t::mutable_btl_attr() {
  set_has_btl_attr();
  if (btl_attr_ == NULL) btl_attr_ = new ::iAdCSProto::login_mon_btl_attr_t;
  return btl_attr_;
}
inline ::iAdCSProto::login_mon_btl_attr_t* login_mon_info_t::release_btl_attr() {
  clear_has_btl_attr();
  ::iAdCSProto::login_mon_btl_attr_t* temp = btl_attr_;
  btl_attr_ = NULL;
  return temp;
}

// required .iAdCSProto.login_mon_moves_info_t moves_info = 21;
inline bool login_mon_info_t::has_moves_info() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void login_mon_info_t::set_has_moves_info() {
  _has_bits_[0] |= 0x00100000u;
}
inline void login_mon_info_t::clear_has_moves_info() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void login_mon_info_t::clear_moves_info() {
  if (moves_info_ != NULL) moves_info_->::iAdCSProto::login_mon_moves_info_t::Clear();
  clear_has_moves_info();
}
inline const ::iAdCSProto::login_mon_moves_info_t& login_mon_info_t::moves_info() const {
  return moves_info_ != NULL ? *moves_info_ : *default_instance_->moves_info_;
}
inline ::iAdCSProto::login_mon_moves_info_t* login_mon_info_t::mutable_moves_info() {
  set_has_moves_info();
  if (moves_info_ == NULL) moves_info_ = new ::iAdCSProto::login_mon_moves_info_t;
  return moves_info_;
}
inline ::iAdCSProto::login_mon_moves_info_t* login_mon_info_t::release_moves_info() {
  clear_has_moves_info();
  ::iAdCSProto::login_mon_moves_info_t* temp = moves_info_;
  moves_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// login_rsp_t

// required bytes nick = 1;
inline bool login_rsp_t::has_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_rsp_t::set_has_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_rsp_t::clear_has_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_rsp_t::clear_nick() {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    nick_->clear();
  }
  clear_has_nick();
}
inline const ::std::string& login_rsp_t::nick() const {
  return *nick_;
}
inline void login_rsp_t::set_nick(const ::std::string& value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void login_rsp_t::set_nick(const char* value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void login_rsp_t::set_nick(const void* value, size_t size) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* login_rsp_t::mutable_nick() {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  return nick_;
}
inline ::std::string* login_rsp_t::release_nick() {
  clear_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_;
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .iAdCSProto.login_mon_info_t mon_info = 2;
inline int login_rsp_t::mon_info_size() const {
  return mon_info_.size();
}
inline void login_rsp_t::clear_mon_info() {
  mon_info_.Clear();
}
inline const ::iAdCSProto::login_mon_info_t& login_rsp_t::mon_info(int index) const {
  return mon_info_.Get(index);
}
inline ::iAdCSProto::login_mon_info_t* login_rsp_t::mutable_mon_info(int index) {
  return mon_info_.Mutable(index);
}
inline ::iAdCSProto::login_mon_info_t* login_rsp_t::add_mon_info() {
  return mon_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::login_mon_info_t >&
login_rsp_t::mon_info() const {
  return mon_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::login_mon_info_t >*
login_rsp_t::mutable_mon_info() {
  return &mon_info_;
}

// -------------------------------------------------------------------

// player_enter_map_req_t

// required uint32 map_id = 1;
inline bool player_enter_map_req_t::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_enter_map_req_t::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_enter_map_req_t::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_enter_map_req_t::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 player_enter_map_req_t::map_id() const {
  return map_id_;
}
inline void player_enter_map_req_t::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// required uint32 x_pos = 2;
inline bool player_enter_map_req_t::has_x_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_enter_map_req_t::set_has_x_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_enter_map_req_t::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_enter_map_req_t::clear_x_pos() {
  x_pos_ = 0u;
  clear_has_x_pos();
}
inline ::google::protobuf::uint32 player_enter_map_req_t::x_pos() const {
  return x_pos_;
}
inline void player_enter_map_req_t::set_x_pos(::google::protobuf::uint32 value) {
  set_has_x_pos();
  x_pos_ = value;
}

// required uint32 y_pos = 3;
inline bool player_enter_map_req_t::has_y_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_enter_map_req_t::set_has_y_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_enter_map_req_t::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_enter_map_req_t::clear_y_pos() {
  y_pos_ = 0u;
  clear_has_y_pos();
}
inline ::google::protobuf::uint32 player_enter_map_req_t::y_pos() const {
  return y_pos_;
}
inline void player_enter_map_req_t::set_y_pos(::google::protobuf::uint32 value) {
  set_has_y_pos();
  y_pos_ = value;
}

// -------------------------------------------------------------------

// player_enter_map_rsp_t

// required uint32 map_id = 1;
inline bool player_enter_map_rsp_t::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_enter_map_rsp_t::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_enter_map_rsp_t::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_enter_map_rsp_t::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 player_enter_map_rsp_t::map_id() const {
  return map_id_;
}
inline void player_enter_map_rsp_t::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// required uint32 x_pos = 2;
inline bool player_enter_map_rsp_t::has_x_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_enter_map_rsp_t::set_has_x_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_enter_map_rsp_t::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_enter_map_rsp_t::clear_x_pos() {
  x_pos_ = 0u;
  clear_has_x_pos();
}
inline ::google::protobuf::uint32 player_enter_map_rsp_t::x_pos() const {
  return x_pos_;
}
inline void player_enter_map_rsp_t::set_x_pos(::google::protobuf::uint32 value) {
  set_has_x_pos();
  x_pos_ = value;
}

// required uint32 y_pos = 3;
inline bool player_enter_map_rsp_t::has_y_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_enter_map_rsp_t::set_has_y_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_enter_map_rsp_t::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_enter_map_rsp_t::clear_y_pos() {
  y_pos_ = 0u;
  clear_has_y_pos();
}
inline ::google::protobuf::uint32 player_enter_map_rsp_t::y_pos() const {
  return y_pos_;
}
inline void player_enter_map_rsp_t::set_y_pos(::google::protobuf::uint32 value) {
  set_has_y_pos();
  y_pos_ = value;
}

// -------------------------------------------------------------------

// broadcast_player_enter_map_t

// required uint32 user_id = 1;
inline bool broadcast_player_enter_map_t::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void broadcast_player_enter_map_t::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void broadcast_player_enter_map_t::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void broadcast_player_enter_map_t::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 broadcast_player_enter_map_t::user_id() const {
  return user_id_;
}
inline void broadcast_player_enter_map_t::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string user_nick = 2 [default = "test"];
inline bool broadcast_player_enter_map_t::has_user_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void broadcast_player_enter_map_t::set_has_user_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void broadcast_player_enter_map_t::clear_has_user_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void broadcast_player_enter_map_t::clear_user_nick() {
  if (user_nick_ != &_default_user_nick_) {
    user_nick_->assign(_default_user_nick_);
  }
  clear_has_user_nick();
}
inline const ::std::string& broadcast_player_enter_map_t::user_nick() const {
  return *user_nick_;
}
inline void broadcast_player_enter_map_t::set_user_nick(const ::std::string& value) {
  set_has_user_nick();
  if (user_nick_ == &_default_user_nick_) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(value);
}
inline void broadcast_player_enter_map_t::set_user_nick(const char* value) {
  set_has_user_nick();
  if (user_nick_ == &_default_user_nick_) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(value);
}
inline void broadcast_player_enter_map_t::set_user_nick(const char* value, size_t size) {
  set_has_user_nick();
  if (user_nick_ == &_default_user_nick_) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* broadcast_player_enter_map_t::mutable_user_nick() {
  set_has_user_nick();
  if (user_nick_ == &_default_user_nick_) {
    user_nick_ = new ::std::string(_default_user_nick_);
  }
  return user_nick_;
}
inline ::std::string* broadcast_player_enter_map_t::release_user_nick() {
  clear_has_user_nick();
  if (user_nick_ == &_default_user_nick_) {
    return NULL;
  } else {
    ::std::string* temp = user_nick_;
    user_nick_ = const_cast< ::std::string*>(&_default_user_nick_);
    return temp;
  }
}

// required uint32 x_pos = 3;
inline bool broadcast_player_enter_map_t::has_x_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void broadcast_player_enter_map_t::set_has_x_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void broadcast_player_enter_map_t::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void broadcast_player_enter_map_t::clear_x_pos() {
  x_pos_ = 0u;
  clear_has_x_pos();
}
inline ::google::protobuf::uint32 broadcast_player_enter_map_t::x_pos() const {
  return x_pos_;
}
inline void broadcast_player_enter_map_t::set_x_pos(::google::protobuf::uint32 value) {
  set_has_x_pos();
  x_pos_ = value;
}

// required uint32 y_pos = 4;
inline bool broadcast_player_enter_map_t::has_y_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void broadcast_player_enter_map_t::set_has_y_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void broadcast_player_enter_map_t::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void broadcast_player_enter_map_t::clear_y_pos() {
  y_pos_ = 0u;
  clear_has_y_pos();
}
inline ::google::protobuf::uint32 broadcast_player_enter_map_t::y_pos() const {
  return y_pos_;
}
inline void broadcast_player_enter_map_t::set_y_pos(::google::protobuf::uint32 value) {
  set_has_y_pos();
  y_pos_ = value;
}

// -------------------------------------------------------------------

// player_leave_map_req_t

// optional uint32 map_id = 1 [default = 0];
inline bool player_leave_map_req_t::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_leave_map_req_t::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_leave_map_req_t::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_leave_map_req_t::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 player_leave_map_req_t::map_id() const {
  return map_id_;
}
inline void player_leave_map_req_t::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// -------------------------------------------------------------------

// player_leave_map_rsp_t

// optional uint32 map_id = 1 [default = 0];
inline bool player_leave_map_rsp_t::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_leave_map_rsp_t::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_leave_map_rsp_t::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_leave_map_rsp_t::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 player_leave_map_rsp_t::map_id() const {
  return map_id_;
}
inline void player_leave_map_rsp_t::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// -------------------------------------------------------------------

// broadcast_player_leave_map_t

// required uint32 user_id = 1;
inline bool broadcast_player_leave_map_t::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void broadcast_player_leave_map_t::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void broadcast_player_leave_map_t::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void broadcast_player_leave_map_t::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 broadcast_player_leave_map_t::user_id() const {
  return user_id_;
}
inline void broadcast_player_leave_map_t::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// map_player_walk_req_t

// required uint32 dest_x = 1;
inline bool map_player_walk_req_t::has_dest_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void map_player_walk_req_t::set_has_dest_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void map_player_walk_req_t::clear_has_dest_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void map_player_walk_req_t::clear_dest_x() {
  dest_x_ = 0u;
  clear_has_dest_x();
}
inline ::google::protobuf::uint32 map_player_walk_req_t::dest_x() const {
  return dest_x_;
}
inline void map_player_walk_req_t::set_dest_x(::google::protobuf::uint32 value) {
  set_has_dest_x();
  dest_x_ = value;
}

// required uint32 dest_y = 2;
inline bool map_player_walk_req_t::has_dest_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void map_player_walk_req_t::set_has_dest_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void map_player_walk_req_t::clear_has_dest_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void map_player_walk_req_t::clear_dest_y() {
  dest_y_ = 0u;
  clear_has_dest_y();
}
inline ::google::protobuf::uint32 map_player_walk_req_t::dest_y() const {
  return dest_y_;
}
inline void map_player_walk_req_t::set_dest_y(::google::protobuf::uint32 value) {
  set_has_dest_y();
  dest_y_ = value;
}

// -------------------------------------------------------------------

// map_player_walk_rsp_t

// required uint32 dest_x = 1;
inline bool map_player_walk_rsp_t::has_dest_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void map_player_walk_rsp_t::set_has_dest_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void map_player_walk_rsp_t::clear_has_dest_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void map_player_walk_rsp_t::clear_dest_x() {
  dest_x_ = 0u;
  clear_has_dest_x();
}
inline ::google::protobuf::uint32 map_player_walk_rsp_t::dest_x() const {
  return dest_x_;
}
inline void map_player_walk_rsp_t::set_dest_x(::google::protobuf::uint32 value) {
  set_has_dest_x();
  dest_x_ = value;
}

// required uint32 dest_y = 2;
inline bool map_player_walk_rsp_t::has_dest_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void map_player_walk_rsp_t::set_has_dest_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void map_player_walk_rsp_t::clear_has_dest_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void map_player_walk_rsp_t::clear_dest_y() {
  dest_y_ = 0u;
  clear_has_dest_y();
}
inline ::google::protobuf::uint32 map_player_walk_rsp_t::dest_y() const {
  return dest_y_;
}
inline void map_player_walk_rsp_t::set_dest_y(::google::protobuf::uint32 value) {
  set_has_dest_y();
  dest_y_ = value;
}

// -------------------------------------------------------------------

// broadcast_map_player_walk_t

// required uint32 user_id = 1;
inline bool broadcast_map_player_walk_t::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void broadcast_map_player_walk_t::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void broadcast_map_player_walk_t::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void broadcast_map_player_walk_t::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 broadcast_map_player_walk_t::user_id() const {
  return user_id_;
}
inline void broadcast_map_player_walk_t::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 dest_x = 2;
inline bool broadcast_map_player_walk_t::has_dest_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void broadcast_map_player_walk_t::set_has_dest_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void broadcast_map_player_walk_t::clear_has_dest_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void broadcast_map_player_walk_t::clear_dest_x() {
  dest_x_ = 0u;
  clear_has_dest_x();
}
inline ::google::protobuf::uint32 broadcast_map_player_walk_t::dest_x() const {
  return dest_x_;
}
inline void broadcast_map_player_walk_t::set_dest_x(::google::protobuf::uint32 value) {
  set_has_dest_x();
  dest_x_ = value;
}

// required uint32 dest_y = 3;
inline bool broadcast_map_player_walk_t::has_dest_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void broadcast_map_player_walk_t::set_has_dest_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void broadcast_map_player_walk_t::clear_has_dest_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void broadcast_map_player_walk_t::clear_dest_y() {
  dest_y_ = 0u;
  clear_has_dest_y();
}
inline ::google::protobuf::uint32 broadcast_map_player_walk_t::dest_y() const {
  return dest_y_;
}
inline void broadcast_map_player_walk_t::set_dest_y(::google::protobuf::uint32 value) {
  set_has_dest_y();
  dest_y_ = value;
}

// -------------------------------------------------------------------

// get_map_player_list_req_t

// -------------------------------------------------------------------

// get_map_player_list_rsp_t_simple_player_info_t

// required uint32 user_id = 1;
inline bool get_map_player_list_rsp_t_simple_player_info_t::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 get_map_player_list_rsp_t_simple_player_info_t::user_id() const {
  return user_id_;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string user_nick = 2;
inline bool get_map_player_list_rsp_t_simple_player_info_t::has_user_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_has_user_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_has_user_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_user_nick() {
  if (user_nick_ != &::google::protobuf::internal::kEmptyString) {
    user_nick_->clear();
  }
  clear_has_user_nick();
}
inline const ::std::string& get_map_player_list_rsp_t_simple_player_info_t::user_nick() const {
  return *user_nick_;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_user_nick(const ::std::string& value) {
  set_has_user_nick();
  if (user_nick_ == &::google::protobuf::internal::kEmptyString) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(value);
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_user_nick(const char* value) {
  set_has_user_nick();
  if (user_nick_ == &::google::protobuf::internal::kEmptyString) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(value);
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_user_nick(const char* value, size_t size) {
  set_has_user_nick();
  if (user_nick_ == &::google::protobuf::internal::kEmptyString) {
    user_nick_ = new ::std::string;
  }
  user_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* get_map_player_list_rsp_t_simple_player_info_t::mutable_user_nick() {
  set_has_user_nick();
  if (user_nick_ == &::google::protobuf::internal::kEmptyString) {
    user_nick_ = new ::std::string;
  }
  return user_nick_;
}
inline ::std::string* get_map_player_list_rsp_t_simple_player_info_t::release_user_nick() {
  clear_has_user_nick();
  if (user_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_nick_;
    user_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 x_pos = 3;
inline bool get_map_player_list_rsp_t_simple_player_info_t::has_x_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_has_x_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_x_pos() {
  x_pos_ = 0u;
  clear_has_x_pos();
}
inline ::google::protobuf::uint32 get_map_player_list_rsp_t_simple_player_info_t::x_pos() const {
  return x_pos_;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_x_pos(::google::protobuf::uint32 value) {
  set_has_x_pos();
  x_pos_ = value;
}

// optional uint32 y_pos = 4;
inline bool get_map_player_list_rsp_t_simple_player_info_t::has_y_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_has_y_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::clear_y_pos() {
  y_pos_ = 0u;
  clear_has_y_pos();
}
inline ::google::protobuf::uint32 get_map_player_list_rsp_t_simple_player_info_t::y_pos() const {
  return y_pos_;
}
inline void get_map_player_list_rsp_t_simple_player_info_t::set_y_pos(::google::protobuf::uint32 value) {
  set_has_y_pos();
  y_pos_ = value;
}

// -------------------------------------------------------------------

// get_map_player_list_rsp_t

// repeated .iAdCSProto.get_map_player_list_rsp_t.simple_player_info_t player_list = 1;
inline int get_map_player_list_rsp_t::player_list_size() const {
  return player_list_.size();
}
inline void get_map_player_list_rsp_t::clear_player_list() {
  player_list_.Clear();
}
inline const ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t& get_map_player_list_rsp_t::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t* get_map_player_list_rsp_t::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t* get_map_player_list_rsp_t::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t >&
get_map_player_list_rsp_t::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::get_map_player_list_rsp_t_simple_player_info_t >*
get_map_player_list_rsp_t::mutable_player_list() {
  return &player_list_;
}

// -------------------------------------------------------------------

// player_change_nick_req_t

// required string new_nick = 1;
inline bool player_change_nick_req_t::has_new_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_change_nick_req_t::set_has_new_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_change_nick_req_t::clear_has_new_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_change_nick_req_t::clear_new_nick() {
  if (new_nick_ != &::google::protobuf::internal::kEmptyString) {
    new_nick_->clear();
  }
  clear_has_new_nick();
}
inline const ::std::string& player_change_nick_req_t::new_nick() const {
  return *new_nick_;
}
inline void player_change_nick_req_t::set_new_nick(const ::std::string& value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void player_change_nick_req_t::set_new_nick(const char* value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void player_change_nick_req_t::set_new_nick(const char* value, size_t size) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_change_nick_req_t::mutable_new_nick() {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  return new_nick_;
}
inline ::std::string* player_change_nick_req_t::release_new_nick() {
  clear_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_nick_;
    new_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// player_change_nick_rsp_t

// required string new_nick = 1;
inline bool player_change_nick_rsp_t::has_new_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_change_nick_rsp_t::set_has_new_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_change_nick_rsp_t::clear_has_new_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_change_nick_rsp_t::clear_new_nick() {
  if (new_nick_ != &::google::protobuf::internal::kEmptyString) {
    new_nick_->clear();
  }
  clear_has_new_nick();
}
inline const ::std::string& player_change_nick_rsp_t::new_nick() const {
  return *new_nick_;
}
inline void player_change_nick_rsp_t::set_new_nick(const ::std::string& value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void player_change_nick_rsp_t::set_new_nick(const char* value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void player_change_nick_rsp_t::set_new_nick(const char* value, size_t size) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_change_nick_rsp_t::mutable_new_nick() {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  return new_nick_;
}
inline ::std::string* player_change_nick_rsp_t::release_new_nick() {
  clear_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_nick_;
    new_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// broadcast_player_new_nick_t

// required uint32 user_id = 1;
inline bool broadcast_player_new_nick_t::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void broadcast_player_new_nick_t::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void broadcast_player_new_nick_t::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void broadcast_player_new_nick_t::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 broadcast_player_new_nick_t::user_id() const {
  return user_id_;
}
inline void broadcast_player_new_nick_t::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required string new_nick = 2;
inline bool broadcast_player_new_nick_t::has_new_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void broadcast_player_new_nick_t::set_has_new_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void broadcast_player_new_nick_t::clear_has_new_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void broadcast_player_new_nick_t::clear_new_nick() {
  if (new_nick_ != &::google::protobuf::internal::kEmptyString) {
    new_nick_->clear();
  }
  clear_has_new_nick();
}
inline const ::std::string& broadcast_player_new_nick_t::new_nick() const {
  return *new_nick_;
}
inline void broadcast_player_new_nick_t::set_new_nick(const ::std::string& value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void broadcast_player_new_nick_t::set_new_nick(const char* value) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(value);
}
inline void broadcast_player_new_nick_t::set_new_nick(const char* value, size_t size) {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  new_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* broadcast_player_new_nick_t::mutable_new_nick() {
  set_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    new_nick_ = new ::std::string;
  }
  return new_nick_;
}
inline ::std::string* broadcast_player_new_nick_t::release_new_nick() {
  clear_has_new_nick();
  if (new_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_nick_;
    new_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// avatar_attr_info_t

// required uint32 attr_id = 1;
inline bool avatar_attr_info_t::has_attr_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void avatar_attr_info_t::set_has_attr_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void avatar_attr_info_t::clear_has_attr_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void avatar_attr_info_t::clear_attr_id() {
  attr_id_ = 0u;
  clear_has_attr_id();
}
inline ::google::protobuf::uint32 avatar_attr_info_t::attr_id() const {
  return attr_id_;
}
inline void avatar_attr_info_t::set_attr_id(::google::protobuf::uint32 value) {
  set_has_attr_id();
  attr_id_ = value;
}

// required uint32 attr_value = 2;
inline bool avatar_attr_info_t::has_attr_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void avatar_attr_info_t::set_has_attr_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void avatar_attr_info_t::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void avatar_attr_info_t::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
inline ::google::protobuf::uint32 avatar_attr_info_t::attr_value() const {
  return attr_value_;
}
inline void avatar_attr_info_t::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
}

// -------------------------------------------------------------------

// player_item_info_t

// required uint64 id = 1;
inline bool player_item_info_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_item_info_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_item_info_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_item_info_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 player_item_info_t::id() const {
  return id_;
}
inline void player_item_info_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 item_id = 2;
inline bool player_item_info_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_item_info_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_item_info_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_item_info_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 player_item_info_t::item_id() const {
  return item_id_;
}
inline void player_item_info_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_count = 3;
inline bool player_item_info_t::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_item_info_t::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_item_info_t::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_item_info_t::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 player_item_info_t::item_count() const {
  return item_count_;
}
inline void player_item_info_t::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required uint32 item_bag_flag = 4;
inline bool player_item_info_t::has_item_bag_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void player_item_info_t::set_has_item_bag_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void player_item_info_t::clear_has_item_bag_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void player_item_info_t::clear_item_bag_flag() {
  item_bag_flag_ = 0u;
  clear_has_item_bag_flag();
}
inline ::google::protobuf::uint32 player_item_info_t::item_bag_flag() const {
  return item_bag_flag_;
}
inline void player_item_info_t::set_item_bag_flag(::google::protobuf::uint32 value) {
  set_has_item_bag_flag();
  item_bag_flag_ = value;
}

// repeated .iAdCSProto.avatar_attr_info_t avatar_attr_list = 5;
inline int player_item_info_t::avatar_attr_list_size() const {
  return avatar_attr_list_.size();
}
inline void player_item_info_t::clear_avatar_attr_list() {
  avatar_attr_list_.Clear();
}
inline const ::iAdCSProto::avatar_attr_info_t& player_item_info_t::avatar_attr_list(int index) const {
  return avatar_attr_list_.Get(index);
}
inline ::iAdCSProto::avatar_attr_info_t* player_item_info_t::mutable_avatar_attr_list(int index) {
  return avatar_attr_list_.Mutable(index);
}
inline ::iAdCSProto::avatar_attr_info_t* player_item_info_t::add_avatar_attr_list() {
  return avatar_attr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::avatar_attr_info_t >&
player_item_info_t::avatar_attr_list() const {
  return avatar_attr_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::avatar_attr_info_t >*
player_item_info_t::mutable_avatar_attr_list() {
  return &avatar_attr_list_;
}

// -------------------------------------------------------------------

// get_player_items_req_t

// -------------------------------------------------------------------

// get_player_items_rsp_t

// repeated .iAdCSProto.player_item_info_t normal_items = 1;
inline int get_player_items_rsp_t::normal_items_size() const {
  return normal_items_.size();
}
inline void get_player_items_rsp_t::clear_normal_items() {
  normal_items_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& get_player_items_rsp_t::normal_items(int index) const {
  return normal_items_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* get_player_items_rsp_t::mutable_normal_items(int index) {
  return normal_items_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* get_player_items_rsp_t::add_normal_items() {
  return normal_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
get_player_items_rsp_t::normal_items() const {
  return normal_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
get_player_items_rsp_t::mutable_normal_items() {
  return &normal_items_;
}

// repeated .iAdCSProto.player_item_info_t monster_items = 2;
inline int get_player_items_rsp_t::monster_items_size() const {
  return monster_items_.size();
}
inline void get_player_items_rsp_t::clear_monster_items() {
  monster_items_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& get_player_items_rsp_t::monster_items(int index) const {
  return monster_items_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* get_player_items_rsp_t::mutable_monster_items(int index) {
  return monster_items_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* get_player_items_rsp_t::add_monster_items() {
  return monster_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
get_player_items_rsp_t::monster_items() const {
  return monster_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
get_player_items_rsp_t::mutable_monster_items() {
  return &monster_items_;
}

// -------------------------------------------------------------------

// use_normal_item_req_t

// required uint64 id = 1;
inline bool use_normal_item_req_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void use_normal_item_req_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void use_normal_item_req_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void use_normal_item_req_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 use_normal_item_req_t::id() const {
  return id_;
}
inline void use_normal_item_req_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 item_id = 2;
inline bool use_normal_item_req_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void use_normal_item_req_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void use_normal_item_req_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void use_normal_item_req_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 use_normal_item_req_t::item_id() const {
  return item_id_;
}
inline void use_normal_item_req_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 item_count = 3 [default = 1];
inline bool use_normal_item_req_t::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void use_normal_item_req_t::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void use_normal_item_req_t::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void use_normal_item_req_t::clear_item_count() {
  item_count_ = 1u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 use_normal_item_req_t::item_count() const {
  return item_count_;
}
inline void use_normal_item_req_t::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// -------------------------------------------------------------------

// use_normal_item_rsp_t

// required uint64 id = 1;
inline bool use_normal_item_rsp_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void use_normal_item_rsp_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void use_normal_item_rsp_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void use_normal_item_rsp_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 use_normal_item_rsp_t::id() const {
  return id_;
}
inline void use_normal_item_rsp_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 item_id = 2;
inline bool use_normal_item_rsp_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void use_normal_item_rsp_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void use_normal_item_rsp_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void use_normal_item_rsp_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 use_normal_item_rsp_t::item_id() const {
  return item_id_;
}
inline void use_normal_item_rsp_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 item_count = 3 [default = 1];
inline bool use_normal_item_rsp_t::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void use_normal_item_rsp_t::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void use_normal_item_rsp_t::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void use_normal_item_rsp_t::clear_item_count() {
  item_count_ = 1u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 use_normal_item_rsp_t::item_count() const {
  return item_count_;
}
inline void use_normal_item_rsp_t::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// -------------------------------------------------------------------

// use_monster_item_req_t

// required uint64 id = 1;
inline bool use_monster_item_req_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void use_monster_item_req_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void use_monster_item_req_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void use_monster_item_req_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 use_monster_item_req_t::id() const {
  return id_;
}
inline void use_monster_item_req_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 item_id = 2;
inline bool use_monster_item_req_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void use_monster_item_req_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void use_monster_item_req_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void use_monster_item_req_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 use_monster_item_req_t::item_id() const {
  return item_id_;
}
inline void use_monster_item_req_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 item_count = 3 [default = 1];
inline bool use_monster_item_req_t::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void use_monster_item_req_t::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void use_monster_item_req_t::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void use_monster_item_req_t::clear_item_count() {
  item_count_ = 1u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 use_monster_item_req_t::item_count() const {
  return item_count_;
}
inline void use_monster_item_req_t::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required string monster_uuid = 4;
inline bool use_monster_item_req_t::has_monster_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void use_monster_item_req_t::set_has_monster_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void use_monster_item_req_t::clear_has_monster_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void use_monster_item_req_t::clear_monster_uuid() {
  if (monster_uuid_ != &::google::protobuf::internal::kEmptyString) {
    monster_uuid_->clear();
  }
  clear_has_monster_uuid();
}
inline const ::std::string& use_monster_item_req_t::monster_uuid() const {
  return *monster_uuid_;
}
inline void use_monster_item_req_t::set_monster_uuid(const ::std::string& value) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(value);
}
inline void use_monster_item_req_t::set_monster_uuid(const char* value) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(value);
}
inline void use_monster_item_req_t::set_monster_uuid(const char* value, size_t size) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* use_monster_item_req_t::mutable_monster_uuid() {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  return monster_uuid_;
}
inline ::std::string* use_monster_item_req_t::release_monster_uuid() {
  clear_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = monster_uuid_;
    monster_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// use_monster_item_rsp_t

// required uint64 id = 1;
inline bool use_monster_item_rsp_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void use_monster_item_rsp_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void use_monster_item_rsp_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void use_monster_item_rsp_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 use_monster_item_rsp_t::id() const {
  return id_;
}
inline void use_monster_item_rsp_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 item_id = 2;
inline bool use_monster_item_rsp_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void use_monster_item_rsp_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void use_monster_item_rsp_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void use_monster_item_rsp_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 use_monster_item_rsp_t::item_id() const {
  return item_id_;
}
inline void use_monster_item_rsp_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 item_count = 3 [default = 1];
inline bool use_monster_item_rsp_t::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void use_monster_item_rsp_t::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void use_monster_item_rsp_t::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void use_monster_item_rsp_t::clear_item_count() {
  item_count_ = 1u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 use_monster_item_rsp_t::item_count() const {
  return item_count_;
}
inline void use_monster_item_rsp_t::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required string monster_uuid = 4;
inline bool use_monster_item_rsp_t::has_monster_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void use_monster_item_rsp_t::set_has_monster_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void use_monster_item_rsp_t::clear_has_monster_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void use_monster_item_rsp_t::clear_monster_uuid() {
  if (monster_uuid_ != &::google::protobuf::internal::kEmptyString) {
    monster_uuid_->clear();
  }
  clear_has_monster_uuid();
}
inline const ::std::string& use_monster_item_rsp_t::monster_uuid() const {
  return *monster_uuid_;
}
inline void use_monster_item_rsp_t::set_monster_uuid(const ::std::string& value) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(value);
}
inline void use_monster_item_rsp_t::set_monster_uuid(const char* value) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(value);
}
inline void use_monster_item_rsp_t::set_monster_uuid(const char* value, size_t size) {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  monster_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* use_monster_item_rsp_t::mutable_monster_uuid() {
  set_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    monster_uuid_ = new ::std::string;
  }
  return monster_uuid_;
}
inline ::std::string* use_monster_item_rsp_t::release_monster_uuid() {
  clear_has_monster_uuid();
  if (monster_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = monster_uuid_;
    monster_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// cli_add_items_noti_t

// repeated .iAdCSProto.player_item_info_t add_items = 1;
inline int cli_add_items_noti_t::add_items_size() const {
  return add_items_.size();
}
inline void cli_add_items_noti_t::clear_add_items() {
  add_items_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& cli_add_items_noti_t::add_items(int index) const {
  return add_items_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* cli_add_items_noti_t::mutable_add_items(int index) {
  return add_items_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* cli_add_items_noti_t::add_add_items() {
  return add_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
cli_add_items_noti_t::add_items() const {
  return add_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
cli_add_items_noti_t::mutable_add_items() {
  return &add_items_;
}

// -------------------------------------------------------------------

// cli_drop_items_req_t

// repeated .iAdCSProto.player_item_info_t drop_items = 1;
inline int cli_drop_items_req_t::drop_items_size() const {
  return drop_items_.size();
}
inline void cli_drop_items_req_t::clear_drop_items() {
  drop_items_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& cli_drop_items_req_t::drop_items(int index) const {
  return drop_items_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* cli_drop_items_req_t::mutable_drop_items(int index) {
  return drop_items_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* cli_drop_items_req_t::add_drop_items() {
  return drop_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
cli_drop_items_req_t::drop_items() const {
  return drop_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
cli_drop_items_req_t::mutable_drop_items() {
  return &drop_items_;
}

// -------------------------------------------------------------------

// cli_drop_items_rsp_t

// repeated .iAdCSProto.player_item_info_t drop_items = 1;
inline int cli_drop_items_rsp_t::drop_items_size() const {
  return drop_items_.size();
}
inline void cli_drop_items_rsp_t::clear_drop_items() {
  drop_items_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& cli_drop_items_rsp_t::drop_items(int index) const {
  return drop_items_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* cli_drop_items_rsp_t::mutable_drop_items(int index) {
  return drop_items_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* cli_drop_items_rsp_t::add_drop_items() {
  return drop_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
cli_drop_items_rsp_t::drop_items() const {
  return drop_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
cli_drop_items_rsp_t::mutable_drop_items() {
  return &drop_items_;
}

// -------------------------------------------------------------------

// mail_head_t

// required uint64 mail_id = 1;
inline bool mail_head_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_head_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_head_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_head_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 mail_head_t::mail_id() const {
  return mail_id_;
}
inline void mail_head_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required int32 mail_time = 2;
inline bool mail_head_t::has_mail_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_head_t::set_has_mail_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_head_t::clear_has_mail_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_head_t::clear_mail_time() {
  mail_time_ = 0;
  clear_has_mail_time();
}
inline ::google::protobuf::int32 mail_head_t::mail_time() const {
  return mail_time_;
}
inline void mail_head_t::set_mail_time(::google::protobuf::int32 value) {
  set_has_mail_time();
  mail_time_ = value;
}

// required uint32 mail_type = 3;
inline bool mail_head_t::has_mail_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_head_t::set_has_mail_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_head_t::clear_has_mail_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_head_t::clear_mail_type() {
  mail_type_ = 0u;
  clear_has_mail_type();
}
inline ::google::protobuf::uint32 mail_head_t::mail_type() const {
  return mail_type_;
}
inline void mail_head_t::set_mail_type(::google::protobuf::uint32 value) {
  set_has_mail_type();
  mail_type_ = value;
}

// required uint32 read_state = 4;
inline bool mail_head_t::has_read_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_head_t::set_has_read_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_head_t::clear_has_read_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_head_t::clear_read_state() {
  read_state_ = 0u;
  clear_has_read_state();
}
inline ::google::protobuf::uint32 mail_head_t::read_state() const {
  return read_state_;
}
inline void mail_head_t::set_read_state(::google::protobuf::uint32 value) {
  set_has_read_state();
  read_state_ = value;
}

// required uint32 sender_id = 5;
inline bool mail_head_t::has_sender_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mail_head_t::set_has_sender_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mail_head_t::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mail_head_t::clear_sender_id() {
  sender_id_ = 0u;
  clear_has_sender_id();
}
inline ::google::protobuf::uint32 mail_head_t::sender_id() const {
  return sender_id_;
}
inline void mail_head_t::set_sender_id(::google::protobuf::uint32 value) {
  set_has_sender_id();
  sender_id_ = value;
}

// required int32 sender_role_tm = 6;
inline bool mail_head_t::has_sender_role_tm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mail_head_t::set_has_sender_role_tm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mail_head_t::clear_has_sender_role_tm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mail_head_t::clear_sender_role_tm() {
  sender_role_tm_ = 0;
  clear_has_sender_role_tm();
}
inline ::google::protobuf::int32 mail_head_t::sender_role_tm() const {
  return sender_role_tm_;
}
inline void mail_head_t::set_sender_role_tm(::google::protobuf::int32 value) {
  set_has_sender_role_tm();
  sender_role_tm_ = value;
}

// required string sender_nick = 7;
inline bool mail_head_t::has_sender_nick() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mail_head_t::set_has_sender_nick() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mail_head_t::clear_has_sender_nick() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mail_head_t::clear_sender_nick() {
  if (sender_nick_ != &::google::protobuf::internal::kEmptyString) {
    sender_nick_->clear();
  }
  clear_has_sender_nick();
}
inline const ::std::string& mail_head_t::sender_nick() const {
  return *sender_nick_;
}
inline void mail_head_t::set_sender_nick(const ::std::string& value) {
  set_has_sender_nick();
  if (sender_nick_ == &::google::protobuf::internal::kEmptyString) {
    sender_nick_ = new ::std::string;
  }
  sender_nick_->assign(value);
}
inline void mail_head_t::set_sender_nick(const char* value) {
  set_has_sender_nick();
  if (sender_nick_ == &::google::protobuf::internal::kEmptyString) {
    sender_nick_ = new ::std::string;
  }
  sender_nick_->assign(value);
}
inline void mail_head_t::set_sender_nick(const char* value, size_t size) {
  set_has_sender_nick();
  if (sender_nick_ == &::google::protobuf::internal::kEmptyString) {
    sender_nick_ = new ::std::string;
  }
  sender_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mail_head_t::mutable_sender_nick() {
  set_has_sender_nick();
  if (sender_nick_ == &::google::protobuf::internal::kEmptyString) {
    sender_nick_ = new ::std::string;
  }
  return sender_nick_;
}
inline ::std::string* mail_head_t::release_sender_nick() {
  clear_has_sender_nick();
  if (sender_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_nick_;
    sender_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 receiver_id = 8;
inline bool mail_head_t::has_receiver_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mail_head_t::set_has_receiver_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mail_head_t::clear_has_receiver_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mail_head_t::clear_receiver_id() {
  receiver_id_ = 0u;
  clear_has_receiver_id();
}
inline ::google::protobuf::uint32 mail_head_t::receiver_id() const {
  return receiver_id_;
}
inline void mail_head_t::set_receiver_id(::google::protobuf::uint32 value) {
  set_has_receiver_id();
  receiver_id_ = value;
}

// required int32 receiver_role_tm = 9;
inline bool mail_head_t::has_receiver_role_tm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mail_head_t::set_has_receiver_role_tm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mail_head_t::clear_has_receiver_role_tm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mail_head_t::clear_receiver_role_tm() {
  receiver_role_tm_ = 0;
  clear_has_receiver_role_tm();
}
inline ::google::protobuf::int32 mail_head_t::receiver_role_tm() const {
  return receiver_role_tm_;
}
inline void mail_head_t::set_receiver_role_tm(::google::protobuf::int32 value) {
  set_has_receiver_role_tm();
  receiver_role_tm_ = value;
}

// required string mail_title = 10;
inline bool mail_head_t::has_mail_title() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mail_head_t::set_has_mail_title() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mail_head_t::clear_has_mail_title() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mail_head_t::clear_mail_title() {
  if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
    mail_title_->clear();
  }
  clear_has_mail_title();
}
inline const ::std::string& mail_head_t::mail_title() const {
  return *mail_title_;
}
inline void mail_head_t::set_mail_title(const ::std::string& value) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(value);
}
inline void mail_head_t::set_mail_title(const char* value) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(value);
}
inline void mail_head_t::set_mail_title(const char* value, size_t size) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mail_head_t::mutable_mail_title() {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  return mail_title_;
}
inline ::std::string* mail_head_t::release_mail_title() {
  clear_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mail_title_;
    mail_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// send_mail_req_t

// required uint32 receiver_id = 1;
inline bool send_mail_req_t::has_receiver_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_mail_req_t::set_has_receiver_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_mail_req_t::clear_has_receiver_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_mail_req_t::clear_receiver_id() {
  receiver_id_ = 0u;
  clear_has_receiver_id();
}
inline ::google::protobuf::uint32 send_mail_req_t::receiver_id() const {
  return receiver_id_;
}
inline void send_mail_req_t::set_receiver_id(::google::protobuf::uint32 value) {
  set_has_receiver_id();
  receiver_id_ = value;
}

// required int32 receiver_role_tm = 2;
inline bool send_mail_req_t::has_receiver_role_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_mail_req_t::set_has_receiver_role_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_mail_req_t::clear_has_receiver_role_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_mail_req_t::clear_receiver_role_tm() {
  receiver_role_tm_ = 0;
  clear_has_receiver_role_tm();
}
inline ::google::protobuf::int32 send_mail_req_t::receiver_role_tm() const {
  return receiver_role_tm_;
}
inline void send_mail_req_t::set_receiver_role_tm(::google::protobuf::int32 value) {
  set_has_receiver_role_tm();
  receiver_role_tm_ = value;
}

// required string mail_title = 3;
inline bool send_mail_req_t::has_mail_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_mail_req_t::set_has_mail_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_mail_req_t::clear_has_mail_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_mail_req_t::clear_mail_title() {
  if (mail_title_ != &::google::protobuf::internal::kEmptyString) {
    mail_title_->clear();
  }
  clear_has_mail_title();
}
inline const ::std::string& send_mail_req_t::mail_title() const {
  return *mail_title_;
}
inline void send_mail_req_t::set_mail_title(const ::std::string& value) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(value);
}
inline void send_mail_req_t::set_mail_title(const char* value) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(value);
}
inline void send_mail_req_t::set_mail_title(const char* value, size_t size) {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  mail_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* send_mail_req_t::mutable_mail_title() {
  set_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    mail_title_ = new ::std::string;
  }
  return mail_title_;
}
inline ::std::string* send_mail_req_t::release_mail_title() {
  clear_has_mail_title();
  if (mail_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mail_title_;
    mail_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string mail_content = 4;
inline bool send_mail_req_t::has_mail_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_mail_req_t::set_has_mail_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_mail_req_t::clear_has_mail_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_mail_req_t::clear_mail_content() {
  if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
    mail_content_->clear();
  }
  clear_has_mail_content();
}
inline const ::std::string& send_mail_req_t::mail_content() const {
  return *mail_content_;
}
inline void send_mail_req_t::set_mail_content(const ::std::string& value) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(value);
}
inline void send_mail_req_t::set_mail_content(const char* value) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(value);
}
inline void send_mail_req_t::set_mail_content(const char* value, size_t size) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* send_mail_req_t::mutable_mail_content() {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  return mail_content_;
}
inline ::std::string* send_mail_req_t::release_mail_content() {
  clear_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mail_content_;
    mail_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .iAdCSProto.player_item_info_t enclosure = 5;
inline int send_mail_req_t::enclosure_size() const {
  return enclosure_.size();
}
inline void send_mail_req_t::clear_enclosure() {
  enclosure_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& send_mail_req_t::enclosure(int index) const {
  return enclosure_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* send_mail_req_t::mutable_enclosure(int index) {
  return enclosure_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* send_mail_req_t::add_enclosure() {
  return enclosure_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
send_mail_req_t::enclosure() const {
  return enclosure_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
send_mail_req_t::mutable_enclosure() {
  return &enclosure_;
}

// -------------------------------------------------------------------

// send_mail_rsp_t

// -------------------------------------------------------------------

// get_mail_head_list_req_t

// -------------------------------------------------------------------

// get_mail_head_list_rsp_t

// repeated .iAdCSProto.mail_head_t mail_head_list = 1;
inline int get_mail_head_list_rsp_t::mail_head_list_size() const {
  return mail_head_list_.size();
}
inline void get_mail_head_list_rsp_t::clear_mail_head_list() {
  mail_head_list_.Clear();
}
inline const ::iAdCSProto::mail_head_t& get_mail_head_list_rsp_t::mail_head_list(int index) const {
  return mail_head_list_.Get(index);
}
inline ::iAdCSProto::mail_head_t* get_mail_head_list_rsp_t::mutable_mail_head_list(int index) {
  return mail_head_list_.Mutable(index);
}
inline ::iAdCSProto::mail_head_t* get_mail_head_list_rsp_t::add_mail_head_list() {
  return mail_head_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::mail_head_t >&
get_mail_head_list_rsp_t::mail_head_list() const {
  return mail_head_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::mail_head_t >*
get_mail_head_list_rsp_t::mutable_mail_head_list() {
  return &mail_head_list_;
}

// -------------------------------------------------------------------

// get_mail_body_req_t

// required uint64 mail_id = 1;
inline bool get_mail_body_req_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mail_body_req_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mail_body_req_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mail_body_req_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 get_mail_body_req_t::mail_id() const {
  return mail_id_;
}
inline void get_mail_body_req_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// get_mail_body_rsp_t

// required uint64 mail_id = 1;
inline bool get_mail_body_rsp_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mail_body_rsp_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mail_body_rsp_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mail_body_rsp_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 get_mail_body_rsp_t::mail_id() const {
  return mail_id_;
}
inline void get_mail_body_rsp_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required string mail_content = 2;
inline bool get_mail_body_rsp_t::has_mail_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_mail_body_rsp_t::set_has_mail_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_mail_body_rsp_t::clear_has_mail_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_mail_body_rsp_t::clear_mail_content() {
  if (mail_content_ != &::google::protobuf::internal::kEmptyString) {
    mail_content_->clear();
  }
  clear_has_mail_content();
}
inline const ::std::string& get_mail_body_rsp_t::mail_content() const {
  return *mail_content_;
}
inline void get_mail_body_rsp_t::set_mail_content(const ::std::string& value) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(value);
}
inline void get_mail_body_rsp_t::set_mail_content(const char* value) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(value);
}
inline void get_mail_body_rsp_t::set_mail_content(const char* value, size_t size) {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  mail_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* get_mail_body_rsp_t::mutable_mail_content() {
  set_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    mail_content_ = new ::std::string;
  }
  return mail_content_;
}
inline ::std::string* get_mail_body_rsp_t::release_mail_content() {
  clear_has_mail_content();
  if (mail_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mail_content_;
    mail_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .iAdCSProto.player_item_info_t enclosure = 3;
inline int get_mail_body_rsp_t::enclosure_size() const {
  return enclosure_.size();
}
inline void get_mail_body_rsp_t::clear_enclosure() {
  enclosure_.Clear();
}
inline const ::iAdCSProto::player_item_info_t& get_mail_body_rsp_t::enclosure(int index) const {
  return enclosure_.Get(index);
}
inline ::iAdCSProto::player_item_info_t* get_mail_body_rsp_t::mutable_enclosure(int index) {
  return enclosure_.Mutable(index);
}
inline ::iAdCSProto::player_item_info_t* get_mail_body_rsp_t::add_enclosure() {
  return enclosure_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >&
get_mail_body_rsp_t::enclosure() const {
  return enclosure_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::player_item_info_t >*
get_mail_body_rsp_t::mutable_enclosure() {
  return &enclosure_;
}

// -------------------------------------------------------------------

// del_mail_req_t

// required uint64 mail_id = 1;
inline bool del_mail_req_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void del_mail_req_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void del_mail_req_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void del_mail_req_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 del_mail_req_t::mail_id() const {
  return mail_id_;
}
inline void del_mail_req_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// del_mail_rsp_t

// required uint64 mail_id = 1;
inline bool del_mail_rsp_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void del_mail_rsp_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void del_mail_rsp_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void del_mail_rsp_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 del_mail_rsp_t::mail_id() const {
  return mail_id_;
}
inline void del_mail_rsp_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// get_mail_enclosure_req_t

// required uint64 mail_id = 1;
inline bool get_mail_enclosure_req_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mail_enclosure_req_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mail_enclosure_req_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mail_enclosure_req_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 get_mail_enclosure_req_t::mail_id() const {
  return mail_id_;
}
inline void get_mail_enclosure_req_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// get_mail_enclosure_rsp_t

// required uint64 mail_id = 1;
inline bool get_mail_enclosure_rsp_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mail_enclosure_rsp_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mail_enclosure_rsp_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mail_enclosure_rsp_t::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 get_mail_enclosure_rsp_t::mail_id() const {
  return mail_id_;
}
inline void get_mail_enclosure_rsp_t::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// player_new_mail_noti_t

// required .iAdCSProto.mail_head_t new_mail = 1;
inline bool player_new_mail_noti_t::has_new_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_new_mail_noti_t::set_has_new_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_new_mail_noti_t::clear_has_new_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_new_mail_noti_t::clear_new_mail() {
  if (new_mail_ != NULL) new_mail_->::iAdCSProto::mail_head_t::Clear();
  clear_has_new_mail();
}
inline const ::iAdCSProto::mail_head_t& player_new_mail_noti_t::new_mail() const {
  return new_mail_ != NULL ? *new_mail_ : *default_instance_->new_mail_;
}
inline ::iAdCSProto::mail_head_t* player_new_mail_noti_t::mutable_new_mail() {
  set_has_new_mail();
  if (new_mail_ == NULL) new_mail_ = new ::iAdCSProto::mail_head_t;
  return new_mail_;
}
inline ::iAdCSProto::mail_head_t* player_new_mail_noti_t::release_new_mail() {
  clear_has_new_mail();
  ::iAdCSProto::mail_head_t* temp = new_mail_;
  new_mail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// obtain_task_req_t

// required uint32 task_id = 1;
inline bool obtain_task_req_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void obtain_task_req_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void obtain_task_req_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void obtain_task_req_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 obtain_task_req_t::task_id() const {
  return task_id_;
}
inline void obtain_task_req_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// obtain_task_rsp_t

// required uint32 task_id = 1;
inline bool obtain_task_rsp_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void obtain_task_rsp_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void obtain_task_rsp_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void obtain_task_rsp_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 obtain_task_rsp_t::task_id() const {
  return task_id_;
}
inline void obtain_task_rsp_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required bytes buffer = 2;
inline bool obtain_task_rsp_t::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void obtain_task_rsp_t::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void obtain_task_rsp_t::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void obtain_task_rsp_t::clear_buffer() {
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    buffer_->clear();
  }
  clear_has_buffer();
}
inline const ::std::string& obtain_task_rsp_t::buffer() const {
  return *buffer_;
}
inline void obtain_task_rsp_t::set_buffer(const ::std::string& value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void obtain_task_rsp_t::set_buffer(const char* value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void obtain_task_rsp_t::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* obtain_task_rsp_t::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}
inline ::std::string* obtain_task_rsp_t::release_buffer() {
  clear_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buffer_;
    buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// cancel_task_req_t

// required uint32 task_id = 1;
inline bool cancel_task_req_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cancel_task_req_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cancel_task_req_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cancel_task_req_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 cancel_task_req_t::task_id() const {
  return task_id_;
}
inline void cancel_task_req_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// cancel_task_rsp_t

// required uint32 task_id = 1;
inline bool cancel_task_rsp_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cancel_task_rsp_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cancel_task_rsp_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cancel_task_rsp_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 cancel_task_rsp_t::task_id() const {
  return task_id_;
}
inline void cancel_task_rsp_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// finish_task_req_t

// required uint32 task_id = 1;
inline bool finish_task_req_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void finish_task_req_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void finish_task_req_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void finish_task_req_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 finish_task_req_t::task_id() const {
  return task_id_;
}
inline void finish_task_req_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// finish_task_rsp_t

// required uint32 task_id = 1;
inline bool finish_task_rsp_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void finish_task_rsp_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void finish_task_rsp_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void finish_task_rsp_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 finish_task_rsp_t::task_id() const {
  return task_id_;
}
inline void finish_task_rsp_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// task_flag_t

// required uint32 task_id = 1;
inline bool task_flag_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void task_flag_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void task_flag_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void task_flag_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 task_flag_t::task_id() const {
  return task_id_;
}
inline void task_flag_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 task_flag = 2;
inline bool task_flag_t::has_task_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void task_flag_t::set_has_task_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void task_flag_t::clear_has_task_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void task_flag_t::clear_task_flag() {
  task_flag_ = 0u;
  clear_has_task_flag();
}
inline ::google::protobuf::uint32 task_flag_t::task_flag() const {
  return task_flag_;
}
inline void task_flag_t::set_task_flag(::google::protobuf::uint32 value) {
  set_has_task_flag();
  task_flag_ = value;
}

// -------------------------------------------------------------------

// task_buff_t

// required uint32 task_id = 1;
inline bool task_buff_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void task_buff_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void task_buff_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void task_buff_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 task_buff_t::task_id() const {
  return task_id_;
}
inline void task_buff_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required bytes buffer = 2;
inline bool task_buff_t::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void task_buff_t::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void task_buff_t::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void task_buff_t::clear_buffer() {
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    buffer_->clear();
  }
  clear_has_buffer();
}
inline const ::std::string& task_buff_t::buffer() const {
  return *buffer_;
}
inline void task_buff_t::set_buffer(const ::std::string& value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void task_buff_t::set_buffer(const char* value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void task_buff_t::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* task_buff_t::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}
inline ::std::string* task_buff_t::release_buffer() {
  clear_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buffer_;
    buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// get_task_flag_list_req_t

// repeated uint32 task_id_list = 1;
inline int get_task_flag_list_req_t::task_id_list_size() const {
  return task_id_list_.size();
}
inline void get_task_flag_list_req_t::clear_task_id_list() {
  task_id_list_.Clear();
}
inline ::google::protobuf::uint32 get_task_flag_list_req_t::task_id_list(int index) const {
  return task_id_list_.Get(index);
}
inline void get_task_flag_list_req_t::set_task_id_list(int index, ::google::protobuf::uint32 value) {
  task_id_list_.Set(index, value);
}
inline void get_task_flag_list_req_t::add_task_id_list(::google::protobuf::uint32 value) {
  task_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
get_task_flag_list_req_t::task_id_list() const {
  return task_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
get_task_flag_list_req_t::mutable_task_id_list() {
  return &task_id_list_;
}

// -------------------------------------------------------------------

// get_task_flag_list_rsp_t

// repeated .iAdCSProto.task_flag_t flag_list = 1;
inline int get_task_flag_list_rsp_t::flag_list_size() const {
  return flag_list_.size();
}
inline void get_task_flag_list_rsp_t::clear_flag_list() {
  flag_list_.Clear();
}
inline const ::iAdCSProto::task_flag_t& get_task_flag_list_rsp_t::flag_list(int index) const {
  return flag_list_.Get(index);
}
inline ::iAdCSProto::task_flag_t* get_task_flag_list_rsp_t::mutable_flag_list(int index) {
  return flag_list_.Mutable(index);
}
inline ::iAdCSProto::task_flag_t* get_task_flag_list_rsp_t::add_flag_list() {
  return flag_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_flag_t >&
get_task_flag_list_rsp_t::flag_list() const {
  return flag_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_flag_t >*
get_task_flag_list_rsp_t::mutable_flag_list() {
  return &flag_list_;
}

// -------------------------------------------------------------------

// get_task_buff_list_req_t

// repeated uint32 task_id_list = 1;
inline int get_task_buff_list_req_t::task_id_list_size() const {
  return task_id_list_.size();
}
inline void get_task_buff_list_req_t::clear_task_id_list() {
  task_id_list_.Clear();
}
inline ::google::protobuf::uint32 get_task_buff_list_req_t::task_id_list(int index) const {
  return task_id_list_.Get(index);
}
inline void get_task_buff_list_req_t::set_task_id_list(int index, ::google::protobuf::uint32 value) {
  task_id_list_.Set(index, value);
}
inline void get_task_buff_list_req_t::add_task_id_list(::google::protobuf::uint32 value) {
  task_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
get_task_buff_list_req_t::task_id_list() const {
  return task_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
get_task_buff_list_req_t::mutable_task_id_list() {
  return &task_id_list_;
}

// -------------------------------------------------------------------

// get_task_buff_list_rsp_t

// repeated .iAdCSProto.task_buff_t buff_list = 1;
inline int get_task_buff_list_rsp_t::buff_list_size() const {
  return buff_list_.size();
}
inline void get_task_buff_list_rsp_t::clear_buff_list() {
  buff_list_.Clear();
}
inline const ::iAdCSProto::task_buff_t& get_task_buff_list_rsp_t::buff_list(int index) const {
  return buff_list_.Get(index);
}
inline ::iAdCSProto::task_buff_t* get_task_buff_list_rsp_t::mutable_buff_list(int index) {
  return buff_list_.Mutable(index);
}
inline ::iAdCSProto::task_buff_t* get_task_buff_list_rsp_t::add_buff_list() {
  return buff_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_buff_t >&
get_task_buff_list_rsp_t::buff_list() const {
  return buff_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::task_buff_t >*
get_task_buff_list_rsp_t::mutable_buff_list() {
  return &buff_list_;
}

// -------------------------------------------------------------------

// pb_cs_task_info_t

// required uint32 task_id = 1;
inline bool pb_cs_task_info_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_cs_task_info_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_cs_task_info_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_cs_task_info_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 pb_cs_task_info_t::task_id() const {
  return task_id_;
}
inline void pb_cs_task_info_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 task_type = 2;
inline bool pb_cs_task_info_t::has_task_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_cs_task_info_t::set_has_task_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_cs_task_info_t::clear_has_task_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_cs_task_info_t::clear_task_type() {
  task_type_ = 0u;
  clear_has_task_type();
}
inline ::google::protobuf::uint32 pb_cs_task_info_t::task_type() const {
  return task_type_;
}
inline void pb_cs_task_info_t::set_task_type(::google::protobuf::uint32 value) {
  set_has_task_type();
  task_type_ = value;
}

// required uint32 task_flag = 3;
inline bool pb_cs_task_info_t::has_task_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_cs_task_info_t::set_has_task_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_cs_task_info_t::clear_has_task_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_cs_task_info_t::clear_task_flag() {
  task_flag_ = 0u;
  clear_has_task_flag();
}
inline ::google::protobuf::uint32 pb_cs_task_info_t::task_flag() const {
  return task_flag_;
}
inline void pb_cs_task_info_t::set_task_flag(::google::protobuf::uint32 value) {
  set_has_task_flag();
  task_flag_ = value;
}

// required bytes buffer = 4;
inline bool pb_cs_task_info_t::has_buffer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_cs_task_info_t::set_has_buffer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_cs_task_info_t::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_cs_task_info_t::clear_buffer() {
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    buffer_->clear();
  }
  clear_has_buffer();
}
inline const ::std::string& pb_cs_task_info_t::buffer() const {
  return *buffer_;
}
inline void pb_cs_task_info_t::set_buffer(const ::std::string& value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void pb_cs_task_info_t::set_buffer(const char* value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void pb_cs_task_info_t::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_cs_task_info_t::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}
inline ::std::string* pb_cs_task_info_t::release_buffer() {
  clear_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buffer_;
    buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// get_task_list_req_t

// -------------------------------------------------------------------

// get_task_list_rsp_t

// repeated .iAdCSProto.pb_cs_task_info_t task_list = 1;
inline int get_task_list_rsp_t::task_list_size() const {
  return task_list_.size();
}
inline void get_task_list_rsp_t::clear_task_list() {
  task_list_.Clear();
}
inline const ::iAdCSProto::pb_cs_task_info_t& get_task_list_rsp_t::task_list(int index) const {
  return task_list_.Get(index);
}
inline ::iAdCSProto::pb_cs_task_info_t* get_task_list_rsp_t::mutable_task_list(int index) {
  return task_list_.Mutable(index);
}
inline ::iAdCSProto::pb_cs_task_info_t* get_task_list_rsp_t::add_task_list() {
  return task_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::pb_cs_task_info_t >&
get_task_list_rsp_t::task_list() const {
  return task_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::pb_cs_task_info_t >*
get_task_list_rsp_t::mutable_task_list() {
  return &task_list_;
}

// -------------------------------------------------------------------

// set_task_step_req_t

// required uint32 task_id = 1;
inline bool set_task_step_req_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_task_step_req_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_task_step_req_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_task_step_req_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 set_task_step_req_t::task_id() const {
  return task_id_;
}
inline void set_task_step_req_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step = 2;
inline bool set_task_step_req_t::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_task_step_req_t::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_task_step_req_t::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_task_step_req_t::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 set_task_step_req_t::step() const {
  return step_;
}
inline void set_task_step_req_t::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// set_task_step_rsp_t

// required uint32 task_id = 1;
inline bool set_task_step_rsp_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_task_step_rsp_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_task_step_rsp_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_task_step_rsp_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 set_task_step_rsp_t::task_id() const {
  return task_id_;
}
inline void set_task_step_rsp_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required bytes new_buffer = 2;
inline bool set_task_step_rsp_t::has_new_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_task_step_rsp_t::set_has_new_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_task_step_rsp_t::clear_has_new_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_task_step_rsp_t::clear_new_buffer() {
  if (new_buffer_ != &::google::protobuf::internal::kEmptyString) {
    new_buffer_->clear();
  }
  clear_has_new_buffer();
}
inline const ::std::string& set_task_step_rsp_t::new_buffer() const {
  return *new_buffer_;
}
inline void set_task_step_rsp_t::set_new_buffer(const ::std::string& value) {
  set_has_new_buffer();
  if (new_buffer_ == &::google::protobuf::internal::kEmptyString) {
    new_buffer_ = new ::std::string;
  }
  new_buffer_->assign(value);
}
inline void set_task_step_rsp_t::set_new_buffer(const char* value) {
  set_has_new_buffer();
  if (new_buffer_ == &::google::protobuf::internal::kEmptyString) {
    new_buffer_ = new ::std::string;
  }
  new_buffer_->assign(value);
}
inline void set_task_step_rsp_t::set_new_buffer(const void* value, size_t size) {
  set_has_new_buffer();
  if (new_buffer_ == &::google::protobuf::internal::kEmptyString) {
    new_buffer_ = new ::std::string;
  }
  new_buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* set_task_step_rsp_t::mutable_new_buffer() {
  set_has_new_buffer();
  if (new_buffer_ == &::google::protobuf::internal::kEmptyString) {
    new_buffer_ = new ::std::string;
  }
  return new_buffer_;
}
inline ::std::string* set_task_step_rsp_t::release_new_buffer() {
  clear_has_new_buffer();
  if (new_buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_buffer_;
    new_buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// start_battle_pve_in_t

// required uint32 region = 1;
inline bool start_battle_pve_in_t::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void start_battle_pve_in_t::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void start_battle_pve_in_t::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void start_battle_pve_in_t::clear_region() {
  region_ = 0u;
  clear_has_region();
}
inline ::google::protobuf::uint32 start_battle_pve_in_t::region() const {
  return region_;
}
inline void start_battle_pve_in_t::set_region(::google::protobuf::uint32 value) {
  set_has_region();
  region_ = value;
}

// -------------------------------------------------------------------

// start_battle_pve_out_t

// -------------------------------------------------------------------

// player_ready_in_t

// -------------------------------------------------------------------

// player_ready_out_t

// -------------------------------------------------------------------

// select_move_in_t

// required uint32 move_id = 1;
inline bool select_move_in_t::has_move_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void select_move_in_t::set_has_move_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void select_move_in_t::clear_has_move_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void select_move_in_t::clear_move_id() {
  move_id_ = 0u;
  clear_has_move_id();
}
inline ::google::protobuf::uint32 select_move_in_t::move_id() const {
  return move_id_;
}
inline void select_move_in_t::set_move_id(::google::protobuf::uint32 value) {
  set_has_move_id();
  move_id_ = value;
}

// -------------------------------------------------------------------

// select_move_out_t

// -------------------------------------------------------------------

// btl_notify_absorb_gain_exp_out_t_mon_info_t

// required string uuid = 1;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& btl_notify_absorb_gain_exp_out_t_mon_info_t::uuid() const {
  return *uuid_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* btl_notify_absorb_gain_exp_out_t_mon_info_t::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* btl_notify_absorb_gain_exp_out_t_mon_info_t::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 mon_id = 2;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_id() const {
  return mon_id_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 level = 3;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::level() const {
  return level_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 hp = 4;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::hp() const {
  return hp_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 max_hp = 5;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_max_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_max_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_max_hp() {
  max_hp_ = 0u;
  clear_has_max_hp();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::max_hp() const {
  return max_hp_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_max_hp(::google::protobuf::uint32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// required uint32 mon_btl_attr_atk = 6;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_btl_attr_atk() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_btl_attr_atk() {
  _has_bits_[0] |= 0x00000020u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_btl_attr_atk() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_btl_attr_atk() {
  mon_btl_attr_atk_ = 0u;
  clear_has_mon_btl_attr_atk();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_btl_attr_atk() const {
  return mon_btl_attr_atk_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_btl_attr_atk(::google::protobuf::uint32 value) {
  set_has_mon_btl_attr_atk();
  mon_btl_attr_atk_ = value;
}

// required uint32 mon_btl_attr_def = 7;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_btl_attr_def() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_btl_attr_def() {
  _has_bits_[0] |= 0x00000040u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_btl_attr_def() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_btl_attr_def() {
  mon_btl_attr_def_ = 0u;
  clear_has_mon_btl_attr_def();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_btl_attr_def() const {
  return mon_btl_attr_def_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_btl_attr_def(::google::protobuf::uint32 value) {
  set_has_mon_btl_attr_def();
  mon_btl_attr_def_ = value;
}

// required uint32 mon_btl_attr_sp_atk = 8;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_btl_attr_sp_atk() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_btl_attr_sp_atk() {
  _has_bits_[0] |= 0x00000080u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_btl_attr_sp_atk() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_btl_attr_sp_atk() {
  mon_btl_attr_sp_atk_ = 0u;
  clear_has_mon_btl_attr_sp_atk();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_btl_attr_sp_atk() const {
  return mon_btl_attr_sp_atk_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_btl_attr_sp_atk(::google::protobuf::uint32 value) {
  set_has_mon_btl_attr_sp_atk();
  mon_btl_attr_sp_atk_ = value;
}

// required uint32 mon_btl_attr_sp_def = 9;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_btl_attr_sp_def() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_btl_attr_sp_def() {
  _has_bits_[0] |= 0x00000100u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_btl_attr_sp_def() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_btl_attr_sp_def() {
  mon_btl_attr_sp_def_ = 0u;
  clear_has_mon_btl_attr_sp_def();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_btl_attr_sp_def() const {
  return mon_btl_attr_sp_def_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_btl_attr_sp_def(::google::protobuf::uint32 value) {
  set_has_mon_btl_attr_sp_def();
  mon_btl_attr_sp_def_ = value;
}

// required uint32 mon_btl_attr_spd = 10;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_mon_btl_attr_spd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_mon_btl_attr_spd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_mon_btl_attr_spd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_mon_btl_attr_spd() {
  mon_btl_attr_spd_ = 0u;
  clear_has_mon_btl_attr_spd();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::mon_btl_attr_spd() const {
  return mon_btl_attr_spd_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_mon_btl_attr_spd(::google::protobuf::uint32 value) {
  set_has_mon_btl_attr_spd();
  mon_btl_attr_spd_ = value;
}

// required uint32 exp = 11;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_exp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_exp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_exp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::exp() const {
  return exp_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 gain_exp = 12;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_gain_exp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_gain_exp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_gain_exp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_gain_exp() {
  gain_exp_ = 0u;
  clear_has_gain_exp();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::gain_exp() const {
  return gain_exp_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_gain_exp(::google::protobuf::uint32 value) {
  set_has_gain_exp();
  gain_exp_ = value;
}

// required uint32 gain_exp_rate = 13;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_gain_exp_rate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_gain_exp_rate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_gain_exp_rate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_gain_exp_rate() {
  gain_exp_rate_ = 0u;
  clear_has_gain_exp_rate();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::gain_exp_rate() const {
  return gain_exp_rate_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_gain_exp_rate(::google::protobuf::uint32 value) {
  set_has_gain_exp_rate();
  gain_exp_rate_ = value;
}

// required uint32 gain_ev = 14;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_gain_ev() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_gain_ev() {
  _has_bits_[0] |= 0x00002000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_gain_ev() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_gain_ev() {
  gain_ev_ = 0u;
  clear_has_gain_ev();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::gain_ev() const {
  return gain_ev_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_gain_ev(::google::protobuf::uint32 value) {
  set_has_gain_ev();
  gain_ev_ = value;
}

// required uint32 exp_to_next_level = 15;
inline bool btl_notify_absorb_gain_exp_out_t_mon_info_t::has_exp_to_next_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_has_exp_to_next_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_has_exp_to_next_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::clear_exp_to_next_level() {
  exp_to_next_level_ = 0u;
  clear_has_exp_to_next_level();
}
inline ::google::protobuf::uint32 btl_notify_absorb_gain_exp_out_t_mon_info_t::exp_to_next_level() const {
  return exp_to_next_level_;
}
inline void btl_notify_absorb_gain_exp_out_t_mon_info_t::set_exp_to_next_level(::google::protobuf::uint32 value) {
  set_has_exp_to_next_level();
  exp_to_next_level_ = value;
}

// -------------------------------------------------------------------

// btl_notify_absorb_gain_exp_out_t

// repeated .iAdCSProto.btl_notify_absorb_gain_exp_out_t.mon_info_t mon_info = 1;
inline int btl_notify_absorb_gain_exp_out_t::mon_info_size() const {
  return mon_info_.size();
}
inline void btl_notify_absorb_gain_exp_out_t::clear_mon_info() {
  mon_info_.Clear();
}
inline const ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t& btl_notify_absorb_gain_exp_out_t::mon_info(int index) const {
  return mon_info_.Get(index);
}
inline ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t* btl_notify_absorb_gain_exp_out_t::mutable_mon_info(int index) {
  return mon_info_.Mutable(index);
}
inline ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t* btl_notify_absorb_gain_exp_out_t::add_mon_info() {
  return mon_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t >&
btl_notify_absorb_gain_exp_out_t::mon_info() const {
  return mon_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::iAdCSProto::btl_notify_absorb_gain_exp_out_t_mon_info_t >*
btl_notify_absorb_gain_exp_out_t::mutable_mon_info() {
  return &mon_info_;
}

// -------------------------------------------------------------------

// btl_notify_battle_end_out_t

// required uint32 winner_side = 1;
inline bool btl_notify_battle_end_out_t::has_winner_side() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void btl_notify_battle_end_out_t::set_has_winner_side() {
  _has_bits_[0] |= 0x00000001u;
}
inline void btl_notify_battle_end_out_t::clear_has_winner_side() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void btl_notify_battle_end_out_t::clear_winner_side() {
  winner_side_ = 0u;
  clear_has_winner_side();
}
inline ::google::protobuf::uint32 btl_notify_battle_end_out_t::winner_side() const {
  return winner_side_;
}
inline void btl_notify_battle_end_out_t::set_winner_side(::google::protobuf::uint32 value) {
  set_has_winner_side();
  winner_side_ = value;
}

// required uint32 reason = 2;
inline bool btl_notify_battle_end_out_t::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void btl_notify_battle_end_out_t::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void btl_notify_battle_end_out_t::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void btl_notify_battle_end_out_t::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 btl_notify_battle_end_out_t::reason() const {
  return reason_;
}
inline void btl_notify_battle_end_out_t::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace iAdCSProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< iAdCSProto::cs_err_code_t>() {
  return iAdCSProto::cs_err_code_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_iAd_2ecs_2eproto__INCLUDED
