/*
1. 包格式:
    pkg_len(uint32) + head_len(uint32) + msghead + msgbody
    [注]: pkg_len、head_len值包含自身占用的长度(即uint32的长度), 按网络字节序打包
            pkg_len: sizeof(uint32) + sizeof(uint32) + sizeof(msghead) + sizeof(msgbody)
            head_len: sizeof(uint32) + sizeof(msghead)

2. 使用规则:
    (1) 字段只能加, 不能减;
    (2) 增加的字段只能是 optional 类型, 且必须给出 default 值, 最好还有相关说明;
*/

package MagicCardProto;

/*magic card 错误码*/ 
enum mcard_err_code_t {
    MCARD_ERR_NO_ERROR              = 0; //没有错误 

    //BASE 1000
    MCARD_ERR_SYS_BUSY              = 1000; // 系统错误
    MCARD_ERR_DB_BUSY               = 1001; // DB连接不上
    MCARD_ERR_INV_PKGLEN            = 1002; // 包长和收到的数据不匹配 
    MCARD_ERR_UNSUPPORTED_MSG       = 1003; // 不支持的消息 
    MCARD_ERR_NO_ENOUGH_RES         = 1004; // 系统资源不足 
    MCARD_ERR_UNSUPPORTED_MSG_TYPE  = 1005; // 不支持该协议 
    MCARD_ERR_INV_SIGN              = 1006; // 连接非法(sign验证失败） 
    MCARD_ERR_UNSUPPORTED_GAME_CARD = 1007; // 不支持的游戏卡类型

    //card error
    MCARD_ERR_WRONG_CARD            = 2000; // 卡号或密码错误
    MCARD_ERR_NOT_ACTIVATE          = 2001; // 卡未激活
    MCARD_ERR_BEEN_FROZEN           = 2002; // 卡冻结
    MCARD_ERR_NOT_IN_DATE           = 2003; // 还未开卡
    MCARD_ERR_OUT_OF_DATE           = 2004; // 卡已过期
    MCARD_ERR_BEEN_USED             = 2005; // 卡已使用完
    MCARD_ERR_NOT_BOUND             = 2006; // 卡未绑定
    MCARD_ERR_WRONG_CHANNEL         = 2007; // 卡渠道号不匹配
    MCARD_ERR_CARD_CEILING          = 2008; // 号段中卡用户使用张数达到上限
    MCARD_ERR_USE_ONLY_ONE          = 2009; // 号段中卡一个用户只能使用一张
}


/** @brief 所有协议head部分 */
message mcard_msg_head_t {
    required string msg_type_name       = 1; //协议命令字符串
    required uint32 game_id             = 2; //游戏ID, 1-Ahero, 2-Ago
    required uint32 card_type           = 3; //1-兑换码，2-邀请码
    required int32  ret                 = 4; //协议返回码, 错误码见mcard_err_code_t定义
    required uint32 seq                 = 5; //数据包序列号,原样返回
    optional string sign                = 6; //签名认证，下面的msg_body为包体二进制
                                             //md5(game_id=%u&card_type=%u&pri_key=%s&data=msg_body)
    optional uint32 user_id             = 7; //game user id
    optional uint32 role_create_time    = 8; //user role create time
    optional uint32 user_channel_id     = 9; //user channel ID
}

/** @brief 卡对应的礼品消息体 */
message mcard_gift_info_t {
    required uint32 gift_id     = 1; //礼品ID
    required uint32 gift_count  = 2; //礼品ID对应的数量
    optional uint32 max_count   = 3; //物品ID用户最多拥有数量
}

/////////////////////////////////////////////////////////////////////
/** @brief 卡消费接口-请求包体 */
message mcard_consume_msg_in_t {
    required uint32 user_ip             = 1; //user login ip
    required uint32 card_id             = 2; //magic card ID, 0-表示不关心卡号
    required string card_passwd         = 3; //magic card password
}

/** @brief 卡消费接口-返回包体 */
message mcard_consume_msg_out_t {
    required uint32 card_id             = 1; //magic card ID
    required uint32 card_channel_id     = 2; //card channel ID, 0-any channel
    repeated mcard_gift_info_t gift_info = 3; //卡对应的礼品列表
}

/////////////////////////////////////////////////////////////////////
/** @brief 卡基本信息查询接口-请求包体 */
message mcard_query_base_msg_in_t {
    required uint32 card_id             = 1; //magic card ID, 0-表示不关心卡号
    required string card_passwd         = 2; //magic card password
}

/** @brief 卡基本信息查询接口-返回包体 */
message mcard_query_base_msg_out_t {
    required uint32 card_id             = 1; //magic card ID
    required uint32 card_channel_id     = 2; //card channel ID, 0-any channel

    repeated mcard_gift_info_t gift_info = 3; //卡对应的礼品列表
}



/////////////////////////////////////////////////////////////////////
/** @brief 返回错误码统一协议 */
message ack_errcode_t {
    required int32  errcode = 1;
    optional string errmsg = 2 [default = "default error"];
    optional string ori_msg_typename = 3 [default = "Unknown"];
}

